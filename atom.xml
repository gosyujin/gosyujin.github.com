<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>kk_Atakaの日記</title>
 <link href="http://gosyujin.github.io/atom.xml" rel="self"/>
 <link href="http://gosyujin.github.io"/>
 <updated>2015-08-06T15:43:24+09:00</updated>
 <id>http://gosyujin.github.io</id>
 <author>
   <name>kk_Ataka</name>
   <email>kk_ataka@ring.skr.jp</email>
 </author>

 
 <entry>
   <title>Jekyllで出力するタグをソートする 解決編</title>
   <link href="http://gosyujin.github.io/2015/08/06/jekyll-tag-sort"/>
   <updated>2015-08-06T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2015/08/06/jekyll-tag-sort</id>
   <content type="html">&lt;h2 id=&quot;あらすじ&quot;&gt;あらすじ&lt;/h2&gt;

&lt;p&gt;1年半前の記事&lt;a href=&quot;http://gosyujin.github.io/2014/01/28/pull-request-to-jekyll/#%E3%81%AA%E3%81%8A%E3%81%97%E3%81%9F%E5%86%85%E5%AE%B9&quot;&gt;Jekyllプロジェクトへpull requestを行う手順(したとは言っていない) - kk_Atakaの日記&lt;/a&gt;でこんな事をやりたがってた。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Jekyll でかき集められた tags (タグのリスト) がバラバラのため、 tags.html ページから探すのがつらいのでソートをしたい。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;で、こうした。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Jekyll のソースを追っていった結果、 jekyll/lib/jekyll/site.rb 内の一行をいじるだけでいけた。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;その後、悩んだりもした。&lt;/p&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;一応、 「 Liquid の領域」で頑張ればできる かも という情報は見つけた&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;しかし、そもそもこの「タグをソートする」という機能が、どの領域で受け持つのが妥当なのかわからない( Liquid？ Jekyll？)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ソースを読んでいった結果、「タグの value (記事自体)のソート」を Jekyll でやっていたので、 key もここでやればいいんじゃね？と思った&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;解法&quot;&gt;解法&lt;/h2&gt;

&lt;p&gt;Liquidでもできました。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;{% assign sorted_tags = site.tags | sort %}
{% for tag in sorted_tags %}
  {% assign t = tag[0] %}
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;code&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;/tags.html#{{ t }}&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;{{ t }} &lt;span class=&quot;nt&quot;&gt;&amp;lt;sub&amp;gt;&lt;/span&gt;{{ site.tags[t].size }}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/sub&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/code&amp;gt;&lt;/span&gt;
{% endfor %}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;一年半越しに解決。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>軽量マークアップ言語の歴史をゆるく調べた #sphinxjp</title>
   <link href="http://gosyujin.github.io/2015/07/13/lightweight-markup-language-history"/>
   <updated>2015-07-13T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2015/07/13/lightweight-markup-language-history</id>
   <content type="html">&lt;h2 id=&quot;はじめに&quot;&gt;はじめに&lt;/h2&gt;

&lt;p&gt;reSTの成り立ちが気になったので、&lt;a href=&quot;http://sphinxjp.connpass.com/event/17072/&quot;&gt;Sphinx+翻訳 Hack-a-thon 2015.07 - connpass&lt;/a&gt;を利用して調べてみた。&lt;/p&gt;

&lt;p&gt;reST以外にも軽量マークアップ言語MarkdownとWikiもいくつかピックアップ。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;reStructuredText

&lt;ul&gt;
&lt;li&gt;structuredText(reSTの系譜を辿って見つけた)&lt;/li&gt;
&lt;li&gt;setext(reSTの系譜を辿って見つけた)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Markdown

&lt;ul&gt;
&lt;li&gt;CommonMark(Markdownの現状を辿って見つけた)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Wiki

&lt;ul&gt;
&lt;li&gt;YukiWiki(代表的っぽい、かつデッドリンクじゃなかった和製Wiki)&lt;/li&gt;
&lt;li&gt;MediaWiki(Wikipediaで使われている)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;はてな記法(国産)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;このあたり。&lt;/p&gt;

&lt;h2 id=&quot;調べた人&quot;&gt;調べた人&lt;/h2&gt;

&lt;p&gt;MarkdownとreStructuredTextとWikiの一利用者。&lt;/p&gt;

&lt;p&gt;なので、込み入った話(時代背景とかその当時のMLとか)は全然知らない。&lt;/p&gt;

&lt;h2 id=&quot;まとめ&quot;&gt;まとめ&lt;/h2&gt;

&lt;h3 id=&quot;年表&quot;&gt;年表&lt;/h3&gt;

&lt;p&gt;それぞれができた年。&lt;/p&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;年&lt;/th&gt;
&lt;th&gt;月&lt;/th&gt;
&lt;th&gt;出来事(md, rst, wiki)&lt;/th&gt;
&lt;th&gt;それ以外の出来事&lt;/th&gt;
&lt;th&gt;html的な出来事&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1991&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;html1.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1992&lt;/td&gt;
&lt;td&gt;Aug？&lt;/td&gt;
&lt;td&gt;setextリリース&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1993&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1994&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;W3C発足&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1995&lt;/td&gt;
&lt;td&gt;Mar&lt;/td&gt;
&lt;td&gt;Wikiリリース&lt;/td&gt;
&lt;td&gt;Javadocリリース&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;html2.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1996&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;xml草案&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1997&lt;/td&gt;
&lt;td&gt;Oct&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Doxygenリリース&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;html3.1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1998&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;html4.01, xml1.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1999&lt;/td&gt;
&lt;td&gt;Jul&lt;/td&gt;
&lt;td&gt;STXリリース？(Zope 1.10.3)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2000&lt;/td&gt;
&lt;td&gt;Jul&lt;/td&gt;
&lt;td&gt;YukiWikiリリース&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2001&lt;/td&gt;
&lt;td&gt;Jun&lt;/td&gt;
&lt;td&gt;reSTリリース&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Dec&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;RDocリリース&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2002&lt;/td&gt;
&lt;td&gt;Apl&lt;/td&gt;
&lt;td&gt;reSTがDocutilsに統合&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Sep&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;AsciiDocリリース&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2003&lt;/td&gt;
&lt;td&gt;Jan&lt;/td&gt;
&lt;td&gt;はてな記法リリース？&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Dec&lt;/td&gt;
&lt;td&gt;MediaWikiリリース&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2004&lt;/td&gt;
&lt;td&gt;Aug&lt;/td&gt;
&lt;td&gt;Markdownリリース&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2005&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2006&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Pandocリリース&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2007&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2008&lt;/td&gt;
&lt;td&gt;Jan&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;html5初期草案&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Mar&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Sphinxリリース&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2009&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2010&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2011&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;html5最終草案&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2012&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2013&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2014&lt;/td&gt;
&lt;td&gt;Aug&lt;/td&gt;
&lt;td&gt;CommonMarkリリース&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Oct&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;html5勧告&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2016&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;html5.1勧告予定&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;※ 「それ以外の出来事」はこの辺のサイトから参照しました。&lt;a href=&quot;https://en.wikipedia.org/wiki/Comparison_of_documentation_generators&quot;&gt;Comparison of documentation generators&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;考察&quot;&gt;考察&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;setextはhtml誕生から見てもかなり早い時期にできている&lt;/li&gt;
&lt;li&gt;一方Markdownは今回調べた中では一番後発だったのが(個人的には)意外だった&lt;/li&gt;
&lt;li&gt;1999年～2004年、軽量マークアップ言語が数多く生まれている

&lt;ul&gt;
&lt;li&gt;この時期何かあったんだろうか？ドキュメント革命？&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;2004年以降はWikiやMarkdownのクローンや再実装がおそらく盛んであるはず

&lt;ul&gt;
&lt;li&gt;PHP Markdown Extra/GitHub Flavored MarkdownとかxxxWikiとか&lt;/li&gt;
&lt;li&gt;拡張ライブラリの歴史を調べると、2004年以降も埋まりそう&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;地味に苦労した点、、&quot;&gt;地味に苦労した点、、&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;昔の言語の情報を取得するのはかなり難しい(デッドリンクとか)

&lt;ul&gt;
&lt;li&gt;CHANGELOGが途中で途切れてるのが何故かわからなかったり

&lt;ul&gt;
&lt;li&gt;プロジェクト一新したから？&lt;/li&gt;
&lt;li&gt;それともこのバージョンがInitial Releaseなの？&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Wikipedia情報が唯一の情報源だったり&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;グーグル力が低くて検索ワードが思いつかん…それぞれの記法の使い方がヒットする&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;以下、それぞれ調べたこと。&lt;/p&gt;

&lt;h2 id=&quot;rest&quot;&gt;reST&lt;/h2&gt;

&lt;h3 id=&quot;setext-structure-enhanced-text&quot;&gt;setext(structure-enhanced text)&lt;/h3&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;基本情報&lt;/th&gt;
&lt;th&gt;詳細&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Developed&lt;/td&gt;
&lt;td&gt;Ian Feldman or Tony Sanders&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Initial Release&lt;/td&gt;
&lt;td&gt;1992/08/16～？&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Official&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;http://docutils.sourceforge.net/mirror/setext.html&quot;&gt;setext Documents Mirror&lt;/a&gt;、跡地しかない？&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;ul&gt;
&lt;li&gt;reSTのご先祖様&lt;/li&gt;
&lt;li&gt;Ian Feldmanのメール(1992/08/16)

&lt;ul&gt;
&lt;li&gt;setext&lt;em&gt;concepts&lt;/em&gt;Aug92.etx.txtの翻訳 &lt;a href=&quot;http://www.piedey.co.jp/xetext/sedocs.html&quot;&gt;setext Japanese Document&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Enclosed is an advance sheet that will remain in effect until the first public release of the setext format package (originally planned for around March 1st, 1992, now delayed). &lt;/p&gt;

&lt;p&gt;via: &lt;a href=&quot;http://docutils.sourceforge.net/mirror/setext/setext_concepts_Aug92.etx.txt&quot;&gt;setext&lt;em&gt;concepts&lt;/em&gt;Aug92.etx.txt&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;1992/01/06にTidBITSの新しいフォーマットとして紹介されている

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://tidbits.com/article/3282&quot;&gt;TidBITS: TidBITS in new format&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;今も使われているのだろうか？&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;TidBITS以外のニューズレターにも使われていたみたい

&lt;ul&gt;
&lt;li&gt;福井県立大学の田中先生がこれを閲覧できるアプリを作ってた &lt;a href=&quot;http://mtlab.ecn.fpu.ac.jp/mac/my_hypercard_stacks.html&quot;&gt;こんなスタックを作ってた&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;電子出版用のフォーマットとして期待されていた？

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.piedey.co.jp/xetext/index.html&quot;&gt;setext and xetext page - 株式会社ピーデー&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;ソースコードが見つからない…&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;structuredtext&quot;&gt;StructuredText&lt;/h3&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;基本情報&lt;/th&gt;
&lt;th&gt;詳細&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Developed&lt;/td&gt;
&lt;td&gt;Zope(Jim Fulton)？&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Initial Release&lt;/td&gt;
&lt;td&gt;1999/07/19(Zope 1.10.3)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Official&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;http://www.zope.com&quot;&gt;Zope&lt;/a&gt;に含まれている&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;ul&gt;
&lt;li&gt;reSTのご先祖様&lt;/li&gt;
&lt;li&gt;現在確認できた最古のソースは1.10.3 1999/07/19(&lt;a href=&quot;http://old.zope.org/Products/Zope/swpackage_releases&quot;&gt;Zope.org - Zope&lt;/a&gt;)

&lt;ul&gt;
&lt;li&gt;その中のCHANGES.txtに1.9 alpha 1の記述ありだが日付までは書いてない…&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;Zope 1.9 alpha 1

      This was the inital Zope test release.StructuredText.py
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://old.zope.org/Documentation/Articles/STX/&quot;&gt;Zope.org - An Introduction to Structured Text&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;どうも1996年あたりから存在するらしいが、ソースコード、またはCHANGELOGから追えなかった。その当時Zope使っていた人なら知っているかも&lt;/li&gt;
&lt;li&gt;現在のlatest versionは&lt;a href=&quot;https://pypi.python.org/pypi/zope.structuredtext/4.1.0&quot;&gt;4.1.0(2014/12/29)&lt;/a&gt;のようなんだけどまだ使われているのだろうか？

&lt;ul&gt;
&lt;li&gt;4.1.0に「support for Python 3.4」の文字が&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://pypi.python.org/pypi/StructuredText/2.11.1&quot;&gt;StructuredText 2.11.1 : Python Package Index&lt;/a&gt; こっちはZope2とやり取りする用？&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;restructuredtext&quot;&gt;reStructuredText&lt;/h3&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;基本情報&lt;/th&gt;
&lt;th&gt;詳細&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Developed&lt;/td&gt;
&lt;td&gt;David Goodger&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Initial Release&lt;/td&gt;
&lt;td&gt;2001/06/02(reST 0.1)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Official&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;http://docutils.sourceforge.net/rst.html&quot;&gt;reStructuredText&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;ul&gt;
&lt;li&gt;reSTと略す&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.zope.org/Members/jim/StructuredTextWiki/FrontPage/&quot;&gt;StructuredText&lt;/a&gt;と、&lt;a href=&quot;http://docutils.sourceforge.net/mirror/setext.html&quot;&gt;setext&lt;/a&gt;の再実装である(revision and reinterpretation)&lt;/li&gt;
&lt;li&gt;reSTのやりたいことやゴールは下記のページで本人David Goodgerがアツく語っている

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://docutils.sourceforge.net/docs/ref/rst/introduction.html&quot;&gt;An Introduction to reStructuredText&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://docutils.sphinx-users.jp/docutils/docs/ref/rst/introduction.html&quot;&gt;reStructuredText 入門 — Docutils documentation in Japanese 0.12 ドキュメント&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Doc-SIGにその当時のやり取りも残っているので、ここを読んでみるのもよさそう

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://mail.python.org/pipermail/doc-sig/2001-June/001858.html&quot;&gt;[Doc-SIG] An Introduction to reStructuredText&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;プロジェクトの推移&quot;&gt;プロジェクトの推移&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://docutils.sourceforge.net/&quot;&gt;Docutils&lt;/a&gt;パッケージに含まれている軽量マークアップ言語

&lt;ul&gt;
&lt;li&gt;reST 0.1-0.4までは単独プロジェクトだった(2001/06/02-2002/04/18)&lt;/li&gt;
&lt;li&gt;統合されたのはDocutilsのv0.1から(2002/04/02)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;以下はreST 0.4のChangelog。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;Release 0.4 (2002-04-18)
========================

This is the final release of reStructuredText as an independent
package.  Development is being transferred to the Docutils_ project
immediately.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;元々単独プロジェクトだったものが&lt;a href=&quot;http://docutils.sourceforge.net/HISTORY.html#release-0-1-2002-04-20&quot;&gt;Docutilsのv0.1&lt;/a&gt;でDocstringと統合されている(2002/04/20)&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;merged from the now inactive reStructuredText and Docstring Processing System projects&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://structuredtext.sourceforge.net/&quot;&gt;reStructuredText&lt;/a&gt;跡と、&lt;a href=&quot;http://structuredtext.sourceforge.net/index-old.html&quot;&gt;旧ページ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Date: 2002-04-21&lt;/p&gt;

&lt;p&gt;The reStructuredText project has moved! It is now part of the Docutils project; you should be redirected to the new location momentarily. Click here to go to the Docutils project home page immediately.
You may also visit the inactive reStructuredText home page.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://docstring.sourceforge.net/&quot;&gt;Docstring Processing System&lt;/a&gt;跡と、&lt;a href=&quot;http://docstring.sourceforge.net/index-old.html&quot;&gt;旧ページ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Date: 2002-04-21&lt;/p&gt;

&lt;p&gt;The Docstring Processing System project has moved and been renamed! It is now called &amp;quot;Docutils&amp;quot;; you should be redirected to the new location momentarily. Click here to go to the Docutils project home page immediately.
You may also visit the inactive Docstring Processing System home page.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://docutils.sourceforge.net/mirror/setext.html&quot;&gt;setext Documents Mirror&lt;/a&gt;跡&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Here are local copies of some setext documents, made available to document the prehistory of the Docutils project (and especially the reStructuredText markup). The source for the original setext (structure-enhanced text) documents was http://www.bsdi.com/setext/, but it seems to have disappeared from the Web.
The files in the &amp;quot;setext mirror&amp;quot; are all the files relating to setext that I have (including a tarball of the lot). I have not been able to locate the originators of setext, Ian Feldman or Tony Sanders. If you know how to contact them, or if you know of an official repository for the setext documents, please inform me.
David Goodger, 2002-03-25&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;markdown&quot;&gt;Markdown&lt;/h2&gt;

&lt;h3 id=&quot;markdown&quot;&gt;Markdown&lt;/h3&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;基本情報&lt;/th&gt;
&lt;th&gt;詳細&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Developed&lt;/td&gt;
&lt;td&gt;John Gruber&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Initial Release&lt;/td&gt;
&lt;td&gt;2004/08/28(1.0 Markdown.plより)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Official&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;http://daringfireball.net/projects/markdown/&quot;&gt;Daring Fireball: Markdown&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;ul&gt;
&lt;li&gt;多分この辺りが製作者が一番始めにMarkdownに言及した記事かな

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://daringfireball.net/2004/03/introducing_markdown&quot;&gt;Daring Fireball: Introducing Markdown&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://daringfireball.net/2004/03/dive_into_markdown&quot;&gt;Daring Fireball: Dive Into Markdown&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://daringfireball.net/projects/markdown/dingus&quot;&gt;Daring Fireball: Markdown Web Dingus&lt;/a&gt; テキスト変換ページ&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;reSTを参考にしているらしい(高橋さんの資料より)&lt;/li&gt;
&lt;li&gt;v1.0.1(2004/12/07)で &lt;strong&gt;更新終了&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;更新終了後について&quot;&gt;更新終了後について&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;John Gruberはこれ以上の新機能追加や仕様の標準化には消極的で、利用者によって多くの拡張Markdownが作られた。

&lt;ul&gt;
&lt;li&gt;PHP Markdown ExtraやGitHub Flavored Markdownなど&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Jeff AtwoodとJohn MacFarlaneが先頭になってMarkdown標準化のプロジェクトが推し進められた

&lt;ul&gt;
&lt;li&gt;ことはJeff Atwoodの&lt;a href=&quot;http://blog.codinghorror.com/responsible-open-source-code-parenting/&quot;&gt;2009年の記事&lt;/a&gt;から始まる…&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;なんやかんやあって&lt;/strong&gt; CommonMarkが発足した

&lt;ul&gt;
&lt;li&gt;このあたりのいきさつはWEB+DB PRESS Vol.83に書いてあるので割愛&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;commonmark&quot;&gt;CommonMark&lt;/h3&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;基本情報&lt;/th&gt;
&lt;th&gt;詳細&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Developed&lt;/td&gt;
&lt;td&gt;Jeff Atwood, John MacFarlane他多数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Initial Release&lt;/td&gt;
&lt;td&gt;2014/08/14(&lt;a href=&quot;https://github.com/jgm/CommonMark/commit/650ad87f35f4405a2ca8270d2b2835daa442e5f1&quot;&gt;jgm/CommonMark@650ad87&lt;/a&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Official&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;http://commonmark.org/&quot;&gt;CommonMark&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;ul&gt;
&lt;li&gt;上記のようないきさつの末、発足&lt;/li&gt;
&lt;li&gt;発足後も結構もめたらしい

&lt;ul&gt;
&lt;li&gt;当初はstandard markdownと名前をつけていたがJohn Gruberに勝手にMarkdownの名前使うなと言われて改名したり&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Markdownを使ったプロダクトやサービスを使っている企業の人が参加している&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;John MacFarlane（Pandoc作者、カリフォルニア大学バークレー校）&lt;/p&gt;

&lt;p&gt;David Greenspan（EtherPad作者、Meteor）&lt;/p&gt;

&lt;p&gt;Vicent Mart（i Sundown、Redcarpet作者、GitHub）&lt;/p&gt;

&lt;p&gt;Neil Williams（Snudown（reddit 拡張が入ったSundown）作者、Reddit）&lt;/p&gt;

&lt;p&gt;Benjamin Dumke-von der Ehe（pagedown 作者、Stack Overflow）&lt;/p&gt;

&lt;p&gt;Jeff Atwood（Civilized Discourse Construction Kit）&lt;/p&gt;

&lt;p&gt;via: WEB+DB PRESS Vol.83より抜粋&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;John Gruberは参加していない(許可は取っている)&lt;/li&gt;
&lt;li&gt;今後、標準となるか&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;wiki&quot;&gt;Wiki&lt;/h2&gt;

&lt;h3 id=&quot;wiki&quot;&gt;Wiki&lt;/h3&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;基本情報&lt;/th&gt;
&lt;th&gt;詳細&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Developed&lt;/td&gt;
&lt;td&gt;Ward Cunningham&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Initial Release&lt;/td&gt;
&lt;td&gt;1995/03/25 or 1995/05/01&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Official&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;http://c2.com/cgi/wiki?&quot;&gt;Front Page - http://c2.com/cgi/wiki&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;ul&gt;
&lt;li&gt;Wikiの親玉&lt;/li&gt;
&lt;li&gt;すべてのWikiシステムはこれが親と言えそう&lt;/li&gt;
&lt;li&gt;作成者はWard Cunningham...ウォードカニンガム…あ！名前聞いたことあるわ！この人が作ったのか&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;yukiwiki&quot;&gt;YukiWiki&lt;/h3&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;基本情報&lt;/th&gt;
&lt;th&gt;詳細&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Developed&lt;/td&gt;
&lt;td&gt;結城浩&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Initial Release&lt;/td&gt;
&lt;td&gt;2000/07/15(readme.txtより)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Official&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;http://www.hyuki.com/yukiwiki/&quot;&gt;YukiWiki&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;ul&gt;
&lt;li&gt;いわゆるWikiクローンのひとつ。結城先生作。2000年に作成されている&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Cunningham &amp;amp; CunninghamのWikiWikiWebの仕様を参考にして作られ、 多くの人からのフィードバックを受けてゆっくり成長しています。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;PukiWikiもYukiWikiクローン&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;YukiWiki を PHP に移植する形で開発された wiki クローン。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;mediawiki&quot;&gt;MediaWiki&lt;/h3&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;基本情報&lt;/th&gt;
&lt;th&gt;詳細&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Developed&lt;/td&gt;
&lt;td&gt;Magnus Manskeら&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Initial Release&lt;/td&gt;
&lt;td&gt;2003/12/08(1.1)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Official&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;http://www.mediawiki.org/wiki/MediaWiki&quot;&gt;MediaWiki&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;ul&gt;
&lt;li&gt;Wikipediaのために作られWikipediaで使用されている

&lt;ul&gt;
&lt;li&gt;2015年現在一番記事数が多いWikiシステムだとか&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;1.1よりも前にPhase3というバージョンが2003/04/14にリリースされている

&lt;ul&gt;
&lt;li&gt;Wikipedia(英語版)の設立は2001/01/15&lt;/li&gt;
&lt;li&gt;この空白の期間はどうしていたんだろう？&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;その他&quot;&gt;その他&lt;/h2&gt;

&lt;h3 id=&quot;はてな記法&quot;&gt;はてな記法&lt;/h3&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;基本情報&lt;/th&gt;
&lt;th&gt;詳細&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Developed&lt;/td&gt;
&lt;td&gt;はてな(近藤淳也？)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Initial Release&lt;/td&gt;
&lt;td&gt;2003/01？&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Official&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;http://d.hatena.ne.jp/&quot;&gt;はてなダイアリー - 写真・画像・動画付き日記を無料で&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;ul&gt;
&lt;li&gt;はてなのサービス内で使用できる記法&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;「はてな記法」とは、はてなダイアリーを書く上で便利な機能を、かんたんな記述で実現することができる記述法のことです。&lt;/p&gt;

&lt;p&gt;はてな記法を使うと、HTMLの知識がなくても、見出しやリストといった、ブログを書く上で便利な表現を簡単に行うことができます。&lt;/p&gt;

&lt;p&gt;via: &lt;a href=&quot;http://hatenadiary.g.hatena.ne.jp/keyword/%E3%81%AF%E3%81%A6%E3%81%AA%E8%A8%98%E6%B3%95%E3%81%A3%E3%81%A6%E3%81%AA%E3%81%AB%EF%BC%9F&quot;&gt;はてな記法ってなに？ - はてなダイアリーのヘルプ&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;はてなダイアリーと同じくらいにリリースされている？？

&lt;ul&gt;
&lt;li&gt;近藤さんの日記(2003/01/21)

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://jkondo.hatenablog.com/entry/20030121&quot;&gt;日記統合 - jkondoのはてなブログ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;2003/01にはてなダイアリーのβがリリース

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.hatena.ne.jp/company/hatena10th/history&quot;&gt;教科書にのらない!はてなの歴史 - はてな10周年! #hatena10th - はてな&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;記法の説明っぽい最古の記事は2003/03/01にある(&amp;quot;記法&amp;quot;で日記内検索した)

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://d.hatena.ne.jp/hatenadiary/20030301/1046490045&quot;&gt;BLOCKQUOTE省略記法 - はてなダイアリー日記&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&amp;quot;はてな記法&amp;quot;だと2005/06の記事が引っかかる

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://d.hatena.ne.jp/hatenadiary/20050613/1118636067&quot;&gt;RSSフィードの仕様変更について - はてなダイアリー日記&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;はてな記法がリリースされた厳密な時期はわからない…

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://web.archive.org/web/20030515161156/http://d.hatena.ne.jp/help#editrule&quot;&gt;2003/05のはてなダイアリーヘルプ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://web.archive.org/web/20040404023316/http://d.hatena.ne.jp/help#editrule&quot;&gt;2004/04のはてなダイアリーヘルプ&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&amp;quot;はてな記法&amp;quot;というワードはないが、書き方はそれに近い(というか同じ)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;β版リリース時に独自記法は存在したが、&amp;quot;はてな記法&amp;quot;と命名されるまでにタイムラグがある？

&lt;ul&gt;
&lt;li&gt;2004/11にはあった？ &lt;a href=&quot;http://muziyoshiz.jp/20041119.html&quot;&gt;無印吉澤 - はてな記法ジャンキー&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ギリギリMarkdownよりはやいのかな？&lt;/p&gt;

&lt;h2 id=&quot;終わりに&quot;&gt;終わりに&lt;/h2&gt;

&lt;p&gt;この文章はMarkdownで書かれています。&lt;/p&gt;

&lt;h2 id=&quot;おまけ-参考サイト&quot;&gt;おまけ: 参考サイト&lt;/h2&gt;

&lt;h3 id=&quot;markdown系&quot;&gt;Markdown系&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;もっと知りたい！Markdown! 高橋 征義(WEB+DB PRESS Vol.83)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.slideshare.net/takahashim/sphinx-markdown&quot;&gt;Markdownもはじめよう - Slideshare&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;rest系&quot;&gt;reST系&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/ReStructuredText&quot;&gt;reStructuredText - Wikipedia, the free encyclopedia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://sphinx-users.jp/articles/expertpython/restructuredtext.html&quot;&gt;reStructuredText入門 — Python製ドキュメンテーションビルダー、Sphinxの日本ユーザ会&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://qiita.com/wtnabe@github/items/ceea10a287eaaf420df7&quot;&gt;AdventCalendar - Docutils と Ruby で快適ドキュメント生活 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://docutils.sourceforge.net/docs/ref/rst/introduction.html&quot;&gt;An Introduction to reStructuredText&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://docutils.sphinx-users.jp/docutils/docs/ref/rst/introduction.html&quot;&gt;reStructuredText 入門 — Docutils documentation in Japanese 0.12 ドキュメント&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/setext&quot;&gt;setext - Wikipedia, the free encyclopedia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.age.ne.jp/x/sf/SETEXT/&quot;&gt;sf&amp;#39;s setext Home Page&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.w3.org/MarkUp/html-test/setext/setext+sgml_01.html&quot;&gt;SGML vs setext&lt;/a&gt; Ian Feldmanのメール&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.renya.com/textware/format.htm&quot;&gt;renya.com - 電子書籍のデータ形式と対応ビュワー&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;wiki系&quot;&gt;Wiki系&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://ja.wikipedia.org/wiki/%E3%82%A6%E3%82%A3%E3%82%AD&quot;&gt;ウィキ - Wikipedia&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/WikiWikiWeb&quot;&gt;WikiWikiWeb - Wikipedia, the free encyclopedia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ja.wikipedia.org/wiki/%E3%82%A6%E3%82%A9%E3%83%BC%E3%83%89%E3%83%BB%E3%82%AB%E3%83%8B%E3%83%B3%E3%82%AC%E3%83%A0&quot;&gt;ウォード・カニンガム - Wikipedia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://engineer-intern.jp/archives/34927&quot;&gt;Wikiを生み出したエンジニア、ウォード・カニンガムとは？ | IT系のインターンシップならエンジニアインターン&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://c2.com/cgi/wiki?WikiHistory&quot;&gt;Wiki History&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.yamdas.org/column/technique/clonelist.html&quot;&gt;日本発の wiki クローンリスト&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.hyuki.com/yukiwiki/&quot;&gt;YukiWiki&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.hyuki.com/yukiwiki/wiki.cgi?WikiWikiWeb&quot;&gt;WikiWikiWeb - WikiWikiWebとは何か&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://ja.wikipedia.org/wiki/MediaWiki&quot;&gt;MediaWiki - Wikipedia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/MediaWiki_version_history&quot;&gt;MediaWiki version history - Wikipedia, the free encyclopedia&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;その他&quot;&gt;その他&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://kogures.com/hitoshi/history/browser/index.html&quot;&gt;ブラウザとＨＴＭＬの歴史＜インターネット個人利用＜歴史＜木暮仁&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://qiita.com/sh19910711/items/0292e03f97a35f84e7e6&quot;&gt;いまさら振り返る HTML の歴史 - Aizu Advent Calendar 2012 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Hugoを使ってみた</title>
   <link href="http://gosyujin.github.io/2015/06/30/hugo-helloworld"/>
   <updated>2015-06-30T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2015/06/30/hugo-helloworld</id>
   <content type="html">&lt;h2 id=&quot;あらすじ&quot;&gt;あらすじ&lt;/h2&gt;

&lt;p&gt;自分がローカルで取りためているメモをいい感じで見るために使用する静的サイトジェネレータを選別してみた。&lt;/p&gt;

&lt;p&gt;要望とか環境とか。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;PCの外には出さない

&lt;ul&gt;
&lt;li&gt;ローカルで作成して、出力して、ローカルで見る&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;プレーンテキストでバージョン管理したい&lt;/li&gt;
&lt;li&gt;タグとかカテゴリである程度ジャンル分けしたい&lt;/li&gt;
&lt;li&gt;(できれば)Windowsでも(苦労せず)動かしたい&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;こんなことができそうな静的サイトジェネレータを探してみる…。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Jekyll&lt;/li&gt;
&lt;li&gt;Middleman&lt;/li&gt;
&lt;li&gt;Pelican&lt;/li&gt;
&lt;li&gt;Sphinx&lt;/li&gt;
&lt;li&gt;Hugo&lt;/li&gt;
&lt;li&gt;あとはJavascript系からいくつか…&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;結果、hugoにした&quot;&gt;結果、Hugoにした&lt;/h2&gt;

&lt;p&gt;公式に書かれていることを信じて。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Make the Web Fun Again&lt;/li&gt;
&lt;li&gt;Run Anywhere&lt;/li&gt;
&lt;li&gt;Fast &amp;amp; Powerful&lt;/li&gt;
&lt;li&gt;Flexible&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Windowsでも結構使うので、個人的にはRun Anywhareがいいかなと思った。&lt;/p&gt;

&lt;p&gt;Fast &amp;amp; Powerfulに関しては、他のサイトジェネレータから乗り換えた人が感じているようだけど、そんなに記事数増えない予定だからな～…と思っていた。&lt;/p&gt;

&lt;p&gt;が、ビルド速度意外と大事だった。(後述)&lt;/p&gt;

&lt;h2 id=&quot;インストール手順&quot;&gt;インストール手順&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://gohugo.io/overview/quickstart/&quot;&gt;公式のQuickstartガイド&lt;/a&gt;より。&lt;/p&gt;

&lt;h3 id=&quot;hugoインストール&quot;&gt;Hugoインストール&lt;/h3&gt;

&lt;p&gt;割愛。バイナリファイルもあるので、それを持ってきてパス通す。&lt;code&gt;hugo&lt;/code&gt;コマンドが実行できればOK。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;gt;hugo version
Hugo Static Site Generator v0.13 BuildDate: 2015-05-12T10:43:12+09:00
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;サイト新規作成&quot;&gt;サイト新規作成&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&amp;gt;hugo new site mysite
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;こんな感じの階層でファイルができる。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;C:.
│  config.toml
│
├─archetypes
├─content
├─data
├─layouts
└─static
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;これがデフォルトの構造っぽい。&lt;/p&gt;

&lt;p&gt;tomlファイルは初見だ。yamlのような感じか。&lt;/p&gt;

&lt;h3 id=&quot;content作成&quot;&gt;Content作成&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;content&lt;/code&gt;ディレクトリはいわゆる記事の置き場かな。&lt;code&gt;hugo new&lt;/code&gt;で&lt;code&gt;content&lt;/code&gt;の下にファイルが生成される。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&amp;gt;hugo new about.md
content\about.md created
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;ビルド&quot;&gt;ビルド&lt;/h2&gt;

&lt;p&gt;ちょうどよいので、速度をはかるため今までのブログ記事を(最低限Hugoが変換できる程度になおして)ビルドをしてみた。&lt;/p&gt;

&lt;p&gt;元の記事はJekyllで管理されている。&lt;/p&gt;

&lt;p&gt;Migrate方法はまだ全部見ていないが公式にもある。&lt;a href=&quot;http://gohugo.io/tutorials/migrate-from-jekyll/&quot;&gt;Migrate to Hugo from Jekyll&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;ファイルサイズ - ファイル名
2635 - 2012-10-10-jekyll-liquid-plugin.md
4898 - 2012-10-01-bundle-exec-bat.mdｄ
6387 - 2012-09-21-jekyll-pygments.md
3633 - 2012-09-20-jekyll.md
1702 - 2013-02-04-haskell-helloworld4.md
4814 - 2013-01-24-haskell-helloworld3.md
3625 - 2013-01-21-haskell-helloworld2.md
6795 - 2013-01-09-haskell-helloworld.md
3155 - 2012-12-31-kpt-2012.md
2837 - 2012-12-25-ruby-memo.md
7253 - 2012-12-12-git-svn-dcommit.md
6821 - 2012-11-12-from-hatena-to-jekyll.md
34406 - 2013-04-01-chef-helloworld.md
4028 - 2013-03-18-selenium-firefox-loaderror.md
8962 - 2013-03-07-selenium-ie-iphone-browser.md
3160 - 2013-03-03-evernote-oauth.md
12163 - 2013-02-25-ruby200-helloworld-pik-rvm.md
6369 - 2013-02-19-haskell-helloworld5.md
12823 - 2013-06-05-ios-over-the-air.md
10191 - 2013-05-27-jekyll-githubpages-analytics-setting.md
3392 - 2013-05-23-jekyll-liquid-plugin2.md
7679 - 2013-05-21-jekyll-plugin-githubpages.md
7100 - 2013-04-27-bpstudy68.md
3641 - 2013-04-11-jekyll-0120.md
2852 - 2013-08-20-rails3-log-not-colorize.md
14155 - 2013-08-09-redmine2.3-install-and-plugin.md
12300 - 2013-08-07-jekyll-maintenance-1.md
20019 - 2013-08-04-android-install-intent.md
7434 - 2013-07-18-ios-backup-restore.md
1398 - 2013-09-05-svn-proxy-error-by-git-svn.md
3189 - 2013-09-03-redmine-content-length-error.md
29634 - 2013-08-28-android-test-tools.md
4706 - 2013-08-26-utf8-space-c2a0.md
5269 - 2013-08-23-sphinx-install-python-proxy2.md
22168 - 2013-08-21-sphinx-install-python-proxy.md
7488 - 2013-12-24-ruby-qr.md
23097 - 2013-12-14-git-dotgit-objects.md
2665 - 2013-11-25-jekyll-plugin-reference.md
6594 - 2013-10-25-sphinx-recommend.md
7599 - 2013-10-02-sphinx-plugin.md
5653 - 2013-09-25-ios-uiwebview-cache.md
11685 - 2013-09-07-jekyll-maintenance-2.md
6009 - 2014-05-19-sphinx-recommend2.md
4348 - 2014-04-01-kawasakirb-010.md
6089 - 2014-03-13-jekyll-make-jekyllrb-com-jp.md
7733 - 2014-02-24-redmine-test.md
6515 - 2014-01-28-pull-request-to-jekyll.md
3018 - 2013-12-31-kpt-2013.md
3678 - 2014-07-13-kawasakirb-011-012-013.md
7870 - 2014-06-22-translated-jekyllrb.md
26526 - 2014-05-28-sphinx-latexpdfja-for-windows.md
2978 - 2014-07-26-jekyllrb-ja-meetupmd.md
2823 - 2014-08-28-kawasakirb-015.md
15897 - 2014-09-24-hubot-helloworld.md
2547 - 2014-10-27-sphinxconjp-2014.md
1176 - 2014-11-30-kawsakirb-018.md
2800 - 2014-12-23-kawasakirb-019.md
2285 - 2015-01-25-kpt-2014.md
1937 - 2015-02-28-excel-by-ruby.md
3545 - 2015-03-14-jekyll-changed-bindaddress.md
4185 - 2015-04-30-golang-helloworld.md
4110 - 2015-05-26-jenkins-environment-path.md
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;jekyll-build-した場合&quot;&gt;jekyll build した場合&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;$ time jekyll build
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;体感で8秒くらいかかってる。&lt;/p&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;real&lt;/th&gt;
&lt;th&gt;user&lt;/th&gt;
&lt;th&gt;sys&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;0m7.955s&lt;/td&gt;
&lt;td&gt;0m7.341s&lt;/td&gt;
&lt;td&gt;0m0.527s&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0m7.856s&lt;/td&gt;
&lt;td&gt;0m7.409s&lt;/td&gt;
&lt;td&gt;0m0.447s&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0m7.818s&lt;/td&gt;
&lt;td&gt;0m7.297s&lt;/td&gt;
&lt;td&gt;0m0.529s&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0m7.901s&lt;/td&gt;
&lt;td&gt;0m7.402s&lt;/td&gt;
&lt;td&gt;0m0.466s&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0m7.594s&lt;/td&gt;
&lt;td&gt;0m7.167s&lt;/td&gt;
&lt;td&gt;0m0.440s&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;h3 id=&quot;hugoした場合&quot;&gt;hugoした場合&lt;/h3&gt;

&lt;p&gt;テーマは適当。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;$ hugo --theme=xxx
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;体感0.55秒。むっちゃはやい。&lt;/p&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;real&lt;/th&gt;
&lt;th&gt;user&lt;/th&gt;
&lt;th&gt;sys&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;0m0.553s&lt;/td&gt;
&lt;td&gt;0m0.912s&lt;/td&gt;
&lt;td&gt;0m0.092s&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0m0.613s&lt;/td&gt;
&lt;td&gt;0m0.995s&lt;/td&gt;
&lt;td&gt;0m0.111s&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0m0.605s&lt;/td&gt;
&lt;td&gt;0m0.985s&lt;/td&gt;
&lt;td&gt;0m0.105s&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0m0.518s&lt;/td&gt;
&lt;td&gt;0m0.825s&lt;/td&gt;
&lt;td&gt;0m0.091s&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0m0.559s&lt;/td&gt;
&lt;td&gt;0m0.887s&lt;/td&gt;
&lt;td&gt;0m0.096s&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;このビルドスピードはかなり快適で、GitHub Pages自体Hugoに切り替えようと思ってしまうほどだった。&lt;/p&gt;

&lt;h2 id=&quot;まだよくわかってない&quot;&gt;まだよくわかってない&lt;/h2&gt;

&lt;p&gt;hugoのデフォルトコマンドの操作がちょっと気になるので、色々いじりたい。&lt;/p&gt;

&lt;p&gt;が、どうするのが一番ベストなのかまだよくわかってない。例えば…、&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;hugo new about&lt;/code&gt;で&lt;code&gt;about.md&lt;/code&gt;ファイルを作ってほしい

&lt;ul&gt;
&lt;li&gt;拡張子指定するのめんどくさい&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;もっというと、2015/06/20に上記コマンドを実行したら&lt;code&gt;2015-06-20-about.md&lt;/code&gt;ファイルを作ってほしい

&lt;ul&gt;
&lt;li&gt;過去の資産との整合性をとりたい(ファイル命名規則)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;about&lt;/code&gt;部分をtitleじゃなくslugに指定したい

&lt;ul&gt;
&lt;li&gt;タイトルは最終的に変えるから&lt;code&gt;&amp;quot;&amp;quot;&lt;/code&gt;とかでいい&lt;/li&gt;
&lt;li&gt;過去の資産との整合性をとりたい(パーマリンクに使用)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;archetypes/default.md&lt;/code&gt;の使って新しいファイルを生成しているみたいなんだけど、勝手にFrontMatterをソートしたりするのやめてほしい

&lt;ul&gt;
&lt;li&gt;過去の資産との整合性をとりたい&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;こういうことをしたいのだけど、どうするのが一番いいんだろう。(ドキュメントを全部読みきれていないので、もしかしたらコマンドのオプションとかconfig定義で解決できるものもあるかも)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;hugoソースに直接手を入れて実現すべき？&lt;/li&gt;
&lt;li&gt;hugoコマンドのラッパーコマンドを作るべき？(goで)&lt;/li&gt;
&lt;li&gt;hugoコマンドのラッパーコマンドを作るべき？(シェルスクリプトなどで)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;いまはシェルスクリプトでやってる…。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>実行ユーザの違いでJenkinsのホームディレクトリが変わって困った話</title>
   <link href="http://gosyujin.github.io/2015/05/26/jenkins-environment-path"/>
   <updated>2015-05-26T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2015/05/26/jenkins-environment-path</id>
   <content type="html">&lt;h2 id=&quot;あらすじ&quot;&gt;あらすじ&lt;/h2&gt;

&lt;p&gt;結構昔にWindows 7上において、以下の2通りのSeleniumスクリプト実行結果が違ってすごく困っていた。&lt;/p&gt;

&lt;p&gt;前提条件としては、Seleniumスクリプトは同じ。実行コマンドも &lt;code&gt;bundle exec ruby hoge.rb&lt;/code&gt; で同じ。違うのは実行の仕方だけ。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;コマンドプロンプトで実行

&lt;ul&gt;
&lt;li&gt;Seleniumスクリプト&lt;/li&gt;
&lt;li&gt;コマンドプロンプトからコマンド実行&lt;/li&gt;
&lt;li&gt;正常終了&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Jenkinsで実行

&lt;ul&gt;
&lt;li&gt;Seleniumスクリプト(「Windowsバッチコマンドの実行」でジョブに登録)&lt;/li&gt;
&lt;li&gt;リモートビルドから実行&lt;/li&gt;
&lt;li&gt;＼エラー／&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;原因の切り分け方とかもわからなかったのでかなり苦戦…。&lt;/p&gt;

&lt;h2 id=&quot;環境&quot;&gt;環境&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Windows 7&lt;/li&gt;
&lt;li&gt;Jenkins 1.581&lt;/li&gt;
&lt;li&gt;Ruby 1.9.3

&lt;ul&gt;
&lt;li&gt;bundler (1.3.5)&lt;/li&gt;
&lt;li&gt;pit (0.0.7)&lt;/li&gt;
&lt;li&gt;selenium-webdriver (2.43.0)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;結論&quot;&gt;結論&lt;/h2&gt;

&lt;p&gt;原因はJenkinsとコマンドプロンプトでの実行時の &lt;strong&gt;環境変数の違い&lt;/strong&gt; だった。環境変数をいじって解決。&lt;/p&gt;

&lt;p&gt;具体的に何が起こっていたかというと…。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Seleniumスクリプトの中で &lt;code&gt;pit&lt;/code&gt; (https://github.com/cho45/pit) というアカウントのID、パスワードを外出しできるGemを使用していた

&lt;ul&gt;
&lt;li&gt;pitの挙動は、 &lt;code&gt;~/.pit&lt;/code&gt; 直下にあるyamlファイルを探して、IDとパスワードを取得するというもの&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;コマンドプロンプトで実行したとき&quot;&gt;コマンドプロンプトで実行したとき&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;実行ユーザは「今Windowsにログオンしている自分」&lt;/li&gt;
&lt;li&gt;pitは &lt;code&gt;~/.pit&lt;/code&gt; = &lt;code&gt;C:\Users\USER\.pit&lt;/code&gt; を見に行っていた&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;ホームディレクトリにはアカウント定義しているyamlがあるので正常に動作。まあこれはそうだよね。問題は次。&lt;/p&gt;

&lt;h3 id=&quot;jenkinsで実行したとき&quot;&gt;Jenkinsで実行したとき&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;実行ユーザは「Jenkins自体？」(コンソール出力を見るとリモートホスト127.0.0.1が実行となってる)&lt;/li&gt;
&lt;li&gt;pitは &lt;code&gt;~/.pit&lt;/code&gt; = &lt;code&gt;C:\windows\system32\config\systemprofile\.pit&lt;/code&gt; を見に行っていた&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;system32…？こんなパスにアカウント定義しているyamlはないので当然失敗する。&lt;/p&gt;

&lt;p&gt;Jenkinsの管理 -&amp;gt; システム情報 からシステムプロパティを見ると &lt;code&gt;user.home&lt;/code&gt; が &lt;code&gt;C:\Windows\System32\config\systemprofile&lt;/code&gt; と定義されていた&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Seleniumスクリプト実行前にこんな環境変数セットして無理矢理解決した&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;set USERPROFILE=C:\Users\USER&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;普段目立たなかったライブラリの環境変数が変わっていることに気づかなかった&lt;/li&gt;
&lt;li&gt;あと、そこに気づけるようになっていなかったので、原因突き詰めるのにも手間取った&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;原因にたどり着くまで&quot;&gt;原因にたどり着くまで&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Jenkinsで実行するとこんなエラーがでた。なんかframeがないと。&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;go&quot;&gt;[remote server] file:///C:/windows/Temp/webdriver-rb-profilecopy20140902-7960-9wnep3/extensions/fxdriver@googlecode.com/components/driver_component.js:8929:5:in `FirefoxDriver.prototype.switchToFrame&amp;#39;: Unable to locate frame: mainframe (Selenium::WebDriver::Error::NoSuchFrameError)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;でも、このエラーだけじゃ全然よくわからん…しかし、どうやって原因を切り分ければよいのかもわからんかった。

&lt;ul&gt;
&lt;li&gt;とりあえずputsを入れまくってみた&lt;/li&gt;
&lt;li&gt;@yando さんの助言によりこけてそうなところでスクリーンショットを取るようにしてみた&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;putsとスクショの結果を眺めると、ログインフォームにID、パスワードが入ってないようだ&lt;/li&gt;
&lt;li&gt;pitがうまく動いてないとわかった&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;という感じ。&lt;/p&gt;

&lt;p&gt;いろんなテクニックを駆使して、どこでコケてるかわかりやすくしなければならないのか。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://qiita.com/oh_rusty_nail/items/b8ba525d31ea7c522856&quot;&gt;全国のSeleniumer必読&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://qiita.com/oh_rusty_nail/items/d2284efc7fd2dd7c3206&quot;&gt;Selenium+JenkinsのCIをできるだけコケなくするコツ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>golangでサーバのファイルをゆっくりダウンロードするツール作ってみた</title>
   <link href="http://gosyujin.github.io/2015/04/30/golang-helloworld"/>
   <updated>2015-04-30T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2015/04/30/golang-helloworld</id>
   <content type="html">&lt;h2 id=&quot;あらすじ&quot;&gt;あらすじ&lt;/h2&gt;

&lt;p&gt;golangやるやる詐欺してたので、ようやくさわってみた。&lt;/p&gt;

&lt;h2 id=&quot;参考サイト&quot;&gt;参考サイト&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://golang.jp/&quot;&gt;golang.jp - プログラミング言語Goの情報サイト&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;を中心に、いろいろググりつつ。&lt;/p&gt;

&lt;h2 id=&quot;バージョン&quot;&gt;バージョン&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;go version go1.4.2 &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;やりたいこと&quot;&gt;やりたいこと&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;サーバに負荷がかからないようにちょっとずつ落とせる&lt;/li&gt;
&lt;li&gt;ネットワークに負荷がかからないようにゆっくり落とせる&lt;/li&gt;
&lt;li&gt;落とし切る前に終了→再実行したら途中から落とせる&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;作ったもの&quot;&gt;作ったもの&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/gosyujin/yukkuri-downloader&quot;&gt;gosyujin/yukkuri-downloader&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;byte-rangeリクエストを投げて(初めて知った)ちょっとずつ落とせる

&lt;ul&gt;
&lt;li&gt;StatusPartialContentでレスポンスくれないサーバでは一気に落としてしまう&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;インターバルを指定できてゆっくり落とせる&lt;/li&gt;
&lt;li&gt;レジュームできる&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;他、&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;設定ファイル(jxon)から設定を読み込める&lt;/li&gt;
&lt;li&gt;コマンドライン引数から設定を読み込める(設定ファイルより強い)&lt;/li&gt;
&lt;li&gt;proxyは環境変数HTTP&lt;em&gt;PROXYとHTTPS&lt;/em&gt;PROXYを読み込める(使わない事もできる)&lt;/li&gt;
&lt;li&gt;WindowsとCentOSで動かせる&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ビルドして実行すると&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;yukkuri&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;downloader&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;h&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tran&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2015&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;04&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;19&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;17&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;47&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Initialize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tran&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2015&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;04&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;19&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;17&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;47&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Read&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setting&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;home&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;kk_Ataka&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tran&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;json&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;Usage&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;yukkuri&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;downloader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;download&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;interval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;no&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;proxy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;proxy&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;proxy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;proxy&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getRange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;u&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;download&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;file&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;yukkuri&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;downloader&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1048&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tran&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2015&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;04&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;19&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;03&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Initialize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tran&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2015&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;04&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;19&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;03&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Read&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setting&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;home&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;kk_Ataka&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tran&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;json&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tran&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2015&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;04&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;19&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;03&lt;/span&gt;   &lt;span class=&quot;nx&quot;&gt;Override&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getRange&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ARGS&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tran&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2015&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;04&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;19&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;03&lt;/span&gt;   &lt;span class=&quot;nx&quot;&gt;Override&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;interval&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ARGS&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tran&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2015&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;04&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;19&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;03&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;CLEAR&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;system&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;proxy&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;HTTP_PROXY&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;HTTPS_PROXY&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tran&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2015&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;04&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;19&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;03&lt;/span&gt;   &lt;span class=&quot;nx&quot;&gt;HTTP_PROXY&lt;/span&gt;   &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tran&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2015&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;04&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;19&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;03&lt;/span&gt;   &lt;span class=&quot;nx&quot;&gt;HTTPS_PROXY&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tran&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2015&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;04&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;19&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;03&lt;/span&gt;   &lt;span class=&quot;nx&quot;&gt;Url&lt;/span&gt;          &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//ftp.kddilabs.jp:80/infosystems/apache/httpd/httpd-2.4.12.tar.gz&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tran&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2015&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;04&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;19&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;03&lt;/span&gt;   &lt;span class=&quot;nx&quot;&gt;Scheme&lt;/span&gt;       &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;http&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tran&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2015&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;04&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;19&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;03&lt;/span&gt;   &lt;span class=&quot;nx&quot;&gt;Host&lt;/span&gt;         &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ftp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;kddilabs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;jp&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tran&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2015&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;04&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;19&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;03&lt;/span&gt;   &lt;span class=&quot;nx&quot;&gt;Port&lt;/span&gt;         &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;80&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tran&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2015&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;04&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;19&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;03&lt;/span&gt;   &lt;span class=&quot;nx&quot;&gt;Path&lt;/span&gt;         &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;infosystems&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;apache&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;httpd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tran&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2015&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;04&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;19&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;03&lt;/span&gt;   &lt;span class=&quot;nx&quot;&gt;File&lt;/span&gt;         &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;httpd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2.4.12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;gz&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tran&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2015&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;04&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;19&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;03&lt;/span&gt;   &lt;span class=&quot;nx&quot;&gt;GetRange&lt;/span&gt;     &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1048&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;byte&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tran&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2015&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;04&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;19&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;03&lt;/span&gt;   &lt;span class=&quot;nx&quot;&gt;Interval&lt;/span&gt;     &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sec&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tran&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2015&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;04&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;19&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;03&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Read&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setting&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;mf&quot;&gt;9.03&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;KB&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;6.54&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;MB&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&amp;gt;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;---------------------------------------&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.13&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;11.86&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;MB&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;yukkuri&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;downloader&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1048000&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tran&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2015&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;04&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;19&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Initialize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tran&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2015&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;04&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;19&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Read&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setting&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;home&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;kk_Ataka&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tran&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;json&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tran&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2015&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;04&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;19&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;   &lt;span class=&quot;nx&quot;&gt;Override&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getRange&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ARGS&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tran&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2015&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;04&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;19&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;   &lt;span class=&quot;nx&quot;&gt;Override&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;interval&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ARGS&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tran&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2015&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;04&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;19&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;CLEAR&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;system&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;proxy&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;HTTP_PROXY&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;HTTPS_PROXY&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tran&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2015&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;04&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;19&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;   &lt;span class=&quot;nx&quot;&gt;HTTP_PROXY&lt;/span&gt;   &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tran&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2015&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;04&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;19&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;   &lt;span class=&quot;nx&quot;&gt;HTTPS_PROXY&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tran&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2015&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;04&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;19&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;   &lt;span class=&quot;nx&quot;&gt;Url&lt;/span&gt;          &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//ftp.kddilabs.jp:80/infosystems/apache/httpd/httpd-2.4.12.tar.gz&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tran&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2015&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;04&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;19&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;   &lt;span class=&quot;nx&quot;&gt;Scheme&lt;/span&gt;       &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;http&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tran&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2015&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;04&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;19&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;   &lt;span class=&quot;nx&quot;&gt;Host&lt;/span&gt;         &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ftp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;kddilabs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;jp&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tran&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2015&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;04&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;19&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;   &lt;span class=&quot;nx&quot;&gt;Port&lt;/span&gt;         &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;80&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tran&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2015&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;04&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;19&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;   &lt;span class=&quot;nx&quot;&gt;Path&lt;/span&gt;         &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;infosystems&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;apache&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;httpd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tran&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2015&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;04&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;19&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;   &lt;span class=&quot;nx&quot;&gt;File&lt;/span&gt;         &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;httpd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2.4.12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;gz&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tran&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2015&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;04&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;19&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;   &lt;span class=&quot;nx&quot;&gt;GetRange&lt;/span&gt;     &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1048000&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;byte&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tran&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2015&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;04&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;19&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;   &lt;span class=&quot;nx&quot;&gt;Interval&lt;/span&gt;     &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sec&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tran&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2015&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;04&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;19&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Read&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setting&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;mf&quot;&gt;2.01&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;MB&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;6.54&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;MB&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==========&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;---------------------------&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;30.72&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;12.27&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;MB&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;こんな感じ。&lt;/p&gt;

&lt;p&gt;まだ文法とかお作法とかは全然わかってない。&lt;/p&gt;

&lt;p&gt;テストライブラリも標準で付いているようなので、そっちも調べてみたい。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Jekyllがデフォルトでは外部から繋がらなくなってたよ</title>
   <link href="http://gosyujin.github.io/2015/03/14/jekyll-changed-bindaddress"/>
   <updated>2015-03-14T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2015/03/14/jekyll-changed-bindaddress</id>
   <content type="html">&lt;h2 id=&quot;あらすじ&quot;&gt;あらすじ&lt;/h2&gt;

&lt;p&gt;しばらく触っていなかったJekyllをアップデートしたときに他のPCからアクセスできなくてちょっとハマった。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://qiita.com/u1_fukui/items/b86b21f6ed39f4c10d5d&quot;&gt;Ruby - Sinatraがデフォルトでは外部から繋がらなくなってたよ - Qiita&lt;/a&gt; (タイトルはリスペクト)&lt;/p&gt;

&lt;h2 id=&quot;解決策-暫定&quot;&gt;解決策(暫定)&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;_config.yml&lt;/code&gt;に&lt;code&gt;host: 0.0.0.0&lt;/code&gt;を定義するか、起動時に&lt;code&gt;--host 0.0.0.0&lt;/code&gt;オプションを指定すればいいんだけどそれがもっともよいんだろうか。&lt;/p&gt;

&lt;p&gt;常時あげっぱなしにはしないんだけど、どうしても一瞬別のPCで起動してそこに向けて(ローカルからだったり外からだったり)アタックしたい時があるので困っていた。&lt;/p&gt;

&lt;h2 id=&quot;環境&quot;&gt;環境&lt;/h2&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; bundle show
&lt;span class=&quot;go&quot;&gt;Gems included by the bundle:&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  * RedCloth (4.2.9)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  * blankslate (2.1.2.4)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  * bundler (1.6.1)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  * celluloid (0.15.2)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  * classifier (1.3.4)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  * coffee-script (2.3.0)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  * coffee-script-source (1.7.1)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  * colorator (0.1)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  * execjs (2.2.1)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  * fast-stemmer (1.0.2)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  * ffi (1.9.3)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  * hparser (0.4.0 dc35f05)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  * jekyll (2.1.1)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  * jekyll-coffeescript (1.0.0)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  * jekyll-gist (1.1.0)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  * jekyll-paginate (1.0.0)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  * jekyll-sass-conver.6.0)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  * rake (10.3.2)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  * rb-fsevent (0.9.4)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  * rb-inotify (0.9.5)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  * redcarpet (3.1.2)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  * ref (1.0.5)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  * safe_yaml (1.0.3)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  * sass (3.3.11)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  * therubyracer (0.12.1)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  * timers (1.1.0)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  * toml (0.1.1)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  * yajl-ruby (1.1.0)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;bundle update&lt;/code&gt;は成功した。2.5.3まであがった。&lt;/p&gt;

&lt;h2 id=&quot;困った&quot;&gt;困った&lt;/h2&gt;

&lt;p&gt;で、起動すると色々warningはあるものの一応成功はするのだが、BindAddressがいきなり変わってて外部からアクセスできなくなってた。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;jekyll serve&lt;/code&gt;時の起動ログでアドレスが確認できる。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Jekyll 2.4.0(ちょうど別環境で動くやつがあった)&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;go&quot;&gt;Server address: http://127.0.0.1:4000/&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;Jekyll 2.5.3&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;go&quot;&gt;Server address: http://0.0.0.0:4000/&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;調査&quot;&gt;調査&lt;/h2&gt;

&lt;p&gt;とりあえず&lt;code&gt;jekyll-x.x.x/lib/jekyll/commands/serve.rb&lt;/code&gt;を探る。&lt;/p&gt;

&lt;p&gt;この辺でBindAddressにconfig[&amp;#39;host&amp;#39;]を入れてて、この初期(？)値が変わってる。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;webrick_options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;opts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;:BindAddress&lt;/span&gt;        &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;host&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;:DirectoryIndex&lt;/span&gt;     &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;%w(index.html index.htm index.cgi index.rhtml index.xml)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;:DocumentRoot&lt;/span&gt;       &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;destination&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;:DoNotReverseLookup&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;:MimeTypes&lt;/span&gt;          &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mime_types&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;:Port&lt;/span&gt;               &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;port&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;:StartCallback&lt;/span&gt;      &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;start_callback&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;detach&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;configってどこで初期化されてるんだっけ〜 -&amp;gt; &lt;code&gt;jekyll-x.x.x/lib/jekyll/configuration.rb&lt;/code&gt;だった！&lt;/p&gt;

&lt;p&gt;blameしていつ変更が入ったのか調べてみると、2014年の11月だった。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;go&quot;&gt;commit a16dfef8403921aa08c95839a81b00134dbe12bd&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Author: Alfred Xing &amp;lt;alfredxing@users.noreply.github.com&amp;gt;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Date:   Sun Nov 2 15:31:23 2014 -0800&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;    Use 127.0.0.1 as host instead of 0.0.0.0&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;diff --git a/lib/jekyll/configuration.rb b/lib/jekyll/configuration.rb&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;index 8a1d732..7f1148a 100644&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;--- a/lib/jekyll/configuration.rb&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+++ b/lib/jekyll/configuration.rb&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;@@ -42,7    =&amp;gt; &amp;#39;&amp;#39;,&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;       # Backwards-compatibility options&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>rubyXLを使ってExcelを操作したい</title>
   <link href="http://gosyujin.github.io/2015/02/28/excel-by-ruby"/>
   <updated>2015-02-28T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2015/02/28/excel-by-ruby</id>
   <content type="html">&lt;h2 id=&quot;あらすじ&quot;&gt;あらすじ&lt;/h2&gt;

&lt;p&gt;ExcelファイルをRubyで操作したい。&lt;/p&gt;

&lt;p&gt;以前WIN32OLEから直接触ってみたけど、ライブラリを使って簡単に触ってみたい。&lt;/p&gt;

&lt;h2 id=&quot;環境&quot;&gt;環境&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Windows 7&lt;/li&gt;
&lt;li&gt;Ruby 2.1.5

&lt;ul&gt;
&lt;li&gt;rubyXL 3.3.4&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Microsoft Office 2010&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;参考&quot;&gt;参考&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://qiita.com/Kta-M/items/02a2c41c5624f75498aa&quot;&gt;Ruby - RailsでExcelを扱うGemまとめ - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://qiita.com/damassima/items/1b791ba90459ef0534fe&quot;&gt;RubyでExcelファイルを扱うライブラリの比較 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://qiita.com/satoken0417/items/bf302cc47e9bd69aaa73&quot;&gt;[Ruby]RubyでExcelをつかう[Rails] - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://futurismo.biz/archives/2330&quot;&gt;RubyからExcelを操作する方法について ｜ Futurismo&lt;/a&gt; ※WIN32OLE使用&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;意外とある。&lt;/p&gt;

&lt;p&gt;が、開きたいファイル、保存したいファイルが何なのか(xlsなのかxlsxなのか)によって使うライブラリを選定する必要あり。&lt;/p&gt;

&lt;p&gt;xlsx読めない！とかxlsで書きこめない！とかある。&lt;/p&gt;

&lt;h2 id=&quot;やりたいこと&quot;&gt;やりたいこと&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;共有サーバの中にあるExcelファイルを開く&lt;/li&gt;
&lt;li&gt;特定のセル(B3みたいな)に値が入っているか確認する

&lt;ul&gt;
&lt;li&gt;入っていれば次の処理へ&lt;/li&gt;
&lt;li&gt;入っていなければn個下のセル(B6みたいな)に値が入っているか確認する…の繰り返し&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;空いているセルに値を挿入&lt;/li&gt;
&lt;li&gt;保存して終わり&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;よくありがちな「定期的に台帳の一番下に定型文を挿入したい」系の話。&lt;/p&gt;

&lt;h2 id=&quot;ソース&quot;&gt;ソース&lt;/h2&gt;

&lt;p&gt;Gistにあげた。&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/gosyujin/57a40e47ca0bc57673a2.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;今回はrubyXLというライブラリを使ってみた。&lt;/p&gt;

&lt;p&gt;わりと簡単に書けて、やりたいこと(開く、値読む、値書く、保存する)がすぐできたのでこれで。&lt;/p&gt;

&lt;p&gt;これで便利。(^ー^)&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>2014年kpt</title>
   <link href="http://gosyujin.github.io/2015/01/25/kpt-2014"/>
   <updated>2015-01-25T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2015/01/25/kpt-2014</id>
   <content type="html">&lt;p&gt;もう1月終わっちゃうよ！&lt;/p&gt;

&lt;h2 id=&quot;今年学んだこと&quot;&gt;今年学んだこと&lt;/h2&gt;

&lt;p&gt;今年はなんかあんまり学んでないような…。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Ruby

&lt;ul&gt;
&lt;li&gt;Kawasaki.rbに顔を出すようになった&lt;/li&gt;
&lt;li&gt;初LT、初発表、いろいろ。良い環境です(会場も)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Jekyll

&lt;ul&gt;
&lt;li&gt;勢いでドキュメントを翻訳してみた&lt;/li&gt;
&lt;li&gt;継続するのが難しい！だからいろいろ簡略化しようね！って結論を出したにも関わらず、最近滞っているので2015年はなんとかしなくては；；；&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Sphinx

&lt;ul&gt;
&lt;li&gt;8月くらいにタイミング、規模、人員ふくめて奇跡的に導入できそうなプロジェクトに遭遇したので、勢いで導入したら(プレーンテキストでドキュメントしあげるのが)すげーよかった&lt;/li&gt;
&lt;li&gt;その経験を10月にSphinxCon JP 2014で発表させてもらった&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Ansible

&lt;ul&gt;
&lt;li&gt;上記のSphinx導入したプロジェクトで小さく運用してみた&lt;/li&gt;
&lt;li&gt;その辺をまとめてスライド作って発表した(Kawasaki.rb、他)&lt;/li&gt;
&lt;li&gt;今年のAdvent Calendarはその発表をまとめたものを公開した&lt;/li&gt;
&lt;li&gt;ホッテントリ入りした&lt;/li&gt;
&lt;li&gt;ギリギリ2年連続入れてうれしい&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;LT初め、ガチ発表初め、GitHubでプルリクエスト飛ばし初めで、初めていろいろ。&lt;/p&gt;

&lt;p&gt;ブログの記事も「これ、どうやるといいのかな～」的なポエムが多かった。(いいかわるいかはさておき)&lt;/p&gt;

&lt;h2 id=&quot;keep&quot;&gt;Keep&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;作ったものたちは育ってる(いや、なにもいじらずに現状維持)

&lt;ul&gt;
&lt;li&gt;勤怠入力とかメンドクサイ処理は Jenkins + Selenium で自動化して祝 2 周年&lt;/li&gt;
&lt;li&gt;今年は残業申請(Excel)の提出も自動化した&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;problem&quot;&gt;Problem&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;新しいものに触れなかったなあ…気になってるけどまださわってもいないやつ

&lt;ul&gt;
&lt;li&gt;golang&lt;/li&gt;
&lt;li&gt;docker&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;書くのは自由！&lt;/p&gt;

&lt;h2 id=&quot;try&quot;&gt;Try&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;翻訳

&lt;ul&gt;
&lt;li&gt;Jekyll追いつくのもだけど、Pro Gitとか他の翻訳文化圏にも…&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;なんか調べて、なんか発表

&lt;ul&gt;
&lt;li&gt;また発表できるとよい&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;社内布教活動

&lt;ul&gt;
&lt;li&gt;Sphinxは難しそうだけど、Ansibleは少しいけそうな感触が… &lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Ansibleを使ったことない人に、ゆるくAnsibleを紹介してみた</title>
   <link href="http://gosyujin.github.io/2014/12/23/kawasakirb-019"/>
   <updated>2014-12-23T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2014/12/23/kawasakirb-019</id>
   <content type="html">&lt;h2 id=&quot;はじめに&quot;&gt;はじめに&lt;/h2&gt;

&lt;p&gt;この記事は&lt;a href=&quot;http://qiita.com/advent-calendar/2014/ansible&quot;&gt;Ansible Advent Calendar&lt;/a&gt;の23日目の記事です。&lt;/p&gt;

&lt;p&gt;今回は、Ansible(というか構成管理ツール全般)を知らない人向けにゆるくAnsibleを紹介してみたので、報告します。&lt;/p&gt;

&lt;p&gt;12/17のKawasaki.rb+αでの発表です。&lt;/p&gt;

&lt;h3 id=&quot;発表者の構成管理ツール歴&quot;&gt;発表者の構成管理ツール歴&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Ansible

&lt;ul&gt;
&lt;li&gt;軽く2, 3回Playbookを作った程度&lt;/li&gt;
&lt;li&gt;大勢にバラまくのはやったことない(2台くらい)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Chef

&lt;ul&gt;
&lt;li&gt;Chef系の本を買っていろいろ試したことはある&lt;/li&gt;
&lt;li&gt;けど、小さい規模で使うにはオーバースペック感、縛りがきつい環境で使うには政治が必要で、けっこうくじけた&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://yuuki.hatenablog.com/entry/2013/08/13/220330&quot;&gt;Chefがつらい人のためのAnsibleのはなし - ゆううきブログ&lt;/a&gt; もうちょっとシンプルに行けそう&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;聴講者の構成管理ツール歴&quot;&gt;聴講者の構成管理ツール歴&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;初見の人&lt;/li&gt;
&lt;li&gt;Chef使ったことある(聞いたことある)人&lt;/li&gt;
&lt;li&gt;Ansible使ったことある(聞いたことある)人&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;上から順に多かった。つまりChefはちょこっと知られてたけどそれ以外の人にはあんまりしられていない。&lt;/p&gt;

&lt;p&gt;Ansibleはさらに知名度が低かった。(Chefを知ってる人に、どこでChefを知ったのかを聞くのは忘れた)&lt;/p&gt;

&lt;h2 id=&quot;スライド&quot;&gt;スライド&lt;/h2&gt;

&lt;iframe src=&quot;//www.slideshare.net/slideshow/embed_code/42950220&quot; width=&quot;476&quot; height=&quot;400&quot; frameborder=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot;&gt;&lt;/iframe&gt;

&lt;h3 id=&quot;雑感&quot;&gt;雑感&lt;/h3&gt;

&lt;p&gt;けっこうゆるふわな感じでまとめたのだけど、今まで手動(+シェルスクリプト)でやってた人からすると以下の点に関して好感触が得られたみたい。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;べきとう性を意識しなくてイイネという話

&lt;ul&gt;
&lt;li&gt;設定ファイルへの記述追加、サービスの制御などおまかせできる点で&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;SSHが通るだけでOK(とPython2.4-)でイイネという話&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;また、Ansible使ったことある人の使用事例として、「毎日テストをする時間だけ起動しておきたいプロセスをPlaybookで用意して、時間になったら数十台のサーバに対して一気に送る」とかいう用途に使われている話も。&lt;/p&gt;

&lt;p&gt;確かにこれも構成管理だよね。この発想はなかった。&lt;/p&gt;

&lt;h2 id=&quot;これから&quot;&gt;これから&lt;/h2&gt;

&lt;p&gt;感触はよかったので、もうちょっとAnsibleを広めてみたい。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/r7kamura/jdoc&quot;&gt;JDoc&lt;/a&gt;みたいな感じで、playbookからドキュメント生成できるツールってないんだろうか…。(調査不足？)&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>kawasaki.rb #018 でJekyllドキュメント翻訳のLTをしてきた</title>
   <link href="http://gosyujin.github.io/2014/11/30/kawsakirb-018"/>
   <updated>2014-11-30T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2014/11/30/kawsakirb-018</id>
   <content type="html">&lt;h2 id=&quot;あらすじ&quot;&gt;あらすじ&lt;/h2&gt;

&lt;p&gt;kawasaki.rb #018 でTokyuRuby会議08のLTの素振りをしたんだけど、都合によりTokyu本番で発表できなかったため、素振りが最終形になってしまった。&lt;/p&gt;

&lt;h2 id=&quot;発表内容&quot;&gt;発表内容&lt;/h2&gt;

&lt;p&gt;&lt;iframe src=&quot;//www.slideshare.net/slideshow/embed_code/42176075&quot; width=&quot;425&quot; height=&quot;355&quot; frameborder=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; style=&quot;border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;&quot; allowfullscreen&gt; &lt;/iframe&gt; &lt;div style=&quot;margin-bottom:5px&quot;&gt; &lt;strong&gt; &lt;a href=&quot;//www.slideshare.net/kk_Ataka/jekyll-42176075&quot; title=&quot;Jekyllドキュメント翻訳活動振り返り&quot; target=&quot;_blank&quot;&gt;Jekyllドキュメント翻訳活動振り返り&lt;/a&gt; &lt;/strong&gt; from &lt;strong&gt;&lt;a href=&quot;//www.slideshare.net/kk_Ataka&quot; target=&quot;_blank&quot;&gt;kk_Ataka&lt;/a&gt;&lt;/strong&gt; &lt;/div&gt;&lt;/p&gt;

&lt;p&gt;本家の更新についていくのがめんどくさいよねという事で、そこをどうするかについてまとめました。&lt;/p&gt;

&lt;p&gt;が、5分におさめるのは難しい…。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>SphinxCon JP 2014 で発表してきました #sphinxjp</title>
   <link href="http://gosyujin.github.io/2014/10/27/sphinxconjp-2014"/>
   <updated>2014-10-27T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2014/10/27/sphinxconjp-2014</id>
   <content type="html">&lt;h2 id=&quot;あらすじ&quot;&gt;あらすじ&lt;/h2&gt;

&lt;p&gt;ここしばらくいろいろSphinx関連であがいていた成果をSphinxCon JP 2014で発表してきましたよ。&lt;/p&gt;

&lt;p&gt;自分視点からの感想。&lt;/p&gt;

&lt;h2 id=&quot;概要&quot;&gt;概要&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://sphinxjp.connpass.com/event/8448/&quot;&gt;SphinxCon JP 2014 - connpass&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;資料のところから発表者の人の資料も全部確認できるよ。&lt;/p&gt;

&lt;p&gt;発表内容は以下の通り。見よこのメンバー。ガチだよ！&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Welcome to Sphinx-1.3 (清水川)&lt;/li&gt;
&lt;li&gt;SIerでもSphinxを使いたい！総括 (kk_Ataka)&lt;/li&gt;
&lt;li&gt;SphinxとLaTeXで作る英文マニュアル (力武 健次)&lt;/li&gt;
&lt;li&gt;Markdownもはじめよう (高橋征義)&lt;/li&gt;
&lt;li&gt;Sphinx拡張 探訪 2014 (小宮 健 (@tk0miya))&lt;/li&gt;
&lt;li&gt;検索エンジンOktavia (渋川よしき)&lt;/li&gt;
&lt;li&gt;Sphinx HTML Theme Hacks (shkumagai)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;(connpassより抜粋 / 敬称略)&lt;/p&gt;

&lt;h2 id=&quot;自分のスライド&quot;&gt;自分のスライド&lt;/h2&gt;

&lt;p&gt;&lt;iframe src=&quot;//www.slideshare.net/slideshow/embed_code/40723958&quot; width=&quot;425&quot; height=&quot;355&quot; frameborder=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; style=&quot;border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;&quot; allowfullscreen&gt; &lt;/iframe&gt; &lt;div style=&quot;margin-bottom:5px&quot;&gt; &lt;strong&gt; &lt;a href=&quot;//www.slideshare.net/kk_Ataka/20141026-sphinx-forsiersummarysiersphinx&quot; title=&quot;SIerでもSphinxを使いたい！総括&quot; target=&quot;_blank&quot;&gt;SIerでもSphinxを使いたい！総括&lt;/a&gt; &lt;/strong&gt; from &lt;strong&gt;&lt;a href=&quot;//www.slideshare.net/kk_Ataka&quot; target=&quot;_blank&quot;&gt;kk_Ataka&lt;/a&gt;&lt;/strong&gt; &lt;/div&gt;&lt;/p&gt;

&lt;h3 id=&quot;感想&quot;&gt;感想&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;さすがに40人近くいる会場だと大緊張&lt;/li&gt;
&lt;li&gt;あんまり定量的な評価ではないので、そのあたりを期待されていたらごめんなさい&lt;/li&gt;
&lt;li&gt;一応、SIer(元を含む)でSphinx導入に挑戦した方からは「あるあるですねー」という感想をいただけた&lt;/li&gt;
&lt;li&gt;気になることがあったら適当にリプライとかください&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;懇親会、ビアバッシュ&quot;&gt;懇親会、ビアバッシュ&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;渋川さんに会えた

&lt;ul&gt;
&lt;li&gt;Jekyllドキュメントの翻訳ってどーすればいいのかなーと困っている時に、 &lt;a href=&quot;http://blog.shibu.jp/article/30577636.html&quot;&gt;Shibu&amp;#39;s Diary: エンジニアは翻訳をやるとお得&lt;/a&gt; に出会って自分の中にあるもやを解消してくれたすごい人&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://connpass.com/event/6724/&quot;&gt;版管理+自動組版 - connpass&lt;/a&gt; @tk0miya さんより&lt;/li&gt;
&lt;li&gt;SphinxCon(Python)でJekyll(Ruby)のLTの練習した(TokyuRubyKaigi08用)&lt;/li&gt;
&lt;li&gt;VOYAGE GROUPさんありがとうございました&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>WEB+DB PRESS vol.82を参考にHubotと戯れてみた</title>
   <link href="http://gosyujin.github.io/2014/09/24/hubot-helloworld"/>
   <updated>2014-09-24T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2014/09/24/hubot-helloworld</id>
   <content type="html">&lt;h2 id=&quot;あらすじ&quot;&gt;あらすじ&lt;/h2&gt;

&lt;p&gt;最近よくHubotという単語を聞くのでちょっといじってみたかったが、要素技術的に普段全然使わないものが多くてけっこう敷居が高かった。&lt;/p&gt;

&lt;p&gt;そんな折、WEB+DB PRESS vol.82にちょうどHubot特集が掲載されていたのでこれ幸いと読み進めてみた。&lt;/p&gt;

&lt;p&gt;というわけで、以下の内容は「Hubotの環境を整えてHerokuにデプロイ、idobataに常駐させる」ところまでの作業備忘録。&lt;/p&gt;

&lt;p&gt;idobataに云々以外の詳しい説明はWEB+DB PRESSのほうがくわしいよ。&lt;/p&gt;

&lt;h2 id=&quot;環境構築&quot;&gt;環境構築&lt;/h2&gt;

&lt;p&gt;node.jsとnpm(Node Package Manager)をインストールする。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; sudo yum install nodejs npm
&lt;span class=&quot;go&quot;&gt;(略)&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; node -v 
&lt;span class=&quot;go&quot;&gt;v0.10.29&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; npm -v
&lt;span class=&quot;go&quot;&gt;1.3.6&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;npmでhubotとcoffee-scriptをインストールする。&lt;/p&gt;

&lt;p&gt;オプションの-gはグローバルなパスにインストール。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; sudo npm install -g hubot coffee-script
&lt;span class=&quot;go&quot;&gt;(略)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;/usr/bin/hubot -&amp;gt; /usr/lib/node_modules/hubot/bin/hubot&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;coffee-script@1.8.0 /usr/lib/node_modules/coffee-script&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;└── mkdirp@0.3.5&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;hubot@2.8.1 /usr/lib/node_modules/hubot&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;├── optparse@1.0.4&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;├── log@1.4.0&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;├── scoped-http-client@0.9.8&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;├── coffee-script@1.6.3&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;└── express@3.3.4 (methods@0.0.1, fresh@0.1.0, cookie-signature@1.0.1, range-parser@0.0.4, buffer-crc32@0.2.1, cookie@0.1.0, mkdirp@0.3.5, debug@2.0.0, commander@1.2.0, send@0.1.3, connect@2.8.4)&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; hubot -v
&lt;span class=&quot;go&quot;&gt;2.8.1&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; coffee -v
&lt;span class=&quot;go&quot;&gt;CoffeeScript version 1.8.0&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;bot初期化&quot;&gt;bot初期化&lt;/h2&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; hubot --create webhubot
&lt;span class=&quot;go&quot;&gt;Creating a hubot install at webhubot&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Copying /usr/lib/node_modules/hubot/src/scripts/events.coffee -&amp;gt; /home/test/webhubot/scripts/events.coffee&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Copying /usr/lib/node_modules/hubot/src/scripts/google-images.coffee -&amp;gt; /home/test/webhubot/scripts/google-images.coffee&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Copying /usr/lib/node_modules/hubot/src/scripts/help.coffee -&amp;gt; /home/test/webhubot/scripts/help.coffee&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Copying /usr/lib/node_modules/hubot/src/scripts/httpd.coffee -&amp;gt; /home/test/webhubot/scripts/httpd.coffee&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Copying /usr/lib/node_modules/hubot/src/scripts/maps.coffee -&amp;gt; /home/test/webhubot/scripts/maps.coffee&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Copying /usr/lib/node_modules/hubot/src/scripts/ping.coffee -&amp;gt; /home/test/webhubot/scripts/ping.coffee&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Copying /usr/lib/node_modules/hubot/src/scripts/roles.coffee -&amp;gt; /home/test/webhubot/scripts/roles.coffee&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Copying /usr/lib/node_modules/hubot/src/scripts/pugme.coffee -&amp;gt; /home/test/webhubot/scripts/pugme.coffee&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Copying /usr/lib/node_modules/hubot/src/scripts/rules.coffee -&amp;gt; /home/test/webhubot/scripts/rules.coffee&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Copying /usr/lib/node_modules/hubot/src/scripts/translate.coffee -&amp;gt; /home/test/webhubot/scripts/translate.coffee&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Copying /usr/lib/node_modules/hubot/src/scripts/youtube.coffee -&amp;gt; /home/test/webhubot/scripts/youtube.coffee&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Copying /usr/lib/node_modules/hubot/src/scripts/storage.coffee -&amp;gt; /home/test/webhubot/scripts/storage.coffee&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Copying /usr/lib/node_modules/hubot/src/templates/Procfile -&amp;gt; /home/test/webhubot/Procfile&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Copying /usr/lib/node_modules/hubot/src/templates/package.json -&amp;gt; /home/test/webhubot/package.json&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Copying /usr/lib/node_modules/hubot/src/templates/README.md -&amp;gt; /home/test/webhubot/README.md&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Copying /usr/lib/node_modules/hubot/src/templates/gitignore -&amp;gt; /home/test/webhubot/gitignore&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Copying /usr/lib/node_modules/hubot/src/templates/hubot-scripts.json -&amp;gt; /home/test/webhubot/hubot-scripts.json&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Copying /usr/lib/node_modules/hubot/src/templates/external-scripts.json -&amp;gt; /home/test/webhubot/external-scripts.json&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Copying /usr/lib/node_modules/hubot/src/templates/bin/hubot -&amp;gt; /home/test/webhubot/bin/hubot&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Copying /usr/lib/node_modules/hubot/src/templates/bin/hubot.cmd -&amp;gt; /home/test/webhubot/bin/hubot.cmd&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Renaming /home/test/webhubot/gitignore -&amp;gt; /home/test/webhubot/.gitignore&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;hubotコマンドを実行するとエラーが出たけどRedisが入ってないよエラーという事なので、とりあえず問題なさげ。
今のところ永続的なデータは使わない。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;webhubot/
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; bin/hubot
&lt;span class=&quot;go&quot;&gt;hubot-scripts@2.5.15 node_modules/hubot-scripts&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;└── redis@0.8.4&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;hubot@2.8.1 node_modules/hubot&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;├── optparse@1.0.4&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;├── log@1.4.0&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;├── scoped-http-client@0.9.8&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;├── coffee-script@1.6.3&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;└── express@3.3.4 (methods@0.0.1, fresh@0.1.0, range-parser@0.0.4, cookie-signature@1.0.1, buffer-crc32@0.2.1, cookie@0.1.0, mkdirp@0.3.5, debug@2.0.0, commander@1.2.0, send@0.1.3, connect@2.8.4)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Hubot&amp;gt; [Mon Sep 01 2014 17:22:26 GMT+0900 (JST)] ERROR Error: listen EADDRINUSE&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  at errnoException (net.js:904:11)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  at Server._listen2 (net.js:1042:14)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  at listen (net.js:1064:10)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  at net.js:1146:9&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  at dns.js:72:18&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  at process._tickCallback (node.js:419:13)&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;[Mon Sep 01 2014 17:22:26 GMT+0900 (JST)] ERROR [Error: Redis connection to localhost:6379 failed - connect ECONNREFUSED]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;hubotコマンドも実行できた。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;go&quot;&gt;Hubot&amp;gt; hubot translate me こんにちは&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Hubot&amp;gt; &amp;quot; こんにちは&amp;quot; is Japanese for &amp;quot; Hello &amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;スクリプト作成&quot;&gt;スクリプト作成&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;HUBOTROOT/scripts&lt;/code&gt;の下に&lt;code&gt;hello.coffee&lt;/code&gt;を作成する。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-coffeescript&quot; data-lang=&quot;coffeescript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cat&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;scripts&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;coffee&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;module.exports = &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;(robot) -&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;robot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;respond&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/hello (.+)/i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;(msg) -&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;send&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Hello &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;hubotを実行してみる。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;go&quot;&gt;Hubot&amp;gt; hubot hello ataka&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Hubot&amp;gt; Hello ataka&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Hubot&amp;gt; hubot hello kk_Ataka&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Hubot&amp;gt; Hello kk_Ataka&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;helloコマンドできた！&lt;/p&gt;

&lt;h2 id=&quot;公式リポジトリのスクリプトを使う&quot;&gt;公式リポジトリのスクリプトを使う&lt;/h2&gt;

&lt;p&gt;公式リポジトリのスクリプトはcreateした段階でnode_modulesディレクトリに格納される。&lt;/p&gt;

&lt;p&gt;これらを読み込むにはhubot-scripts.jsonに追記をする。今回はgithubのアクティビティを取得できるスクリプトgithub-activity.coffeeを追加してみる。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; cat hubot-scripts.json
&lt;span class=&quot;go&quot;&gt;[&amp;quot;shipit.coffee&amp;quot;, &amp;quot;github-activity.coffee&amp;quot;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;依存があるので、npmでインストールする。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-coffeescript&quot; data-lang=&quot;coffeescript&quot;&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# Dependencies:$&lt;/span&gt;
  &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#   &amp;quot;date-utils&amp;quot;: &amp;quot;&amp;gt;=1.2.5&amp;quot;$&lt;/span&gt;
  &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#   &amp;quot;githubot&amp;quot;: &amp;quot;0.4.x&amp;quot;$&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; npm install date-utils --save
&lt;span class=&quot;go&quot;&gt;npm http GET https://registry.npmjs.org/date-utils&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;npm http 200 https://registry.npmjs.org/date-utils&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;npm http GET https://registry.npmjs.org/date-utils/-/date-utils-1.2.16.tgz&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;npm http 200 https://registry.npmjs.org/date-utils/-/date-utils-1.2.16.tgz&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;date-utils@1.2.16 node_modules/date-utils&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; npm install githubot --save
&lt;span class=&quot;go&quot;&gt;npm http GET https://registry.npmjs.org/githubot&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;npm http 200 https://registry.npmjs.org/githubot&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;npm http GET https://registry.npmjs.org/githubot/-/githubot-1.0.0-beta2.tgz&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;npm http 200 https://registry.npmjs.org/githubot/-/githubot-1.0.0-beta2.tgz&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;npm http GET https://registry.npmjs.org/async&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;npm http GET https://registry.npmjs.org/scoped-http-client&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;npm http 200 https://registry.npmjs.org/async&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;npm http GET https://registry.npmjs.org/async/-/async-0.2.10.tgz&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;npm http 200 https://registry.npmjs.org/async/-/async-0.2.10.tgz&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;npm http 200 https://registry.npmjs.org/scoped-http-client&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;githubot@1.0.0-beta2 node_modules/githubot&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;├── scoped-http-client@0.9.8&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;└── async@0.2.10&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;hubot repo show&lt;/code&gt;でリポジトリ確認。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;go&quot;&gt;Hubot&amp;gt; hubot repo show jekyllrb-ja/jekyllrb-ja.github.io&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Hubot&amp;gt; https://github.com/jekyllrb-ja/jekyllrb-ja.github.io&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Hubot&amp;gt; [27/08 10:33 -&amp;gt; kk_Ataka] Merge pull request #263 from tmkoikee/update-index.md&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;index.md の本家への追従&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Hubot&amp;gt; [26/08 22:57 -&amp;gt; tomohiro koike] index.md の本家への追従&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Hubot&amp;gt; [26/08 10:17 -&amp;gt; kk_Ataka] Merge pull request #260 from tmkoikee/update-pagination-md&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;pagination.mdを本家に追従&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Hubot&amp;gt; [26/08 10:17 -&amp;gt; kk_Ataka] Merge pull request #261 from tmkoikee/update-migrations.md&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;migrations.md の本家への追従&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Hubot&amp;gt; [26/08 10:16 -&amp;gt; kk_Ataka] Merge pull request #262 from tmkoikee/update-installation.md&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;installation.mdを本家に追従&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;できた！&lt;/p&gt;

&lt;h2 id=&quot;idobataに登録&quot;&gt;idobataに登録&lt;/h2&gt;

&lt;p&gt;https://github.com/idobata/hubot-idobata#readme を参考に…。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; npm install hubot-idobata --save
&lt;span class=&quot;go&quot;&gt;(略)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;hubot-idobata@0.1.0 node_modules/hubot-idobata&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;├── pusher-client@0.2.2 (eventemitter2@0.4.14, underscore@1.7.0, ws@0.4.32)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;└── request@2.34.0 (json-stringify-safe@5.0.0, aws-sign2@0.5.0, forever-agent@0.5.2, tunnel-agent@0.3.0, qs@0.6.6, oauth-sign@0.3.0, node-uuid@1.4.1, mime@1.2.11, tough-cookie@0.12.1, form-data@0.1.4, hawk@1.0.0, http-signature@0.10.0)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;環境変数&lt;code&gt;HUBOT_IDOBATA_API_TOKEN&lt;/code&gt;にidobataのページから取得したトークンを格納し、hubotコマンド実行。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;HUBOT_IDOBATA_API_TOKEN&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;6c5360hogehoge...
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; bin/hubot --adapter idobata
&lt;span class=&quot;go&quot;&gt;Your bot on Idobata is named as &amp;#39;robo&amp;#39;.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;But this hubot is named as &amp;#39;Hubot&amp;#39;.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;To respond to mention correctly, it is recommended that HUBOT_NAME=robo is configured.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;ん、&lt;code&gt;HUBOT_NAME&lt;/code&gt;もidobataに登録したものにする？&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;HUBOT_NAME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;robo&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;herokuに登録&quot;&gt;herokuに登録&lt;/h2&gt;

&lt;p&gt;上記のままだと、セッション切ったらロボが死んじゃうのでherokuで永遠の命を与える。&lt;/p&gt;

&lt;p&gt;今度は https://github.com/idobata/hubot-idobata#deploying-to-heroku から https://github.com/github/hubot/blob/master/docs/deploying/heroku.md を参考に…。&lt;/p&gt;

&lt;p&gt;まずはheroku toolbeltをインストール(heroku Gemはこれに置き換わる模様)。PATHを通すのを忘れずに。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; wget -qO- https://toolbelt.heroku.com/install.sh &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; sh
&lt;span class=&quot;go&quot;&gt;This script requires superuser access to install software.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;You will be prompted for your password by sudo.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;[sudo] password for kk_Ataka:&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Add the Heroku CLI to your PATH using:&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;PATH=&amp;quot;/usr/local/heroku/bin:$PATH&amp;quot;&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; ~/.profile
&lt;span class=&quot;go&quot;&gt;Installation complete&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;(略 / PATH通し)&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; heroku version
&lt;span class=&quot;go&quot;&gt;heroku-toolbelt/3.10.5 (x86_64-linux) ruby/2.1.0&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;herokuコマンドが入った。ログインしよう。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; heroku login
&lt;span class=&quot;go&quot;&gt;Enter your Heroku credentials.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Email: メールアドレス&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Password (typing will be hidden):&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Authentication successful.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;はじめに作ったwebhubotディレクトリを登録しよう。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;webhubot/
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git add 必要なファイル
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git com &lt;span class=&quot;s1&quot;&gt;&amp;#39;First commit&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;herokuアプリケーションを作成。コマンドラインからもできるのか。
createコマンドでリネームすると、適当な名前がつくので好きな名前にリネーム。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; heroku create
&lt;span class=&quot;go&quot;&gt;Creating young-refuge-9975... done, stack is cedar&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;http://young-refuge-9975.herokuapp.com/ | git@heroku.com:young-refuge-9975.git&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Git remote heroku added&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; heroku apps:rename webhubot
&lt;span class=&quot;go&quot;&gt;Renaming young-refuge-9975 to webhubot... done&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;http://webhubot.herokuapp.com/ | git@heroku.com:webhubot.git&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Git remote heroku updated&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;create, renameした段階でgit remote herokuが登録されている模様。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git remote -v
&lt;span class=&quot;go&quot;&gt;heroku  git@heroku.com:webhubot.git (fetch)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;heroku  git@heroku.com:webhubot.git (push)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;https://github.com/idobata/hubot-idobata#deploying-to-heroku の2に戻りhubotとidobataの連携を登録。
APIトークンとNAME。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; heroku config:set &lt;span class=&quot;nv&quot;&gt;HUBOT_IDOBATA_API_TOKEN&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;6c536hogehoge
&lt;span class=&quot;go&quot;&gt;Setting config vars and restarting webhubot... done, v3&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;HUBOT_IDOBATA_API_TOKEN: 6c53600hogehoge&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; heroku config:set &lt;span class=&quot;nv&quot;&gt;HUBOT_NAME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;robo
&lt;span class=&quot;go&quot;&gt;Setting config vars and restarting webhubot... done, v4&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;HUBOT_NAME: robo&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Procfileのコマンドを変更。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;go&quot;&gt;web: bin/hubot -a idobata&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Gitコミットしてherokuにpush&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git add Procfile
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git com &lt;span class=&quot;s2&quot;&gt;&amp;quot;Mod Procfile&amp;#39;s using adapter&amp;quot;&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git push heroku master
&lt;span class=&quot;go&quot;&gt;Initializing repository, done.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Counting objects: 28, done.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Delta compression using up to 2 threads.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Compressing objects: 100% (23/23), done.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Writing objects: 100% (28/28), 11.20 KiB, done.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Total 28 (delta 2), reused 0 (delta 0)&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;-----&amp;gt; Node.js app detected&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;       PRO TIP: Avoid using semver ranges starting with &amp;#39;&amp;gt;&amp;#39; in engines.node&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;       See https://devcenter.heroku.com/articles/nodejs-support&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;-----&amp;gt; Requested node range:  &amp;gt;= 0.8.x&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-----&amp;gt; Resolved node version: 0.10.31&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-----&amp;gt; Downloading and installing node&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-----&amp;gt; Exporting config vars to environment&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-----&amp;gt; Installing dependencies&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;       &amp;gt; ws@0.4.32 install /tmp/build_74b7efb5-41da-4761-92c4-2a5ed07865d9/node_modules/hubot-idobata/node_modules/pusher-client/node_modules/ws&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;       &amp;gt; (node-gyp rebuild 2&amp;gt; builderror.log) || (exit 0)&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;       make: Entering directory `/tmp/build_74b7efb5-41da-4761-92c4-2a5ed07865d9/node_modules/hubot-idobata/node_modules/pusher-client/node_modules/ws/build&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;         CXX(target) Release/obj.target/bufferutil/src/bufferutil.o&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;         SOLINK_MODULE(target) Release/obj.target/bufferutil.node&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;         SOLINK_MODULE(target) Release/obj.target/bufferutil.node: Finished&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;         COPY Release/bufferutil.node&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;         CXX(target) Release/obj.target/validation/src/validation.o&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;         SOLINK_MODULE(target) Release/obj.target/validation.node&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;         SOLINK_MODULE(target) Release/obj.target/validation.node: Finished&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;         COPY Release/validation.node&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;       make: Leaving directory `/tmp/build_74b7efb5-41da-4761-92c4-2a5ed07865d9/node_modules/hubot-idobata/node_modules/pusher-client/node_modules/ws/build&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;       date-utils@1.2.16 node_modules/date-utils&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;       githubot@1.0.0-beta2 node_modules/githubot&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;       ├── scoped-http-client@0.9.8&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;       └── async@0.2.10&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;       hubot@2.8.1 node_modules/hubot&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;       ├── optparse@1.0.4&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;       ├── log@1.4.0&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;       ├── scoped-http-client@0.9.8&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;       ├── coffee-script@1.6.3&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;       └── express@3.3.4 (methods@0.0.1, fresh@0.1.0, range-parser@0.0.4, cookie-signature@1.0.1, buffer-crc32@0.2.1, cookie@0.1.0, mkdirp@0.3.5, commander@1.2.0, debug@2.0.0, send@0.1.3, connect@2.8.4)&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;       hubot-scripts@2.5.15 node_modules/hubot-scripts&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;       └── redis@0.8.4&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;       hubot-idobata@0.1.0 node_modules/hubot-idobata&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;       ├── request@2.34.0 (json-stringify-safe@5.0.0, forever-agent@0.5.2, qs@0.6.6, aws-sign2@0.5.0, tunnel-agent@0.3.0, oauth-sign@0.3.0, node-uuid@1.4.1,&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;mime@1.2.11, form-data@0.1.4, tough-cookie@0.12.1, http-signature@0.10.0, hawk@1.0.0)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;       └── pusher-client@0.2.2 (eventemitter2@0.4.14, underscore@1.7.0, ws@0.4.32)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-----&amp;gt; Caching node_modules directory for future builds&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-----&amp;gt; Cleaning up node-gyp and npm artifacts&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-----&amp;gt; Building runtime environment&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-----&amp;gt; Discovering process types&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;       Procfile declares types -&amp;gt; web&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;-----&amp;gt; Compressing... done, 6.9MB&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-----&amp;gt; Launching... done, v5&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;       http://webhubot.herokuapp.com/ deployed to Heroku&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;To git@heroku.com:webhubot.git&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; * [new branch]      master -&amp;gt; master&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;これで、heroku上でロボが生きはじめた。&lt;/p&gt;

&lt;h2 id=&quot;永遠の命&quot;&gt;永遠の命&lt;/h2&gt;

&lt;p&gt;herokuの変数&lt;code&gt;HEROKU_URL&lt;/code&gt;に今回createしたアプリのURL &lt;code&gt;http://webhubot.herokuapp.com/&lt;/code&gt; を登録する。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; heroku config:set &lt;span class=&quot;nv&quot;&gt;HEROKU_URL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;http://webhubot.herokuapp.com
&lt;span class=&quot;go&quot;&gt;Setting config vars and restarting webhubot... done, v7&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;HEROKU_URL: http://webhubot.herokuapp.com&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;これで「hubotが」定期的にURLを叩いてherokuのアイドリング状態を回避してくれるらしい。&lt;/p&gt;

&lt;p&gt;ってことはこの設定はhubot側で使われるのかな？(他のherokuにデプロイしたWebアプリケーションでは？調べてない)&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>kawasaki.rb #015 でSphinx導入事例の発表をしてきました #kwskrb #sphinxjp</title>
   <link href="http://gosyujin.github.io/2014/08/28/kawasakirb-015"/>
   <updated>2014-08-28T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2014/08/28/kawasakirb-015</id>
   <content type="html">&lt;h2 id=&quot;あらすじ&quot;&gt;あらすじ&lt;/h2&gt;

&lt;p&gt;kawasaki.rb #015 で発表してきたので、まとめ。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://kawasakirb.doorkeeper.jp/events/14213&quot;&gt;Kawasaki.rb #015&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;あわせて読みたい&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://d.hatena.ne.jp/kk_Ataka/20140713/1405235433&quot;&gt;kawasaki.rb #013 でSphinx導入事例の発表をしてきました と #011 #012 参加記録 #kwskrb #sphinxjp - kk_Atakaの日記&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;本当は14回で発表したかったのだけど、病欠してしまった…。&lt;/p&gt;

&lt;h2 id=&quot;発表内容&quot;&gt;発表内容&lt;/h2&gt;

&lt;p&gt;以下のスライドを元に発表しました。&lt;/p&gt;

&lt;p&gt;&lt;iframe src=&quot;//www.slideshare.net/slideshow/embed_code/38432275&quot; width=&quot;427&quot; height=&quot;356&quot; frameborder=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; style=&quot;border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;&quot; allowfullscreen&gt; &lt;/iframe&gt; &lt;div style=&quot;margin-bottom:5px&quot;&gt; &lt;strong&gt; &lt;a href=&quot;https://www.slideshare.net/kk_Ataka/20140827-sphinx2&quot; title=&quot;SIerでもSphinxを使いたい！ 後編&quot; target=&quot;_blank&quot;&gt;SIerでもSphinxを使いたい！ 後編&lt;/a&gt; &lt;/strong&gt; from &lt;strong&gt;&lt;a href=&quot;http://www.slideshare.net/kk_Ataka&quot; target=&quot;_blank&quot;&gt;kk_Ataka&lt;/a&gt;&lt;/strong&gt; &lt;/div&gt;&lt;/p&gt;

&lt;h3 id=&quot;結論&quot;&gt;結論&lt;/h3&gt;

&lt;p&gt;結論としては、&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;やはり納品物にするには(歴史的経緯などから)厳しい

&lt;ul&gt;
&lt;li&gt;社内ドキュメントにする分には問題なし&lt;/li&gt;
&lt;li&gt;SphinxからOutputを出すのはいいけど、顧客に巻き取られた後変更に耐えうる形式じゃないとつらい&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;チームで適用するには一人ではつらい(個人的なパワー不足)

&lt;ul&gt;
&lt;li&gt;最低でも一人賛同者がほしい&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;こんな感じ。もっとパワフルな人ならうまくやれるかもしれないが、自分では厳しかった。&lt;/p&gt;

&lt;p&gt;以下かいつまんで。&lt;/p&gt;

&lt;h3 id=&quot;導入にあたり&quot;&gt;導入にあたり&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;実際にSphinxを導入するための壁

&lt;ol&gt;
&lt;li&gt;自分とプロジェクトのメンバー&lt;/li&gt;
&lt;li&gt;reST記法覚えに注力してもらうために、雑用(お膳立て)は全部やる&lt;/li&gt;
&lt;li&gt;プロジェクトと顧客&lt;/li&gt;
&lt;li&gt;Officeで書かないよという宣言をする必要があると思う&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;納品にあたり&quot;&gt;納品にあたり&lt;/h3&gt;

&lt;p&gt;納品後、顧客に巻き取られる場合のいい案がない。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;どうやって納品するの？

&lt;ul&gt;
&lt;li&gt;rstのまま(rst -&amp;gt; make)&lt;/li&gt;
&lt;li&gt;保守も自分たちでできるならそれでもいいかも&lt;/li&gt;
&lt;li&gt;顧客にmakeしてもらうの敷居高すぎ&lt;/li&gt;
&lt;li&gt;Outputを提出&lt;/li&gt;
&lt;li&gt;html, pdf 見た目はきれい、だけど修正が発生した場合どうすれば&lt;/li&gt;
&lt;li&gt;word きれいに出すの難しい(個人的に) / あまり需要がない？&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;つまるところ「よし、いこう！いこうぜ、みんな！」状態を作るのがかなり難しい。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>jekyllrb-ja キックオフを実施しました</title>
   <link href="http://gosyujin.github.io/2014/07/26/jekyllrb-ja-meetupmd"/>
   <updated>2014-07-26T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2014/07/26/jekyllrb-ja-meetupmd</id>
   <content type="html">&lt;h2 id=&quot;あらすじ&quot;&gt;あらすじ&lt;/h2&gt;

&lt;p&gt;Jekyllドキュメントの初版翻訳が終わりまして。&lt;/p&gt;

&lt;p&gt;初版はえいや！でやれば進むもので、大変なのはそれを継続させていく事。&lt;/p&gt;

&lt;p&gt;今後の進め方とかどこかで一回詰めたいな〜と思っていたら@yandodさんに集まる場所を提供していただきました！(&lt;img src=&quot;http://www.engineyard.co.jp/blog/&quot; alt=&quot;Engine Yard Blog&quot;&gt;がJekyllなのだ)&lt;/p&gt;

&lt;p&gt;Engine Yardさんありがとうございます！&lt;/p&gt;

&lt;p&gt;詳細は以下。&lt;/p&gt;

&lt;h3 id=&quot;日時&quot;&gt;日時&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;7/18 19:30-21:00&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;場所&quot;&gt;場所&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;株式会社 Engine Yard&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;参加者-名前順&quot;&gt;参加者(名前順)&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;@chezou&lt;/li&gt;
&lt;li&gt;@gosyujin&lt;/li&gt;
&lt;li&gt;@harupong&lt;/li&gt;
&lt;li&gt;@melborne&lt;/li&gt;
&lt;li&gt;@tmkoikee&lt;/li&gt;
&lt;li&gt;@yandod&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;自己紹介をしたら業務でJekyllを使いこんでいる人、ガチで翻訳している人などなど経歴がハンパなかった…。&lt;/p&gt;

&lt;h3 id=&quot;やったこと&quot;&gt;やったこと&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;v2.0の進め方

&lt;ul&gt;
&lt;li&gt;ブランチ戦略&lt;/li&gt;
&lt;li&gt;本家への追従の仕方&lt;/li&gt;
&lt;li&gt;翻訳ワークフロー&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;v2-0の進め方&quot;&gt;v2.0の進め方&lt;/h2&gt;

&lt;h3 id=&quot;ブランチ戦略&quot;&gt;ブランチ戦略&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;ドキュメントなので特に分ける必要はないのではないか

&lt;ul&gt;
&lt;li&gt;progitでもテストがこけなければメンテナが即マージ、表示崩れなどを発見したら適宜直す方針&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;とりあえずmasterブランチ一本で&lt;/li&gt;
&lt;li&gt;masterブランチに対してhttps://teatro.io/ 使ってみよう

&lt;ul&gt;
&lt;li&gt;masterで適用してみてダメそうだったらdevelopブランチきってみよう&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;writerの権限わける&lt;/li&gt;
&lt;li&gt;プルリクをマージする基準を決めたい

&lt;ul&gt;
&lt;li&gt;LGTMされてx時間たって何もなかったらマージするなど&lt;/li&gt;
&lt;li&gt;このあたりの操作は最終的にはbot(hubot)に任せたい&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;本家への追従の仕方&quot;&gt;本家への追従の仕方&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Engine Yardではオリジナルをpullしてきてmergeしている&lt;/li&gt;
&lt;li&gt;@melborne さんのgh-diffのデモが大好評

&lt;ul&gt;
&lt;li&gt;差分からIssueをたてる機能もあり、cron等で定期的に実行すれば「Issue=翻訳残」とわかりやすい

&lt;ul&gt;
&lt;li&gt;rakeタスク化して誰でも実行できるようにしたい&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;gh-diffを使用した運用フロー案

&lt;ol&gt;
&lt;li&gt;Contributerの誰かがdiffをとって &lt;code&gt;.diff&lt;/code&gt; を保存し、 Issue化&lt;/li&gt;
&lt;li&gt;Issueを見て対象ファイルを翻訳&lt;/li&gt;
&lt;li&gt;PR&lt;/li&gt;
&lt;li&gt;OKならマージ&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.diff&lt;/code&gt; を消す

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;.diff&lt;/code&gt; を消すタイミングもrakeで自動化したい&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;翻訳ワークフロー&quot;&gt;翻訳ワークフロー&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;gh-diffのおかげで、「Issue見て翻訳対象探す、やるよって言う、トピックブランチきる、.diffファイル見ながら翻訳する、PRする」と簡略された&lt;/li&gt;
&lt;li&gt;新規の人向けにCONTRIBUTING.md作る&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;おまけ-用語集-glossary-の話&quot;&gt;おまけ 用語集(Glossary)の話&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Wikiではなく、csv化してリポジトリで持とうか&lt;/li&gt;
&lt;li&gt;そうする事でチェックもできるかも

&lt;ul&gt;
&lt;li&gt;Chef本では禁則事項チェックをシェルでやってる https://gist.github.com/yandod/adcd176012df92694bf9&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>kawasaki.rb #013 でSphinx導入事例の発表をしてきました と #011 #012 参加記録 #kwskrb #sphinxjp</title>
   <link href="http://gosyujin.github.io/2014/07/13/kawasakirb-011-012-013"/>
   <updated>2014-07-13T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2014/07/13/kawasakirb-011-012-013</id>
   <content type="html">&lt;h2 id=&quot;あらすじ&quot;&gt;あらすじ&lt;/h2&gt;

&lt;p&gt;kawasaki.rb に参加したものの記録を取っていなかったのでまとめて。&lt;/p&gt;

&lt;p&gt;13回目ではSphinxを話をしたのでその備忘録。Ruby系の勉強会だけどRuby以外の発表でも大丈夫。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://kawasakirb.doorkeeper.jp/events/10187&quot;&gt;Kawasaki.rb #011&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://chezou.wordpress.com/2014/04/26/kawasaki-rb-011-%E3%82%92%E9%96%8B%E5%82%AC%E3%81%97%E3%81%BE%E3%81%97%E3%81%9F-kwskrb/&quot;&gt;kawasaki.rb #011 を開催しました #kwskrb&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://kawasakirb.doorkeeper.jp/events/11235&quot;&gt;Kawasaki.rb #012&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://kawasakirb.github.io/kawasakirb/2014/06/07/kawasakirb-012-kwskrb/&quot;&gt;kawasaki.rb #012を開催しました #kwskrb&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://kawasakirb.doorkeeper.jp/events/12509&quot;&gt;Kawasaki.rb #013&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://kawasakirb.github.io/kawasakirb/2014/06/28/kawasakirb-013-kwskrb/&quot;&gt;kawasaki.rb #013を開催しました #kwskrb&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;発表内容&quot;&gt;発表内容&lt;/h2&gt;

&lt;p&gt;以下のスライドを元にLTしました。&lt;/p&gt;

&lt;p&gt;&lt;iframe src=&quot;//www.slideshare.net/slideshow/embed_code/36299157&quot; width=&quot;427&quot; height=&quot;356&quot; frameborder=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; style=&quot;border:1px solid #CCC; border-width:1px 1px 0; margin-bottom:5px; max-width: 100%;&quot; allowfullscreen&gt; &lt;/iframe&gt; &lt;div style=&quot;margin-bottom:5px&quot;&gt; &lt;strong&gt; &lt;a href=&quot;https://www.slideshare.net/kk_Ataka/20140625-sphinx&quot; title=&quot;SIerでもSphinxを使いたい！ 前編&quot; target=&quot;_blank&quot;&gt;SIerでもSphinxを使いたい！ 前編&lt;/a&gt; &lt;/strong&gt; from &lt;strong&gt;&lt;a href=&quot;http://www.slideshare.net/kk_Ataka&quot; target=&quot;_blank&quot;&gt;kk_Ataka&lt;/a&gt;&lt;/strong&gt; &lt;/div&gt;&lt;/p&gt;

&lt;p&gt;Sphinxを使用したドキュメント作成をする機会を探っていて、ようやくドンピシャで導入できるプロジェクトをこの手で手繰り寄せたのでそこで得た知見をまとめました。&lt;/p&gt;

&lt;p&gt;大体の内容はこの辺から参照してます。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://d.hatena.ne.jp/kk_Ataka/20131025/1382629630&quot;&gt;「Sphinxをはじめよう」を読んで導入したいと思ったので色々考えてみた - kk_Atakaの日記&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://d.hatena.ne.jp/kk_Ataka/20140519/1400471131&quot;&gt;「Sphinxをはじめよう」を読んで導入したいと思ったので色々考えてみた2 - kk_Atakaの日記&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;ねらい&quot;&gt;ねらい&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;「なんとか設計書&lt;em&gt;日付&lt;/em&gt;リビジョン(だれそれ更新分)(最新版).xls」&lt;/strong&gt; とかいう差分取りづらい伝説のファイルが共有サーバ上に量産されるの辛い…&lt;/li&gt;
&lt;li&gt;共有サーバに上記のようなファイルがちらかるのでどこに何があるかわかりにくい&lt;/li&gt;
&lt;li&gt;ミリ単位のレイアウト調整に苦心するのやだ&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;という事で&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;プレーンテキストで文書を作成できる&lt;/li&gt;
&lt;li&gt;文書を体系立てて管理できる&lt;/li&gt;
&lt;li&gt;デザインなどはアウトプット時におまかせ&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;できるSphinxを導入しようというもの。&lt;/p&gt;

&lt;p&gt;なぜSphinxがいいのかというところを競合するツールと比較してみたところまでを発表しました。&lt;/p&gt;

&lt;p&gt;次の発表で「導入する際、導入した後に気をつけた事」とか発表する予定です。&lt;/p&gt;

&lt;h2 id=&quot;おまけ-11回目、12回目で起こったこと&quot;&gt;おまけ 11回目、12回目で起こったこと&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;ロゴができた&lt;/li&gt;
&lt;li&gt;kawasaki.rbのGitHub Pagesができた(Powered by Jekyllだ！)&lt;/li&gt;
&lt;li&gt;kawasaki.rbのリポジトリに対して参加者がPRしまくり&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;他、所見。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Jekyll の翻訳で得た知見あたりを発表したいなーとも考えている&lt;/li&gt;
&lt;li&gt;12回目の懇親会で食べた「じゃが麺」がよかった。中毒性あり。こわい&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Jekyllドキュメントを翻訳してなんとなくわかってきたもの</title>
   <link href="http://gosyujin.github.io/2014/06/22/translated-jekyllrb"/>
   <updated>2014-06-22T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2014/06/22/translated-jekyllrb</id>
   <content type="html">&lt;h2 id=&quot;あらすじ&quot;&gt;あらすじ&lt;/h2&gt;

&lt;p&gt;Jekyllドキュメントの翻訳リポジトリを作成して約3ヶ月くらいたちまして。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://d.hatena.ne.jp/kk_Ataka/20140314/1394723421&quot;&gt;Jekyllドキュメントの日本語翻訳リポジトリ「jekyllrb.com.jp」を作成しました - kk_Atakaの日記&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://d.hatena.ne.jp/kk_Ataka/20140401/1396349183&quot;&gt;kawasaki.rb #010 で発表してきました #kwskrb - kk_Atakaの日記&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;現状報告と、今までの知見のまとめを。&lt;/p&gt;

&lt;p&gt;とりあえず自分の中でたまっているものを整理したいのでとりとめもなく書き出していくメソッド。&lt;/p&gt;

&lt;h2 id=&quot;現状&quot;&gt;現状&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://jekyllrb-ja.github.io/&quot;&gt;Jekyll &amp;bull; シンプルで、ブログのような、静的サイト&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;翻訳当時のリビジョンの Documentation 全翻訳が完了しました！(historyなど一部を除く)

&lt;ul&gt;
&lt;li&gt;翻訳期間中、本家の更新に追従できていないのでこれから猛追モードに入ります&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;プロジェクトを Organization に昇格させました

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jekyllrb-ja/jekyllrb-ja.github.io&quot;&gt;jekyllrb-ja/jekyllrb-ja.github.io&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;もともとは.br版の翻訳をしている人のリポジトリをお手本にしていたので個人リポジトリで細々とやっていた&lt;/li&gt;
&lt;li&gt;が、協力していただける方が増えたのもあり Org 化&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;知見とか&quot;&gt;知見とか&lt;/h2&gt;

&lt;p&gt;翻訳開始時に悩んでいた事は以下の3点。&lt;/p&gt;

&lt;p&gt;それに対しての答えは、現時点で少しずつ見えてきた気がする。&lt;/p&gt;

&lt;p&gt;少なくとも、今の自分の中で納得できる答えは見つけられた。&lt;/p&gt;

&lt;h3 id=&quot;意訳-or-直訳？&quot;&gt;意訳 or 直訳？&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;色々な人の意見をもとに「日本人が読みやすいように意訳していく」のが良いではという結論に至った&lt;/li&gt;
&lt;li&gt;結局のところ翻訳した文書は誰が読むかを考えると、自分(日本人)だろう、という話が一番腑に落ちたので…以下、感銘を受けた記事など

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.slideshare.net/t2y/python-6731903&quot;&gt;Python界隈の翻訳プロジェクト&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.shibu.jp/article/30577636.html&quot;&gt;エンジニアは翻訳をやるとお得 - 渋日記@shibu.jp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://tink.elliptium.net/2014/04/26/a_suggestion_on_translation.html&quot;&gt;翻訳のススメ - Elliptium&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://sphinx-users.jp/cookbook/translation.html&quot;&gt;ドキュメントの翻訳にSphinxを使う (i18n非利用) - Sphinx-Users.jp&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;なんという Python 率。「ドキュメント 翻訳 なんとか」でググると Python 界隈の方の活動がすごい引っかかるのはそれだけ盛んであるということなんだろうか(Ruby 方面へのアンテナの感度が低いだけとも思う)&lt;/li&gt;
&lt;li&gt;&lt;del&gt;直訳でもフツーに間違うから&lt;/del&gt;固い文より、読みやすい文の方がよいのではないか(誤訳しない努力はする)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;原文はどうしよう？&quot;&gt;原文はどうしよう？&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;これについては「更新の追従」で書く&lt;/li&gt;
&lt;li&gt;Jekyllrb-jaでは「原文(英語)はコメントアウトで残す」方式を採用した&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;誰が、どこで、どう管理するか？&quot;&gt;誰が、どこで、どう管理するか？&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;これに関しては、結局プロジェクトによりけりとしかいえないかな&lt;/li&gt;
&lt;li&gt;プロジェクトの舵を取る人が「入れよう！」といったら入れればいいし、「分けよう！」といったら分ければよいと思う

&lt;ul&gt;
&lt;li&gt;「分けよう！」はこのプロジェクト(jekyll)だし、「入れよう！」は progit とか sinatra かな&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;こんな感じなことが多いのかな〜。まあ、こんな綺麗に二分割はできないけどだいたいの方向性として。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;誰が:

&lt;ul&gt;
&lt;li&gt;「入れよう」メインコミッターの人たち？&lt;/li&gt;
&lt;li&gt;「分けよう」翻訳したい人たち&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;どこで:

&lt;ul&gt;
&lt;li&gt;「入れよう」本家リポジトリ内、あるいはメインコミッターの人が管理しているドキュメント用リポジトリ内&lt;/li&gt;
&lt;li&gt;「分けよう」翻訳したい人たちが作った翻訳用リポジトリ&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;どう管理:

&lt;ul&gt;
&lt;li&gt;「入れよう」基本的に本家(メインコミッターの人)の方針に順守&lt;/li&gt;
&lt;li&gt;「分けよう」本家の方針を守りつつ独自(翻訳フローなど)にいける？&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;更新の追従&quot;&gt;更新の追従&lt;/h2&gt;

&lt;h3 id=&quot;更新の追従をするには&quot;&gt;更新の追従をするには&lt;/h3&gt;

&lt;p&gt;本家のドキュメントの更新にどうやってついていくか…今後のモチベージョン(めんどくさくないこと、など)に関わってくるのでできるだけ簡単にしたい。&lt;/p&gt;

&lt;p&gt;※ 一番最初の版に関しては、どこかターゲットとなる本家のリビジョンを決めておいて動かさない。あとはターゲットに対して「えいや」で翻訳＆コミットしていけばなんとかなると思っている&lt;/p&gt;

&lt;p&gt;例えば Sphinx ではリビジョンを覚えておいてそれとぶつける方式で、&lt;/p&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;翻訳した元のリビジョン番号を特定&lt;/li&gt;
&lt;li&gt;最新のリポジトリとマージ&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;ProGit では本家とぴったりあわせる方式のようです。&lt;/p&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;本家の更新1コミットにつき訳文更新1コミット&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;これを解決するために Jekyllrb-ja では @melborne さん謹製の &lt;a href=&quot;https://github.com/melborne/togglate&quot;&gt;Togglate - GitHub&lt;/a&gt; というツールを使わせていただく事に決めました。&lt;/p&gt;

&lt;h3 id=&quot;togglateでできること&quot;&gt;Togglateでできること&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;原文に対して Togglate を使うと、すべての文章がコメントアウトされる

&lt;ul&gt;
&lt;li&gt;使用前&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;go&quot;&gt;Hello!&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;使用後&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;go&quot;&gt;こんにちは！&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;&amp;lt;!--original&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Hello!&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;--&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;こんな感じ &lt;code&gt;&amp;lt;!--original --&amp;gt;&lt;/code&gt; でコメントアウトしているのが Togglate でコメントアウトした文章(=原文)。&lt;/p&gt;

&lt;p&gt;この形式でコメントアウトする事で以下のようなことができる。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Togglateで &lt;code&gt;&amp;lt;!--original --&amp;gt;&lt;/code&gt; 内の文章のみを抽出できる(=原文を再構築できる)

&lt;ul&gt;
&lt;li&gt;「jekyllrb-jaドキュメント内の原文」を再構築することで、「本家の原文」との比較に使用できる(ややこしい)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Togglateで出力するjsをhtmlに追加すると「対応する日本語にマウスカーソルを当てると原文がポップアップする」ことができる

&lt;ul&gt;
&lt;li&gt;後述する「原文チラ見したい問題」を解決できる&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;更新の追従をする際に、更新された箇所の日本語文とコメントアウトした原文両方を更新しなければならないのがちょいめんどうだけど、上記 2 点を解消できる点で有用だと思っている。あわせて日本語文と原文の更新も自動化できれば…。&lt;/p&gt;

&lt;p&gt;…この辺はまだまだ試行錯誤なので、ちょっとうまくまとまらず。また進捗があったら改めてまとめる。&lt;/p&gt;

&lt;h3 id=&quot;原文チラ見したい問題&quot;&gt;原文チラ見したい問題&lt;/h3&gt;

&lt;p&gt;また、別の問題として「日本語読んでいる途中で原文チラ見したい」というものも人によってはあるかも。&lt;/p&gt;

&lt;p&gt;これが意外とめんどくさくて、&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;日本語サイトをブラウザで開きつつ&lt;/li&gt;
&lt;li&gt;原文のサイトかリポジトリを開き&lt;/li&gt;
&lt;li&gt;対応するファイル or Webページを開き&lt;/li&gt;
&lt;li&gt;対応する文章を探し&lt;/li&gt;
&lt;li&gt;並べて比較してみる&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;という手順を踏む必要がある。&lt;/p&gt;

&lt;p&gt;これをTogglateは、原文を &lt;code&gt;&amp;lt;!--original --&amp;gt;&lt;/code&gt; でコメントアウトしておいて、ブラウザからポップアップすると表示できるようになっている。&lt;/p&gt;

&lt;p&gt;そのため、上記のフローが&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;気になるところにカーソルをあわせる&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;で済むようになる。こんな感じ。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/images/2014-06-22/use-togglate.png&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;

&lt;h2 id=&quot;おまけ&quot;&gt;おまけ&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;他の人のプロジェクトに Issue を追加したりすることに抵抗が減った&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;良い傾向。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>WindowsにSphinxのlatexpdfjaができる環境を整えるのに苦戦した話</title>
   <link href="http://gosyujin.github.io/2014/05/28/sphinx-latexpdfja-for-windows"/>
   <updated>2014-05-28T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2014/05/28/sphinx-latexpdfja-for-windows</id>
   <content type="html">&lt;h2 id=&quot;あらすじ&quot;&gt;あらすじ&lt;/h2&gt;

&lt;p&gt;Windows に Sphinx から pdf を出力する環境を作成したが、 &lt;code&gt;make latexpdfja&lt;/code&gt; コマンドを打つと途中で失敗する。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;for f in *.pdf *.png *.gif *.jpg *.jpeg; do extractbb $f; done&lt;/p&gt;

&lt;p&gt;f の使い方が誤っています。&lt;/p&gt;

&lt;p&gt;make: *** [all-pdf-ja] Error 255&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;環境&quot;&gt;環境&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Windows 7&lt;/li&gt;
&lt;li&gt;Python 2.7.6&lt;/li&gt;
&lt;li&gt;Sphinx 1.2.2&lt;/li&gt;
&lt;li&gt;e-pTeX 3.1415926-p3.4-110825-2.6 (sjis) (TeX Live 2013/W32TeX)

&lt;ul&gt;
&lt;li&gt;kpathsea version 6.1.1&lt;/li&gt;
&lt;li&gt;ptexenc version 1.3.1&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;結論&quot;&gt;結論&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;PYTHON_HOME\Lib\site-packages\SPHINX_HOME\sphinx\texinputs&lt;/code&gt; の下に make.bat がなく、 Makefile しかない場合エラーが出るかもしれない&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.python.jp/pipermail/sphinx-users/2012-April/000593.html&quot;&gt;[Sphinx-Users 276] Re: LaTeX経由でのPDF作成手順をアップデートしました&lt;/a&gt; にある make.bat をコピーする&lt;/li&gt;
&lt;li&gt;上記の &lt;code&gt;texinputs&lt;/code&gt; 下に配置して再度 &lt;code&gt;make latexpdfja&lt;/code&gt; を実行する&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;これでうまくいくかもしれない。&lt;/p&gt;

&lt;p&gt;ただし、公式ドキュメントなどを見ていくと、 Sphinx 1.2.2 では、公式の正しい手順を踏めば pdf 出力はできるようなので、どこかに環境不備( Sphinx インストール方法とか、 Windows におけるビルド環境とか)があるのかもしれない。&lt;/p&gt;

&lt;p&gt;これがわからない。&lt;/p&gt;

&lt;h2 id=&quot;事前準備&quot;&gt;事前準備&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Sphinx は上記のバージョンをインストール済み&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://sphinx-users.jp/cookbook/pdf/latex.html&quot;&gt;LaTeX経由でのPDF作成 &amp;gt; Python製ドキュメンテーションビルダー、Sphinxの日本ユーザ会&lt;/a&gt; を参考に TeXLive をインストール

&lt;ul&gt;
&lt;li&gt;同ページの「Sphinxへのパッチ適用」は Sphinx 1.2.2 だったのでスルー&lt;/li&gt;
&lt;li&gt;同ページの「Sphinxプロジェクトの設定変更」に従って &lt;code&gt;conf.py&lt;/code&gt; の設定を追加&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;調査&quot;&gt;調査&lt;/h2&gt;

&lt;h3 id=&quot;エラー内容&quot;&gt;エラー内容&lt;/h3&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;go&quot;&gt;C:\sphinx\project&amp;gt;make latexpdfja&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;(略)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;processing project.tex... index local/project/project_plan ...&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;resolving references...&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;writing... done&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;copying TeX support files...&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;done&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;build succeeded, 1 warning.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;for f in *.pdf *.png *.gif *.jpg *.jpeg; do extractbb $f; done&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;f の使い方が誤っています。&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;make: *** [all-pdf-ja] Error 255&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;Build finished; the PDF files are in build/latex.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;うーん？ &lt;code&gt;make.bat&lt;/code&gt; の latexpdfja 部分を見てみるか。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bat&quot; data-lang=&quot;bat&quot;&gt;(略)
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;%1&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;latexpdfja&amp;quot;&lt;/span&gt; (
  &lt;span class=&quot;nv&quot;&gt;%SPHINXBUILD%&lt;/span&gt; -b latex &lt;span class=&quot;nv&quot;&gt;%ALLSPHINXOPTS%&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;%BUILDDIR%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;/latex&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;%BUILDDIR%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;/latex&lt;/span&gt;
  make all-pdf-ja
  &lt;span class=&quot;k&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;%BUILDDIR%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;/..&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt;.
  &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt;.Build finished; the PDF files are in &lt;span class=&quot;nv&quot;&gt;%BUILDDIR%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;/latex.&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;goto&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;end&lt;/span&gt;
)
(略)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;BUILDDIR/latex&lt;/code&gt; の中でさらに make してるな。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;go&quot;&gt;C:\sphinx\project&amp;gt;cd build\latex&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;C:\sphinx\project\build\latex&amp;gt;dir&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;(略)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;2014/05/27  11:14            39,126 project.tex&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;2014/05/15  19:17             1,964 Makefile&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;2014/05/15  19:17               220 python.ist&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;2014/05/15  19:17            15,816 sphinx.sty&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;2014/05/15  19:17             2,699 sphinxhowto.cls&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;2014/05/15  19:17             4,101 sphinxmanual.cls&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;(略)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Makefileある。中身は…。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;go&quot;&gt;all-pdf-ja:&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  for f in *.pdf *.png *.gif *.jpg *.jpeg; do extractbb $$f; done&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  for f in *.tex; do platex -kanji=utf8 $(LATEXOPTS) $$f; done&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  for f in *.tex; do platex -kanji=utf8 $(LATEXOPTS) $$f; done&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  for f in *.tex; do platex -kanji=utf8 $(LATEXOPTS) $$f; done&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  -for f in *.idx; do mendex -U -f -d &amp;quot;`basename $$f .idx`.dic&amp;quot; -s python.ist $$f; done&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  for f in *.tex; do platex -kanji=utf8 $(LATEXOPTS) $$f; done&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  for f in *.tex; do platex -kanji=utf8 $(LATEXOPTS) $$f; done&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  for f in *.dvi; do dvipdfmx $$f; done&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;エラーの行あるな。ここでこけてるのか。&lt;/p&gt;

&lt;h3 id=&quot;エラーメッセージ調査&quot;&gt;エラーメッセージ調査&lt;/h3&gt;

&lt;p&gt;とりあえず、エラーメッセージでググると Sphinx Users のメーリングリストがひっかかった。&lt;/p&gt;

&lt;p&gt;2012 年の記事で、いろいろバージョンはちょい古め。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.python.jp/pipermail/sphinx-users/2012-April/000582.html&quot;&gt;[Sphinx-Users 265] Re: LaTeX経由でのPDF作成手順をアップデートしました&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;で、この記事を追っていくと最終的には「打田さんのパッチを当てたら動いた(？)」という事らしい。&lt;/p&gt;

&lt;h3 id=&quot;パッチあて&quot;&gt;パッチあて&lt;/h3&gt;

&lt;p&gt;ただ、今回インストールしている Sphinx 1.2.2 のソースと目 grep するとどうもこのパッチの修正が当たってたり当たってなかったり(？)するのが気になる。(基本的には取り込まれてるみたいなんだけど)&lt;/p&gt;

&lt;p&gt;例えば、 &lt;code&gt;sphinx/writers/latex.py&lt;/code&gt; のパッチのところ。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;go&quot;&gt;diff --git a/sphinx/writers/latex.py b/sphinx/writers/latex.py&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;--- a/sphinx/writers/latex.py&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+++ b/sphinx/writers/latex.py&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;@@ -47,6 +47,10 @@&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; \date{%(date)s}&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; \release{%(release)s}&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; \author{%(author)s}&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+\hypersetup{&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+  pdftitle={%(title)s},&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+  pdfauthor={%(author)s},&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+}&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; \newcommand{\sphinxlogo}{%(logo)s}&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; \renewcommand{\releasename}{%(releasename)s}&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; %(makeindex)s&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;@@ -204,13 +208,10 @@&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;             # pTeX (Japanese TeX) for support&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;             if builder.config.language == &amp;#39;ja&amp;#39;:&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-                self.elements[&amp;#39;classoptions&amp;#39;] = &amp;#39;,dvipdfm&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-                # found elements of babel, but this should be above sphinx.sty.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-                # because pTeX (Japanese TeX) cannot handle this count.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-                self.elements[&amp;#39;babel&amp;#39;] = r&amp;#39;\newcount\pdfoutput\pdfoutput=0&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-                # to make the pdf with correct encoded hyperref bookmarks&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-                self.elements[&amp;#39;preamble&amp;#39;] += \&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-                    r&amp;#39;\AtBeginDvi{\special{pdf:tounicode EUC-UCS2}}&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+                # use dvipdfmx as default class option in Japanese&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+                self.elements[&amp;#39;classoptions&amp;#39;] = &amp;#39;,dvipdfmx&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+                # disable babel which has not publishing quality in Japanese&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+                self.elements[&amp;#39;babel&amp;#39;] = &amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;         else:&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;             self.elements[&amp;#39;classoptions&amp;#39;] += &amp;#39;,english&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;         # allow the user to override them all&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;そして、 1.1.2 から 1.2.2 の diff 。&lt;/p&gt;

&lt;p&gt;パッチ以外の修正もいっぱいあるのは当然として &lt;code&gt;hypersetup&lt;/code&gt; の周りは取り込まれていなかったり。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;go&quot;&gt;C:\work&amp;gt;hg clone https://bitbucket.org/birkenfeld/sphinx&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;C:\work&amp;gt;cd sphinx&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;C:\work\sphinx&amp;gt;hg diff -r 1.2.2 -r 1.1.2 sphinx\writers\latex.py&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;diff -r 7d389fe78ee9 -r 14b315a7d010 sphinx/writers/latex.py&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;--- a/sphinx/writers/latex.py       Tue Nov 01 21:40:52 2011 +0100&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+++ b/sphinx/writers/latex.py       Sun Mar 02 08:41:38 2014 +0100&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;@@ -8,7 +8,7 @@&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;     Much of this code is adapted from Dave Kuhlman&amp;#39;s &amp;quot;docpy&amp;quot; writer from his&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;     docutils sandbox.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-    :copyright: Copyright 2007-2011 by the Sphinx team, see AUTHORS.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+    :copyright: Copyright 2007-2014 by the Sphinx team, see AUTHORS.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;     :license: BSD, see LICENSE for details.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;@@ -22,7 +22,7 @@&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; from sphinx import addnodes&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; from sphinx import highlighting&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; from sphinx.errors import SphinxError&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-from sphinx.locale import admonitionlabels, versionlabels, _&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+from sphinx.locale import admonitionlabels, _&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; from sphinx.util import split_into&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; from sphinx.util.osutil import ustrftime&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; from sphinx.util.pycompat import any&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;@@ -34,6 +34,7 @@&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; \documentclass[%(papersize)s,%(pointsize)s%(classoptions)s]{%(wrapperclass)s}&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; %(inputenc)s&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; %(utf8extra)s&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+%(cmappkg)s&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; %(fontenc)s&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; %(babel)s&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; %(fontpkg)s&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;@@ -100,10 +101,18 @@&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; class ExtBabel(Babel):&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;     def get_shorthandoff(self):&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;         shortlang = self.language.split(&amp;#39;_&amp;#39;)[0]&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-        if shortlang in (&amp;#39;de&amp;#39;, &amp;#39;sl&amp;#39;, &amp;#39;pt&amp;#39;, &amp;#39;es&amp;#39;, &amp;#39;nl&amp;#39;, &amp;#39;pl&amp;#39;, &amp;#39;it&amp;#39;):&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+        if shortlang in (&amp;#39;de&amp;#39;, &amp;#39;ngerman&amp;#39;, &amp;#39;sl&amp;#39;, &amp;#39;slovene&amp;#39;, &amp;#39;pt&amp;#39;, &amp;#39;portuges&amp;#39;,&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+                         &amp;#39;es&amp;#39;, &amp;#39;spanish&amp;#39;, &amp;#39;nl&amp;#39;, &amp;#39;dutch&amp;#39;, &amp;#39;pl&amp;#39;, &amp;#39;polish&amp;#39;, &amp;#39;it&amp;#39;,&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+                         &amp;#39;italian&amp;#39;):&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;             return &amp;#39;\\shorthandoff{&amp;quot;}&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;         return &amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+    def uses_cyrillic(self):&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+        shortlang = self.language.split(&amp;#39;_&amp;#39;)[0]&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+        return shortlang in (&amp;#39;bg&amp;#39;,&amp;#39;bulgarian&amp;#39;, &amp;#39;kk&amp;#39;,&amp;#39;kazakh&amp;#39;,&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+                             &amp;#39;mn&amp;#39;,&amp;#39;mongolian&amp;#39;, &amp;#39;ru&amp;#39;,&amp;#39;russian&amp;#39;,&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+                             &amp;#39;uk&amp;#39;,&amp;#39;ukrainian&amp;#39;)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; # in latest trunk, the attribute is called Babel.language_codes and already&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; # includes Slovene&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; if hasattr(Babel, &amp;#39;_ISO639_TO_BABEL&amp;#39;):&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;@@ -133,8 +142,10 @@&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;         &amp;#39;papersize&amp;#39;:       &amp;#39;letterpaper&amp;#39;,&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;         &amp;#39;pointsize&amp;#39;:       &amp;#39;10pt&amp;#39;,&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;         &amp;#39;classoptions&amp;#39;:    &amp;#39;&amp;#39;,&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+        &amp;#39;extraclassoptions&amp;#39;: &amp;#39;&amp;#39;,&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;         &amp;#39;inputenc&amp;#39;:        &amp;#39;\\usepackage[utf8]{inputenc}&amp;#39;,&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;         &amp;#39;utf8extra&amp;#39;:       &amp;#39;\\DeclareUnicodeCharacter{00A0}{\\nobreakspace}&amp;#39;,&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+        &amp;#39;cmappkg&amp;#39;:         &amp;#39;\\usepackage{cmap}&amp;#39;,&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;         &amp;#39;fontenc&amp;#39;:         &amp;#39;\\usepackage[T1]{fontenc}&amp;#39;,&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;         &amp;#39;babel&amp;#39;:           &amp;#39;\\usepackage{babel}&amp;#39;,&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;         &amp;#39;fontpkg&amp;#39;:         &amp;#39;\\usepackage{times}&amp;#39;,&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;@@ -153,8 +164,12 @@&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;         &amp;#39;tableofcontents&amp;#39;: &amp;#39;\\tableofcontents&amp;#39;,&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;         &amp;#39;footer&amp;#39;:          &amp;#39;&amp;#39;,&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;         &amp;#39;printindex&amp;#39;:      &amp;#39;\\printindex&amp;#39;,&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+        &amp;#39;transition&amp;#39;:      &amp;#39;\n\n\\bigskip\\hrule{}\\bigskip\n\n&amp;#39;,&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;     }&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+    # sphinx specific document classes&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+    docclasses = (&amp;#39;howto&amp;#39;, &amp;#39;manual&amp;#39;)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;     def __init__(self, document, builder):&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;         nodes.NodeVisitor.__init__(self, document)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;         self.builder = builder&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;@@ -167,7 +182,7 @@&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;         self.elements = self.default_elements.copy()&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;         self.elements.update({&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-            &amp;#39;wrapperclass&amp;#39;: &amp;#39;sphinx&amp;#39; + document.settings.docclass,&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+            &amp;#39;wrapperclass&amp;#39;: self.format_docclass(document.settings.docclass),&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;             &amp;#39;papersize&amp;#39;:    papersize,&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;             &amp;#39;pointsize&amp;#39;:    builder.config.latex_font_size,&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;             # if empty, the title is set to the first section title&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;@@ -202,19 +217,25 @@&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;             self.elements[&amp;#39;shorthandoff&amp;#39;] = babel.get_shorthandoff()&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;             self.elements[&amp;#39;fncychap&amp;#39;] = &amp;#39;\\usepackage[Sonny]{fncychap}&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+            # Times fonts don&amp;#39;t work with Cyrillic languages&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+            if babel.uses_cyrillic():&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+                self.elements[&amp;#39;fontpkg&amp;#39;] = &amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;             # pTeX (Japanese TeX) for support&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;             if builder.config.language == &amp;#39;ja&amp;#39;:&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-                self.elements[&amp;#39;classoptions&amp;#39;] = &amp;#39;,dvipdfm&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-                # found elements of babel, but this should be above sphinx.sty.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-                # because pTeX (Japanese TeX) cannot handle this count.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-                self.elements[&amp;#39;babel&amp;#39;] = r&amp;#39;\newcount\pdfoutput\pdfoutput=0&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-                # to make the pdf with correct encoded hyperref bookmarks&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-                self.elements[&amp;#39;preamble&amp;#39;] += \&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-                    r&amp;#39;\AtBeginDvi{\special{pdf:tounicode EUC-UCS2}}&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+                # use dvipdfmx as default class option in Japanese&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+                self.elements[&amp;#39;classoptions&amp;#39;] = &amp;#39;,dvipdfmx&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+                # disable babel which has not publishing quality in Japanese&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+                self.elements[&amp;#39;babel&amp;#39;] = &amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+                # disable fncychap in Japanese documents&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+                self.elements[&amp;#39;fncychap&amp;#39;] = &amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;         else:&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;             self.elements[&amp;#39;classoptions&amp;#39;] += &amp;#39;,english&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;         # allow the user to override them all&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;         self.elements.update(builder.config.latex_elements)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+        if self.elements[&amp;#39;extraclassoptions&amp;#39;]:&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+            self.elements[&amp;#39;classoptions&amp;#39;] += &amp;#39;,&amp;#39; + \&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+                                             self.elements[&amp;#39;extraclassoptions&amp;#39;]&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;         self.highlighter = highlighting.PygmentsBridge(&amp;#39;latex&amp;#39;,&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;             builder.config.pygments_style, builder.config.trim_doctest_flags)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;@@ -243,7 +264,6 @@&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;         self.next_figure_ids = set()&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;         self.next_table_ids = set()&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;         # flags&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-        self.verbatim = None&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;         self.in_title = 0&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;         self.in_production_list = 0&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;         self.in_footnote = 0&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;@@ -258,6 +278,13 @@&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;         self.previous_spanning_column = 0&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;         self.remember_multirow = {}&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+    def format_docclass(self, docclass):&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+        &amp;quot;&amp;quot;&amp;quot; prepends prefix to sphinx document classes&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+        if docclass in self.docclasses:&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+            docclass = &amp;#39;sphinx&amp;#39; + docclass&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+        return docclass&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;     def astext(self):&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;         return (HEADER % self.elements +&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;                 self.highlighter.get_stylesheet() +&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;@@ -292,7 +319,7 @@&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;                 if i &amp;gt; 0:&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;                     ret.append(&amp;#39;\\indexspace\n&amp;#39;)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;                 ret.append(&amp;#39;\\bigletter{%s}\n&amp;#39; %&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-                           letter.translate(tex_escape_map))&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+                           unicode(letter).translate(tex_escape_map))&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;                 for entry in entries:&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;                     if not entry[3]:&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;                         continue&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;@@ -351,7 +378,7 @@&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;                     widest_label = bi[0]&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;             self.body.append(u&amp;#39;\n\\begin{thebibliography}{%s}\n&amp;#39; % widest_label)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;             for bi in self.bibitems:&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-                target = self.hypertarget(bi[2] + &amp;#39;:&amp;#39; + bi[0].lower(),&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+                target = self.hypertarget(bi[2] + &amp;#39;:&amp;#39; + bi[3],&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;                                           withdoc=False)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;                 self.body.append(u&amp;#39;\\bibitem[%s]{%s}{%s %s}\n&amp;#39; %&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;                     (bi[0], self.idescape(bi[0]), target, bi[1]))&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;@@ -440,7 +467,7 @@&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;         self.body.append(&amp;#39;}\n&amp;#39;)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;     def visit_transition(self, node):&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-        self.body.append(&amp;#39;\n\n\\bigskip\\hrule{}\\bigskip\n\n&amp;#39;)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+        self.body.append(self.elements[&amp;#39;transition&amp;#39;])&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;     def depart_transition(self, node):&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;         pass&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;@@ -544,10 +571,12 @@&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;     def visit_desc_name(self, node):&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;         self.body.append(r&amp;#39;\bfcode{&amp;#39;)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+        self.no_contractions += 1&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;         self.literal_whitespace += 1&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;     def depart_desc_name(self, node):&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;         self.body.append(&amp;#39;}&amp;#39;)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;         self.literal_whitespace -= 1&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+        self.no_contractions -= 1&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;     def visit_desc_parameterlist(self, node):&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;         # close name, open parameterlist&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;@@ -585,11 +614,6 @@&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;     def depart_desc_content(self, node):&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;         pass&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-    def visit_refcount(self, node):&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-        self.body.append(&amp;quot;\\emph{&amp;quot;)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-    def depart_refcount(self, node):&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-        self.body.append(&amp;quot;}\\\\&amp;quot;)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;     def visit_seealso(self, node):&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;         self.body.append(u&amp;#39;\n\n\\strong{%s:}\n\n&amp;#39; % admonitionlabels[&amp;#39;seealso&amp;#39;])&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;     def depart_seealso(self, node):&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;@@ -618,6 +642,7 @@&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;         if isinstance(node.parent, nodes.citation):&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;             self.bibitems[-1][0] = node.astext()&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;             self.bibitems[-1][2] = self.curfilestack[-1]&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+            self.bibitems[-1][3] = node.parent[&amp;#39;ids&amp;#39;][0]&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;         raise nodes.SkipNode&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;     def visit_tabular_col_spec(self, node):&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;@@ -680,16 +705,15 @@&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;             self.body.extend(self.tableheaders)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;             self.body.append(&amp;#39;\\endfirsthead\n\n&amp;#39;)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;             self.body.append(&amp;#39;\\multicolumn{%s}{c}%%\n&amp;#39; % self.table.colcount)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-            self.body.append(r&amp;#39;{{\bfseries \tablename\ \thetable{} -- %s}} \\&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+            self.body.append(r&amp;#39;{{\textsf{\tablename\ \thetable{} -- %s}}} \\&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;                              % _(&amp;#39;continued from previous page&amp;#39;))&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;             self.body.append(&amp;#39;\n\\hline\n&amp;#39;)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;             self.body.extend(self.tableheaders)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;             self.body.append(&amp;#39;\\endhead\n\n&amp;#39;)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-            self.body.append(ur&amp;#39;\hline \multicolumn{%s}{|r|}{{%s}} \\ \hline&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+            self.body.append(ur&amp;#39;\hline \multicolumn{%s}{|r|}{{\textsf{%s}}} \\ \hline&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;                              % (self.table.colcount,&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;                                 _(&amp;#39;Continued on next page&amp;#39;)))&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;             self.body.append(&amp;#39;\n\\endfoot\n\n&amp;#39;)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-            self.body.append(&amp;#39;\\hline\n&amp;#39;)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;             self.body.append(&amp;#39;\\endlastfoot\n\n&amp;#39;)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;         else:&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;             self.body.append(&amp;#39;\\hline\n&amp;#39;)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;@@ -719,29 +743,28 @@&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;         # Redirect head output until header is finished. see visit_tbody.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;         self.body = self.tableheaders&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;     def depart_thead(self, node):&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-        pass&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+        self.body.append(&amp;#39;\\hline&amp;#39;)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;     def visit_tbody(self, node):&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;         if not self.table.had_head:&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;             self.visit_thead(node)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;         self.body = self.tablebody&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;     def depart_tbody(self, node):&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-        pass&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+        self.body.append(&amp;#39;\\hline&amp;#39;)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;     def visit_row(self, node):&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;         self.table.col = 0&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;     def depart_row(self, node):&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;         if self.previous_spanning_row == 1:&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;             self.previous_spanning_row = 0&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-            self.body.append(&amp;#39;\\\\\n&amp;#39;)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-        else:&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-            self.body.append(&amp;#39;\\\\\\hline\n&amp;#39;)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+        self.body.append(&amp;#39;\\\\\n&amp;#39;)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;         self.table.rowcount += 1&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;     def visit_entry(self, node):&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-        if self.remember_multirow.get(0, 0) &amp;gt; 1:&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+        if self.table.col &amp;gt; 0:&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;             self.body.append(&amp;#39; &amp;amp; &amp;#39;)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-        if self.table.col &amp;gt; 0:&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+        elif self.remember_multirow.get(1, 0) &amp;gt; 1:&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+            self.remember_multirow[1] -= 1&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;             self.body.append(&amp;#39; &amp;amp; &amp;#39;)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;         self.table.col += 1&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;         context = &amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;@@ -761,7 +784,7 @@&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;                 self.body.append(&amp;#39;}{l|}{&amp;#39;)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;             context += &amp;#39;}&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;         if isinstance(node.parent.parent, nodes.thead):&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-            self.body.append(&amp;#39;\\textbf{&amp;#39;)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+            self.body.append(&amp;#39;\\textsf{\\relax &amp;#39;)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;             context += &amp;#39;}&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;         if self.remember_multirow.get(self.table.col + 1, 0) &amp;gt; 1:&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;             self.remember_multirow[self.table.col + 1] -= 1&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;@@ -1035,12 +1058,7 @@&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;     depart_warning = _depart_named_admonition&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;     def visit_versionmodified(self, node):&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-        intro = versionlabels[node[&amp;#39;type&amp;#39;]] % node[&amp;#39;version&amp;#39;]&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-        if node.children:&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-            intro += &amp;#39;: &amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-        else:&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-            intro += &amp;#39;.&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-        self.body.append(intro)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+        pass&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;     def depart_versionmodified(self, node):&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;         pass&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;@@ -1172,7 +1190,7 @@&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;             id = self.curfilestack[-1] + &amp;#39;:&amp;#39; + uri[1:]&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;             self.body.append(self.hyperlink(id))&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;             if self.builder.config.latex_show_pagerefs and not \&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-                    self.in_productionlist:&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+                    self.in_production_list:&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;                 self.context.append(&amp;#39;}} (%s)&amp;#39; % self.hyperpageref(id))&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;             else:&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;                 self.context.append(&amp;#39;}}&amp;#39;)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;@@ -1248,7 +1266,8 @@&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;     def visit_citation(self, node):&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;         # TODO maybe use cite bibitems&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-        self.bibitems.append([&amp;#39;&amp;#39;, &amp;#39;&amp;#39;, &amp;#39;&amp;#39;])  # [citeid, citetext, docname]&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+        # bibitem: [citelabel, citetext, docname, citeid]&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+        self.bibitems.append([&amp;#39;&amp;#39;, &amp;#39;&amp;#39;, &amp;#39;&amp;#39;, &amp;#39;&amp;#39;])&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;         self.context.append(len(self.body))&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;     def depart_citation(self, node):&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;         size = self.context.pop()&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;@@ -1294,35 +1313,44 @@&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;         pass&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;     def visit_literal_block(self, node):&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-        self.verbatim = &amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+        if self.in_footnote:&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+            raise UnsupportedError(&amp;#39;%s:%s: literal blocks in footnotes are &amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+                                   &amp;#39;not supported by LaTeX&amp;#39; %&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+                                   (self.curfilestack[-1], node.line))&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+        if node.rawsource != node.astext():&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+            # most probably a parsed-literal block -- don&amp;#39;t highlight&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+            self.body.append(&amp;#39;\\begin{alltt}\n&amp;#39;)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+        else:&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+            code = node.astext().rstrip(&amp;#39;\n&amp;#39;)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+            lang = self.hlsettingstack[-1][0]&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+            linenos = code.count(&amp;#39;\n&amp;#39;) &amp;gt;= self.hlsettingstack[-1][1] - 1&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+            highlight_args = node.get(&amp;#39;highlight_args&amp;#39;, {})&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+            if &amp;#39;language&amp;#39; in node:&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+                # code-block directives&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+                lang = node[&amp;#39;language&amp;#39;]&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+                highlight_args[&amp;#39;force&amp;#39;] = True&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+            if &amp;#39;linenos&amp;#39; in node:&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+                linenos = node[&amp;#39;linenos&amp;#39;]&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+            def warner(msg):&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+                self.builder.warn(msg, (self.curfilestack[-1], node.line))&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+            hlcode = self.highlighter.highlight_block(code, lang, warn=warner,&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+                    linenos=linenos, **highlight_args)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+            # workaround for Unicode issue&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+            hlcode = hlcode.replace(u&amp;#39;€&amp;#39;, u&amp;#39;@texteuro[]&amp;#39;)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+            # must use original Verbatim environment and &amp;quot;tabular&amp;quot; environment&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+            if self.table:&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+                hlcode = hlcode.replace(&amp;#39;\\begin{Verbatim}&amp;#39;,&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+                                        &amp;#39;\\begin{OriginalVerbatim}&amp;#39;)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+                self.table.has_problematic = True&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+                self.table.has_verbatim = True&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+            # get consistent trailer&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+            hlcode = hlcode.rstrip()[:-14] # strip \end{Verbatim}&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+            hlcode = hlcode.rstrip() + &amp;#39;\n&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+            self.body.append(&amp;#39;\n&amp;#39; + hlcode + &amp;#39;\\end{%sVerbatim}\n&amp;#39; %&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+                             (self.table and &amp;#39;Original&amp;#39; or &amp;#39;&amp;#39;))&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+            raise nodes.SkipNode&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;     def depart_literal_block(self, node):&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-        code = self.verbatim.rstrip(&amp;#39;\n&amp;#39;)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-        lang = self.hlsettingstack[-1][0]&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-        linenos = code.count(&amp;#39;\n&amp;#39;) &amp;gt;= self.hlsettingstack[-1][1] - 1&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-        if &amp;#39;language&amp;#39; in node:&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-            # code-block directives&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-            lang = node[&amp;#39;language&amp;#39;]&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-        if &amp;#39;linenos&amp;#39; in node:&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-            linenos = node[&amp;#39;linenos&amp;#39;]&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-        highlight_args = node.get(&amp;#39;highlight_args&amp;#39;, {})&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-        def warner(msg):&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-            self.builder.warn(msg, (self.curfilestack[-1], node.line))&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-        hlcode = self.highlighter.highlight_block(code, lang, warn=warner,&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-                linenos=linenos, **highlight_args)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-        # workaround for Unicode issue&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-        hlcode = hlcode.replace(u&amp;#39;€&amp;#39;, u&amp;#39;@texteuro[]&amp;#39;)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-        # must use original Verbatim environment and &amp;quot;tabular&amp;quot; environment&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-        if self.table:&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-            hlcode = hlcode.replace(&amp;#39;\\begin{Verbatim}&amp;#39;,&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-                                    &amp;#39;\\begin{OriginalVerbatim}&amp;#39;)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-            self.table.has_problematic = True&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-            self.table.has_verbatim = True&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-        # get consistent trailer&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-        hlcode = hlcode.rstrip()[:-14] # strip \end{Verbatim}&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-        hlcode = hlcode.rstrip() + &amp;#39;\n&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-        self.body.append(&amp;#39;\n&amp;#39; + hlcode + &amp;#39;\\end{%sVerbatim}\n&amp;#39; %&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-                         (self.table and &amp;#39;Original&amp;#39; or &amp;#39;&amp;#39;))&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-        self.verbatim = None&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+        self.body.append(&amp;#39;\n\\end{alltt}\n&amp;#39;)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;     visit_doctest_block = visit_literal_block&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;     depart_doctest_block = depart_literal_block&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;@@ -1477,6 +1505,7 @@&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;             text = text.replace(u&amp;#39;\n&amp;#39;, u&amp;#39;~\\\\\n&amp;#39;).replace(u&amp;#39; &amp;#39;, u&amp;#39;~&amp;#39;)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;         if self.no_contractions:&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;             text = text.replace(&amp;#39;--&amp;#39;, u&amp;#39;-{-}&amp;#39;)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+            text = text.replace(&amp;quot;&amp;#39;&amp;#39;&amp;quot;, u&amp;quot;&amp;#39;{&amp;#39;}&amp;quot;)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;         return text&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;     def encode_uri(self, text):&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;@@ -1484,13 +1513,10 @@&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;         return self.encode(text).replace(&amp;#39;\\textasciitilde{}&amp;#39;, &amp;#39;~&amp;#39;)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;     def visit_Text(self, node):&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-        if self.verbatim is not None:&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-            self.verbatim += node.astext()&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-        else:&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-            text = self.encode(node.astext())&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-            if not self.no_contractions:&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-                text = educate_quotes_latex(text)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-            self.body.append(text)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+        text = self.encode(node.astext())&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+        if not self.no_contractions:&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+            text = educate_quotes_latex(text)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+        self.body.append(text)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;     def depart_Text(self, node):&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;         pass&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;@@ -1506,5 +1532,14 @@&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;     def depart_system_message(self, node):&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;         self.body.append(&amp;#39;\n&amp;#39;)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+    def visit_math(self, node):&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+        self.builder.warn(&amp;#39;using &amp;quot;math&amp;quot; markup without a Sphinx math extension &amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+                          &amp;#39;active, please use one of the math extensions &amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+                          &amp;#39;described at http://sphinx-doc.org/ext/math.html&amp;#39;,&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+                          (self.curfilestack[-1], node.line))&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+        raise nodes.SkipNode&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+    visit_math_block = visit_math&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;     def unknown_visit(self, node):&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;         raise NotImplementedError(&amp;#39;Unknown node: &amp;#39; + node.__class__.__name__)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;http://sphinx-users.jp/cookbook/pdf/latex.html&quot;&gt;LaTeX経由でのPDF作成 &amp;gt; Python製ドキュメンテーションビルダー、Sphinxの日本ユーザ会&lt;/a&gt; にも&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Sphinx-1.2 (2013/12/10リリース)に打田さんのパッチが取り込まれています。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;と書かれているので、やっぱり 1.2.2 を正として、このバージョンでは動くものと考えて良いんだろう…。&lt;/p&gt;

&lt;p&gt;じゃあなんでエラーになるんだろう。&lt;/p&gt;

&lt;p&gt;いや、エラーになるのはわかるんだけど、なんで手順どおりにやってハマる？ 何か抜けてる？&lt;/p&gt;

&lt;p&gt;抜けてるとしたら、 Sphinx インストール周りなんだけど。&lt;/p&gt;

&lt;h2 id=&quot;解決策&quot;&gt;解決策&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.python.jp/pipermail/sphinx-users/2012-April/000593.html&quot;&gt;[Sphinx-Users 276] Re: LaTeX経由でのPDF作成手順をアップデートしました&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;このトピックの最後で打田さんが make.bat を作ったといっている。&lt;/p&gt;

&lt;p&gt;このファイルを作って &lt;code&gt;PYTHON_HOME\Lib\site-packages\SPHINX_HOME\sphinx\texinputs&lt;/code&gt; の下にコピーした。(パスは環境によって変わるかも)&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bat&quot; data-lang=&quot;bat&quot;&gt;&lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;@&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;off&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;setlocal&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;::set %LATEXOPTS%=&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;%1&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;EQU&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;all-pdf&amp;quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;goto&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;all&lt;/span&gt;-pdf
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;%1&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;EQU&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;all-dvi&amp;quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;goto&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;all&lt;/span&gt;-dvi
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;%1&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;EQU&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;all-ps&amp;quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;goto&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;all&lt;/span&gt;-ps
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;%1&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;EQU&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;all-pdf-ja&amp;quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;goto&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;all&lt;/span&gt;-pdf-ja
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;%1&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;EQU&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;clean&amp;quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;goto&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;clean&lt;/span&gt;

&lt;span class=&quot;nl&quot;&gt;:all&lt;/span&gt;-pdf
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;%%f&lt;/span&gt; in (*.tex) &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; pdflatex &lt;span class=&quot;nv&quot;&gt;%LATEXOPTS%&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;%%f&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;%%f&lt;/span&gt; in (*.tex) &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; pdflatex &lt;span class=&quot;nv&quot;&gt;%LATEXOPTS%&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;%%f&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;%%f&lt;/span&gt; in (*.tex) &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; pdflatex &lt;span class=&quot;nv&quot;&gt;%LATEXOPTS%&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;%%f&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;%%f&lt;/span&gt; in (*.idx) &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;exist&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;%%f&lt;/span&gt; (makeindex -s python.ist &lt;span class=&quot;nv&quot;&gt;%%f&lt;/span&gt;)
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;%%f&lt;/span&gt; in (*.tex) &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; pdflatex &lt;span class=&quot;nv&quot;&gt;%LATEXOPTS%&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;%%f&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;%%f&lt;/span&gt; in (*.tex) &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; pdflatex &lt;span class=&quot;nv&quot;&gt;%LATEXOPTS%&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;%%f&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;goto&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;nl&quot;&gt;:all&lt;/span&gt;-dvi
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;%%f&lt;/span&gt; in (*.tex) &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; latex &lt;span class=&quot;nv&quot;&gt;%LATEXOPTS%&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;%%f&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;%%f&lt;/span&gt; in (*.tex) &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; latex &lt;span class=&quot;nv&quot;&gt;%LATEXOPTS%&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;%%f&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;%%f&lt;/span&gt; in (*.tex) &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; latex &lt;span class=&quot;nv&quot;&gt;%LATEXOPTS%&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;%%f&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;%%f&lt;/span&gt; in (*.idx) &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;exist&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;%%f&lt;/span&gt; (makeindex -s python.ist &lt;span class=&quot;nv&quot;&gt;%%f&lt;/span&gt;)
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;%%f&lt;/span&gt; in (*.tex) &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; latex &lt;span class=&quot;nv&quot;&gt;%LATEXOPTS%&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;%%f&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;%%f&lt;/span&gt; in (*.tex) &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; latex &lt;span class=&quot;nv&quot;&gt;%LATEXOPTS%&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;%%f&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;goto&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;nl&quot;&gt;:all&lt;/span&gt;-ps
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;%%f&lt;/span&gt; in (*.tex) &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; latex &lt;span class=&quot;nv&quot;&gt;%LATEXOPTS%&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;%%f&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;%%f&lt;/span&gt; in (*.tex) &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; latex &lt;span class=&quot;nv&quot;&gt;%LATEXOPTS%&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;%%f&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;%%f&lt;/span&gt; in (*.tex) &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; latex &lt;span class=&quot;nv&quot;&gt;%LATEXOPTS%&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;%%f&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;%%f&lt;/span&gt; in (*.idx) &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;exist&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;%%f&lt;/span&gt; (makeindex -s python.ist &lt;span class=&quot;nv&quot;&gt;%%f&lt;/span&gt;)
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;%%f&lt;/span&gt; in (*.tex) &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; latex &lt;span class=&quot;nv&quot;&gt;%LATEXOPTS%&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;%%f&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;%%f&lt;/span&gt; in (*.tex) &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; latex &lt;span class=&quot;nv&quot;&gt;%LATEXOPTS%&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;%%f&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;%%f&lt;/span&gt; in (*.dvi) &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; dvips &lt;span class=&quot;nv&quot;&gt;%%f&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;goto&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;nl&quot;&gt;:all&lt;/span&gt;-pdf-ja
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;%%f&lt;/span&gt; in (*.pdf *.png *.gif *.jpg *.jpeg) &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; extractbb &lt;span class=&quot;nv&quot;&gt;%%f&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;%%f&lt;/span&gt; in (*.tex) &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; platex -kanji&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;utf&lt;span class=&quot;m&quot;&gt;8&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;%LATEXOPTS%&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;%%f&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;%%f&lt;/span&gt; in (*.tex) &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; platex -kanji&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;utf&lt;span class=&quot;m&quot;&gt;8&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;%LATEXOPTS%&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;%%f&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;%%f&lt;/span&gt; in (*.tex) &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; platex -kanji&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;utf&lt;span class=&quot;m&quot;&gt;8&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;%LATEXOPTS%&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;%%f&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;%%f&lt;/span&gt; in (*.idx) &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;exist&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;%%f&lt;/span&gt; (mendex -U -f -d &lt;span class=&quot;s2&quot;&gt;&amp;quot;`basename %%f .idx`.dic&amp;quot;&lt;/span&gt; -s python.ist &lt;span class=&quot;nv&quot;&gt;%%f&lt;/span&gt;)
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;%%f&lt;/span&gt; in (*.tex) &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; platex -kanji&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;utf&lt;span class=&quot;m&quot;&gt;8&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;%LATEXOPTS%&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;%%f&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;%%f&lt;/span&gt; in (*.tex) &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; platex -kanji&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;utf&lt;span class=&quot;m&quot;&gt;8&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;%LATEXOPTS%&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;%%f&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;%%f&lt;/span&gt; in (*.dvi) &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; dvipdfmx &lt;span class=&quot;nv&quot;&gt;%%f&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;goto&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;nl&quot;&gt;:clean&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;del&lt;/span&gt; *.dvi *.log *.ind *.aux *.toc *.syn *.idx *.out *.ilg *.pla
&lt;span class=&quot;k&quot;&gt;goto&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;nl&quot;&gt;:end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;そして &lt;code&gt;make latexpdfja&lt;/code&gt; を再チャレンジしたら動いた！&lt;/p&gt;

&lt;p&gt;…とここまで書いて一つ思いついたけど、もしかして make の種類関係あるか…？&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>「Sphinxをはじめよう」を読んで導入したいと思ったので色々考えてみた2</title>
   <link href="http://gosyujin.github.io/2014/05/19/sphinx-recommend2"/>
   <updated>2014-05-19T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2014/05/19/sphinx-recommend2</id>
   <content type="html">&lt;h2 id=&quot;前回のあらすじ&quot;&gt;前回のあらすじ&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://gosyujin.github.io/2013/10/25/sphinx-recommend/&quot;&gt;「Sphinxをはじめよう」を読んで導入したいと思ったので色々考えてみた - kk_Atakaの日記&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;かなり期間があいてしまったが、次に考えるは、実際にどうやって「導入」して「運用」するか。&lt;/p&gt;

&lt;p&gt;「納品」するに当たってどんな問題があるか。&lt;/p&gt;

&lt;p&gt;このあたり、良い前例があったら知りたいところ。&lt;/p&gt;

&lt;h2 id=&quot;課題&quot;&gt;課題&lt;/h2&gt;

&lt;p&gt;課題はとりあえず2段階あると思っている。&lt;/p&gt;

&lt;h3 id=&quot;第1段階-対開発工程の課題&quot;&gt;第1段階: 対開発工程の課題&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;プロジェクトに対しての導入・運用方法&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;どうやって運用していくか。&lt;/p&gt;

&lt;p&gt;ルール決め大事。&lt;/p&gt;

&lt;h3 id=&quot;第2段階-対納品工程の課題&quot;&gt;第2段階: 対納品工程の課題&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;納品形式&lt;/li&gt;
&lt;li&gt;納品後修正が発生した場合どうするか&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;顧客(※)に対してどうやって納品するか、またそれをなおすのは誰？&lt;/p&gt;

&lt;p&gt;(※) 顧客とは、納品したドキュメントを読む、使う、なおす人。社内の人かもしれないし、社外の人かもしれない。&lt;/p&gt;

&lt;p&gt;一つずつ考えていく。&lt;/p&gt;

&lt;h2 id=&quot;対開発工程&quot;&gt;対開発工程&lt;/h2&gt;

&lt;h3 id=&quot;登場人物&quot;&gt;登場人物&lt;/h3&gt;

&lt;p&gt;以下、架空の登場人物とする。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;リーダー&lt;/code&gt; : Sphinx を導入したい側

&lt;ul&gt;
&lt;li&gt;Sphinx 導入に燃えている人&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;メンバー&lt;/code&gt; : 導入した Sphinx を使う側

&lt;ul&gt;
&lt;li&gt;Sphinx および reST は知らない&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;プロジェクト内での運用方法&quot;&gt;プロジェクト内での運用方法&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;reST は覚えてもらう

&lt;ul&gt;
&lt;li&gt;マスト。これがないと書けないから&lt;/li&gt;
&lt;li&gt;一応「 reST 記法書き方」的なページは &lt;code&gt;リーダー&lt;/code&gt; が事前に作って教えてあげることが前提&lt;/li&gt;
&lt;li&gt;実はマストではなかった&lt;/li&gt;
&lt;li&gt;Markdownとかがよければ、 Pandoc を経由して Markdown -&amp;gt; reST -&amp;gt; OUTPUT というのもありかも&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://librabuch.jp/2013/12/sphinx_documentation_advent_calendar_2013/&quot;&gt;ドキュメンテーションツール「Sphinx」をチーム運用するまでの道のり - Librabuch&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;とりあえず &lt;code&gt;メンバー&lt;/code&gt; にはドキュメント作成に注力してもらい、ファイル生成などは &lt;code&gt;リーダー&lt;/code&gt; が整備する&lt;/li&gt;
&lt;li&gt;運用はできるだけ git push または svn commit してもらうだけにしたい

&lt;ul&gt;
&lt;li&gt;ただし、いきなりファイルを push してもらうのはちょっと嫌で、 Sintax error くらいは &lt;code&gt;メンバー&lt;/code&gt; のローカルでも確認してもらいたいんだけど&lt;/li&gt;
&lt;li&gt;そうすると Python インストール必須だよなぁ…&lt;/li&gt;
&lt;li&gt;ローカルで reST プレビューとかできるのかなぁ…&lt;/li&gt;
&lt;li&gt;GitHub とか使えばプレビューできるんだけど…&lt;/li&gt;
&lt;li&gt;バージョン管理ツールの使い方は割愛&lt;/li&gt;
&lt;li&gt;アウトライン(雛形？ / タイトルとか目次とか)はあらかじめ定めておき、空ファイル(ひな形)は &lt;code&gt;リーダー&lt;/code&gt; が事前に用意しておく&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;コミット後は、コミットをフックして make (Jenkins などで)して Apache の下とかに展開する

&lt;ul&gt;
&lt;li&gt;http://xx.xx.xx.xx/hoge にアクセスしたらすぐ最新版が見られるようにする&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;その他にも、そのプロジェクトの風土にあわせたカスタマイズが必要かもしれない。&lt;/p&gt;

&lt;p&gt;例えば、「表紙の次のページに変更記録一覧 (Rev.X は誰が何を直して誰が承認したか) みたいな表が必須とか」&lt;/p&gt;

&lt;h2 id=&quot;対納品工程&quot;&gt;対納品工程&lt;/h2&gt;

&lt;h3 id=&quot;登場人物&quot;&gt;登場人物&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;プロジェクト&lt;/code&gt; : Sphinx でドキュメントを作成した側

&lt;ul&gt;
&lt;li&gt;上記開発工程の &lt;code&gt;リーダー&lt;/code&gt; と &lt;code&gt;メンバー&lt;/code&gt; の集合体&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;顧客&lt;/code&gt; : Sphinx で作成したドキュメントを納品される側

&lt;ul&gt;
&lt;li&gt;社内の人かもしれないし、社外の人かもしれない&lt;/li&gt;
&lt;li&gt;慣例から、成果物は Office で納品されることが多い&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;納品形式&quot;&gt;納品形式&lt;/h3&gt;

&lt;p&gt;なにをどう納品すべきなのか。(開発工程に入る前に、納品形式は両者の間で Fix させておく必要はある)&lt;/p&gt;

&lt;p&gt;とりあえず 2 つ考えられる。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;reST ファイル、 reST からアウトプットしたファイル、説明書(Sphinx インストール、ビルド手順など)の 3 点セット

&lt;ul&gt;
&lt;li&gt;対象フォーマットで納品したけど、 reST からどうとでもできるよ形式&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;reST からアウトプットしたファイルのみ

&lt;ul&gt;
&lt;li&gt;html , pdf などのみ&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;前者は &lt;code&gt;顧客&lt;/code&gt; への負担が高すぎ。&lt;/p&gt;

&lt;p&gt;かといって後者だと納品後問題が発生した場合どうすればいいのか…。(後述)&lt;/p&gt;

&lt;p&gt;裏技として「 Pandoc を使って reST to docx 」という方法も見つけたが、体裁がうまいこと作れなかった…。&lt;/p&gt;

&lt;h3 id=&quot;納品後修正が発生した場合&quot;&gt;納品後修正が発生した場合&lt;/h3&gt;

&lt;p&gt;誰がどう修正するのか。&lt;/p&gt;

&lt;p&gt;これも 2 つ考えられる。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;保守などで &lt;code&gt;プロジェクト&lt;/code&gt; が適宜修正する事ができる取り決めの場合

&lt;ul&gt;
&lt;li&gt;この場合は、 Sphinx の環境を使ってなおせばよい&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;顧客&lt;/code&gt; が巻き取り、その後ガンガン機能追加・修正していく場合

&lt;ul&gt;
&lt;li&gt;reST を修正してもらう？&lt;/li&gt;
&lt;li&gt;アウトプットファイル(htmlとか) を直接修正してもらう？&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;前者は特に問題ない。困るのは後者。&lt;/p&gt;

&lt;p&gt;Javadoc とかは、 html ファイルで納品するが、修正するのに直接いじらないよな。やるならソースを直して Javadoc 再生成だろう。&lt;/p&gt;

&lt;p&gt;…とすると、 reST も reST を直して再生成するのが一番いいんだけど……それをやってもらう？？&lt;/p&gt;

&lt;p&gt;ということで、今考えているのが&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;開発時は reST で作成、レビューも reST からの OUTPUT で行う&lt;/li&gt;
&lt;li&gt;最終納品のときに reST を Office 形式に変換して納品する

&lt;ul&gt;
&lt;li&gt;ただしこの変換、逆はできないのでいったっきり&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;顧客&lt;/code&gt; には Office でなおしてもらう&lt;/li&gt;
&lt;li&gt;改修のお鉢が &lt;code&gt;プロジェクト&lt;/code&gt; に回ってきた場合は (-人-)&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>kawasaki.rb #010 で発表してきました #kwskrb</title>
   <link href="http://gosyujin.github.io/2014/04/01/kawasakirb-010"/>
   <updated>2014-04-01T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2014/04/01/kawasakirb-010</id>
   <content type="html">&lt;h2 id=&quot;あらすじ&quot;&gt;あらすじ&lt;/h2&gt;

&lt;p&gt;詳細は主催者の @&lt;a href=&quot;https://twitter.com/chezou&quot;&gt;chezou&lt;/a&gt; さんのまとめから。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://kawasakirb.doorkeeper.jp/events/9584&quot;&gt;Kawasaki.rb #010 - Kawasaki.rb ｜ Doorkeeper&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://chezou.wordpress.com/2014/03/30/kawawaki-rb-010-%e3%82%92%e9%96%8b%e5%82%ac%e3%81%97%e3%81%be%e3%81%97%e3%81%9f-kwskrb/&quot;&gt;kawawaki.rb #010 を開催しました #kwskrb ｜ once upon a time,&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;kawasaka.rb というコミュニティを知り、参加。&lt;/p&gt;

&lt;p&gt;はじめて LT した！&lt;/p&gt;

&lt;h3 id=&quot;流れ&quot;&gt;流れ&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;今回予定されていた LT の 1 本が @chezou さんの「はじめて翻訳記事を書いたら300ブクマ超えた話」

&lt;ul&gt;
&lt;li&gt;ブログ記事とソフトウェアのドキュメントの違いこそあれ、方向は大分近いかも&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;流れで 次枠の LT に入れてもらった

&lt;ul&gt;
&lt;li&gt;スライドなど用意していなかったため、 &lt;a href=&quot;http://d.hatena.ne.jp/kk_Ataka/20140314/1394723421&quot;&gt;自分のエントリ&lt;/a&gt; をもとにやったことと、困っていることを発表した&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;初めての LT だったので緊張したが、得るものがたくさんあった。&lt;/p&gt;

&lt;h2 id=&quot;以下あまりまとまってない内容&quot;&gt;以下あまりまとまってない内容&lt;/h2&gt;

&lt;p&gt;当該記事の中で、自分が困っていると思った項目のうち、「原文はどうしよう？」というところに焦点を当てた。&lt;/p&gt;

&lt;p&gt;困っている項目はこんな感じ。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;意訳 or 直訳？&lt;/li&gt;
&lt;li&gt;原文はどうしよう？&lt;/li&gt;
&lt;li&gt;誰が、どこで、どう管理するか？&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;※ 「誰が、どこで、どう管理するか？」に関しては、プロジェクトの方針を決める人たちが「こうしたい」と決めたら、それを尊重するのが一番よいかと。
Jekyll ( &lt;code&gt;jekyllrb.com&lt;/code&gt; )の場合は「 &lt;strong&gt;本家では他言語のドキュメントは管理したくない&lt;/strong&gt; 」という方針のため、日本語用リポジトリ &lt;code&gt;jekyllrb.com.jp&lt;/code&gt; で管理する。&lt;/p&gt;

&lt;p&gt;ここで言う「原文はどうしよう？」には大きく 2 つの悩みがある。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;原文の取り扱い&lt;/li&gt;
&lt;li&gt;原文の更新にどう追従していくか&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;原文の取り扱い&quot;&gt;原文の取り扱い&lt;/h3&gt;

&lt;p&gt;原文(英語)を、まるっと置き換えてしまうと以下のような問題が発生する。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;翻訳チェックのため、日本語訳と原文の対応関係を調べるのは &lt;strong&gt;超面倒くさい&lt;/strong&gt; (できなくはない)

&lt;ol&gt;
&lt;li&gt;原文のリポジトリに赴き&lt;/li&gt;
&lt;li&gt;対象のファイルから&lt;/li&gt;
&lt;li&gt;対応している文章を探し&lt;/li&gt;
&lt;li&gt;原文と日本語訳を比較する&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;これに関しては、 @&lt;a href=&quot;https://twitter.com/merborne&quot;&gt;melborne&lt;/a&gt; さんの &lt;a href=&quot;https://github.com/melborne/togglate&quot;&gt;togglate - GitHub&lt;/a&gt; というライブラリを使えば解決できそうという結論に。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;togglate&lt;/code&gt; を使えば原文を &lt;code&gt;&amp;lt;!--original&lt;/code&gt; &lt;code&gt;--&amp;gt;&lt;/code&gt; で囲めば、翻訳と原文をポップアップ(またはトグル)で比較できるようになる。&lt;/p&gt;

&lt;p&gt;ただし、個人的に使うにあたってちょっと思うところあり &lt;a href=&quot;https://github.com/gosyujin/jekyllrb.com.jp/issues/36&quot;&gt;jekyllrb.com.jp - Issue #36&lt;/a&gt; (まだ使いこなせていないだけの可能性もあるため要調査)&lt;/p&gt;

&lt;h3 id=&quot;原文の更新にどう追従していくか&quot;&gt;原文の更新にどう追従していくか&lt;/h3&gt;

&lt;p&gt;これが今抱えている最大の問題。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;原文更新追従のため、日本語訳から原文の更新箇所を特定するのは &lt;strong&gt;超面倒くさい&lt;/strong&gt; (できなくはない)

&lt;ol&gt;
&lt;li&gt;原文のリポジトリに赴き&lt;/li&gt;
&lt;li&gt;対象ファイルの diff を取り&lt;/li&gt;
&lt;li&gt;更新箇所の差分を確認し&lt;/li&gt;
&lt;li&gt;日本語訳の対応部分と比較し&lt;/li&gt;
&lt;li&gt;原文の変化にあわせて日本語訳も書き換える&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;愚直にやろうと思えばできそうなんだけど、それは嫌だ。&lt;/p&gt;

&lt;p&gt;さてこれを如何に楽にやるか。他のプロジェクトでどうやっているのか気になるところ。&lt;/p&gt;

&lt;p&gt;ここがうまく自動化できれば、円滑に進められそうなんだけどなぁ。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;……と、考えている間に &lt;code&gt;togglate&lt;/code&gt; がアップデートされました！&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://melborne.github.io/2014/04/01/togglate-now-have-reverse-action/&quot;&gt;素晴らしいオープンソースプロジェクトにおける翻訳者たちの憂鬱とその緩和&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;togglate commentout&lt;/code&gt; で更新への追従も自動化できそう！&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Jekyllドキュメントの日本語翻訳リポジトリ「jekyllrb.com.jp」を作成しました</title>
   <link href="http://gosyujin.github.io/2014/03/13/jekyll-make-jekyllrb-com-jp"/>
   <updated>2014-03-13T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2014/03/13/jekyll-make-jekyllrb-com-jp</id>
   <content type="html">&lt;h2 id=&quot;あらすじ&quot;&gt;あらすじ&lt;/h2&gt;

&lt;p&gt;Jekyll プロジェクトに対していろいろやった。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Jekyll プロジェクトのリポジトリルートにある &lt;code&gt;README.markdown&lt;/code&gt; と &lt;code&gt;CONTRIBUTING.markdown&lt;/code&gt; を日本語訳してプルリクした！&lt;/li&gt;
&lt;li&gt;人生初のプルリクエストをささげ、マージしてもらえた。やった！&lt;/li&gt;
&lt;li&gt;いきなりカットインしてきた PR に対してすごく親身に対応してもらえた&lt;/li&gt;
&lt;li&gt;あわせて &lt;a href=&quot;https://github.com/gosyujin/jekyllrb.com.jp&quot;&gt;Jekyllドキュメントの日本語翻訳リポジトリ&lt;/a&gt; を作成した！&lt;/li&gt;
&lt;li&gt;手伝ってくれる人募集中です！お願いします！&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/gosyujin/jekyllrb.com.jp/issues/14&quot;&gt;推敲、翻訳してくれる人の募集(切実) · Issue #14 · gosyujin/jekyllrb.com.jp&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;所感&quot;&gt;所感&lt;/h2&gt;

&lt;p&gt;今回のやり取りを通じて、ドキュメントに対して以下のような観点で考える力が足りないと感じた。&lt;/p&gt;

&lt;p&gt;まだ明確な答えは出ていないので、これからドキュメントを育てつつ答えを探していきたい。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;em&gt;意訳 or 直訳？&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;若干意味が通らない文章になってもいいから、出てくる単語を全て愚直に訳す？&lt;/li&gt;
&lt;li&gt;経験(実際にライブラリを使うと、「このコマンドはこう動くから、この文章ではこう言いたいのだろう」的なニュアンスはわかったりする)をもとに意訳する？

&lt;ul&gt;
&lt;li&gt;前者だと文章がごちゃっとなりそうで、後者だと大事な表現を落としてしまう事が多そう&lt;/li&gt;
&lt;li&gt;他プロジェクトなどで翻訳された文章を読んでいると、前者が多いような気がする…&lt;/li&gt;
&lt;li&gt;もちろんおそろしくカッコよくて読みやすい文章に訳せるならば、それに越したことはない&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;原文はどうしよう？&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;原文(英語)の扱い

&lt;ul&gt;
&lt;li&gt;残す？残さない？また、残す場合はコメントアウト？&lt;/li&gt;
&lt;li&gt;文章を比較する場合や本家の更新に追従する場合、原文がないとわけわからなくならない？ diff とかとるのに&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;本家への追従の仕方

&lt;ul&gt;
&lt;li&gt;本家のドキュメントにどうやってついていく？&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;誰が、どこで、どう管理するか？&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Author と Committer が読めない(管理できない)ブツはどのように管理すべきなのか

&lt;ul&gt;
&lt;li&gt;本家のリポジトリに &lt;code&gt;jp&lt;/code&gt; とか &lt;code&gt;en&lt;/code&gt; みたいにディレクトリ切ってそこで管理していく&lt;/li&gt;
&lt;li&gt;翻訳したドキュメントは、その言語を取り扱える別の人が所有し、本家はそこをフォークしておく&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;この辺、他のプロジェクトではどうやっているんだろう。&lt;/p&gt;

&lt;h2 id=&quot;プルリクに至るまでの思考と行動の流れ&quot;&gt;プルリクに至るまでの思考と行動の流れ&lt;/h2&gt;

&lt;p&gt;以下、おまけ。&lt;/p&gt;

&lt;p&gt;いかにして Jekyll にプルリクするに至ったかの経緯。&lt;/p&gt;

&lt;h3 id=&quot;起&quot;&gt;起&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;2014 年になったしなんかしたいな(うっすら)&lt;/li&gt;
&lt;li&gt;今年は少しドキュメントの原文を読む機会を増やしてみようか&lt;/li&gt;
&lt;li&gt;何読もう&lt;/li&gt;
&lt;li&gt;Ruby の Gem のドキュメントか何かが良いかな&lt;/li&gt;
&lt;li&gt;1 年くらい &lt;code&gt;Jekyll&lt;/code&gt; でブログ書くようにしてるし、いろいろ内部のことも知りたいし &lt;code&gt;Jekyll&lt;/code&gt; のドキュメントを読んでみよう！&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;承&quot;&gt;承&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;知らないオプションとか発見したいから &lt;code&gt;configuration&lt;/code&gt; ページあたりから読んでみようか…&lt;/li&gt;
&lt;li&gt;待てよ、せっかく読むんなら翻訳しながら読んでみる？&lt;/li&gt;
&lt;li&gt;翻訳するんならコントリビュートしてみたいな&lt;/li&gt;
&lt;li&gt;既にやってる人は……いないっぽい&lt;/li&gt;
&lt;li&gt;とって食われるわけではないはずなので、どうせなら投げてみよう！ダメならリジェクトされればいいか&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;転&quot;&gt;転&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;コントリビュートのやり方は &lt;code&gt;CONTRIBUTING.markdown&lt;/code&gt; に書いてあったな…&lt;/li&gt;
&lt;li&gt;ならば &lt;code&gt;CONTRIBUTING.markdown&lt;/code&gt; から翻訳しよう&lt;/li&gt;
&lt;li&gt;よくみたら同じ階層に &lt;code&gt;README.markdown&lt;/code&gt; もあるからこれも併せて翻訳してみよう&lt;/li&gt;
&lt;li&gt;牛歩で翻訳…&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;結&quot;&gt;結&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;翻訳できた&lt;/li&gt;
&lt;li&gt;自分で翻訳した &lt;code&gt;CONTRIBUTING.markdown&lt;/code&gt; を読みながら Jekyll へのコントリビュートのやり方を確認&lt;/li&gt;
&lt;li&gt;「文章の更新」については書いてるけど、新規文書の追加の仕方は書いてないな…&lt;/li&gt;
&lt;li&gt;ええいままよで、わからないことは質問してみよう &lt;a href=&quot;https://github.com/jekyll/jekyll/pull/2081&quot;&gt;Translated of README.markdown and CONTRIBUTING.markdown into Japanese. by gosyujin · Pull Request #2081 · jekyll/jekyll · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;マージされた！&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;日本語翻訳用リポジトリを作成するまでのやりとり-jekyllのpr上&quot;&gt;日本語翻訳用リポジトリを作成するまでのやりとり(JekyllのPR上)&lt;/h2&gt;

&lt;p&gt;次に、 Jekyll ドキュメントの翻訳リポジトリを作るに至ったかの経緯。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/jekyll/jekyll/pull/2081&quot;&gt;上記のプルリクエスト&lt;/a&gt; が close された後もやりとりを…。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;docs&lt;/code&gt; 下の翻訳もしたいが、どこにどういうファイル名で置けば良い？&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;我々は日本語の読み書きができないから確認ができない&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;メンテナンス性も下がるから、できるだけ(オリジナル以外の)ドキュメントを管理したくない&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;「&lt;a href=&quot;https://github.com/matheus/jekyllrb.com.br&quot;&gt;@matheus が自分のリポジトリを作ってやってる&lt;/a&gt; から参考にしてみて」&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;※ @matheus さんはブラジルドメインでポルトガル翻訳(？)をやっている模様&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;とのこと。言ってることはごもっとも。どう管理するのが一番良いんだろう？&lt;/p&gt;

&lt;p&gt;結局、翻訳サイトは(上記の &lt;code&gt;jekyllrb.com.br&lt;/code&gt; も含めて) Jekyll 本家からフォークして参照するのが一番良いのではないかという意見もあり。&lt;/p&gt;

&lt;p&gt;やるならリポジトリを作ってそこでやってみたらどうかと助言をいただく。&lt;/p&gt;

&lt;p&gt;というわけで始動させてみました！よろしくお願いします！&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Redmine 2.x でテストを実行するとエラーになってしまう</title>
   <link href="http://gosyujin.github.io/2014/02/24/redmine-test"/>
   <updated>2014-02-24T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2014/02/24/redmine-test</id>
   <content type="html">&lt;h2 id=&quot;あらすじ&quot;&gt;あらすじ&lt;/h2&gt;

&lt;p&gt;Redmine 2.x でプラグインだけをテストするにはどうしたらいいのか。&lt;/p&gt;

&lt;p&gt;と、実行するとエラーになってしまった。&lt;/p&gt;

&lt;h2 id=&quot;環境&quot;&gt;環境&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Windows 7&lt;/li&gt;
&lt;li&gt;Redmine 2.x&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;参考サイト&quot;&gt;参考サイト&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://redmine.jp/tech_note/plugins/developer/quickref/run-test/&quot;&gt;テストの実行 — Redmine.JP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.mkt-sys.jp/2013/06/redmine.html&quot;&gt;tail -f pinzo.log: Redmine プラグインのテストが実行できるまで&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://haruiida.blogspot.com/2012/06/redmine-20x.html&quot;&gt;Haru&amp;#39;s blog: Redmine 2.0.xにプラグインを移植する&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;手順&quot;&gt;手順&lt;/h2&gt;

&lt;p&gt;公式には &lt;code&gt;rake test:engines:units&lt;/code&gt; とか &lt;code&gt;rake test:engines:functionals&lt;/code&gt; でいけるって書いてあるけどだめだった。昔のバージョンから変わってるっぽい。&lt;/p&gt;

&lt;p&gt;タスクを見てみると…。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;go&quot;&gt;rake redmine:plugins:test                        # Runs the plugins tests&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;rake redmine:plugins:test:functionals            # Run tests for {:function...&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;rake redmine:plugins:test:integration            # Run tests for {:integrat...&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;rake redmine:plugins:test:units                  # Run tests for {:units=&amp;gt;&amp;quot;...&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;rake redmine:send_reminders                      # Send reminders about iss...&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;rake redmine:tokens:prune                        # Removes expired tokens&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;rake redmine:watchers:prune                      # Removes watchers from wh...&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;rake routes                                      # Print out all defined ro...&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;rake secret                                      # Generate a cryptographic...&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;rake stats                                       # Report code statistics (...&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;rake test                                        # Runs test:units, test:fu...&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;rake test:coverage                               # Measures test coverage&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;rake test:rdm_routing                            # Run tests for rdm_routin...&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;rake test:recent                                 # Run tests for {:recent=&amp;gt;...&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;rake test:scm                                    # Run unit and functional ...&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;rake test:scm:functionals                        # Run tests for {:function...&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;rake test:scm:setup:all                          # Creates all test reposit...&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;rake test:scm:setup:bazaar                       # Creates a test bazaar re...&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;rake test:scm:setup:create_dir                   # Creates directory for te...&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;rake test:scm:setup:cvs                          # Creates a test cvs repos...&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;rake test:scm:setup:darcs                        # Creates a test darcs rep...&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;rake test:scm:setup:filesystem                   # Creates a test filesyste...&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;rake test:scm:setup:git                          # Creates a test git repos...&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;rake test:scm:setup:mercurial                    # Creates a test mercurial...&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;rake test:scm:setup:subversion                   # Creates a test subversio...&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;rake test:scm:units                              # Run tests for {:units=&amp;gt;&amp;quot;...&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;rake test:scm:update                             # Updates installed test r...&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;rake test:single                                 # Run tests for {:single=&amp;gt;...&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;rake test:ui                                     # Run tests for {:ui=&amp;gt;&amp;quot;db:...&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;rake test:uncommitted                            # Run tests for {:uncommit...&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;test:engines&lt;/code&gt; なんてタスクはなかった。代わりに &lt;code&gt;redmine:plugins:test:xxxx&lt;/code&gt; とかがあるからこれを使うんだろう。&lt;/p&gt;

&lt;p&gt;しかし、実行してみるとなんか変なエラー。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; rake redmine:plugins:test:functionals
&lt;span class=&quot;go&quot;&gt;C:/local/redmine-2.3.1/vendor/bundle/ruby/1.9.1/gems/activesupport-3.2.13/lib/active_support/dependencies.rb:252:in `require&amp;#39;: cannot load such file -- C:/local/test/test_helper (LoadError)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        from C:/local/redmine-2.3.1/vendor/bundle/ruby/1.9.1/gems/activesupport-3.2.13/lib/active_support/dependencies.rb:252:in `block in require&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        from C:/local/redmine-2.3.1/vendor/bundle/ruby/1.9.1/gems/activesupport-3.2.13/lib/active_support/dependencies.rb:236:in `load_dependency&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        from C:/local/redmine-2.3.1/vendor/bundle/ruby/1.9.1/gems/activesupport-3.2.13/lib/active_support/dependencies.rb:252:in `require&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        from C:/local/redmine-2.3.1/plugins/redmine_importer/test/test_helper.rb:2:in `&amp;lt;top (required)&amp;gt;&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        from C:/local/redmine-2.3.1/vendor/bundle/ruby/1.9.1/gems/activesupport-3.2.13/lib/active_support/dependencies.rb:252:in `require&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        from C:/local/redmine-2.3.1/vendor/bundle/ruby/1.9.1/gems/activesupport-3.2.13/lib/active_support/dependencies.rb:252:in `block in require&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        from C:/local/redmine-2.3.1/vendor/bundle/ruby/1.9.1/gems/activesupport-3.2.13/lib/active_support/dependencies.rb:236:in `load_dependency&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        from C:/local/redmine-2.3.1/vendor/bundle/ruby/1.9.1/gems/activesupport-3.2.13/lib/active_support/dependencies.rb:252:in `require&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        from C:/local/redmine-2.3.1/plugins/redmine_importer/test/functional/importer_controller_test.rb:1:in `&amp;lt;top (required)&amp;gt;&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        from C:/local/redmine-2.3.1/vendor/bundle/ruby/1.9.1/gems/activesupport-3.2.13/lib/active_support/dependencies.rb:252:in `require&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        from C:/local/redmine-2.3.1/vendor/bundle/ruby/1.9.1/gems/activesupport-3.2.13/lib/active_support/dependencies.rb:252:in `block in require&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        from C:/local/redmine-2.3.1/vendor/bundle/ruby/1.9.1/gems/activesupport-3.2.13/lib/active_support/dependencies.rb:236:in `load_dependency&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        from C:/local/redmine-2.3.1/vendor/bundle/ruby/1.9.1/gems/activesupport-3.2.13/lib/active_support/dependencies.rb:252:in `require&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        from C:/local/redmine-2.3.1/vendor/bundle/ruby/1.9.1/gems/rake-10.1.0/lib/rake/rake_test_loader.rb:15:in `block in &amp;lt;main&amp;gt;&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        from C:/local/redmine-2.3.1/vendor/bundle/ruby/1.9.1/gems/rake-10.1.0/lib/rake/rake_test_loader.rb:4:in `select&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        from C:/local/redmine-2.3.1/vendor/bundle/ruby/1.9.1/gems/rake-10.1.0/lib/rake/rake_test_loader.rb:4:in `&amp;lt;main&amp;gt;&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;rake aborted!&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Command failed with status (1): [ruby -I&amp;quot;lib;test&amp;quot; -I&amp;quot;C:/local/redmine-2.3.1/vendor/bundle/ruby/1.9.1/gems/rake-10.1.0/lib&amp;quot; &amp;quot;C:/local/redmine-2.3.1/vendor/bundle/ruby/1.9.1/gems/rake-10.1.0/lib/rake/rake_test_loader.rb&amp;quot; &amp;quot;plugins/*/test/functional/**/*_test.rb&amp;quot; ]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;なんか Redmine のあるディレクトリ( &lt;code&gt;C:/local/redmine-2.3.1&lt;/code&gt; )より上に遡ってrequireしようとしてる…？&lt;/p&gt;

&lt;p&gt;plugins 下にあるプラグインディレクトリの test_helper でしくってるよう。&lt;/p&gt;

&lt;p&gt;該当ファイルを確認してみると&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# Load the normal Rails helper&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;expand_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dirname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;__FILE__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/../../../../test/test_helper&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;確かにこれだと一階層上にあがってるな。。&lt;/p&gt;

&lt;p&gt;あ、もしかしてプラグイン場所が変わったから直さないといけないのか！&lt;/p&gt;

&lt;p&gt;前は &lt;code&gt;vendor/plugins&lt;/code&gt; とかそんな場所だった気がする！&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://haruiida.blogspot.com/2012/06/redmine-20x.html&quot;&gt;Haru&amp;#39;s blog: Redmine 2.0.xにプラグインを移植する&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;vendor/pluginsが無い！&lt;/p&gt;

&lt;p&gt;Redmine 2.0ではプラグインディレクトリがROOT/vendor/pluginsからROOT/pluginsに変わりました。 &lt;/p&gt;

&lt;p&gt;pluginのtest_helper.rbの中に以下のコードが書かれていると思います。&lt;/p&gt;

&lt;p&gt;require File.expand&lt;em&gt;path(File.dirname(&lt;/em&gt;&lt;em&gt;FILE&lt;/em&gt;&lt;em&gt;) + &amp;#39;/../../../../test/test&lt;/em&gt;helper&amp;#39;)&lt;/p&gt;

&lt;p&gt;プラグインディレクトリの階層構造が変わったので以下のように’../’を一つ減らす必要があります。&lt;/p&gt;

&lt;p&gt;require File.expand&lt;em&gt;path(File.dirname(&lt;/em&gt;&lt;em&gt;FILE&lt;/em&gt;&lt;em&gt;) + &amp;#39;/../../../test/test&lt;/em&gt;helper&amp;#39;)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;2.0 で &lt;code&gt;vendor/plugins&lt;/code&gt; から &lt;code&gt;plugins&lt;/code&gt; になったみたい！&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Jekyllプロジェクトへpull requestを行う手順(したとは言っていない)</title>
   <link href="http://gosyujin.github.io/2014/01/28/pull-request-to-jekyll"/>
   <updated>2014-01-28T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2014/01/28/pull-request-to-jekyll</id>
   <content type="html">&lt;h2 id=&quot;あらすじ&quot;&gt;あらすじ&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Jekyll に一点気になるところがあったのでなおしかたを調べた&lt;/li&gt;
&lt;li&gt;せっかくなのでプルリクエストしてみたい！&lt;/li&gt;
&lt;li&gt;…が、知らないこと多すぎて頓挫&lt;/li&gt;
&lt;li&gt;とりあえず、今わかったところまでまとめた ← 今ここ&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;なおした内容&quot;&gt;なおした内容&lt;/h2&gt;

&lt;p&gt;Jekyll でかき集められた &lt;code&gt;tags&lt;/code&gt; (タグのリスト) がバラバラのため、 tags.html ページから探すのがつらいのでソートをしたい。&lt;/p&gt;

&lt;h3 id=&quot;修正内容&quot;&gt;修正内容&lt;/h3&gt;

&lt;p&gt;Jekyll のソースを追っていった結果、 &lt;code&gt;jekyll/lib/jekyll/site.rb&lt;/code&gt; 内の一行をいじるだけでいけた。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;post_attr_hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;post_attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;# Build a hash map based on the specified post attribute ( post attr =&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;# array of posts ) then sort each array in reverse order.&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Hash&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hsh&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hsh&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;posts&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;post_attr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_sym&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sortme&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sortme&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sort!&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;     &lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;     &lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sort&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;hash の key でソートしてやる。&lt;/p&gt;

&lt;h3 id=&quot;使用後のイメージ&quot;&gt;使用後のイメージ&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://gosyujin.github.io/tags.html&quot;&gt;Tags - kk_Atakaの日記＠GitHub Pages&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;で。この内容を投げたいのだが、手順がまったくわからないので色々調査……。&lt;/p&gt;

&lt;h2 id=&quot;プルリクへの道&quot;&gt;プルリクへの道&lt;/h2&gt;

&lt;h3 id=&quot;既に実装済みじゃないか調査&quot;&gt;既に実装済みじゃないか調査&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;とりあえず、既存機能(設定ファイルの操作など)では、タグのソートはできない…はず。やり方があったら教えて下さい&lt;/li&gt;
&lt;li&gt;一応、 「 Liquid の領域」で頑張ればできる &lt;strong&gt;かも&lt;/strong&gt; という情報は見つけた&lt;/li&gt;
&lt;li&gt;しかし、そもそもこの「タグをソートする」という機能が、どの領域で受け持つのが妥当なのかわからない( Liquid？ Jekyll？)

&lt;ul&gt;
&lt;li&gt;ソースを読んでいった結果、「タグの value (記事自体)のソート」を Jekyll でやっていたので、 key もここでやればいいんじゃね？と思った&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;既にプロジェクトへ要望としてあがっていないか調査&quot;&gt;既にプロジェクトへ要望としてあがっていないか調査&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/mojombo/jekyll&quot;&gt;mojombo/jekyll ・ GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;まずは、本家の Issues と Pull Requests を見てすでにあがってないか確認してみる。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sort&lt;/code&gt; とか &lt;code&gt;tag&lt;/code&gt; とかで検索してみたが、特に類似しているチケットはない様子。(Issue 内検索とか、 プルリク内検索ってどうやるんだろう？)&lt;/p&gt;

&lt;h3 id=&quot;じゃあプルリクエストを送る&quot;&gt;じゃあプルリクエストを送る&lt;/h3&gt;

&lt;h4 id=&quot;一連の流れ&quot;&gt;一連の流れ&lt;/h4&gt;

&lt;p&gt;ここの進め方はプロジェクトによりけりだと思う。郷に入っては郷に従えで、 Jekyll では以下のページの手順に沿う。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://jekyllrb.com/docs/contributing/&quot;&gt;Contributing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Fork the project.&lt;/li&gt;
&lt;li&gt;Clone down your fork:&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt; git clone git://github.com/&amp;lt;username&amp;gt;/jekyll.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;Create a topic branch to contain your change:&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt; git checkout -b my_awesome_feature
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Hack away, add tests.&lt;/code&gt; Not necessarily in that order.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Make sure everything still passes by running rake.&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;If necessary, &lt;code&gt;rebase your commits into logical chunks, without errors.&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Push the branch up:&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt; git push origin my_awesome_feature
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;Create a pull request against mojombo/jekyll and describe what your change does and the why you think it should be merged.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;順を追って見てみる。&lt;/p&gt;

&lt;h4 id=&quot;最初の作業-fork-とか&quot;&gt;最初の作業 fork とか&lt;/h4&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Fork the project.&lt;/li&gt;
&lt;li&gt;Clone down your fork:&lt;/li&gt;
&lt;li&gt;Create a topic branch to contain your change:&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;本家を fork して、ローカルに clone して、修正用のブランチを作る。&lt;/p&gt;

&lt;p&gt;この辺はなんとなくわかる。&lt;/p&gt;

&lt;h4 id=&quot;テストを作る&quot;&gt;テストを作る&lt;/h4&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Hack away, add tests.&lt;/code&gt; Not necessarily in that order.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;修正して &lt;strong&gt;テストを追加&lt;/strong&gt; する。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;!! Contributions will not be accepted without tests&lt;/code&gt; と言われているのでテストがないと門前払いっぽい。&lt;/p&gt;

&lt;p&gt;ただ、テストって言われてもどう作ればいいのか…？&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://jekyllrb.com/docs/contributing/&quot;&gt;Contributing&lt;/a&gt; に立ち戻ってみると、修正内容の種類によってどうすればよいか書かれていた。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;小さい修正か、既にある機能のパッチの場合&lt;/li&gt;
&lt;li&gt;新しい機能の場合&lt;/li&gt;
&lt;li&gt;ドキュメンテーションの場合&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;今回は一つ目だな。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you’re creating a small fix or patch to an existing feature, just a simple test will do. Please stay in the confines of the current test suite and use Shoulda and RR.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Shoulda と RR を使ってテストを書けばいいの…？&lt;/p&gt;

&lt;p&gt;※ ただし、両方とも聞いたことない&lt;/p&gt;

&lt;p&gt;これに関しては一旦置いといて、続き。&lt;/p&gt;

&lt;h4 id=&quot;jekyll-を壊してない事を確認したらプルリク&quot;&gt;Jekyll を壊してない事を確認したらプルリク&lt;/h4&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Make sure everything still passes by running rake.&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;rake を通せと。&lt;/p&gt;

&lt;p&gt;確かに fork した Jekyll を rake すると、ガンガンテストが走りエラー 0 でフィニッシュした。&lt;/p&gt;

&lt;p&gt;これを壊すなということか。&lt;/p&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;If necessary, &lt;code&gt;rebase your commits into logical chunks, without errors.&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;エラーが出ないようにコミットを意味のあるかたまりに rebase せよ。&lt;/p&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Push the branch up:&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;ブランチをプッシュせよ。&lt;/p&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Create a pull request against mojombo/jekyll and describe what your change does and the why you think it should be merged.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;最後に &lt;code&gt;mojombo/jekyll&lt;/code&gt; にプルリクしてね。なぜ Jekyll は you の修正をマージすべきなのかを記載してね。&lt;/p&gt;

&lt;p&gt;…結構果てしないな。&lt;/p&gt;

&lt;h2 id=&quot;shoulda-と-rr&quot;&gt;Shoulda と RR&lt;/h2&gt;

&lt;p&gt;結局このテストツールの事がわからなかったので、テスト書けず。&lt;/p&gt;

&lt;p&gt;調べてみよう……。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://casperfabricius.com/site/2009/07/25/test-driven-rails-development-with-rspec-rr-shoulda-factory-girl-and-stubble/&quot;&gt;Test-driven Rails development with RSpec, RR, Shoulda, Factory Girl and Stubble｜casperfabricius.com&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/thoughtbot/shoulda/tree/master&quot;&gt;thoughtbot/shoulda ・ GitHub&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://d.hatena.ne.jp/irohiroki/20071024/shoulda&quot;&gt;RSpecよりShoulda、fixturesよりヘルパーとMocha - Unexplored Rails&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/rr/rr&quot;&gt;rr/rr ・ GitHub&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://eitoball.blogspot.jp/2010/03/rr-readmerdoc-01010.html&quot;&gt;eitoballの練習帳: rr README.rdoc（バージョン 0.10.10）私訳&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>2013年kpt</title>
   <link href="http://gosyujin.github.io/2013/12/31/kpt-2013"/>
   <updated>2013-12-31T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2013/12/31/kpt-2013</id>
   <content type="html">&lt;h2 id=&quot;今年学んだこと&quot;&gt;今年学んだこと&lt;/h2&gt;

&lt;p&gt;いろいろ作ってみた系。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Ruby

&lt;ul&gt;
&lt;li&gt;自分で使う用のなにかを書いてみた&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/gosyujin/nico_cui&quot;&gt;gosyujin/nico_cui · GitHub&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;ニコ動をパトロールするスクリプト&lt;/li&gt;
&lt;li&gt;&lt;code&gt;thor&lt;/code&gt; 使ってコマンドをカッコよくしたり、 &lt;code&gt;mechanize&lt;/code&gt; でサイトパースしたり&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://tycoon-qr-sina.herokuapp.com/&quot;&gt;QR-Sina Heroku&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;QRコード作成。 &lt;code&gt;sinatra&lt;/code&gt; で起動&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Redmine

&lt;ul&gt;
&lt;li&gt;決まった時間に Redmine のバックアップを取るプラグインを作った&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/gosyujin/auto_backup&quot;&gt;gosyujin/auto_backup · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Jekyll

&lt;ul&gt;
&lt;li&gt;1年間 Jekyll + Markdown でブログ書いた&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Liquid&lt;/code&gt; ではてな記法の注釈的な事ができるプラグインを作ってみた&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/gosyujin/gosyujin.github.com/blob/source/_plugins/gosyujin.github.com/reference.rb&quot;&gt;reference.rb · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;いろいろ調べてみた系。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;iOS, Android

&lt;ul&gt;
&lt;li&gt;必要にせまられて調べ物&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://d.hatena.ne.jp/kk_Ataka/20130718/1374151752&quot;&gt;iOSのバックアップ/リストアで残るもの/消えるもの それを編集する手段 - kk_Atakaの日記&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://d.hatena.ne.jp/kk_Ataka/20130804/1375624170&quot;&gt;Androidアプリのインストール、起動方法によってIntentのフラグが微妙に変わる件 - kk_Atakaの日記&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://d.hatena.ne.jp/kk_Ataka/20130828/1377693786&quot;&gt;Androidの自動テストツール、今(2013年)から使うなら何がよいのか - kk_Atakaの日記&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Sphinx

&lt;ul&gt;
&lt;li&gt;「Sphinxをはじめよう」を読んでどうやったら導入に持っていけそうか策を練ったり&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Android のテストツールに関しては、&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;＼まさかのはてブトップ入り／&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;必要に迫られて調べた自分用メモが、たまたま他の人のニーズとあってたんだろうな。&lt;/p&gt;

&lt;h2 id=&quot;keep&quot;&gt;Keep&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;上記で作ったものたちをちゃんと育てていく&lt;/li&gt;
&lt;li&gt;勤怠入力とかメンドクサイ処理は Jenkins + Selenium で自動化して祝 1 周年。今後も自分でやらないようにする&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;problem&quot;&gt;Problem&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;調べたことが宙ぶらりん

&lt;ul&gt;
&lt;li&gt;いろいろ調べて自分なりにまとめたりするものの、諸般の事情でその後使わないことが多すぎた……&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Haskell

&lt;ul&gt;
&lt;li&gt;今年はじめに本買って写経してみたが、挫折……なんか脳みそを切り替えないといかんのかなぁ&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;try&quot;&gt;Try&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Chef, Capistrano

&lt;ul&gt;
&lt;li&gt;Chef は Chef 本を買って遊んでみたりしたけど、実際にサーバを管理してみたい&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Python

&lt;ul&gt;
&lt;li&gt;Sphinx を使うにあたって最低限の書き方とか知っておきたい&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;社内で布教活動とかしてみる

&lt;ul&gt;
&lt;li&gt;とりあえず、 Git と Sphinx に関して語ってみたい&lt;/li&gt;
&lt;li&gt;Sphinx に関しては、とりあえず小さいところからでも導入して実績をつくりたい！&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>RubyでQRコードを生成してみる</title>
   <link href="http://gosyujin.github.io/2013/12/24/ruby-qr"/>
   <updated>2013-12-24T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2013/12/24/ruby-qr</id>
   <content type="html">&lt;h2 id=&quot;あらすじ&quot;&gt;あらすじ&lt;/h2&gt;

&lt;p&gt;この記事は &lt;a href=&quot;http://qiita.com/advent-calendar/2013/ruby&quot;&gt;Ruby Advent Calendar 2013 - Qiita [キータ]&lt;/a&gt; の 24 日目の記事です。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;23 日目: &lt;a href=&quot;http://qiita.com/mrkn&quot;&gt;mrkn&lt;/a&gt;さん&lt;/li&gt;
&lt;li&gt;24 日目: ここ&lt;/li&gt;
&lt;li&gt;25 日目: &lt;a href=&quot;http://qiita.com/aereal&quot;&gt;aereal&lt;/a&gt;さん&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;とりあえず、私用で URL から QR コードを生成したいので、 Ruby で実現できるか調べてみた。&lt;/p&gt;

&lt;h2 id=&quot;成果物&quot;&gt;成果物&lt;/h2&gt;

&lt;p&gt;とりあえず、以降の手順の QR コード作成方をもう少しゴチャゴチャやって Heroku にデプロイ。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://tycoon-qr-sina.herokuapp.com/&quot;&gt;tycoon-qr-sina&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/gosyujin/qr_sina&quot;&gt;gosyujin/qr_sina · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;課題&quot;&gt;課題&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;特にエラーチェックとかしてない&lt;/li&gt;
&lt;li&gt;&lt;del&gt;日本語がうまく読み取れない&lt;/del&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;今回使った &lt;code&gt;rqrcode&lt;/code&gt; の Issue の中にこんなものを発見した。 &lt;a href=&quot;https://github.com/whomwah/rqrcode/issues/3&quot;&gt;UTF8 strings under Ruby 1.9.2 · Issue #3 · whomwah/rqrcode · GitHub&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;で、やってみると、確かに日本語を QR コードに落とす事ができた！&lt;/p&gt;

&lt;p&gt;ただし、ここでさらにわからないことが増えた…。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;UTF-8 文字列を安全に CP852 に変換する方法(今は &lt;code&gt;force_encoding&lt;/code&gt; で無理やり変換している)&lt;/li&gt;
&lt;li&gt;なんで CP852 なのか&lt;/li&gt;
&lt;li&gt;そもそも CP852 とは&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;参考サイト&quot;&gt;参考サイト&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/toretore/barby&quot;&gt;toretore/barby · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://osc.matsukei.net/projects/thinreports/wiki/Example_Embed_barcode&quot;&gt;Example Embed barcode - ThinReports - Matsukei Open Source Center&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://d.hatena.ne.jp/tgg/20090528/1243442920&quot;&gt;Railsの画面にQRコードを表示 - 技術メモ的なモノと気になるモノ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://d.conma.me/entry/20090322/1237726645&quot;&gt;RubyでQRコードを作るには - まめ畑&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dharry.hatenablog.com/entry/2013/09/08/164335&quot;&gt;rubyでQRコード生成 - harry’s memorandum&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;環境&quot;&gt;環境&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Windows 7&lt;/li&gt;
&lt;li&gt;Ruby 1.9.3

&lt;ul&gt;
&lt;li&gt;RubyGems 1.8.25&lt;/li&gt;
&lt;li&gt;Bundler 1.3.5&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;手順&quot;&gt;手順&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;barby&lt;/code&gt; という Ruby のバーコード生成ライブラリを使用する&lt;/li&gt;
&lt;li&gt;barby から QR コードを生成するために &lt;code&gt;rqrcode&lt;/code&gt; が必要&lt;/li&gt;
&lt;li&gt;QR コードを画像で吐き出すために &lt;code&gt;chunky_png&lt;/code&gt; が必要(画像なら何形式でもよかった)&lt;/li&gt;
&lt;li&gt;吐き出した png をブラウザから確認するために &lt;code&gt;sinatra&lt;/code&gt; を使用&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;ソースコード&quot;&gt;ソースコード&lt;/h2&gt;

&lt;p&gt;という事で、必要なgem。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;sinatra&amp;#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;barby&amp;#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;rqrcode&amp;#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;chunky_png&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;URL を QR コードに変換するには、&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;QR コードにしたい文字列を用意&lt;/li&gt;
&lt;li&gt;QR コードとして読み込む&lt;/li&gt;
&lt;li&gt;変換したい形式の Outputter で読み込む(今回は png )&lt;/li&gt;
&lt;li&gt;読み込んだ &lt;em&gt;バイナリデータ&lt;/em&gt; を書き出す&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;コードはこんな感じ。これは google の Url を QR に変換している。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# encoding: utf-8&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;barby&amp;quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;barby/barcode/qr_code&amp;quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;barby/outputter/ascii_outputter&amp;quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;barby/outputter/png_outputter&amp;quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;rqrcode&amp;quot;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;QR&lt;/span&gt;
  &lt;span class=&quot;kp&quot;&gt;extend&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;barcode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nil?&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;EOS&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;sh&quot;&gt;        http://google.com&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;      EOS&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;code&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Barby&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;QrCode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;encode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;UTF-8&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;type&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;when&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:png&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;blob&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Barby&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;PngOutputter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;./barcode.png&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;wb&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;png&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;blob&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_png&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;write&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;png&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;when&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:ascii&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_ascii&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;vg&quot;&gt;$0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;__FILE__&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;QR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;barcode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:ascii&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;一番初めは ASCII で出力してみるといいかも。&lt;/p&gt;

&lt;p&gt;出した結果。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ruby&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;qr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rb&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;           &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;                 &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;              &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;                 &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;           &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;                 &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;                 &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;
                            &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;           &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;              &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;           &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;              &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;                 &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;           &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;           &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;           &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;                 &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;                 &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;              &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;
                         &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;           &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;              &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;                 &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;                 &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;           &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;              &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;              &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;           &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;           &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;                 &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;                 &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;ここに sinatra ( &lt;code&gt;start.rb&lt;/code&gt; )から呼ぶように。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;equire&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;sinatra&amp;#39;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;qr&amp;#39;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;code&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;QR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;barcode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:png&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;lt;img src=&amp;quot;barcode.png&amp;quot;&amp;gt;&amp;#39;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;はまったとこ&quot;&gt;はまったとこ&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;バイナリファイルを書き込む時は b を忘れないようにする！&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;画像ファイルは生成されるんだけど、開いてみると「こわれています」と表示されてしまう……。&lt;/p&gt;

&lt;p&gt;処理の途中でバイナリを確認していくと、こうなっていた。&lt;/p&gt;

&lt;h3 id=&quot;正常な場合のバイナリデータ&quot;&gt;正常な場合のバイナリデータ&lt;/h3&gt;

&lt;p&gt;ソース内で file オープンして write する直前のものを確認&lt;/p&gt;

&lt;p&gt;&lt;code&gt;89 50 4E 47 0D 0A 1A 0A ...&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;「こわれている」画像のバイナリデータ&quot;&gt;「こわれている」画像のバイナリデータ&lt;/h3&gt;

&lt;p&gt;実際に生成されたブツをバイナリエディタで確認&lt;/p&gt;

&lt;p&gt;&lt;code&gt;89 50 4E 47 0D 0D 0A 1A 0D 0A ...&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;ん？なんか違う。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.yomotsu.net/wp/?p=504&quot;&gt;PNG, GIF, JPEG のバイナリーデータなどについて ｜ ヨモツネット&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://imaya.blog.jp/archives/6136997.html&quot;&gt;PNG 画像の解析と最適化ツール : document&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://marcelk.net/2007-11-22/png-hacking/&quot;&gt;PNG hacking ~ /etc/marcelk&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;シグネチャは PNG ファイルであることを確認するために使用されます。
シグネチャは必ず以下の8バイトとなっています。&lt;/p&gt;

&lt;p&gt;0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;なるほど。シグネチャからしておかしい。そもそもはじめから PNG になっていないのか。&lt;/p&gt;

&lt;p&gt;なんでだろう？&lt;/p&gt;

&lt;p&gt;…と、よくよくコードを見直してみると、 &lt;code&gt;File.open&lt;/code&gt; した時のオプションが &lt;code&gt;w&lt;/code&gt; だった。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;File.open(&amp;#39;./barcode.png&amp;#39;, &amp;#39;w&amp;#39;) do |f|
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;b&lt;/code&gt; オプションを付加すると正常な画像になった！&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;File.open(&amp;#39;./barcode.png&amp;#39;, &amp;#39;wb&amp;#39;) do |f|
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;バイナリで書き込むの初めてだから失念していた。注意しないといかん。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Gitの.git/objectsの中身を追ってみる</title>
   <link href="http://gosyujin.github.io/2013/12/14/git-dotgit-objects"/>
   <updated>2013-12-14T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2013/12/14/git-dotgit-objects</id>
   <content type="html">&lt;h2 id=&quot;あらすじ&quot;&gt;あらすじ&lt;/h2&gt;

&lt;p&gt;この記事は &lt;a href=&quot;http://qiita.com/advent-calendar/2013/git&quot;&gt;Git Advent Calendar 2013&lt;/a&gt; の 14 日目の記事です。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;12 日目: &lt;a href=&quot;https://twitter.com/ton1517&quot;&gt;@ton1517&lt;/a&gt;さん - &lt;a href=&quot;http://ton-up.net/technote/2013/12/12/git-subcommand&quot;&gt;gitのサブコマンドを自分で作る - ton-tech-ton&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;13 日目: &lt;a href=&quot;https://twitter.com/horimislime&quot;&gt;@horimislime&lt;/a&gt;さん - &lt;a href=&quot;http://qiita.com/horimislime/items/84fa431460c8d39f37e6&quot;&gt;git mergeでコンフリクトが発生するか前もって調べる方法 - Qiita [キータ]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;14 日目: ここ&lt;/li&gt;
&lt;li&gt;15 日目: &lt;a href=&quot;http://qiita.com/kyanro@github&quot;&gt;kyanro&lt;/a&gt;さん - &lt;a href=&quot;http://qiita.com/kyanro@github/items/67056e9e4316b2cfe00f&quot;&gt;git - rebase 直後に、自分が修正していたファイルが変更されたかどうかを調べる - Qiita [キータ]&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;とりあえず 12 日目へつなげておきますね。&lt;/p&gt;

&lt;p&gt;最近 Subversion を使うことが多く、めっきり Git を使っていないので、復習として &lt;code&gt;.git/objects&lt;/code&gt; の中身を追ってみた。&lt;/p&gt;

&lt;h2 id=&quot;参考&quot;&gt;参考&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Pro Git 9章 &lt;a href=&quot;http://git-scm.com/book/ja/Git%E3%81%AE%E5%86%85%E5%81%B4&quot;&gt;Git - Gitの内側&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;アリスとボブのGit入門レッスン Chapter 14&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.google.co.jp/url?sa=t&amp;amp;rct=j&amp;amp;q=&amp;amp;esrc=s&amp;amp;source=web&amp;amp;cd=2&amp;amp;cad=rja&amp;amp;ved=0CDQQFjAB&amp;amp;url=http%3A%2F%2Fwww.slideshare.net%2Fnishio%2Fdive-into-git-13060995&amp;amp;ei=6veWUperFciAkQWEioCYBg&amp;amp;usg=AFQjCNFMnXUnpMosnZUk7pSxZBb9vEX-PQ&amp;amp;bvm=bv.57155469,d.dGI&quot;&gt;Dive into .git 日本語版 - SlideShare&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.google.co.jp/url?sa=t&amp;amp;rct=j&amp;amp;q=&amp;amp;esrc=s&amp;amp;source=web&amp;amp;cd=1&amp;amp;ved=0CCkQFjAA&amp;amp;url=http%3A%2F%2Fkeijinsonyaban.blogspot.com%2F2011%2F05%2Fgit.html&amp;amp;ei=-_eWUoJ1gYyTBc-LgPgE&amp;amp;usg=AFQjCNGwMB97m7YLFQppj0QjaPOrpz9Hzw&amp;amp;bvm=bv.57155469,d.dGI&amp;amp;cad=rja&quot;&gt;見えないチカラ: 【翻訳】Gitをボトムアップから理解する&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;結論&quot;&gt;結論&lt;/h2&gt;

&lt;p&gt;とりあえず &lt;em&gt;add さえしていれば&lt;/em&gt; 、ファイルを救える。&lt;/p&gt;

&lt;p&gt;以下、 &lt;code&gt;.git/objects&lt;/code&gt; 下で起こる事。&lt;/p&gt;

&lt;h3 id=&quot;git-add-したとき&quot;&gt;git add したとき&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;$ git add&lt;/code&gt; した瞬間、 add したファイルが &lt;code&gt;.git/objects&lt;/code&gt; 下に生成される

&lt;ul&gt;
&lt;li&gt;Git で決められたヘッダ情報と、ファイル中身から算出される SHA1 でファイル構造が決定する&lt;/li&gt;
&lt;li&gt;具体的には頭 2 文字でディレクトリを作り、残りの文字でファイル名&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;go&quot;&gt;SHA1 557db03de997c86a4a028e1ebd3a1ceb225be238&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  ファイル .git/objects/55/7db03de997c86a4a028e1ebd3a1ceb225be238&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;add したときに作られるこのファイルは &lt;code&gt;blob&lt;/code&gt; オブジェクトと呼ばれる

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;blob&lt;/code&gt; オブジェクトは構造など持たない&lt;/li&gt;
&lt;li&gt;構造を管理するのは後述する他のオブジェクト&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;このファイルは &lt;code&gt;$ git cat-file&lt;/code&gt; で中身を確認できる(他のコマンドでもいける)

&lt;ul&gt;
&lt;li&gt;zlib 圧縮されているだけなので、自力で解凍して中身を確認することもできる&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;git-commit-したとき&quot;&gt;git commit したとき&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;$ git commit&lt;/code&gt; すると、 2 つ以上のファイルが &lt;code&gt;.git/objects&lt;/code&gt; 下に生成される

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;commit&lt;/code&gt; オブジェクトと &lt;code&gt;tree&lt;/code&gt; オブジェクト&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;commit&lt;/code&gt; オブジェクトからは、以下のことがわかる

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;tree&lt;/code&gt; オブジェクト(コミットした時のファイル一覧)&lt;/li&gt;
&lt;li&gt;1つ前の &lt;code&gt;commit&lt;/code&gt; オブジェクト&lt;/li&gt;
&lt;li&gt;merge した場合など、複数の親を持つ場合は親の分だけ前のオブジェクトの情報を持つ&lt;/li&gt;
&lt;li&gt;作成した人、コミットした人&lt;/li&gt;
&lt;li&gt;コミットログ&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git cat-file -p 047f8f6f81e483c5c3004cd80d5ecb81a7f64090
&lt;span class=&quot;go&quot;&gt;tree c3b5990fc81599cd04934d349b2c08a952f16c18               # コミットした時のファイル一覧&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;parent c11123084bd99af451ddf8eaad378b9a0a5ae695             # 1つ前の commit オブジェクト&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;author kk_Ataka &amp;lt;kk_ataka@example.com&amp;gt; 1385538273 +0000     # 作成した人&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;committer kk_Ataka &amp;lt;kk_ataka@example.com&amp;gt; 1385538273 +0000  # コミットした人&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;add test.txt                                                # コミットログ&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;tree&lt;/code&gt; オブジェクトからは、以下のことがわかる

&lt;ul&gt;
&lt;li&gt;Git リポジトリルートからのファイル一覧&lt;/li&gt;
&lt;li&gt;それらの SHA1&lt;/li&gt;
&lt;li&gt;&lt;code&gt;blob&lt;/code&gt; オブジェクトか &lt;code&gt;tree&lt;/code&gt; オブジェクトか(ファイルかディレクトリか)&lt;/li&gt;
&lt;li&gt;パーミッション&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tree&lt;/code&gt; オブジェクトは構造をもたない &lt;code&gt;blob&lt;/code&gt; オブジェクトをまとめてくれる&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git cat-file -p c3b5990fc81599cd04934d349b2c08a952f16c18
&lt;span class=&quot;go&quot;&gt;100644 blob 557db03de997c86a4a028e1ebd3a1ceb225be238    README&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;040000 tree 85a2934a71f7385034f934f9ccc8c746b73d4f44    testdir&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;tree&lt;/code&gt; オブジェクト(ディレクトリ) は続く限り繰り返される。&lt;/p&gt;

&lt;h3 id=&quot;git-rm-したとき&quot;&gt;git rm したとき&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;何も起こらない&lt;/li&gt;
&lt;li&gt;コミットした時は、いつもどおり &lt;code&gt;commit&lt;/code&gt; オブジェクトと &lt;code&gt;tree&lt;/code&gt; オブジェクトができる

&lt;ul&gt;
&lt;li&gt;ただし、 &lt;code&gt;tree&lt;/code&gt; オブジェクトからは rm したファイルが除外されている&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ここから先、実際にごちゃごちゃ Git をいじってみて心で理解する。&lt;/p&gt;

&lt;h2 id=&quot;実際にやってみる&quot;&gt;実際にやってみる&lt;/h2&gt;

&lt;h3 id=&quot;前準備&quot;&gt;前準備&lt;/h3&gt;

&lt;p&gt;test 用ディレクトリを作成。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; mkdir git_test
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;git_test/&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;ここで &lt;code&gt;$ git init&lt;/code&gt; 。 &lt;code&gt;.git&lt;/code&gt; ディレクトリが作成され、通常はここにソースなどを置いていく。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git init
&lt;span class=&quot;go&quot;&gt;Initialized empty Git repository in /home/vagrant/git_test/.git/&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; ls -la
&lt;span class=&quot;go&quot;&gt;total 12&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;drwxrwxr-x 3 vagrant vagrant 4096 Nov 26 03:08 .&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;drwx------ 4 vagrant vagrant 4096 Nov 26 03:08 ..&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;drwxrwxr-x 7 vagrant vagrant 4096 Nov 26 03:08 .git&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;今回は、さらに深く進んでいく。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; .git
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; ls -la
&lt;span class=&quot;go&quot;&gt;total 40&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;drwxrwxr-x 7 vagrant vagrant 4096 Nov 26 03:08 .&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;drwxrwxr-x 3 vagrant vagrant 4096 Nov 26 03:08 ..&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;drwxrwxr-x 2 vagrant vagrant 4096 Nov 26 03:08 branches&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-rw-rw-r-- 1 vagrant vagrant   92 Nov 26 03:08 config&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-rw-rw-r-- 1 vagrant vagrant   73 Nov 26 03:08 description&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-rw-rw-r-- 1 vagrant vagrant   23 Nov 26 03:08 HEAD&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;drwxrwxr-x 2 vagrant vagrant 4096 Nov 26 03:08 hooks&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;drwxrwxr-x 2 vagrant vagrant 4096 Nov 26 03:08 info&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;drwxrwxr-x 4 vagrant vagrant 4096 Nov 26 03:08 objects&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;drwxrwxr-x 4 vagrant vagrant 4096 Nov 26 03:08 refs&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;各ファイルの役割はこんな感じ。全てはわかっていない。&lt;/p&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;ファイル&lt;/th&gt;
&lt;th&gt;役割&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;branches/&lt;/td&gt;
&lt;td&gt;新しいバージョンでは使用しない&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;config&lt;/td&gt;
&lt;td&gt;リポジトリ固有の設定&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;description&lt;/td&gt;
&lt;td&gt;GitWebプログラムで使用する&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;HEAD&lt;/td&gt;
&lt;td&gt;現在チェックアウトされているブランチ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;index&lt;/td&gt;
&lt;td&gt;Gitのステージングエリアの情報を保管&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;hooks/&lt;/td&gt;
&lt;td&gt;フックスクリプト集&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;info/&lt;/td&gt;
&lt;td&gt;&lt;code&gt;.gitignore&lt;/code&gt; に記述したくない無視パターンをを保持&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;objects/&lt;/td&gt;
&lt;td&gt;Gitで管理しているファイルの格納場所&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;refs/&lt;/td&gt;
&lt;td&gt;ブランチ内のコミットオブジェクトをさすポインタ&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;今回は、この &lt;code&gt;.git&lt;/code&gt; ディレクトリの中でさらに &lt;code&gt;git init&lt;/code&gt; して &lt;code&gt;.git&lt;/code&gt; ディレクトリ内の変更を管理できるようにした。とりあえず全部 add 。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git init
&lt;span class=&quot;go&quot;&gt;Initialized empty Git repository in /home/vagrant/git_test/.git/.git/&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git add branches/ config description HEAD hooks/ info/ objects/ refs/
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git commit -m &lt;span class=&quot;s2&quot;&gt;&amp;quot;fitst commit&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;まだ変更点はなし。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git status
&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt; On branch master
&lt;span class=&quot;go&quot;&gt;nothing to commit (working directory clean)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;git-add-でファイルを追加&quot;&gt;git add でファイルを追加&lt;/h3&gt;

&lt;h4 id=&quot;操作手順&quot;&gt;操作手順&lt;/h4&gt;

&lt;p&gt;Git で管理するファイルは &lt;code&gt;.git/objects&lt;/code&gt; ディレクトリ下で管理される。&lt;/p&gt;

&lt;p&gt;何かファイルを作ってみる。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Hello World&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; README
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; cat README
&lt;span class=&quot;go&quot;&gt;Hello World&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;作っただけでは、 &lt;code&gt;.git&lt;/code&gt; ディレクトリに変化は起きない。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; .git
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git status
&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt; On branch master
&lt;span class=&quot;go&quot;&gt;nothing to commit (working directory clean)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;ここで &lt;code&gt;$ git add&lt;/code&gt; してみる。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git add README
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git status
&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt; On branch master
&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt; Initial commit
&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt; Changes to be committed:
&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;use &lt;span class=&quot;s2&quot;&gt;&amp;quot;git rm --cached &amp;lt;file&amp;gt;...&amp;quot;&lt;/span&gt; to unstage&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt;       new file:   README
&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;.git/objects&lt;/code&gt; 下が何か変わっている。(indexも変わっているが、今はスルー)&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; .git
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git status
&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt; On branch master
&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt; Untracked files:
&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;use &lt;span class=&quot;s2&quot;&gt;&amp;quot;git add &amp;lt;file&amp;gt;...&amp;quot;&lt;/span&gt; to include in what will be committed&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt;       index
&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt;       objects/&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;ファイルがひとつできてる。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; find ./objects/ -type f
&lt;span class=&quot;go&quot;&gt;./objects/55/7db03de997c86a4a028e1ebd3a1ceb225be238&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;これは、今 add した README ファイルの SHA1 ハッシュ。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;はじめの 2 文字でディレクトリを作り、残り 38 文字でファイル名&lt;/li&gt;
&lt;li&gt;なんでこういう分けかたになっているかは調べ切れなかった&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;$ git cat-file&lt;/code&gt; コマンドでこのハッシュからファイルの中身を確認できる。(中身は　&lt;code&gt;$ git show&lt;/code&gt; でも見ることができる)&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git cat-file -t 557db03de997c86a4a028e1ebd3a1ceb225be238
&lt;span class=&quot;go&quot;&gt;blob # type&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git cat-file -s 557db03de997c86a4a028e1ebd3a1ceb225be238
&lt;span class=&quot;go&quot;&gt;12 # size&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git cat-file -p 557db03de997c86a4a028e1ebd3a1ceb225be238
&lt;span class=&quot;go&quot;&gt;Hello World # 中身&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;また、Git のオブジェクトは zlib 圧縮されているファイルなので、自力で展開することもできる。(ただし、validなフォーマットで圧縮はされていないのでgunzipなどでは展開できないらしい)&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; .git/objects/55
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; ls
&lt;span class=&quot;go&quot;&gt;7db03de997c86a4a028e1ebd3a1ceb225be238&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; irb&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;irb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;001&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;zlib&amp;#39;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;irb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;002&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;7db03de997c86a4a028e1ebd3a1ceb225be238&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#&amp;lt;File:7db03de997c86a4a028e1ebd3a1ceb225be238&amp;gt;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;irb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;003&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Zlib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Inflate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inflate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;blob 12&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x00&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Hello World&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;ヘッダ+ファイルの中身が確認できた。 &lt;code&gt;blob&lt;/code&gt; オブジェクトは 「 &lt;code&gt;&amp;quot;blob&amp;quot; + スペース + ファイルサイズ + &amp;quot;\x00&amp;quot; (NUL 制御コード) + 中身&lt;/code&gt; 」というという構造らしいので、これで OK のようだ。&lt;/p&gt;

&lt;p&gt;ここで出てきた &lt;code&gt;blob&lt;/code&gt; っていうのは、 Git のオブジェクトの種類の1つ。全部で4つある。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;blob&lt;/li&gt;
&lt;li&gt;tree&lt;/li&gt;
&lt;li&gt;commit&lt;/li&gt;
&lt;li&gt;tag&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;git-commit-でファイルコミット&quot;&gt;git commit でファイルコミット&lt;/h3&gt;

&lt;p&gt;いよいよコミットしてみる。&lt;/p&gt;

&lt;h4 id=&quot;操作手順&quot;&gt;操作手順&lt;/h4&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git commit -m &lt;span class=&quot;s2&quot;&gt;&amp;quot;README first commit&amp;quot;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;[master (root-commit) c111230] README first commit&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; 1 files changed, 1 insertions(+), 0 deletions(-)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; create mode 100644 README&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;一心不乱に &lt;code&gt;.git/objects&lt;/code&gt; へ。(それ以外にもいろいろできてる)&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; .git/
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; find ./objects/ -type f
&lt;span class=&quot;go&quot;&gt;./objects/55/7db03de997c86a4a028e1ebd3a1ceb225be238&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;./objects/67/dc4302383b2715f4e0b8c41840eb05b1873697&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;./objects/c1/1123084bd99af451ddf8eaad378b9a0a5ae695&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;何か新しいオブジェクトが 2 個( &lt;code&gt;67dc&lt;/code&gt; と &lt;code&gt;c111&lt;/code&gt; )増えてる。&lt;/p&gt;

&lt;p&gt;中身を見ると、さっき出てきた 4 つのオブジェクトの中の &lt;code&gt;commit&lt;/code&gt; オブジェクトと、 &lt;code&gt;tree&lt;/code&gt; オブジェクトだ。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git cat-file -t c11123084bd99af451ddf8eaad378b9a0a5ae695
&lt;span class=&quot;go&quot;&gt;commit&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git cat-file -s c11123084bd99af451ddf8eaad378b9a0a5ae695
&lt;span class=&quot;go&quot;&gt;182&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git cat-file -p c11123084bd99af451ddf8eaad378b9a0a5ae695
&lt;span class=&quot;go&quot;&gt;tree 67dc4302383b2715f4e0b8c41840eb05b1873697&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;author kk_Ataka &amp;lt;kk_ataka@example.com&amp;gt; 1385505619 +0000&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;committer kk_Ataka &amp;lt;kk_ataka@example.com&amp;gt; 1385505619 +0000&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;README first commit&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;この &lt;code&gt;commit&lt;/code&gt; オブジェクトからは以下のようなことがわかる。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;tree&lt;/code&gt; オブジェクトの SHA1&lt;/li&gt;
&lt;li&gt;作成した人、コミットした人&lt;/li&gt;
&lt;li&gt;コミットログ&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git cat-file -t 67dc4302383b2715f4e0b8c41840eb05b1873697
&lt;span class=&quot;go&quot;&gt;tree&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git cat-file -s 67dc4302383b2715f4e0b8c41840eb05b1873697
&lt;span class=&quot;go&quot;&gt;34&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git cat-file -p 67dc4302383b2715f4e0b8c41840eb05b1873697
&lt;span class=&quot;go&quot;&gt;100644 blob 557db03de997c86a4a028e1ebd3a1ceb225be238    README&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;この &lt;code&gt;tree&lt;/code&gt; オブジェクトからは以下のようなことがわかる。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Git リポジトリルートからのファイル一覧&lt;/li&gt;
&lt;li&gt;SHA1&lt;/li&gt;
&lt;li&gt;種類&lt;/li&gt;
&lt;li&gt;パーミッション&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;※ &lt;code&gt;tree&lt;/code&gt; オブジェクトは &lt;code&gt;$ git ls-tree&lt;/code&gt; でも確認できる。&lt;/p&gt;

&lt;p&gt;次に、コミットログを増やしたいのと、もうちょっと複雑にしたいので、以下のようにディレクトリを作ってその中にファイルを作る。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;testdir&lt;/code&gt; ディレクトリを作る&lt;/li&gt;
&lt;li&gt;その下に &lt;code&gt;test.txt&lt;/code&gt; を作る&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; mkdir testdir
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;test file&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; testdir/test.txt
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git add testdir/test.txt
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git commit -m &lt;span class=&quot;s2&quot;&gt;&amp;quot;add test.txt&amp;quot;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;[master 047f8f6] add test.txt&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; 1 files changed, 1 insertions(+), 0 deletions(-)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; create mode 100644 testdir/test.txt&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;オブジェクト。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; find .git/objects/ -type f
&lt;span class=&quot;go&quot;&gt;.git/objects/04/7f8f6f81e483c5c3004cd80d5ecb81a7f64090&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;.git/objects/55/7db03de997c86a4a028e1ebd3a1ceb225be238&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;.git/objects/c3/b5990fc81599cd04934d349b2c08a952f16c18&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;.git/objects/67/dc4302383b2715f4e0b8c41840eb05b1873697&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;.git/objects/85/a2934a71f7385034f934f9ccc8c746b73d4f44&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;.git/objects/c1/1123084bd99af451ddf8eaad378b9a0a5ae695&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;.git/objects/16/b14f5da9e2fcd6f3f38cc9e584cef2f3c90ebe&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;047f&lt;/code&gt; &lt;code&gt;c3b5&lt;/code&gt; &lt;code&gt;85a2&lt;/code&gt; &lt;code&gt;16b1&lt;/code&gt; が増えた。&lt;/p&gt;

&lt;p&gt;中身を確認すると、さっきまでとは趣きが違うところがいくつかある。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git cat-file -t 047f8f6f81e483c5c3004cd80d5ecb81a7f64090
&lt;span class=&quot;go&quot;&gt;commit&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git cat-file -p 047f8f6f81e483c5c3004cd80d5ecb81a7f64090
&lt;span class=&quot;go&quot;&gt;tree c3b5990fc81599cd04934d349b2c08a952f16c18&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;parent c11123084bd99af451ddf8eaad378b9a0a5ae695&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;author kk_Ataka &amp;lt;kk_ataka@example.com&amp;gt; 1385508273 +0000&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;committer kk_Ataka &amp;lt;kk_ataka@example.com&amp;gt; 1385508273 +0000&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;add test.txt&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;parent&lt;/code&gt; として、このコミットの親がわかるようになってる。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git cat-file -t c3b5990fc81599cd04934d349b2c08a952f16c18
&lt;span class=&quot;go&quot;&gt;tree&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git cat-file -p c3b5990fc81599cd04934d349b2c08a952f16c18
&lt;span class=&quot;go&quot;&gt;100644 blob 557db03de997c86a4a028e1ebd3a1ceb225be238    README&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;040000 tree 85a2934a71f7385034f934f9ccc8c746b73d4f44    testdir&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git cat-file -t 85a2934a71f7385034f934f9ccc8c746b73d4f44
&lt;span class=&quot;go&quot;&gt;tree&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git cat-file -p 85a2934a71f7385034f934f9ccc8c746b73d4f44
&lt;span class=&quot;go&quot;&gt;100644 blob 16b14f5da9e2fcd6f3f38cc9e584cef2f3c90ebe    test.txt&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;tree&lt;/code&gt; オブジェクトとして、 testdir が追加されてる。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git cat-file -t 16b14f5da9e2fcd6f3f38cc9e584cef2f3c90ebe
&lt;span class=&quot;go&quot;&gt;blob&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git cat-file -p 16b14f5da9e2fcd6f3f38cc9e584cef2f3c90ebe
&lt;span class=&quot;go&quot;&gt;test file&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;blob&lt;/code&gt; はファイルの内容なのでとりあえず特筆する点なし。&lt;/p&gt;

&lt;h3 id=&quot;親が複数あるとき&quot;&gt;親が複数あるとき&lt;/h3&gt;

&lt;p&gt;merge したときなど、親を複数持つときもあるんじゃなかろうか。&lt;/p&gt;

&lt;p&gt;ということで試してみる。まずは &lt;code&gt;test&lt;/code&gt; ブランチを新しく作成し、ファイルを適当に作ってコミット。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git checkout -b &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Switched to a new branch &amp;#39;test&amp;#39;&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;test branch&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; README
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git add README
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git commit -m &lt;span class=&quot;s2&quot;&gt;&amp;quot;test branch&amp;quot;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;[test 38c9e30] test branch&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; 1 files changed, 1 insertions(+), 0 deletions(-)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;リポジトリのグラフを見てみる。(「g」コマンドは &lt;code&gt;$ git log --graph&lt;/code&gt; に色々手を加えたもののエイリアス)&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git g
&lt;span class=&quot;go&quot;&gt;* 38c9e30 f60ab37 2013-11-28 kk_Ataka  (HEAD, test) test branch&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;* c2333bd 1a53959 2013-11-28 kk_Ataka  (master) master branch&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;* 047f8f6 c3b5990 2013-11-27 kk_Ataka  add test.txt&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;* c111230 67dc430 2013-11-27 kk_Ataka  README first commit&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;では、 &lt;code&gt;master&lt;/code&gt; ブランチに戻り、 &lt;code&gt;master&lt;/code&gt; ブランチに &lt;code&gt;test&lt;/code&gt; ブランチをマージ。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git checkout master
&lt;span class=&quot;go&quot;&gt;Switched to branch &amp;#39;master&amp;#39;&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git merge --no-ff &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Merge made by recursive.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; README |    1 +&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; 1 files changed, 1 insertions(+), 0 deletions(-)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;改めてグラフ。現在の &lt;code&gt;master&lt;/code&gt; ブランチ(= &lt;code&gt;b870b7&lt;/code&gt; )はさっきまで &lt;code&gt;master&lt;/code&gt; だったもの(= &lt;code&gt;c2333&lt;/code&gt; )と、 &lt;code&gt;test&lt;/code&gt; ブランチのもの(= &lt;code&gt;38c9e3&lt;/code&gt; )が親になっているように見える。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git g
&lt;span class=&quot;go&quot;&gt;*   b870b73 f60ab37 2013-11-28 kk_Ataka  (HEAD, master) Merge branch &amp;#39;test&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;|\&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;| * 38c9e30 f60ab37 2013-11-28 kk_Ataka  (test) test branch&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;|/&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;* c2333bd 1a53959 2013-11-28 kk_Ataka  master branch&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;* 047f8f6 c3b5990 2013-11-27 kk_Ataka  add test.txt&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;* c111230 67dc430 2013-11-27 kk_Ataka  README first commit&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;ということで確認。まずは今の場所の &lt;code&gt;commit&lt;/code&gt; オブジェクトのハッシュを改めて取得。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git rev-parse HEAD
&lt;span class=&quot;go&quot;&gt;b870b7313d2fcfda308204b12d5534c5ccac95cb&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;commit&lt;/code&gt; オブジェクトの中身を見てみる。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git cat-file -p b870b7313d2fcfda30
&lt;span class=&quot;go&quot;&gt;tree f60ab375c7a4408527f814167a0dc9285f1cbcca&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;parent c2333bd833a82784ca06a960890a739d43f32c5e&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;parent 38c9e304d897e71c479bf78fe4def6bcb3ad1b72&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;author kk_Ataka &amp;lt;kk_ataka@example.com&amp;gt; 1385633710 +0000&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;committer kk_Ataka &amp;lt;kk_ataka@example.com&amp;gt; 1385633710 +0000&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;Merge branch &amp;#39;test&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;2つある！&lt;/p&gt;

&lt;h3 id=&quot;リポジトリからファイルを消したとき&quot;&gt;リポジトリからファイルを消したとき&lt;/h3&gt;

&lt;p&gt;消したらどうなるんだろう。&lt;/p&gt;

&lt;p&gt;まずは適当なファイルを追加する。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;hello&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; hello.txt
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git add hello.txt
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; find .git/objects/ -type f
&lt;span class=&quot;go&quot;&gt;.git/objects/ce/013625030ba8dba906f756967f9e9ca394464a&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;add したらひとつできてる。 commit したら &lt;code&gt;commit&lt;/code&gt; オブジェクトと &lt;code&gt;tree&lt;/code&gt; オブジェクトのふたつができて、計みっつになるはず。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git commit -m &lt;span class=&quot;s2&quot;&gt;&amp;quot;first commit&amp;quot;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;(略)&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; find .git/objects/ -type f
&lt;span class=&quot;go&quot;&gt;.git/objects/aa/a96ced2d9a1c8e72c56b253a0e2fe78393feb7    # tree&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;.git/objects/30/5fd379be250870d1e55584241637dacb44ec82    # commit&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;.git/objects/ce/013625030ba8dba906f756967f9e9ca394464a    # blob  hello.txt&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git status
&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt; On branch master
&lt;span class=&quot;go&quot;&gt;nothing to commit (working directory clean)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;なってる。&lt;/p&gt;

&lt;p&gt;次に、ファイルを削除。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git rm hello.txt
&lt;span class=&quot;go&quot;&gt;rm &amp;#39;hello.txt&amp;#39;&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git status
&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt; On branch master
&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt; Changes to be committed:
&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;use &lt;span class=&quot;s2&quot;&gt;&amp;quot;git reset HEAD &amp;lt;file&amp;gt;...&amp;quot;&lt;/span&gt; to unstage&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt;       deleted:    hello.txt
&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; find .git/objects/ -type f
&lt;span class=&quot;go&quot;&gt;.git/objects/aa/a96ced2d9a1c8e72c56b253a0e2fe78393feb7&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;.git/objects/30/5fd379be250870d1e55584241637dacb44ec82&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;.git/objects/ce/013625030ba8dba906f756967f9e9ca394464a&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;削除しただけだと変わらないか。&lt;/p&gt;

&lt;p&gt;コミットするとどうか。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git commit -m &lt;span class=&quot;s2&quot;&gt;&amp;quot;delete hello.txt&amp;quot;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;(略)&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; find .git/objects/ -type f
&lt;span class=&quot;go&quot;&gt;.git/objects/aa/a96ced2d9a1c8e72c56b253a0e2fe78393feb7    # tree&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;.git/objects/30/5fd379be250870d1e55584241637dacb44ec82    # commit&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;.git/objects/4b/825dc642cb6eb9a060e54bf8d69288fbee4904&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;.git/objects/ce/013625030ba8dba906f756967f9e9ca394464a    # blob  hello.txt&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;.git/objects/72/e0a285935e33b62877ecb809fd4b6fac6d416d&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;新たにふたつできてる。 &lt;code&gt;commit&lt;/code&gt; オブジェクトと &lt;code&gt;tree&lt;/code&gt; オブジェクトか。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git cat-file -t 72e0
&lt;span class=&quot;go&quot;&gt;commit&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git cat-file -p 72e0
&lt;span class=&quot;go&quot;&gt;tree 4b825dc642cb6eb9a060e54bf8d69288fbee4904&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;parent 305fd379be250870d1e55584241637dacb44ec82&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;author kk_Ataka &amp;lt;kk_ataka@example.com&amp;gt; 1386303674 +0000&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;committer kk_Ataka &amp;lt;kk_ataka@example.com&amp;gt; 1386303674 +0000&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;delete hello.txt&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git cat-file -t 4b82
&lt;span class=&quot;go&quot;&gt;tree&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git cat-file -p 4b82
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;あ、 &lt;code&gt;tree&lt;/code&gt; オブジェクトのリストから消えるだけか。&lt;/p&gt;

&lt;p&gt;というか、よく考えたら &lt;code&gt;git rm&lt;/code&gt; したからってオブジェクトが消えたらチェックアウトで戻せなくなるな。&lt;/p&gt;

&lt;h2 id=&quot;課題&quot;&gt;課題&lt;/h2&gt;

&lt;p&gt;まだよくわかってない。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;.git/index&lt;/code&gt; がどうなっているのか。

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://d.hatena.ne.jp/nishiohirokazu/20120523/1337766796&quot;&gt;git indexの中身 - 西尾泰和のはてなダイアリー&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.git/objects&lt;/code&gt; 下の info と pack

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;$ git gc&lt;/code&gt; コマンドを使って整理した場合に複数のオブジェクトのファイルを pack ファイルに圧縮する&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;オブジェクトが勝手に消えるときはあるのか。

&lt;ul&gt;
&lt;li&gt;detached HEAD 状態になったコミットは gc とか走ると消えそうなんだけど…&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;メモ&quot;&gt;メモ&lt;/h2&gt;

&lt;p&gt;今回使った色々なコマンド。&lt;/p&gt;

&lt;h3 id=&quot;cat-file&quot;&gt;cat-file&lt;/h3&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git cat-file -p HEAD &lt;span class=&quot;c&quot;&gt;# HEAD = commit オブジェクト&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;tree c3b5990fc81599cd04934d349b2c08a952f16c18&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;parent c11123084bd99af451ddf8eaad378b9a0a5ae695&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;author kk_Ataka &amp;lt;kk_ataka@example.com&amp;gt; 1385508273 +0000&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;committer kk_Ataka &amp;lt;kk_ataka@example.com&amp;gt; 1385508273 +0000&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;add test.txt&lt;/span&gt;

&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git cat-file -p c3b5990 &lt;span class=&quot;c&quot;&gt;# tree オブジェクト&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;100644 blob 557db03de997c86a4a028e1ebd3a1ceb225be238    README&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;040000 tree 85a2934a71f7385034f934f9ccc8c746b73d4f44    testdir&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;hash-object&quot;&gt;hash-object&lt;/h3&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git &lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt;-object README &lt;span class=&quot;c&quot;&gt;# blob オブジェクト&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;557db03de997c86a4a028e1ebd3a1ceb225be238&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;rev-parse&quot;&gt;rev-parse&lt;/h3&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git rev-parse HEAD
&lt;span class=&quot;go&quot;&gt;047f8f6f81e483c5c3004cd80d5ecb81a7f64090&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;ls-tree&quot;&gt;ls-tree&lt;/h3&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git ls-tree HEAD
&lt;span class=&quot;go&quot;&gt;100644 blob 557db03de997c86a4a028e1ebd3a1ceb225be238    README&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;040000 tree 85a2934a71f7385034f934f9ccc8c746b73d4f44    testdir&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git ls-tree 85a293
&lt;span class=&quot;go&quot;&gt;100644 blob 16b14f5da9e2fcd6f3f38cc9e584cef2f3c90ebe    test.txt&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;ls-files&quot;&gt;ls-files&lt;/h3&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git ls-files --stage
&lt;span class=&quot;go&quot;&gt;100644 d7f3c505ac2e28aaac5fa9210adb1115b8c57d72 0       README&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;100644 9daeafb9864cf43055ae93beb0afd6c7d144bfa4 0       new.txt&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;100644 16b14f5da9e2fcd6f3f38cc9e584cef2f3c90ebe 0       testdir/test.txt&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;show&quot;&gt;show&lt;/h3&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git show d7f3c505ac2e28a
&lt;span class=&quot;go&quot;&gt;Hello World&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;master branch&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;test branch&lt;/span&gt;

&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git show HEAD
&lt;span class=&quot;go&quot;&gt;commit b870b7313d2fcfda308204b12d5534c5ccac95cb&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Merge: c2333bd 38c9e30&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Author: kk_Ataka &amp;lt;kk_ataka@example.com&amp;gt;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Date:   Thu Nov 28 20:15:10 2013 +0000&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;    Merge branch &amp;#39;test&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Jekyllのプラグイン作成で複数ファイルにまたがったタグをどう扱えばいいのかわからない話</title>
   <link href="http://gosyujin.github.io/2013/11/25/jekyll-plugin-reference"/>
   <updated>2013-11-25T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2013/11/25/jekyll-plugin-reference</id>
   <content type="html">&lt;h2 id=&quot;あらすじ&quot;&gt;あらすじ&lt;/h2&gt;

&lt;p&gt;Jekyll ではてなダイアリーのような脚注をつけられるプラグインを作った。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/gosyujin/gosyujin.github.com/blob/1cac1dbbb34f271ce54ce3a85c69261af3336aec/_plugins/gosyujin.github.com/reference.rb&quot;&gt;gosyujin.github.com/_plugins/gosyujin.github.com/reference.rb&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;文中に登場した &lt;code&gt;ref&lt;/code&gt; タグの引数を集めて &lt;code&gt;ref_anchor&lt;/code&gt; タグが打たれた箇所にリスト出力する、というもの。&lt;/p&gt;

&lt;p&gt;こう書くと、&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;go&quot;&gt;- 超スタンダード  {% ref といわれている  %}&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;- 誰の PC にも入っている  {% ref といわれている  %}&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;- 誰でも簡単に使える  {% ref といわれている  %}&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;- きめ細かいデザインが可能&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;- 画像やフローの挿入も簡単&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;(略)&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt; {% ref_anchor  %}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;こうなる。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://gosyujin.github.io/static/images/2013-11-25/ref.png&quot; alt=&quot;ref&quot;&gt;&lt;/p&gt;

&lt;p&gt;(略)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://gosyujin.github.io/static/images/2013-11-25/refanc.png&quot; alt=&quot;refanc&quot;&gt;&lt;/p&gt;

&lt;p&gt;一応、やりたいことはできたんだけど、以下のようなことができなくて力技でなんとかした。&lt;/p&gt;

&lt;h2 id=&quot;できる&quot;&gt;できる&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;同じ .md ファイル内に&lt;/em&gt; &lt;code&gt;ref&lt;/code&gt; タグと &lt;code&gt;ref_anchor&lt;/code&gt; タグを書くと問題なくいける。&lt;/p&gt;

&lt;p&gt;上記あらすじの例がそう。&lt;/p&gt;

&lt;h2 id=&quot;できない&quot;&gt;できない&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;ref&lt;/code&gt; タグは .md ファイル内に。 &lt;code&gt;ref_anchor&lt;/code&gt; タグは「記事の一番最後に一つあればいい」ということでテーマ内に書いて集約したい。&lt;/p&gt;

&lt;p&gt;と思って、 &lt;em&gt;テーマ( _includes/themes/twitter/post.html )&lt;/em&gt; に書いてみたが、これだと脚注が拾えなかった…。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/gosyujin/gosyujin.github.com/blob/cbfe075f348e20d17850074af4/_includes/themes/twitter/post.html&quot;&gt;_includes/themes/twitter/post.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;デバッグしてみると、どうもレンダリングの順番で、 &lt;code&gt;_includes/themes/twitter/post.html(ref_anchor) -&amp;gt; _posts/xxx.md(ref)&lt;/code&gt; になっているから拾えないっぽい？&lt;/p&gt;

&lt;h2 id=&quot;対応&quot;&gt;対応&lt;/h2&gt;

&lt;p&gt;うまくできる方法もあるのかもしれないけど、とりあえずグローバル変数を使う方法で脚注を拾うことに成功した。&lt;/p&gt;

&lt;p&gt;もう一つ、記事と脚注の対応をjson形式とかでどっかにファイルに吐き出して、それを読み込むという手も考えたんだけど、どっちがいいんだろう。&lt;/p&gt;

&lt;p&gt;あんまりグローバル変数使いたくないんだけど、他に思いつかなかった。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>「Sphinxをはじめよう」を読んで導入したいと思ったので色々考えてみた</title>
   <link href="http://gosyujin.github.io/2013/10/25/sphinx-recommend"/>
   <updated>2013-10-25T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2013/10/25/sphinx-recommend</id>
   <content type="html">&lt;h2 id=&quot;あらすじ&quot;&gt;あらすじ&lt;/h2&gt;

&lt;p&gt;今までちびちび触ってきたが「Sphinx をはじめよう」を読んで、改めて &lt;code&gt;Sphinx&lt;/code&gt; を導入したいと考えた。&lt;/p&gt;

&lt;p&gt;そこで、今の環境でどうやったら導入できるのか色々考えてみたが、相談できる人もいないのでここにアップしてみる。&lt;/p&gt;

&lt;p&gt;本当は説得材料をつらつらと上げて「だから試してみよう」ってところに持って行きたかったんだけど、そこまでは行けていない。ダラダラ書いている。&lt;/p&gt;

&lt;h2 id=&quot;テーマ&quot;&gt;テーマ&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;適材適所&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;決して Office ディスではなく。色々なツールが適材適所で LET US CLING TOGETHER できる道を考えたい。&lt;/p&gt;

&lt;h2 id=&quot;結論&quot;&gt;結論&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;ドキュメント

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Sphinx&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;複雑な表や表計算が必要な資料

&lt;ul&gt;
&lt;li&gt;Excel で別添資料扱い？&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;その他こまい文書

&lt;ul&gt;
&lt;li&gt;Redmine とかの &lt;code&gt;Wiki&lt;/code&gt; に書き換え&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;って分けられると、幸せになれると考えている。。&lt;/p&gt;

&lt;p&gt;Word は…思いっきり &lt;code&gt;Sphinx&lt;/code&gt; と競合する気が…。&lt;/p&gt;

&lt;h2 id=&quot;現在の己の認識&quot;&gt;現在の己の認識&lt;/h2&gt;

&lt;h3 id=&quot;office-スタイル&quot;&gt;Office スタイル&lt;/h3&gt;

&lt;p&gt;今の主流。&lt;/p&gt;

&lt;h4 id=&quot;長所&quot;&gt;長所&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;超スタンダード(といわれている)&lt;/li&gt;
&lt;li&gt;誰の PC にも入っている(といわれている)&lt;/li&gt;
&lt;li&gt;誰でも簡単に使える(といわれている)&lt;/li&gt;
&lt;li&gt;きめ細かいデザインが可能&lt;/li&gt;
&lt;li&gt;画像やフローの挿入も簡単&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;(「きめ細かい」とか「簡単」とかの定義がすごいめんどくさいんで、ここはふわっとした感じで)&lt;/p&gt;

&lt;p&gt;これに加えて、下記のようなメンドクサイ作業をなんとな〜く作成可能なのは &lt;code&gt;Office&lt;/code&gt; が一番有名なので他のツールへの移行がしづらいんではないかと個人的に思っている。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;複雑な箇条書き

&lt;ul&gt;
&lt;li&gt;1.1.章を作ってかなり間が空いてから 1.2.章(直前のリストの続き)とかを挿入したい&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;エグい表 / テーブル

&lt;ul&gt;
&lt;li&gt;結合、分割超使う。ヘタに行など追加すると死んでしまう&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;値の計算

&lt;ul&gt;
&lt;li&gt;Excel の独壇場。上のエグい表に「A列とB列を足した値をC列に追加」とか&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;短所&quot;&gt;短所&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;ちょっとしたメモから何まで Word, Excel で作成され共有フォルダに量産される

&lt;ul&gt;
&lt;li&gt;これは人にもよるか&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;どのドキュメントに何が書いてあるか探せない

&lt;ul&gt;
&lt;li&gt;みんなどうやって探し当てるの？&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;設計書の修正前と後で diff がとりづらい、把握しづらい

&lt;ul&gt;
&lt;li&gt;変更点を「変更履歴シートに書くことで履歴管理」するのが難しい。確実に忘れる。差分の確認むずい。運用で回避無理…&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;誰かが誤ってレイアウトをいじるといろいろグチャグチャになる

&lt;ul&gt;
&lt;li&gt;リストの高さとかすぐいじっちゃう&lt;/li&gt;
&lt;li&gt;フォーマットは壊さないというチームの結束がないと、あっという間にレイアウトにバラつきが出ると思うんだけどどうなんだろう&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;だいたい開くのに重い&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Excel は &lt;em&gt;メモや設計書ではなく&lt;/em&gt; 表計算部門などで活躍できるのはわかるが…。&lt;/p&gt;

&lt;h3 id=&quot;wiki-jekyll-markdown-スタイル&quot;&gt;Wiki, Jekyll Markdown スタイル&lt;/h3&gt;

&lt;p&gt;という事で、徐々に &lt;code&gt;Wiki&lt;/code&gt; とか &lt;code&gt;Markdown&lt;/code&gt; に傾倒していく。&lt;/p&gt;

&lt;h4 id=&quot;長所&quot;&gt;長所&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;Wiki&lt;/code&gt; , &lt;code&gt;Markdown&lt;/code&gt; などを使うことによって、以下の Office 短所 2 つはかなり解決できると思う。&lt;/p&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;設計書の修正前と後で diff がとりづらい、把握しづらい&lt;/li&gt;
&lt;li&gt;誰かが誤ってレイアウトをいじるといろいろグチャグチャになる&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;バージョン管理ができて差分も楽に確認可能

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Wiki&lt;/code&gt; はそういう機能が備わっているし、 &lt;code&gt;Markdown&lt;/code&gt; はプレーンテキストなのでバージョン管理で管理できる&lt;/li&gt;
&lt;li&gt;これは逆に短所にもなりうるが(バージョン管理ツールを使ったことない人とかもいるので)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;デザインは css とかで統一できる&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;短所&quot;&gt;短所&lt;/h4&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;どのドキュメントに何が書いてあるか探せない。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;これは、カバーしきれないかもしれない。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Wiki&lt;/code&gt; でも量が多くなってくると、目的のファイルを探すのがきつくなってくる。&lt;/p&gt;

&lt;p&gt;一応、エクスプローラーとかから探すよりは、 &lt;code&gt;Wiki&lt;/code&gt; 内検索とかブラウザの Ctrl+F で探しやすいとは思うんだけど…。&lt;/p&gt;

&lt;p&gt;その他の短所。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;はじめて使う場合、記法を学ぶ必要がある&lt;/li&gt;
&lt;li&gt;きめ細かいレイアウトの調整はめんどくさい

&lt;ul&gt;
&lt;li&gt;統一されるが故に、「ここのリストだけちょっといじる」とかが、それ用にカスタマイズしないといけないため結構メンドクサイ&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;画像やフローをドラッグアンドドロップ間隔で挿入することはできない

&lt;ul&gt;
&lt;li&gt;あらかじめ画像を作成しておいて画像記法とかで貼り付ける必要がある。現物(最終的な見栄え？)を見ながらいじれない&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;とはいえ、総合してまあ悪くないじゃん、っていうか、文章を残すという意味ではこちらの方が好み。&lt;/p&gt;

&lt;h3 id=&quot;sphinx-スタイル&quot;&gt;Sphinx スタイル&lt;/h3&gt;

&lt;p&gt;そして、先日発売した 「Sphinx をはじめよう」の 1.3 章 Sphinx と比較されるツール で、このもやもやを狙ったように &lt;code&gt;Office&lt;/code&gt; , &lt;code&gt;Wiki&lt;/code&gt; , &lt;code&gt;Markdown + Jekyll&lt;/code&gt; と &lt;code&gt;Sphinx&lt;/code&gt; の比較が詳しくなされている。&lt;/p&gt;

&lt;p&gt;内容は読んでもらうとして。&lt;/p&gt;

&lt;h4 id=&quot;長所-短所&quot;&gt;長所, 短所&lt;/h4&gt;

&lt;p&gt;基本的には、 &lt;code&gt;Wiki&lt;/code&gt; , &lt;code&gt;Markdown&lt;/code&gt; 組と同じ感じになるが、加えて &lt;code&gt;Sphinx&lt;/code&gt; が他のツールとより良いと思ったところは、 &lt;em&gt;ドキュメント的な体裁がすごく簡単に整えられる&lt;/em&gt; 所だと思った。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Sphinx&lt;/code&gt; を使って書かれているサイトを見ると(公式とか)、全体を抑えやすく、どの章を読みに行けばよいのかわかりやすいし、読み進めやすい。(当然、誰がどう書いても読みやすいってわけはなく、苦労の産物ではあると思うんだけど)&lt;/p&gt;

&lt;p&gt;というわけで、成功するか失敗するかわからないし、導入方法から周知方法などいろいろ作る必要があるけど、 Office スタイルから &lt;code&gt;Sphinx&lt;/code&gt; スタイルにコンバートしてみたいのが今の気持ち。&lt;/p&gt;

&lt;p&gt;次はどう導入するかと、導入するにあたっての課題を考えてみる。&lt;/p&gt;

&lt;p&gt;まだ &lt;code&gt;Sphinx&lt;/code&gt; 自体 Hello World 程度しか触ってないんだけど！！&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Sphinxのプラグインの作り方を学ぶ</title>
   <link href="http://gosyujin.github.io/2013/10/02/sphinx-plugin"/>
   <updated>2013-10-02T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2013/10/02/sphinx-plugin</id>
   <content type="html">&lt;h2 id=&quot;あらすじ&quot;&gt;あらすじ&lt;/h2&gt;

&lt;p&gt;Sphinx のタグを拡張してみたい。具体的には打ち消し記法がほしい。&lt;/p&gt;

&lt;p&gt;という事で Sphinx 拡張に手を出す。&lt;/p&gt;

&lt;p&gt;ただし、 Python は Hello World くらい…。&lt;/p&gt;

&lt;h2 id=&quot;参考サイト&quot;&gt;参考サイト&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://sphinx-users.jp/doc10/extensions.html&quot;&gt;Sphinx拡張 Sphinx v1.0.6 documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://docs.sphinx-users.jp/extensions.html&quot;&gt;Sphinx拡張 Sphinx 1.2b1 documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;打ち消し線は既に実例があったので、これを写経する方針で。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://labs.timedia.co.jp/2012/04/sphinx.html&quot;&gt;Sphinxで打ち消し線を使う - TIM Labs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;環境&quot;&gt;環境&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Windows XP&lt;/li&gt;
&lt;li&gt;Python 2.7.3&lt;/li&gt;
&lt;li&gt;Sphinx 1.1.3&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;と、&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Windows 7&lt;/li&gt;
&lt;li&gt;Python 2.7.4&lt;/li&gt;
&lt;li&gt;Sphinx 1.2b.1&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;sphinxの拡張の仕方&quot;&gt;Sphinxの拡張の仕方&lt;/h2&gt;

&lt;p&gt;Sphinx 1.1.3 時に調べていた感じでは、拡張には大きく3通りある模様。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;新出力形式対応やパース時のアクションサポート(ビルダー追加で実現)&lt;/li&gt;
&lt;li&gt;reSTのマークアップ拡張&lt;/li&gt;
&lt;li&gt;いろいろなフックポイントで諸処理を記述&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;今回はreSTのマークアップ拡張が該当するかな。&lt;/p&gt;

&lt;p&gt;拡張は基本的にPythonで記述する。(setup関数を呼び出す)&lt;/p&gt;

&lt;p&gt;作成した拡張機能は &lt;code&gt;conf.py&lt;/code&gt; の中で読み込むように設定を変更する。&lt;/p&gt;

&lt;p&gt;以下、打ち消し線を導入しつつ何してるのか写経してみる。&lt;/p&gt;

&lt;h2 id=&quot;作成&quot;&gt;作成&lt;/h2&gt;

&lt;h3 id=&quot;conf-py-修正&quot;&gt;conf.py(修正)&lt;/h3&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;abspath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;exts&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;extensions&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;sphinxcontrib_roles&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# configuration case.1: define roles as list (define only roles)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;roles&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;strike&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;red&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# configuration case.2: define roles as dict (define roles and its style on HTML)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;roles&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;strike&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;text-decoration: line-through;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;red&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;color: red;&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;. &lt;a href=&quot;http://docs.sphinx-users.jp/extensions.html#where-to-put-your-own-extensions&quot;&gt;自分自身の拡張機能はどこに置くべき？&lt;/a&gt; という事で、プラグインファイルを置く場所を &lt;code&gt;conf.py&lt;/code&gt; の &lt;code&gt;sys.path&lt;/code&gt; に追加する&lt;/li&gt;
&lt;li&gt;&lt;code&gt;extensions&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;使用したいSphinx拡張モジュールを格納する(配列)&lt;/li&gt;
&lt;li&gt;絶対パスで指定&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;rolesは &lt;strong&gt;設定値&lt;/strong&gt; 。これから作る sphinxcontrib_roles.py で定義する。&lt;/p&gt;

&lt;h3 id=&quot;sphinxcontrib_roles-py-新規&quot;&gt;sphinxcontrib_roles.py(新規)&lt;/h3&gt;

&lt;p&gt;一番はじめは &lt;code&gt;setup(app)&lt;/code&gt; 関数。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_config_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;roles&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[],&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;html&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;builder-inited&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;on_builder_inited&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;html-collect-pages&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;on_html_collect_pages&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;html-page-context&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;html_page_context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;app.add_config_value(name, default, rebuild)&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;新しい設定値 &lt;code&gt;&amp;quot;roles&amp;quot;&lt;/code&gt; を追加する(名前衝突を避けるため、 &lt;code&gt;name&lt;/code&gt; &lt;strong&gt;には拡張機能名を入れなければならない&lt;/strong&gt; )&lt;/li&gt;
&lt;li&gt;&lt;code&gt;default&lt;/code&gt; はデフォルト値&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rebuild&lt;/code&gt; はリビルドする時の設定。 &lt;code&gt;&amp;quot;html&amp;quot;&lt;/code&gt; の場合は出力が &lt;code&gt;html&lt;/code&gt; だった時リビルドされる。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sphinx.connect(event, collback)&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;event&lt;/code&gt; が発行された時に呼ばれる &lt;code&gt;collback&lt;/code&gt; を登録。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;eventは以下のようなものがある。&lt;/p&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;event&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;builder-inited&lt;/td&gt;
&lt;td&gt;ビルダーオブジェクト作成時に発行&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;html-collect-pages&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;html-page-context&lt;/td&gt;
&lt;td&gt;テンプレートを使用してレンダリングを行う時に発行&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;他にも…。&lt;/p&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;event&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;source-read&lt;/td&gt;
&lt;td&gt;ソースファイルが読み込まれる時に発行&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;build-finished&lt;/td&gt;
&lt;td&gt;ビルド完了時、例外としてビルドが例外を投げた時も発行&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;html-collect-pagesってなんだろう？&lt;/p&gt;

&lt;p&gt;できあがったのはこう。(というか、まんま)&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;c&quot;&gt;# -*- coding: utf-8 -*-&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;os&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;docutils.parsers.rst&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;roles&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;_define_role&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#    print &amp;quot;sphinxcontrib_roles#_define_role name:&amp;quot;, name&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;#=&amp;gt; strike, red&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;base_role&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;roles&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;generic_custom_role&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;role&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;roles&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CustomRole&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;base_role&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;class&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[])&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;roles&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;register_local_role&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;role&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;on_builder_inited&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#    print &amp;quot;sphinxcontrib_roles#onbuilder_inited item&amp;quot;, app.builder.config.roles.items()&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;#=&amp;gt; [(&amp;#39;strike&amp;#39;, &amp;#39;text-decoration: line-through;&amp;#39;), (&amp;#39;red&amp;#39;, &amp;#39;color: red;&amp;#39;)]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;builder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;roles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;_define_role&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;on_html_collect_pages&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;isinstance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;builder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;roles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;builder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;roles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;cssdir&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;builder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;outdir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;_static&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;cssfile&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cssdir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;roles.css&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exists&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cssdir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;makedirs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cssdir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cssfile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;wt&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#        print &amp;quot;sphinxcontrib_roles#on_html_collect_pages write cssfile&amp;quot;, cssfile&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;#=&amp;gt; C:\work\sphinx\_build\html\_static\roles.css&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;style&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;builder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;roles&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;span.&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; { &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; }&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;html_page_context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pagename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;templatename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;doctree&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;isinstance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;builder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;roles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;builder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;roles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;css_files&amp;#39;&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#            print &amp;quot;sphinxcontrib_roles#html_page_context pagename&amp;quot;, pagename&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;css_files&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;_static/roles.css&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;sphinxcontrib_roles#setup&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_config_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;roles&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[],&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;html&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;builder-inited&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;on_builder_inited&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;html-collect-pages&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;on_html_collect_pages&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;html-page-context&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;html_page_context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;index.rst&lt;/code&gt; を作成。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-rst&quot; data-lang=&quot;rst&quot;&gt;&lt;span class=&quot;cp&quot;&gt;.. project documentation master file, created by&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;   sphinx-quickstart on Thu Aug 22 18:15:35 2013.&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;   You can adapt this file completely to your liking, but it should at least&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;   contain the root `toctree` directive.&lt;/span&gt;

&lt;span class=&quot;gh&quot;&gt;Welcome to project&amp;#39;s documentation!&lt;/span&gt;
&lt;span class=&quot;gh&quot;&gt;===================================&lt;/span&gt;

Contents:

&lt;span class=&quot;p&quot;&gt;..&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;toctree&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;
   &lt;span class=&quot;nc&quot;&gt;:maxdepth:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;2&lt;/span&gt;

&lt;span class=&quot;m&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;:strike:&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;`thids ahas`&lt;/span&gt;
&lt;span class=&quot;m&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;:red:&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;`red`&lt;/span&gt;


&lt;span class=&quot;gh&quot;&gt;Indices and tables&lt;/span&gt;
&lt;span class=&quot;gh&quot;&gt;==================&lt;/span&gt;

&lt;span class=&quot;m&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;:ref:&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;`genindex`&lt;/span&gt;
&lt;span class=&quot;m&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;:ref:&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;`modindex`&lt;/span&gt;
&lt;span class=&quot;m&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;:ref:&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;`search`&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;ビルドもしてみる。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;make&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;html&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Making&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;output&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;directory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Running&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Sphinx&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b1&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sphinxcontrib_roles&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;#setup&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;loading&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pickled&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;environment&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;yet&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;created&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sphinxcontrib_roles&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;#onbuilder_inited item [(&amp;#39;strike&amp;#39;, &amp;#39;text-decoration: line-through;&amp;#39;), (&amp;#39;red&amp;#39;, &amp;#39;color: red;&amp;#39;)]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sphinxcontrib_roles&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;#_define_role name: strike&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sphinxcontrib_roles&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;#_define_role name: red&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;building&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;targets&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;files&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;that&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;are&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;out&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;updating&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;environment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;added&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;changed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;removed&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;reading&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sources&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;looking&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;outdated&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;files&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;none&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;found&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pickling&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;environment&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;done&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;checking&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;consistency&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;done&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;preparing&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;documents&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;done&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;writing&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sphinxcontrib_roles&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;#html_page_context pagename index&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;writing&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;additional&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;files&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sphinxcontrib_roles&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;#on_html_collect_pages write cssfile C:\work\sphinx\_build\html\_static\roles.css&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;genindexsphinxcontrib_roles&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;#html_page_context pagename genindex&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;searchsphinxcontrib_roles&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;#html_page_context pagename search&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;copying&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;files&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;done&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;dumping&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;search&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;done&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;dumping&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inventory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;done&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;build&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;succeeded&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;Build&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;finished&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;The&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HTML&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pages&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;are&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;生成されたソースの抜粋。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Contents:&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;toctree-wrapper compound&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;ul&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;simple&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;ul&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;simple&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&amp;lt;span&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;strike&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;thids ahas&lt;span class=&quot;nt&quot;&gt;&amp;lt;/span&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&amp;lt;span&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;red&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;red&lt;span class=&quot;nt&quot;&gt;&amp;lt;/span&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;とりあえずこんな感じ。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>iOSのUIWebViewのキャッシュがどういうタイミングでリセットされているのかわからんという話</title>
   <link href="http://gosyujin.github.io/2013/09/25/ios-uiwebview-cache"/>
   <updated>2013-09-25T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2013/09/25/ios-uiwebview-cache</id>
   <content type="html">&lt;h2 id=&quot;あらすじ&quot;&gt;あらすじ&lt;/h2&gt;

&lt;p&gt;とあるWebサーバのファイルの内容を変えたとき、 UIWebView 経由でアクセスすると更新が反映されない現象が起こった。&lt;/p&gt;

&lt;p&gt;また、戻るボタンも更新ボタンもなにもつけていなかったため、その状況でどうやったらキャッシュを捨てて新しいファイルを取得できるかわからなかった。&lt;/p&gt;

&lt;h2 id=&quot;環境&quot;&gt;環境&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;サーバ

&lt;ul&gt;
&lt;li&gt;apache バージョン失念&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;クライアント

&lt;ul&gt;
&lt;li&gt;iOS 6.0 と 5.1 の UIWebView と Safari&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;サーバの内容&quot;&gt;サーバの内容&lt;/h3&gt;

&lt;p&gt;変更したファイル &lt;code&gt;index.html&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;- &amp;lt;p&amp;gt;Hell World&amp;lt;/p&amp;gt;
+ &amp;lt;p&amp;gt;Hello World&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;とりあえず更新がわかるようにテキトウな文言で。&lt;/p&gt;

&lt;h3 id=&quot;上記-index-html-にアクセスした結果&quot;&gt;上記 index.html にアクセスした結果&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;iPhone Safari

&lt;ul&gt;
&lt;li&gt;更新された&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;iPhone 独自アプリ内の UIWebView

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;更新されない場合があった&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;上記とは別の iPhone Safari

&lt;ul&gt;
&lt;li&gt;更新された&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;おまけ: PCからアクセスした場合(IEだったかな)

&lt;ul&gt;
&lt;li&gt;更新された&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;試行回数が不十分なため完全ではなさそうだが、とりあえず UIWebView でのアクセス時は更新されたりされなかったり。(アプリのタスクを切ったり、電源ON/OFFしたりも試した)&lt;/p&gt;

&lt;p&gt;Safari は確実に更新されたため、恐らく UIWebView が Safari とは違う風にキャッシュを持っていて、それが悪さをしているんじゃなかろうかと推測。&lt;/p&gt;

&lt;h2 id=&quot;解法&quot;&gt;解法&lt;/h2&gt;

&lt;p&gt;というわけで、ソース内で明示的にキャッシュを削除すれば、クリーンな状態を保てるのでは。&lt;/p&gt;

&lt;h3 id=&quot;キャッシュポリシーの変更&quot;&gt;キャッシュポリシーの変更&lt;/h3&gt;

&lt;h4 id=&quot;使用前&quot;&gt;使用前&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;NSURLRequest *request = [NSURLRequest requestWithURL:url];&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;使用後&quot;&gt;使用後&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;NSURLRequest *request = [NSURLRequest requestWithURL:url
  cachePolicy:NSURLRequestReloadIgnoringLocalCacheData
  timeoutInterval:60.0];&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;キャッシュポリシーは以下のものがある。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;NSURLRequestUseProtocolCachePolicy&lt;/li&gt;
&lt;li&gt;NSURLRequestReloadIgnoringLocalCacheData

&lt;ul&gt;
&lt;li&gt;(NSURLRequestReloadIgnoringCacheData が置き換わったもの)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;NSURLRequestReloadIgnoringLocalAndRemoteCacheData&lt;/li&gt;
&lt;li&gt;NSURLRequestReloadRevalidatingCacheData&lt;/li&gt;
&lt;li&gt;NSURLRequestReturnCacheDataElseLoad&lt;/li&gt;
&lt;li&gt;NSURLRequestReturnCacheDataDontLoad&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;名前が長い…。&lt;/p&gt;

&lt;p&gt;キャッシュを無視するには &lt;code&gt;NSURLRequestReloadIgnoringLocalCacheData&lt;/code&gt; を使えばよい。&lt;/p&gt;

&lt;h3 id=&quot;キャッシュ容量を-0-に&quot;&gt;キャッシュ容量を 0 に&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.yoheim.net/blog.php?q=20120912&quot;&gt;[XCODE] UIWebViewでHTML,CSS,JSなどをキャッシュさせない方法 - YoheiM .NET&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-objective-c&quot; data-lang=&quot;objective-c&quot;&gt;&lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;NSURLCache&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sharedURLCache&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;setMemoryCapacity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;キャッシュ全消し&quot;&gt;キャッシュ全消し&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://sarudeki.jp/fernweh/uiwebview/&quot;&gt;知ってると楽になるUIWebView関連6つのTips｜学習A4デスノート @ Cocos2d-x とかの勉強メモ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://qiita.com/uro_uro_/items/d4e5fb66f2039090000f&quot;&gt;Objective-C - UIWebViewを使うときに気をつけていること - Qiita [キータ]&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-objective-c&quot; data-lang=&quot;objective-c&quot;&gt;&lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;NSURLCache&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sharedURLCache&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;removeAllCachedResponses&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;を呼べばキャッシュを全消しできるよう。&lt;/p&gt;

&lt;h3 id=&quot;ネットワーク情報を監視できるライブラリ&quot;&gt;ネットワーク情報を監視できるライブラリ&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://cocoadays.blogspot.jp/2011/05/ios_25.html&quot;&gt;Cocoaの日々: [iOS] ネットワーク接続状況取得ライブラリを公開&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/dev5tec/FBNetworkReachability&quot;&gt;dev5tec/FBNetworkReachability · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;結果&quot;&gt;結果&lt;/h2&gt;

&lt;p&gt;今回は強引に &lt;code&gt;UIWebView#shouldStartLoadWithRequest:navigationType:&lt;/code&gt; で毎回キャッシュを削除するようにした。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-objective-c&quot; data-lang=&quot;objective-c&quot;&gt;&lt;span class=&quot;p&quot;&gt;-(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;BOOL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;webView:&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;UIWebView&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;webView&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;shouldStartLoadWithRequest:&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;NSURLRequest&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;request&lt;/span&gt;
  &lt;span class=&quot;nf&quot;&gt;navigationType:&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UIWebViewNavigationType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;navigationType&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;NSURLCache&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sharedURLCache&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;removeAllCachedResponses&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;処理&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// キャッシュの内容を取得して表示(文字コードはShift_JIS)&lt;/span&gt;
    &lt;span class=&quot;bp&quot;&gt;NSCachedURLResponse&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cachedData&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;NSURLCache&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sharedURLCache&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;cachedResponseForRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;bp&quot;&gt;NSData&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cachedData&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

    &lt;span class=&quot;bp&quot;&gt;NSString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;NSString&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;initWithData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;encoding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NSShiftJISStringEncoding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;NSLog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;@&amp;quot;%@&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;以下略&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;これで、画面遷移とホームで終了から再起動したとき、一応キャッシュを見る事はなくなったはず。&lt;/p&gt;

&lt;p&gt;ただし、単純にこれだけを追加すると毎回問答無用でキャッシュを消すので速度の問題とかあるかも。&lt;/p&gt;

&lt;h2 id=&quot;todo&quot;&gt;TODO&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;アタリはつけられたので、この辺のドキュメントを調べてみる&lt;/li&gt;
&lt;li&gt;iOS 7 ではどうなっているのか&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;おまけ-ホームで終了した場合にアプリを終わらせる&quot;&gt;おまけ: ホームで終了した場合にアプリを終わらせる&lt;/h2&gt;

&lt;p&gt;また、上記の対応をしただけだと、 iPhone をホームボタンで終了した後、再度アプリを起動すると未更新のまま同じ画面が出てしまう…。&lt;/p&gt;

&lt;p&gt;という事で、ホームで終了した場合、再起動時は問答無用ではじめからとするようにもした。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;PROJECT_NAME-Info.plist&lt;/code&gt; というファイルの中に &lt;code&gt;Application does not run in background&lt;/code&gt; (アプリケーションをバックグラウンドで走らせない) という項目があるのでこれを &lt;code&gt;YES&lt;/code&gt; に。&lt;/p&gt;

&lt;p&gt;ソースで見ると &lt;code&gt;UIApplicationExitsOnSuspend&lt;/code&gt; が変わっていた。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;UIApplicationExitsOnSuspend&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
-       &lt;span class=&quot;nt&quot;&gt;&amp;lt;false/&amp;gt;&lt;/span&gt;
+       &lt;span class=&quot;nt&quot;&gt;&amp;lt;true/&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Jekyllバージョンアップの際に思いのほか手こずった話 てっく煮さん製プラグインの更新に追従したい編</title>
   <link href="http://gosyujin.github.io/2013/09/07/jekyll-maintenance-2"/>
   <updated>2013-09-07T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2013/09/07/jekyll-maintenance-2</id>
   <content type="html">&lt;h2 id=&quot;前回までのあらすじ&quot;&gt;前回までのあらすじ&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://gosyujin.github.io/2013/08/07/jekyll-maintenance-1/&quot;&gt;Jekyllバージョンアップの際に思いのほか手こずった話 Jekyll Bootstrapの更新に追従したい編&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;結論&quot;&gt;結論&lt;/h2&gt;

&lt;p&gt;fork していれば、だいたいなんとかなる。&lt;/p&gt;

&lt;h2 id=&quot;環境&quot;&gt;環境&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Ruby 1.9.3

&lt;ul&gt;
&lt;li&gt;RedCloth (4.2.9)&lt;/li&gt;
&lt;li&gt;bundler (1.3.5)&lt;/li&gt;
&lt;li&gt;classifier (1.3.3)&lt;/li&gt;
&lt;li&gt;colorator (0.1)&lt;/li&gt;
&lt;li&gt;commander (4.1.4)&lt;/li&gt;
&lt;li&gt;directory_watcher (1.4.1)&lt;/li&gt;
&lt;li&gt;fast-stemmer (1.0.2)&lt;/li&gt;
&lt;li&gt;highline (1.6.19)&lt;/li&gt;
&lt;li&gt;hparser (0.4.0 dc35f05)&lt;/li&gt;
&lt;li&gt;jekyll (1.0.0 9f94eaf)&lt;/li&gt;
&lt;li&gt;kramdown (0.14.2)&lt;/li&gt;
&lt;li&gt;liquid (2.5.1)&lt;/li&gt;
&lt;li&gt;maruku (0.6.1)&lt;/li&gt;
&lt;li&gt;posix-spawn (0.3.6)&lt;/li&gt;
&lt;li&gt;pygments.rb (0.4.2)&lt;/li&gt;
&lt;li&gt;rake (10.1.0)&lt;/li&gt;
&lt;li&gt;rdiscount (2.1.6)&lt;/li&gt;
&lt;li&gt;redcarpet (2.2.2)&lt;/li&gt;
&lt;li&gt;safe_yaml (0.7.1)&lt;/li&gt;
&lt;li&gt;syntax (1.0.0)&lt;/li&gt;
&lt;li&gt;yajl-ruby (1.1.0)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;参考サイト&quot;&gt;参考サイト&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://qiita.com/uasi/items/77d41698630fef012f82&quot;&gt;Git で複数のリポジトリをまとめたり、逆に切り出したりする - Qiita [キータ]&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;やりたい事-てっく煮プラグイン編&quot;&gt;やりたい事: てっく煮プラグイン編&lt;/h2&gt;

&lt;p&gt;@nitoyon さんが公開しているリポジトリ( https://github.com/nitoyon/tech.nitoyon.com )内の &lt;code&gt;_plugins&lt;/code&gt; を使わせていただきたい。&lt;/p&gt;

&lt;p&gt;はじめはコピペで自分のリポジトリの &lt;code&gt;_plugins&lt;/code&gt; 下に持ってきていた。&lt;/p&gt;

&lt;p&gt;が、前述の通りコピペしただけなので更新に追従できず自爆。&lt;/p&gt;

&lt;p&gt;どうしよう。プラグインだけ追従とかできるんだろうか。&lt;/p&gt;

&lt;h3 id=&quot;方針&quot;&gt;方針&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;_plugins&lt;/code&gt; 下に置いておいて、折りを見て更新したい&lt;/li&gt;
&lt;li&gt;コピペは避けたい&lt;/li&gt;
&lt;li&gt;自分用に少し手を入れたり、使う予定のないプラグインは削除したい

&lt;ul&gt;
&lt;li&gt;例えば、先走ってJekyllのバージョンあげて互換性がなくなっちゃった場合の緊急回避策として(後述)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;以降、三つのリポジトリが出てくるので、便宜上こう呼ぶ。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;本家&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;てっく煮さんのリポジトリ&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nitoyon/tech.nitoyon.com&quot;&gt;nitoyon/tech.nitoyon.com ・ GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;forkした本家&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;本家&lt;/code&gt; を fork したてっく煮リポジトリ(自分のアカウントにひもづいている)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/gosyujin/tech.nitoyon.com&quot;&gt;gosyujin/tech.nitoyon.com ・ GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;自分のJekyll&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;この記事をコミットしてる己のリポジトリ&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/gosyujin/gosyujin.github.com&quot;&gt;gosyujin/gosyujin.github.com ・ GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;その1-本家リポジトリをそのまま一部サブモジュール化-断念&quot;&gt;その1: 本家リポジトリをそのまま一部サブモジュール化(断念)&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;本家&lt;/code&gt; リポジトリを &lt;code&gt;自分のJekyll&lt;/code&gt; リポジトリ内にサブモジュールとして clone してくる。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;gosyujin.github.com
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git submodule add http://github.com/nitoyon/tech.nitoyon.com.git _plugins/tech.nitoyon.com
&lt;span class=&quot;go&quot;&gt;Cloning into &amp;#39;_plugins/tech.nitoyon.com&amp;#39;...&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;remote: Counting objects: 15343, done.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;remote: Compressing objects: 100% (4228/4228), done.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;remote: Total 15343 (delta 5610), reused 14585 (delta 4852)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Receiving objects: 100% (15343/15343), 10.39 MiB | 623 KiB/s, done.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Resolving deltas: 100% (5610/5610), done.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;warning: LF will be replaced by CRLF in .gitmodules.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;The file will have its original line endings in your working directory.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;※ Windowsの場合、パスの区切りに円マークを使うとうまくいかない？&lt;/p&gt;

&lt;p&gt;以下のようなエラーが出た。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git --version
&lt;span class=&quot;go&quot;&gt;git version 1.8.1.msysgit.1&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git submodule add http://github.com/nitoyon/tech.nitoyon.com.git _plugins&lt;span class=&quot;se&quot;&gt;\t&lt;/span&gt;ech.nitoyon.com
&lt;span class=&quot;go&quot;&gt;fatal: Could not switch to &amp;#39;.git/modules/_plugins\&amp;#39;: No such file or directory&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Clone of &amp;#39;http://github.com/nitoyon/tech.nitoyon.com.git&amp;#39; into submodule path &amp;#39;_plugins\tech.nitoyon.com&amp;#39; failed&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;サブモジュールとして引っ張ってくると、リポジトリの中身全部入りで取得されてしまう。&lt;/p&gt;

&lt;p&gt;次に &lt;code&gt;_plugins&lt;/code&gt; ディレクトリだけを切りだす。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;_plugins&lt;span class=&quot;se&quot;&gt;\t&lt;/span&gt;ech.nitoyon.com&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; ls -a
&lt;span class=&quot;go&quot;&gt;./                           _layouts/                    favicon.ico&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;../                          _plugins/                    images/&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;.git                         _posts/                      img/&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;.gitignore                   _scripts/                    index.cgi&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;.htaccess                    about.css                    ja/&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Gruntfile.js*                apple-touch-icon-114x114.png javascripts/&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;README.markdown              apple-touch-icon-72x72.png   misc/&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;_caches/                     apple-touch-icon.png         package.json&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;_config.yml                  blog.cgi                     stylesheets/&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;_includes/                   en/                          techni.css&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;_lang/                       entry.cgi&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git filter-branch --subdirectory-filter _plugins HEAD
&lt;span class=&quot;go&quot;&gt;Rewrite 942d387c8d9d2f43efe2301cae1abe5ac7e489de (61/61)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Ref &amp;#39;refs/heads/master&amp;#39; was rewritten&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; ls
&lt;span class=&quot;go&quot;&gt;archives.rb* converters/  ext/         filters/     lang.rb*     tags/        tags.rb*&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;これで、更新されたら fetch すれば &lt;code&gt;自分のJekyll&lt;/code&gt; にも更新が反映されるはず。&lt;/p&gt;

&lt;h4 id=&quot;サブモジュールの更新…できない？&quot;&gt;サブモジュールの更新…できない？&lt;/h4&gt;

&lt;p&gt;なんだけど、このサブモジュールに対する変更(とかファイル削除)ってどうやればいいんだ…？&lt;/p&gt;

&lt;p&gt;ローカルでは好き放題できるし、コミット自体もできるけどそれを push する術と場所がない？&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://transitive.info/article/git/command/submodule/&quot;&gt;transitive.info - git submodule 使い方&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;サブモジュールに対しては編集できない&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;やっぱり fork 必須？&lt;/p&gt;

&lt;p&gt;……ってことは、&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;本家&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;fork するだけ&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;forkした本家&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;ここで &lt;code&gt;本家&lt;/code&gt; リポジトリへの更新追従とプラグインの変更などを行う&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;自分のJekyll&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;forkした本家&lt;/code&gt; の &lt;code&gt;_plugins&lt;/code&gt; 以下をサブモジュールとして適用&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;するのが良いのか？というかしないとダメ？&lt;/p&gt;

&lt;h3 id=&quot;その2-本家リポジトリを一回forkしてそこから更新分を持ってくる-採用&quot;&gt;その2: 本家リポジトリを一回forkしてそこから更新分を持ってくる(採用)&lt;/h3&gt;

&lt;p&gt;結局 Jekyl Bootstrap のケースと同じく fork するのが一番？&lt;/p&gt;

&lt;h4 id=&quot;本家&quot;&gt;本家&lt;/h4&gt;

&lt;p&gt;まずは &lt;code&gt;本家&lt;/code&gt; を GitHub 上から fork 。&lt;/p&gt;

&lt;h4 id=&quot;fork-した本家&quot;&gt;fork した本家&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;forkした本家&lt;/code&gt; をローカルに clone する。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git clone http://github.com/gosyujin/tech.nitoyon.com.git&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;プラグインの変更などをする場合はここで行い、修正内容を push する。&lt;/p&gt;

&lt;p&gt;また、 &lt;code&gt;本家&lt;/code&gt; の更新にもガンガン追従していく。&lt;/p&gt;

&lt;h4 id=&quot;自分の-jekyll&quot;&gt;自分の Jekyll&lt;/h4&gt;

&lt;p&gt;その1 でやった「サブモジュールとして持ってきて、 &lt;code&gt;_plugins&lt;/code&gt; だけ切り出す」を &lt;code&gt;forkした本家&lt;/code&gt; と &lt;code&gt;自分のJekyll&lt;/code&gt; 間で行う。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;gosyujin.github.com
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git submodule add http://github.com/gosyujin/tech.nitoyon.com.git _plugins/tech.nitoyon.com
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git filter-branch --subdirectory-filter _plugins HEAD&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;これで &lt;code&gt;自分のJekyll&lt;/code&gt; 内にてっく煮プラグインが入った。&lt;/p&gt;

&lt;p&gt;なおかつ、プラグインの修正などは &lt;code&gt;forkした本家&lt;/code&gt; で自由にでき、 &lt;code&gt;本家&lt;/code&gt; の更新への追従もここでできる。&lt;/p&gt;

&lt;p&gt;という感じで運用できるだろうか。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;おまけ-先走ってjekyllのバージョンあげて互換性がなくなっちゃった場合の緊急回避策&quot;&gt;おまけ 先走ってJekyllのバージョンあげて互換性がなくなっちゃった場合の緊急回避策&lt;/h2&gt;

&lt;p&gt;例えばこんな場合。&lt;/p&gt;

&lt;p&gt;Jekyll を 1.0.0 から 1.2.2 に一気に上げた場合( pygments.rb も)、以下のようなエラーが起こってしまった。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;jekyll&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:git&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;http://github.com/mojombo/jekyll.git&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:tag&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;v1.1.2&amp;#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;pygments.rb&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;=0.5.0&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;go&quot;&gt;Generating... C:/work/gosyujin.github.com/_plugins/tech.nitoyon.com/ext/post_to_liquid_raw.rb:56:in `to_liquid&amp;#39;: wrong number of arguments (1 for 0) (ArgumentError)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      from C:/work/gosyujin.github.com/vendor/bundle/ruby/1.9.1/bundler/gems/jekyll-0db5dcf83217/lib/jekyll/post.rb:255:in `render&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      from C:/work/gosyujin.github.com/vendor/bundle/ruby/1.9.1/bundler/gems/jekyll-0db5dcf83217/lib/jekyll/site.rb:213:in `block in render&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      from C:/work/gosyujin.github.com/vendor/bundle/ruby/1.9.1/bundler/gems/jekyll-0db5dcf83217/lib/jekyll/site.rb:212:in `each&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      from C:/work/gosyujin.github.com/vendor/bundle/ruby/1.9.1/bundler/gems/jekyll-0db5dcf83217/lib/jekyll/site.rb:212:in `render&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      from C:/work/gosyujin.github.com/vendor/bundle/ruby/1.9.1/bundler/gems/jekyll-0db5dcf83217/lib/jekyll/site.rb:44:in `process&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      from C:/work/gosyujin.github.com/vendor/bundle/ruby/1.9.1/bundler/gems/jekyll-0db5dcf83217/lib/jekyll/command.rb:18:in `process_site&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      from C:/work/gosyujin.github.com/vendor/bundle/ruby/1.9.1/bundler/gems/jekyll-0db5dcf83217/lib/jekyll/commands/build.rb:23:in `build&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      from C:/work/gosyujin.github.com/vendor/bundle/ruby/1.9.1/bundler/gems/jekyll-0db5dcf83217/lib/jekyll/commands/build.rb:7:in `process&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      from C:/work/gosyujin.github.com/vendor/bundle/ruby/1.9.1/bundler/gems/jekyll-0db5dcf83217/bin/jekyll:96:in `block (2 levels) in &amp;lt;top (required)&amp;gt;&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      from C:/work/gosyujin.github.com/vendor/bundle/ruby/1.9.1/gems/commander-4.1.4/lib/commander/command.rb:180:in `call&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      from C:/work/gosyujin.github.com/vendor/bundle/ruby/1.9.1/gems/commander-4.1.4/lib/commander/command.rb:180:in `call&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      from C:/work/gosyujin.github.com/vendor/bundle/ruby/1.9.1/gems/commander-4.1.4/lib/commander/command.rb:155:in `run&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      from C:/work/gosyujin.github.com/vendor/bundle/ruby/1.9.1/gems/commander-4.1.4/lib/commander/runner.rb:402:in `run_active_command&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      from C:/work/gosyujin.github.com/vendor/bundle/ruby/1.9.1/gems/commander-4.1.4/lib/commander/runner.rb:78:in `run!&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      from C:/work/gosyujin.github.com/vendor/bundle/ruby/1.9.1/gems/commander-4.1.4/lib/commander/delegates.rb:11:in `run!&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      from C:/work/gosyujin.github.com/vendor/bundle/ruby/1.9.1/gems/commander-4.1.4/lib/commander/import.rb:10:in `block in &amp;lt;top (required)&amp;gt;&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# add &amp;#39;raw&amp;#39; attribute&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;to_liquid&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_liquid_orig&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;deep_merge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
        &lt;span class=&quot;s2&quot;&gt;&amp;quot;raw&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ToDrop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;うーむ &lt;code&gt;post_to_liquid_raw.rb&lt;/code&gt; で呼んでる &lt;code&gt;to_liquid&lt;/code&gt; の引数がおかしいと。&lt;/p&gt;

&lt;p&gt;実装元のdiffをとってみる。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;C:&lt;span class=&quot;se&quot;&gt;\w&lt;/span&gt;ork&lt;span class=&quot;se&quot;&gt;\g&lt;/span&gt;osyujin.github.com&lt;span class=&quot;se&quot;&gt;\v&lt;/span&gt;endor&lt;span class=&quot;se&quot;&gt;\b&lt;/span&gt;undle&lt;span class=&quot;se&quot;&gt;\r&lt;/span&gt;uby&lt;span class=&quot;se&quot;&gt;\1&lt;/span&gt;.9.1&lt;span class=&quot;se&quot;&gt;\b&lt;/span&gt;undler&lt;span class=&quot;se&quot;&gt;\g&lt;/span&gt;ems&lt;span class=&quot;se&quot;&gt;\j&lt;/span&gt;ekyll-0db5dcf83217&lt;span class=&quot;se&quot;&gt;\l&lt;/span&gt;ib&lt;span class=&quot;se&quot;&gt;\j&lt;/span&gt;ekyll
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git diff v1.1.0..v1.1.2 -- ./post.rb
&lt;span class=&quot;go&quot;&gt;diff --git a/lib/jekyll/post.rb b/lib/jekyll/post.rb&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;index 1b70e31..9ad2539 100644&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;--- a/lib/jekyll/post.rb&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+++ b/lib/jekyll/post.rb&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;(略)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;@@ -272,8 +275,8 @@ module Jekyll&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;     # Convert this post into a Hash for use in Liquid templates.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;     #&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;     # Returns the representative Hash.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-    def to_liquid&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-      further_data = Hash[ATTRIBUTES_FOR_LIQUID.map { |attribute|&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+    def to_liquid(attrs = ATTRIBUTES_FOR_LIQUID)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;+      further_data = Hash[attrs.map { |attribute|&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;すると v1.1.0 から v1.1.2 の間( v1.1.1 )で &lt;code&gt;to_liquid&lt;/code&gt; に引数が加えられてる！&lt;/p&gt;

&lt;p&gt;※ &lt;code&gt;ATTRIBUTES_FOR_LIQUID&lt;/code&gt; はこんな定数が入っていた: &lt;code&gt;[&amp;quot;title&amp;quot;, &amp;quot;url&amp;quot;, &amp;quot;date&amp;quot;, &amp;quot;id&amp;quot;, &amp;quot;categories&amp;quot;, &amp;quot;next&amp;quot;, &amp;quot;previous&amp;quot;, &amp;quot;tags&amp;quot;, &amp;quot;path&amp;quot;, &amp;quot;content&amp;quot;, &amp;quot;excerpt&amp;quot;]&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;post_to_liquid_raw.rb&lt;/code&gt; の &lt;code&gt;to_liquid&lt;/code&gt; にこの引数を足せばエラーが解消できるみたい。&lt;/p&gt;

&lt;p&gt;…と、こういうちょいなおしをするためにも直接持ってこないで fork した方が自由がきいてよいかという話。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Subversionのproxy設定でいつもハマるやつ</title>
   <link href="http://gosyujin.github.io/2013/09/05/svn-proxy-error-by-git-svn"/>
   <updated>2013-09-05T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2013/09/05/svn-proxy-error-by-git-svn</id>
   <content type="html">&lt;h2 id=&quot;あらすじ&quot;&gt;あらすじ&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;git svn&lt;/code&gt; しようとしたらエラー。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git svn rebase
&lt;span class=&quot;go&quot;&gt;Malformed file: /c/Users/xxx/.subversion/servers:68: Option expected at&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;/usr/lib/perl5/site_perl/Git/SVN/Ra.pm line 81&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;環境&quot;&gt;環境&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Windows&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;svn バージョン等は失念。まあ、多分バージョンはあまり関係ないと思われる？&lt;/p&gt;

&lt;h2 id=&quot;結論&quot;&gt;結論&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;git-svn&lt;/code&gt; の問題ではなく proxy 環境下 においての svn 設定ミスだった。&lt;/p&gt;

&lt;h2 id=&quot;原因&quot;&gt;原因&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;.subversion/server&lt;/code&gt; の該当部分を見に行くとこうなっている。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;go&quot;&gt;[global]&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt; http-proxy-exceptions &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; *.exception.com, www.internal-site.org
&lt;span class=&quot;go&quot;&gt; http-proxy-host = proxy.xxx.jp&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; http-proxy-port = 8080&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;proxy 設定を追加するためにコメントアウトを消したが。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;コメントアウト &lt;code&gt;#&lt;/code&gt; を &lt;strong&gt;一文字&lt;/strong&gt; 消しただけではダメ(上記の状態)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;スペース&lt;/strong&gt; も消さなければならない&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ただしくはこう。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;go&quot;&gt;[global]&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt; http-proxy-exceptions &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; *.exception.com, www.internal-site.org
&lt;span class=&quot;go&quot;&gt;http-proxy-host = proxy.xxx.jp&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;http-proxy-port = 8080&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;これ、毎回設定する時にひっかかってるような気がする。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Ruby1.9.3のWebrickで出るCould not determine content-length...エラーを消す方法(2.0.0では解決済)</title>
   <link href="http://gosyujin.github.io/2013/09/03/redmine-content-length-error"/>
   <updated>2013-09-03T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2013/09/03/redmine-content-length-error</id>
   <content type="html">&lt;h2 id=&quot;あらすじ&quot;&gt;あらすじ&lt;/h2&gt;

&lt;p&gt;Redmineを起動している時に以下のようなログが大量に吐かれコンソールが埋め尽くされて困った。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;go&quot;&gt;[yyyy-mm-dd ...] WARN Could not determine content-length of response body. Set content-length of the response or set Response#chunked = true&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;環境&quot;&gt;環境&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Ruby 1.9.3&lt;/li&gt;
&lt;li&gt;Redmine 2.3.1

&lt;ul&gt;
&lt;li&gt;Rails 3.2.13&lt;/li&gt;
&lt;li&gt;WEBrick 1.3.1&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;参考サイト&quot;&gt;参考サイト&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://qiita.com/y_uuki/items/0f8c093bd25eac3119a0&quot;&gt;Railsのログから&amp;quot;Could not determine content-length ...&amp;quot;とかでてるのを消す - Qiita [キータ]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://qa.atmarkit.co.jp/q/63&quot;&gt;Webrickが出す大量のログを抑止するには？ - QA@IT&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://qiita.com/ysk_1031/items/e57852a07dc4ddef8dbe&quot;&gt;Ruby - Railsサーバーの WARN Could not determine content-length… のログを表示しないようにする - Qiita [キータ]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/rails/rails/issues/3164&quot;&gt;rails 3.1.1.rc1 emits warning for each assets when using ruby-1.9.3-rc1 · Issue #3164 · rails/rails · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://bugs.ruby-lang.org/issues/5737&quot;&gt;Bug #5737: WEBrick doesn&amp;#39;t support keep alive connections for 204 and 304 responses - ruby-trunk - Ruby Issue Tracking System&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;解決方法&quot;&gt;解決方法&lt;/h2&gt;

&lt;p&gt;以下のパッチをあてる or 該当ファイルを変更する。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://bugs.ruby-lang.org/attachments/2300/204_304_keep_alive.patch&quot;&gt;204-304-keep-alive.patch - ruby-trunk - Ruby Issue Tracking System&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;このパッチは取り込まれていて、最新版だとなおってるのかな？&lt;/p&gt;

&lt;p&gt;→ &lt;strong&gt;2.0.0 ではなおってた！&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ruby/ruby/blob/ruby_2_0_0/lib/webrick/httpresponse.rb&quot;&gt;ruby/lib/webrick/httpresponse.rb at ruby-2-0-0 · ruby/ruby · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# Keep-Alive connection.&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@header&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;connection&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;close&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;vi&quot;&gt;@keep_alive&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;elsif&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;keep_alive?&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;chunked?&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@header&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;content-length&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@status&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;304&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@status&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;204&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;HTTPStatus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;info?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
          &lt;span class=&quot;vi&quot;&gt;@header&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;connection&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Keep-Alive&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;ちなみに、 &lt;a href=&quot;https://github.com/rails/rails/issues/3164&quot;&gt;Railsのissue&lt;/a&gt; を見ると、みんな発生してた様子。&lt;/p&gt;

&lt;p&gt;RFCにはこう書いてある模様。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://bugs.ruby-lang.org/issues/5737&quot;&gt;Bug #5737: WEBrick doesn&amp;#39;t support keep alive connections for 204 and 304 responses - ruby-trunk - Ruby Issue Tracking System&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;So if you want to do keep-alive, even if you add a content length, you will always get a warning. RFC2616 Section 4.4 says:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;1.Any response message which &amp;quot;MUST NOT&amp;quot; include a message-body (such as the 1xx, 204, and 304 responses and any response to a HEAD request) is always terminated by the first empty line after the header fields, regardless of the entity-header fields present in the message&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I think this means that clients will know the length of the body, and clients can support keep-alive connections with no content-length for these types of responses.&lt;/p&gt;
&lt;/blockquote&gt;
</content>
 </entry>
 
 <entry>
   <title>Androidの自動テストツール、今(2013年)から使うなら何がよいのか</title>
   <link href="http://gosyujin.github.io/2013/08/28/android-test-tools"/>
   <updated>2013-08-28T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2013/08/28/android-test-tools</id>
   <content type="html">&lt;h2 id=&quot;あらすじ&quot;&gt;あらすじ&lt;/h2&gt;

&lt;p&gt;Androidのテストを自動化したいので、テストツールの選定をしてみたが、昔の記事がヒットする事が多く、何を使えばいいのかよくわからん。&lt;/p&gt;

&lt;p&gt;とはいっても、明確に「どんなテストがしたい」という方針もなく、とっかかりとしてどんなツールがあってどのくらい盛り上がってるのかが知りたかった。&lt;/p&gt;

&lt;h2 id=&quot;環境&quot;&gt;環境&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Windows 7&lt;/li&gt;
&lt;li&gt;AndroidDeveloperTools Build: v21.1.0-569685&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;とりあえず Win メインで。&lt;/p&gt;

&lt;h2 id=&quot;とっかかり&quot;&gt;とっかかり&lt;/h2&gt;

&lt;h3 id=&quot;ロジックまわりのテスト&quot;&gt;ロジックまわりのテスト&lt;/h3&gt;

&lt;p&gt;ロジック的なものは、 JUnit 拡張の TestCase クラスを使えば何とか書けそうというのはわかった。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.atmarkit.co.jp/ait/articles/1112/16/news137.html&quot;&gt;Androidアプリ開発テスト入門（2）：Android SDKでビジネスロジックのテストを自動化するには (1/3) - ＠IT&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;2011 年の記事だけど、 JUnit で書くという大前提は崩れていないはず…。&lt;/p&gt;

&lt;h3 id=&quot;画面遷移やguiまわりのテスト&quot;&gt;画面遷移やGUIまわりのテスト&lt;/h3&gt;

&lt;p&gt;困ったのはこっち。どう書けばいいんだろう。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;「Android 自動テスト ツール」&lt;/strong&gt; とかで調べてみた結果、以下のような記事が引っ掛かった。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://d.hatena.ne.jp/language_and_engineering/20110930/p1&quot;&gt;Androidアプリの自動テストツールで最も有望か - 「NativeDriver」，Google製「WebDriver」の拡張　（公式のAndroid版Selenium） - 主に言語とシステム開発に関して&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;これも 2011 年の記事だが、この中では &lt;code&gt;NativeDriver&lt;/code&gt; , &lt;code&gt;robotium&lt;/code&gt; , &lt;code&gt;Scirocco&lt;/code&gt; の 3 ツールでは最終的に &lt;code&gt;NativeDriver&lt;/code&gt; に集約されていくだろうという結論になっている。&lt;/p&gt;

&lt;p&gt;…が、 2013 年現在においても本当にそうなのか？&lt;/p&gt;

&lt;h2 id=&quot;結論&quot;&gt;結論&lt;/h2&gt;

&lt;p&gt;2013 年 08 月の時点ではこんな感じ。&lt;/p&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;ツール&lt;/th&gt;
&lt;th&gt;ソース&lt;/th&gt;
&lt;th&gt;Android&lt;/th&gt;
&lt;th&gt;iOS&lt;/th&gt;
&lt;th&gt;テスト記述可能な言語&lt;/th&gt;
&lt;th&gt;備考&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;NativeDriver&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;http://nativedriver.googlecode.com/svn&quot;&gt;svn&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;開発終了&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;robotium&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/jayway/robotium&quot;&gt;GitHub&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;1.6 以上&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Java&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Scirocco&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/sonixlabs/scirocco-webdriver&quot;&gt;GitHub&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;2012/09 で更新が止まっている&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Monkeyrunner&lt;/td&gt;
&lt;td&gt;sdk内&lt;/td&gt;
&lt;td&gt;&lt;code&gt;○&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Java&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Jython で実行 / Plugin は Java で書ける / 今回はうまく動かせなかった&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Appium&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/appium/appium&quot;&gt;GitHub&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;4.2 以上&lt;/td&gt;
&lt;td&gt;&lt;code&gt;○&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Node.js&lt;/code&gt; &lt;code&gt;Python&lt;/code&gt; &lt;code&gt;PHP&lt;/code&gt; &lt;code&gt;Ruby&lt;/code&gt; &lt;code&gt;Java&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Windows 版は beta / iOS がメイン？ &lt;a href=&quot;https://bitbucket.org/appium/appium.app/downloads&quot;&gt;ファイル置場&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Spoon&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/square/spoon&quot;&gt;GitHub&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;4.1 以上&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Java&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Maven 実行推奨？&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Selenroid&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/DominikDary/selendroid&quot;&gt;GitHub&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;○&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Java&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Windows 版は現状未サポート / Ruby でもテスト書ける？&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;uiautomator&lt;/td&gt;
&lt;td&gt;sdk内&lt;/td&gt;
&lt;td&gt;4.1 以上&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Java&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;今回はうまく動かせなかった&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;Android / iOS 欄の &lt;code&gt;○&lt;/code&gt; は公式で動くと謳っているが、詳しいバージョンまで見つけられなかったものに記入。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;今でもよく検索に引っかかる &lt;code&gt;NativeDriver&lt;/code&gt; はとっくに開発終了されている&lt;/li&gt;
&lt;li&gt;新鋭( 2013 ～)ツールは便利な機能も多い印象だが、 Windows に未サポートのものが多い(バグ踏んでも泣かない)&lt;/li&gt;
&lt;li&gt;Windows 使いなら &lt;code&gt;robotium&lt;/code&gt; あたりに行くのが良い？&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;以下、ひとつずつ見てみる。&lt;/p&gt;

&lt;h2 id=&quot;テストツール&quot;&gt;テストツール&lt;/h2&gt;

&lt;h3 id=&quot;nativedriver-開発終了&quot;&gt;NativeDriver - 開発終了&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;del&gt;公式 &lt;a href=&quot;http://code.google.com/p/nativedriver/&quot;&gt;nativedriver - Native application GUI automation with extended WebDriver API - Google Project Hosting&lt;/a&gt;&lt;/del&gt;

&lt;ul&gt;
&lt;li&gt;&lt;del&gt;コミットログ日付 2011-04-25 - &lt;strong&gt;2011-08-08&lt;/strong&gt; &lt;/del&gt;&lt;/li&gt;
&lt;li&gt;2012年 &lt;a href=&quot;http://d.hatena.ne.jp/hrksb5029/20120607/1339091915&quot;&gt;Googleのスマホアプリ自動テストツールNativeDriver事始め＆ハマったところ - Vermee81の日録&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2012年 &lt;a href=&quot;http://yyhayashi303.hatenablog.com/entry/20120225/1330182071&quot;&gt;AndroidのテストツールNativedriverを使ってみる - yyhayashi303&amp;#39;s diary&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Selenium WebDriver の源流になっている WebDriver (Google謹製 / 2009年) の流れをくんでおり、かつAndroid, iOS対応とし、現在の主流なのかと思ったが、2011年で更新が止まっている？&lt;/p&gt;

&lt;p&gt;→ &lt;code&gt;NativeDriver&lt;/code&gt; はすでに &lt;strong&gt;開発終了&lt;/strong&gt; しており、一部 Selenium 2(WebDriver 統合)に還元されて天に召された模様。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://groups.google.com/d/topic/seleniumjp/xVHa48gHBLg&quot;&gt;自己紹介 - Google Groups&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://groups.google.com/forum/#!topic/nativedriver-devs/WC0GopaDMIo&quot;&gt;Winding down NativeDriver - Google グループ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;上記のフォーラムで、 &lt;code&gt;NativeDriver&lt;/code&gt; ユーザはどうすればよいか今後の方針が述べられている。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;Android Instrumentation&lt;/code&gt; のような公式ツールを使え&lt;/li&gt;
&lt;li&gt;&lt;code&gt;robotium&lt;/code&gt; のようなサードパーティツールを使え&lt;/li&gt;
&lt;li&gt;( &lt;code&gt;NativeDriver&lt;/code&gt; を引き続き使うなら)自分自身で  Hack し、より良くしてみろ&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;ということらしい。というわけで、2013年の時点では候補から除外した方がよさげ。&lt;/p&gt;

&lt;p&gt;(ワードにもよるが) ググると高確率でこれが上位にあがってくるので、バリバリ使われているのかと思ったが、正式に凍結を声明した記述が見つかったので安心。&lt;/p&gt;

&lt;h3 id=&quot;robotium&quot;&gt;robotium&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;公式 &lt;a href=&quot;http://code.google.com/p/robotium/&quot;&gt;robotium - The world&amp;#39;s leading Android? test automation framework - Google Project Hosting&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;コミットログ日付 2009-12-10 - 2013-08-25&lt;/li&gt;
&lt;li&gt;2013年 &lt;a href=&quot;http://tech-tec.com/archives/881&quot;&gt;androidでrobotiumを使って画面遷移をテストする ≫ tech-tec&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2012年 &lt;a href=&quot;http://d.hatena.ne.jp/knnfm/20120125/1327460923&quot;&gt;Robotiumを触ってみた(Android自動テストツール) - くのっふむ(knnfm)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2010年 &lt;a href=&quot;http://poly.hatenablog.com/entry/20101019/p1&quot;&gt;RobotiumでAndroidアプリのシナリオテストを自動化する - 遥かへのスピードランナー&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;この中では一番プロジェクトの歴史が古く、2013年に入っても精力的にコミットなされている。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;This project is neither affiliated with Google nor with OpenQA (Selenium).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;「Google プロジェクトでも Selenium プロジェクトでもない」という事で、非公式 Selenium 的な感じの様子。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Android 1.6 以上をサポート&lt;/li&gt;
&lt;li&gt;apk ファイルのみでもテスト可&lt;/li&gt;
&lt;li&gt;プリインストールされた端末でもテスト可&lt;/li&gt;
&lt;li&gt;ハイブリッドアプリもテスト可能( &lt;code&gt;robotium&lt;/code&gt; 4.0 から)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;これはちょっと Hello World してみよう。&lt;/p&gt;

&lt;h4 id=&quot;前準備&quot;&gt;前準備&lt;/h4&gt;

&lt;p&gt;公式ページより Jar File をダウンロード。現在の最新版は &lt;code&gt;robotium-solo-4.2.jar&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;これを &lt;code&gt;TESTPROJECT/libs/&lt;/code&gt; に入れる。 libs ディレクトリに入れると、 Eclipse の Package Explorer で見たときに &lt;code&gt;Android Dependencies&lt;/code&gt; 下に &lt;code&gt;robotium&lt;/code&gt; の jar が見えるはず。&lt;/p&gt;

&lt;p&gt;見えなければプロパティから追加。 &lt;a href=&quot;http://stackoverflow.com/questions/9875029/android-robotium-noclassdeffounderror&quot;&gt;testing - Android Robotium NoClassDefFoundError - Stack Overflow&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;シナリオ作成&quot;&gt;シナリオ作成&lt;/h4&gt;

&lt;p&gt;基本的には JUnit のテストケース作成と同じ要領で進む。&lt;/p&gt;

&lt;p&gt;適当なログイン画面のログインボタン押して、戻るだけのテストケース &lt;code&gt;LoginActivityTest.java&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// robotium インポート&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;com.jayway.android.robotium.solo.Solo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;略&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 既存のJUnitテストクラス&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LoginActivityTest&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ActivityInstrumentationTestCase2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LoginActivity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;略&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// に robotium を使ったテストを追加&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;testMove&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;Solo&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;solo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Solo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getInstrumentation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getActivity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// 座標指定してクリック&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;solo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;clickOnScreen&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;600&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// 画面から引数に指定したテキストを見つけて？クリック&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;solo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;clickOnText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Hoge&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// ログインと書かれたボタンを見つけてクリック&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;solo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;clickOnButton&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;ログイン&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

            &lt;span class=&quot;n&quot;&gt;solo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;assertCurrentActivity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;次の画面へ&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MainActivity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            
            &lt;span class=&quot;c1&quot;&gt;// &amp;quot;/sdcard/Robotium-Screenshots/&amp;quot; にスクリーンショット保存&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;solo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;takeScreenshot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// アクティビティ戻る&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;solo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;goBack&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
            
            &lt;span class=&quot;n&quot;&gt;solo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;assertCurrentActivity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;戻ってきた&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LoginActivity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;略&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;solo.clickOnButton(&amp;quot;ログイン&amp;quot;)&lt;/code&gt; でボタンを一気に押してくれるのが非常に便利に感じる。&lt;/p&gt;

&lt;p&gt;(ボタンの取得の仕方とかは、今のところ findViewById でとってくる &lt;code&gt;Button button = (Button) activity.findViewById(com.example.testapp.R.id.login_button)&lt;/code&gt; 方法しかしらないので)&lt;/p&gt;

&lt;p&gt;また、スクリーンショット機能なども実装されており、メソッドを呼び出すだけでSDカードに入れてくれる！便利！&lt;/p&gt;

&lt;h3 id=&quot;scirocco-現scirocco-for-webdriver&quot;&gt;Scirocco - 現Scirocco for WebDriver&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;del&gt;公式 &lt;a href=&quot;http://code.google.com/p/scirocco/&quot;&gt;scirocco - A UI Test Automation Tool for Android - Google Project Hosting&lt;/a&gt;&lt;/del&gt;

&lt;ul&gt;
&lt;li&gt;&lt;del&gt;コミットログ日付 2011-05-14 - &lt;strong&gt;2011-12-06&lt;/strong&gt; &lt;/del&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;公式 &lt;a href=&quot;http://www.sonix.asia/service/library&quot;&gt;Open Source Library｜Sonix&lt;/a&gt; / &lt;a href=&quot;http://www.sonixlabs.com/scirocco-jp/&quot;&gt;Scirocco&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;コミットログ日付  2012-07-31 - &lt;strong&gt;2012-09-27&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;2012年 &lt;a href=&quot;http://wiki.android-fun.jp/?Scirocco%20%E9%96%8B%E7%99%BA%E3%83%A1%E3%83%A2&quot;&gt;Scirocco 開発メモ｜Android Wiki for Developers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2012年 &lt;a href=&quot;http://d.hatena.ne.jp/knnfm/20120118/1326866266&quot;&gt;sciroccoを触ってみた。(Android自動テストツール) - くのっふむ(knnfm)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2011年 &lt;a href=&quot;http://d.hatena.ne.jp/re_shikajiro/20110531/1306848452&quot;&gt;AndroidのUI自動テストツール Scirocco 触ってみた。 - しかじろうがプログラム作るよ！&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;※ Google Project Hosting 版は &lt;strong&gt;Development Discontinued&lt;/strong&gt; とされており、今はソニックスが管理しているみたい。また、旧版は &lt;code&gt;Scirocco&lt;/code&gt; , ソニックス版は &lt;code&gt;Scirocco WebDriver&lt;/code&gt; となっておりアーキテクチャが変わっているらしい。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;robotium&lt;/code&gt;, &lt;code&gt;scirocco plug-in&lt;/code&gt; , &lt;code&gt;scirocco TestManagementSystem&lt;/code&gt; から成り立つテストツール。&lt;/p&gt;

&lt;p&gt;基本的には &lt;code&gt;robotium&lt;/code&gt; に機能がプラスされたツールなんだろう。テストのレポートやスクリーンショットがとれる模様。(前述のとおり、 スクリーンショットは &lt;code&gt;robotium&lt;/code&gt; でも(今は？)できる様子)&lt;/p&gt;

&lt;p&gt;けど、 &lt;code&gt;robotium&lt;/code&gt; が猛烈に更新されている一方で、こっちは更新が止まっている(遅れている？)ようなので、 &lt;code&gt;Scirocco&lt;/code&gt; は深追いせずこれで終わり。&lt;/p&gt;

&lt;h3 id=&quot;monkeyrunner&quot;&gt;MonkeyRunner&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;AndroidSDKに同梱されている ( &lt;code&gt;SDK_ROOT\sdk\tools\monkeyrunner.bat&lt;/code&gt; )

&lt;ul&gt;
&lt;li&gt;2012年 &lt;a href=&quot;http://d.hatena.ne.jp/rukiadia0401/20121207/1354896442&quot;&gt;ここ数ヶ月、MonkeyRunnerを仕事で使ってみて思ったこと - 見習いプログラマーの修行日記&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2012年 &lt;a href=&quot;http://greety.sakura.ne.jp/redo/2012/02/monkeyrunner.html&quot;&gt;なめこMonkeyRunner（その1） - ReDo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2011年 &lt;a href=&quot;http://android-test-blog.blogspot.jp/2011/09/androiodmonkeyrunner.html&quot;&gt;Androiod端末のテストツール「monkeyrunner」-基本-&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2011年 &lt;a href=&quot;http://kopanitsa.seesaa.net/article/195231645.html&quot;&gt;monkeyrunner自動化計画(1): 16分の11拍子&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2010年 &lt;a href=&quot;http://y-anz-m.blogspot.jp/2010/12/androidmonkeyrunner.html&quot;&gt;Y.A.M の 雑記帳: Android　monkeyrunner を訳して試してみた。&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;これだけ他のツールとちょっと毛色が違う感じがする。&lt;/p&gt;

&lt;p&gt;Pythonで書ける、画面のボタン選択などは &lt;strong&gt;座標指定&lt;/strong&gt; 。(座標を調べる事自体もめんどいし、複数端末あると端末分スクリプト作らなきゃいけない？)&lt;/p&gt;

&lt;p&gt;画面のいろいろなところをやみくもにぽちぽちするテストもできる。&lt;/p&gt;

&lt;p&gt;ちょっと使ってみよう。…と思ったけどなんかダメだった。&lt;/p&gt;

&lt;h4 id=&quot;前準備&quot;&gt;前準備&lt;/h4&gt;

&lt;p&gt;まず、 &lt;code&gt;SDK_ROOT\sdk\tools\monkeyrunner.bat&lt;/code&gt; を実行してみる。 Jython で実行するようなので Java (は入っていると思うが) と Python が必要？&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; monkeyrunner.bat
&lt;span class=&quot;go&quot;&gt;Jython 2.5.0 (Release_2_5_0:6476, Jun 16 2009, 13:33:26)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;[Java HotSpot(TM) Client VM (Oracle Corporation)] on java1.7.0_17&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&lt;/span&gt;&amp;gt;&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;シナリオ作成&quot;&gt;シナリオ作成&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://developer.android.com/tools/help/monkeyrunner_concepts.html&quot;&gt;monkeyrunner｜Android Developers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;上記の Simple monkeyrunner Program をそのまま流し込んでみようと思ったんだけど、2行目でエラー…。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; monkeyrunner.bat
&lt;span class=&quot;go&quot;&gt;Jython 2.5.0 (Release_2_5_0:6476, Jun 16 2009, 13:33:26)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;[Java HotSpot(TM) Client VM (Oracle Corporation)] on java1.7.0_17&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&lt;/span&gt;&amp;gt;&amp;gt; from com.android.monkeyrunner import MonkeyRunner, MonkeyDevice
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&lt;/span&gt;&amp;gt;&amp;gt; &lt;span class=&quot;nv&quot;&gt;device&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; MonkeyRunner.waitForConnection&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;130828 20:34:40.534:S [main] [com.android.chimpchat.adb.AdbChimpDevice] Adb rejected adb port forwarding command: cannot bind socket&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;130828 20:34:40.534:S [main] [com.android.chimpchat.adb.AdbChimpDevice]com.android.ddmlib.AdbCommandRejectedException: cannot bind socket&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;130828 20:34:40.534:S [main] [com.android.chimpchat.adb.AdbChimpDevice] at com.android.ddmlib.AdbHelper.createForward(AdbHelper.java:545)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;130828 20:34:40.534:S [main] [com.android.chimpchat.adb.AdbChimpDevice] at com.android.ddmlib.Device.createForward(Device.java:481)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;130828 20:34:40.534:S [main] [com.android.chimpchat.adb.AdbChimpDevice] at com.android.chimpchat.adb.AdbChimpDevice.createManager(AdbChimpDevice.java:126)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;130828 20:34:40.534:S [main] [com.android.chimpchat.adb.AdbChimpDevice] at com.android.chimpchat.adb.AdbChimpDevice.&amp;lt;init&amp;gt;(AdbChimpDevice.java:72)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;130828 20:34:40.534:S [main] [com.android.chimpchat.adb.AdbChimpDevice] at com.android.chimpchat.adb.AdbBackend.waitForConnection(AdbBackend.java:122)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;130828 20:34:40.534:S [main] [com.android.chimpchat.adb.AdbChimpDevice] at com.android.chimpchat.ChimpChat.waitForConnection(ChimpChat.java:91)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;130828 20:34:40.534:S [main] [com.android.chimpchat.adb.AdbChimpDevice] at com.android.monkeyrunner.MonkeyRunner.waitForConnection(MonkeyRunner.java:75)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;130828 20:34:40.534:S [main] [com.android.chimpchat.adb.AdbChimpDevice] at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;130828 20:34:40.534:S [main] [com.android.chimpchat.adb.AdbChimpDevice] at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;130828 20:34:40.534:S [main] [com.android.chimpchat.adb.AdbChimpDevice] at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;130828 20:34:40.534:S [main] [com.android.chimpchat.adb.AdbChimpDevice] at java.lang.reflect.Method.invoke(Method.java:601)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;130828 20:34:40.534:S [main] [com.android.chimpchat.adb.AdbChimpDevice] at org.python.core.PyReflectedFunction.__call__(PyReflectedFunction.java:175)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;130828 20:34:40.534:S [main] [com.android.chimpchat.adb.AdbChimpDevice] at org.python.core.PyReflectedFunction.__call__(PyReflectedFunction.java:190)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;130828 20:34:40.534:S [main] [com.android.chimpchat.adb.AdbChimpDevice] at org.python.core.PyObject.__call__(PyObject.java:381)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;130828 20:34:40.534:S [main] [com.android.chimpchat.adb.AdbChimpDevice] at org.python.core.PyObject.__call__(PyObject.java:385)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;130828 20:34:40.534:S [main] [com.android.chimpchat.adb.AdbChimpDevice] at org.python.pycode._pyx2.f$0(&amp;lt;stdin&amp;gt;:1)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;130828 20:34:40.534:S [main] [com.android.chimpchat.adb.AdbChimpDevice] at org.python.pycode._pyx2.call_function(&amp;lt;stdin&amp;gt;)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;130828 20:34:40.534:S [main] [com.android.chimpchat.adb.AdbChimpDevice] at org.python.core.PyTableCode.call(PyTableCode.java:165)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;130828 20:34:40.534:S [main] [com.android.chimpchat.adb.AdbChimpDevice] at org.python.core.PyCode.call(PyCode.java:18)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;130828 20:34:40.534:S [main] [com.android.chimpchat.adb.AdbChimpDevice] at org.python.core.Py.runCode(Py.java:1197)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;130828 20:34:40.534:S [main] [com.android.chimpchat.adb.AdbChimpDevice] at org.python.core.Py.exec(Py.java:1241)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;130828 20:34:40.534:S [main] [com.android.chimpchat.adb.AdbChimpDevice] at org.python.util.PythonInterpreter.exec(PythonInterpreter.java:147)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;130828 20:34:40.534:S [main] [com.android.chimpchat.adb.AdbChimpDevice] at org.python.util.InteractiveInterpreter.runcode(InteractiveInterpreter.java:89)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;130828 20:34:40.534:S [main] [com.android.chimpchat.adb.AdbChimpDevice] at org.python.util.InteractiveInterpreter.runsource(InteractiveInterpreter.java:70)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;130828 20:34:40.534:S [main] [com.android.chimpchat.adb.AdbChimpDevice] at org.python.util.InteractiveInterpreter.runsource(InteractiveInterpreter.java:46)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;130828 20:34:40.534:S [main] [com.android.chimpchat.adb.AdbChimpDevice] at org.python.util.InteractiveConsole.push(InteractiveConsole.java:110)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;130828 20:34:40.534:S [main] [com.android.chimpchat.adb.AdbChimpDevice] at org.python.util.InteractiveConsole.interact(InteractiveConsole.java:90)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;130828 20:34:40.534:S [main] [com.android.chimpchat.adb.AdbChimpDevice] at org.python.util.InteractiveConsole.interact(InteractiveConsole.java:60)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;130828 20:34:40.534:S [main] [com.android.chimpchat.adb.AdbChimpDevice] at com.android.monkeyrunner.ScriptRunner.console(ScriptRunner.java:193)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;130828 20:34:40.534:S [main] [com.android.chimpchat.adb.AdbChimpDevice] at com.android.monkeyrunner.MonkeyRunnerStarter.run(MonkeyRunnerStarter.java:73)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;130828 20:34:40.534:S [main] [com.android.chimpchat.adb.AdbChimpDevice] at com.android.monkeyrunner.MonkeyRunnerStarter.main(MonkeyRunnerStarter.java:189)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Traceback (most recent call last):&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  File &amp;quot;&amp;lt;stdin&amp;gt;&amp;quot;, line 1, in &amp;lt;module&amp;gt;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;          at com.google.common.base.Preconditions.checkNotNull(Preconditions.java:191)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;          at com.android.chimpchat.adb.AdbChimpDevice.&amp;lt;init&amp;gt;(AdbChimpDevice.java:74)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;          at com.android.chimpchat.adb.AdbBackend.waitForConnection(AdbBackend.java:122)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;          at com.android.chimpchat.ChimpChat.waitForConnection(ChimpChat.java:91)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;          at com.android.monkeyrunner.MonkeyRunner.waitForConnection(MonkeyRunner.java:75)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;          at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;          at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;          at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;          at java.lang.reflect.Method.invoke(Method.java:601)&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;java.lang.NullPointerException: java.lang.NullPointerException&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/6950223/why-does-monkeyrunner-waitforconnection-error-adb-rejected-adb-port-forwardin&quot;&gt;android - Why does MonkeyRunner.waitForConnection() error &amp;quot;Adb rejected adb port forwarding command: cannot bind socket&amp;quot; - Stack Overflow&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;adb kill-server&lt;/code&gt; してみては？という記事は見つけたけど特に変わらず…。&lt;/p&gt;

&lt;h3 id=&quot;appium&quot;&gt;Appium&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;公式 &lt;a href=&quot;http://appium.io/&quot;&gt;Appium: Mobile App Automation Made Awesome.&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;コミットログ日付 2013-06-03 - 2013-08-07&lt;/li&gt;
&lt;li&gt;ファイル置場 https://bitbucket.org/appium/appium.app/downloads&lt;/li&gt;
&lt;li&gt;2013年 &lt;a href=&quot;http://qiita.com/skinoshita/items/211ca23edbb5f2776771&quot;&gt;Appiumを使ってスマートフォンアプリのテストを自動化する - Python編 - Qiita [キータ]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2013年 &lt;a href=&quot;http://qiita.com/skinoshita/items/fab6373f95836eceb177&quot;&gt;Android - Appiumを使ってスマートフォンアプリのテストを自動化する - 概要編 - Qiita [キータ]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2013年 &lt;a href=&quot;http://konyu.hatenablog.com/entry/2013/06/08/011118&quot;&gt;AppiumでiOSを自動で受け入れテスト Rspecでテストできるよ！ - コンユウメモ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Selenium ライクで &lt;strong&gt;iOS, Android 両方&lt;/strong&gt; のテストを作成できる。&lt;/p&gt;

&lt;p&gt;またテストコードは Node.js, Python, PHP, Ruby, Java などで書けるようだ。&lt;/p&gt;

&lt;p&gt;ただし、以下のような依存がある。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Requirements&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;General:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Mac OS X 10.7 or higher, 10.8 recommended (Linux OK for Android-only; support for Windows is in &amp;quot;beta&amp;quot;)&lt;/li&gt;
&lt;li&gt;Node and npm (brew install node) (Node must be &amp;gt;= v0.8)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For iOS automation:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;XCode&lt;/li&gt;
&lt;li&gt;Apple Developer Tools (iPhone simulator SDK, command line tools)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For Android automation:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Android SDK API &amp;gt;= 17&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;今のところ &lt;strong&gt;Windows は beta 版&lt;/strong&gt; のようなので、今回は試用見送り。あと  &lt;strong&gt;Android API 17 以上(= 4.2以上)&lt;/strong&gt; というのも意外とハードルが高い。&lt;/p&gt;

&lt;p&gt;iOSがメインで、Androidもテストできますよ、的な感じなのかも。&lt;/p&gt;

&lt;h3 id=&quot;spoon&quot;&gt;Spoon&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;公式 &lt;a href=&quot;http://square.github.io/spoon/&quot;&gt;Spoon&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;コミットログ日付 2012-07-10 - 2013-07-08&lt;/li&gt;
&lt;li&gt;2013年 &lt;a href=&quot;http://henteko07.hatenablog.com/entry/2013/03/24/190951&quot;&gt;Androidの実機テストを簡単にする「Spoon」を使ってみた-Sample編- - hentekoのdev日記&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Android 4.1 以上必須、実行に maven 推奨。&lt;/p&gt;

&lt;p&gt;日本語の情報は少ない。&lt;/p&gt;

&lt;h3 id=&quot;selendroid&quot;&gt;Selendroid&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;公式 &lt;a href=&quot;http://dominikdary.github.io/selendroid/&quot;&gt;Selendroid&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;コミットログ日付 2013-01-07 - 2013-08-22&lt;/li&gt;
&lt;li&gt;2013年 &lt;a href=&quot;http://dolias2010.hatenablog.com/entry/2013/06/26/002302&quot;&gt;Selendroid　Android自動テストツールの　スケーラビリティー - つれづれなるままに。&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2013年 &lt;a href=&quot;http://dolias2010.hatenablog.com/entry/20130604/1370357854&quot;&gt;Android の　自動テストツール - つれづれなるままに。&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Selenium for Android Apps という事で Android ネイティブアプリや Web ビューのテストを Selenium で書ける？&lt;/p&gt;

&lt;p&gt;Mac か Linux で動作確認。 &lt;strong&gt;Windows 版は not offially supported&lt;/strong&gt; でいくつか問題あり。&lt;/p&gt;

&lt;p&gt;日本語の情報は少ない。&lt;/p&gt;

&lt;h3 id=&quot;uiautomator&quot;&gt;uiautomator&lt;/h3&gt;

&lt;p&gt;はてブコメントや Twiter にて言及いただいたので調査。抜けていたのは、単純に知らなかったからです…。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;AndroidSDKに同梱されている ( &lt;code&gt;SDK_ROOT\sdk\tools\uiautomatorviewer.bat&lt;/code&gt; )

&lt;ul&gt;
&lt;li&gt;2013年 &lt;a href=&quot;https://github.com/mixi-inc/AndroidTraining/wiki/2.11.-%E3%83%86%E3%82%B9%E3%83%88&quot;&gt;2.11. テスト ・ mixi-inc/AndroidTraining Wiki ・ GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2012年 &lt;a href=&quot;http://nowsprinting.hatenablog.com/entry/2012/11/22/235609&quot;&gt;uiautomatorを試してみた #android_tec - やらなイカ？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2012年 &lt;a href=&quot;http://www.adakoda.com/adakoda/2012/12/android-uiautomator-2.html&quot;&gt;[Android] はじめてのuiautomator - adakoda&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2012年 &lt;a href=&quot;http://d.hatena.ne.jp/graceful_life/20121021/1350843227&quot;&gt;Android APIレベル17から使えそうな、UI Automator Testについて調べてみた(その１) - Hack the World!&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;Monkeyrunner&lt;/code&gt; と同じ場所に入っていた。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;AndroidSDK 21 でサポートされた&lt;/li&gt;
&lt;li&gt;Android 4.1 以降で動作？(サポートされているのが 4.1 以降？)&lt;/li&gt;
&lt;li&gt;これは &lt;code&gt;adb shell&lt;/code&gt; からたたく感じのツールみたい&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ちょっとさわってみようと思ったが、これもかなり苦戦する。挙句動かせないという。&lt;/p&gt;

&lt;p&gt;AndroidSDK に同梱されているツールは一筋縄で動かないなぁ。&lt;/p&gt;

&lt;h4 id=&quot;前準備&quot;&gt;前準備&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;テスト用プロジェクト右クリックし、 &lt;code&gt;Properties -&amp;gt; Java Build Path -&amp;gt; Add External JARs&lt;/code&gt; から &lt;code&gt;SDK_ROOT\sdk\platforms\android-17\uiautomator.jar&lt;/code&gt; を追加する&lt;/li&gt;
&lt;li&gt;テストクラスを &lt;code&gt;UIAutomatorTestCase&lt;/code&gt; で extend する&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;シナリオ作成&quot;&gt;シナリオ作成&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://developer.android.com/tools/help/uiautomator/index.html&quot;&gt;uiautomator｜Android Developers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;UIxxx クラスで端末を操作していく。上記のサイトを参考に…。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LoginActivityUITest&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UiAutomatorTestCase&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;testHelloWorld&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;getUiDevice&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;pressHome&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;UiObject&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;allAppsButton&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;UiObject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;UiSelector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;アプリ&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;allAppsButton&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;clickAndWaitForNewWindow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;UiObject&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;appsTab&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;UiObject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;UiSelector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;アプリ&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;appsTab&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;click&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;実行&quot;&gt;実行&lt;/h4&gt;

&lt;p&gt;ただ JUnit 実行すればいいってわけじゃないらしい。結構めんどい。&lt;/p&gt;

&lt;h5 id=&quot;ビルドする&quot;&gt;ビルドする&lt;/h5&gt;

&lt;p&gt;&lt;code&gt;SDK_ROOT\sdk\tools\&lt;/code&gt; 下にある &lt;code&gt;android.bat&lt;/code&gt; を使ってビルド。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; android.bat create uitest-project -n hoge -t x -p .&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;それぞれの引数はこう。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;go&quot;&gt;Options:&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  -p --path    : The new project&amp;#39;s directory. [required]&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  -n --name    : Project name.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  -t --target  : Target ID of the new project. [required]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;--target&lt;/code&gt; は &lt;code&gt;android.bat list&lt;/code&gt; コマンドで取得できる。(ずっと API レベルのことだと思って 17 とか指定していたら &lt;code&gt;Error: Target id is not valid. Use &amp;#39;android.bat list targets&amp;#39; to get the target ids.&lt;/code&gt; エラーで死んでた)&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; android list
&lt;span class=&quot;go&quot;&gt;Available Android targets:&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;----------&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;(略)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;----------&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;id: 6 or &amp;quot;android-17&amp;quot;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;     Name: Android 4.2.2&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;     Type: Platform&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;     API level: 17&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;     Revision: 2&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;     Skins: HVGA, QVGA, WQVGA400, WQVGA432, WSVGA, WVGA800 (default), WVGA854, WXGA720, WXGA800, WXGA800-7in&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;     ABIs : armeabi-v7a&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Available Android Virtual Devices:&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    Name: test&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    Path: C:\USER_PROFILE\.android\avd\test.avd&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  Target: Android 3.2 (API level 13)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;     ABI: armeabi&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    Skin: 480x854&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Snapshot: true&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;実行すると &lt;code&gt;build.xml&lt;/code&gt; ができる。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; android.bat create uitest-project -n hoge -t &lt;span class=&quot;m&quot;&gt;6&lt;/span&gt; -p C:&lt;span class=&quot;se&quot;&gt;\h&lt;/span&gt;oge
&lt;span class=&quot;go&quot;&gt;Added file C:\hoge\build.xml&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;ant build&lt;/code&gt; して &lt;code&gt;bin&lt;/code&gt; 下にできる jar ファイルを回収する&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; C:&lt;span class=&quot;se&quot;&gt;\a&lt;/span&gt;pache-ant-1.9.2&lt;span class=&quot;se&quot;&gt;\b&lt;/span&gt;in&lt;span class=&quot;se&quot;&gt;\a&lt;/span&gt;nt build
&lt;span class=&quot;go&quot;&gt;Buildfile: C:\hoge\build.xml&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;-check-env:&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; [checkenv] Android SDK Tools Revision 21.1.0&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; [checkenv] Installed at SDK_ROOT\sdk&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;-build-setup:&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;     [echo] Resolving Build Target for hoge...&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;[getuitarget] Project Target:   Android 4.2.2&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;[getuitarget] API level:        17&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;     [echo] ----------&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;     [echo] Creating output directories if needed...&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;-pre-compile:&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;compile:&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;-post-compile:&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;-dex:&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      [dex] input: C:\hoge\bin\classes&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      [dex] Converting compiled files and external libraries into C:\hoge\bin\classes.dex...&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;-post-dex:&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;-jar:&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      [jar] Building jar: C:\hoge\bin\hoge.jar&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;-post-jar:&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;build:&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;BUILD SUCCESSFUL&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Total time: 4 seconds&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h5 id=&quot;転送してテスト実行&quot;&gt;転送してテスト実行&lt;/h5&gt;

&lt;p&gt;次は &lt;code&gt;adb&lt;/code&gt; コマンドで 今作った jar ファイルを端末に転送する。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;pwd&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;SDK_ROOT\sdk\platform-tools&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; adb.exe push C:&lt;span class=&quot;se&quot;&gt;\h&lt;/span&gt;oge&lt;span class=&quot;se&quot;&gt;\h&lt;/span&gt;oge.jar /data/local/tmp
&lt;span class=&quot;go&quot;&gt;463 KB/s (4271 bytes in 0.009s)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;そして実行…だけど permission denied ？？&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; adb.exe shell uiautomator runtest hoge.jar -c com.example.test
&lt;span class=&quot;go&quot;&gt;uiautomator: permission denied&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/15949907/cannot-run-android-ui-tests-from-command-line&quot;&gt;testing - Cannot run android ui tests from command line - Stack Overflow&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;権限とかも、特に間違ってないみたいなんだけど…。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; ls -l /data/local/tmp/*.jar
&lt;span class=&quot;go&quot;&gt;ls -l /data/local/tmp/*.jar&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-rw-rw-rw- shell    shell        4271 2013-09-02 20:58 hoge.jar&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;とりあえず、用意が相当めんどくさいということはわかった。&lt;/p&gt;

&lt;p&gt;それを補って余りある API が提供されているのだろうか…。&lt;/p&gt;

&lt;h2 id=&quot;おまけ&quot;&gt;おまけ&lt;/h2&gt;

&lt;p&gt;Android API レベルとOSとリリース日の対応のメモ。&lt;del&gt;裏をとるのがめんどいので&lt;/del&gt;おまけなので、 Wikipedia 情報を全面的に信頼する。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://ja.wikipedia.org/wiki/Android#.E3.83.90.E3.83.BC.E3.82.B8.E3.83.A7.E3.83.B3_2&quot;&gt;Android - Wikipedia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ja.wikipedia.org/wiki/Android%E3%81%AE%E3%83%90%E3%83%BC%E3%82%B8%E3%83%A7%E3%83%B3%E5%B1%A5%E6%AD%B4&quot;&gt;Androidのバージョン履歴 - Wikipedia&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;OS&lt;/th&gt;
&lt;th&gt;API レベル&lt;/th&gt;
&lt;th&gt;コードネーム&lt;/th&gt;
&lt;th&gt;リリース&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Android 4.3&lt;/td&gt;
&lt;td&gt;18&lt;/td&gt;
&lt;td&gt;JellyBean&lt;/td&gt;
&lt;td&gt;2013/07/24&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Android 4.2&lt;/td&gt;
&lt;td&gt;17&lt;/td&gt;
&lt;td&gt;JellyBean&lt;/td&gt;
&lt;td&gt;2012/11/13&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Android 4.1&lt;/td&gt;
&lt;td&gt;16&lt;/td&gt;
&lt;td&gt;JellyBean&lt;/td&gt;
&lt;td&gt;2012/06/27&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Android 4.0.3 - 4.0.4&lt;/td&gt;
&lt;td&gt;15&lt;/td&gt;
&lt;td&gt;IceCreamSandwich&lt;/td&gt;
&lt;td&gt;2012/03/28(4.0.4)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Android 4.0 - 4.0.2&lt;/td&gt;
&lt;td&gt;14&lt;/td&gt;
&lt;td&gt;IceCreamSandwich&lt;/td&gt;
&lt;td&gt;2011/10/18&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Android 3.2&lt;/td&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;Honeycomb&lt;/td&gt;
&lt;td&gt;2011/07/15&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Android 3.1&lt;/td&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;td&gt;Honeycomb&lt;/td&gt;
&lt;td&gt;2011/05/10&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Android 3.0&lt;/td&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt;Honeycomb&lt;/td&gt;
&lt;td&gt;2011/02/22&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Android 2.3.3 - 2.3.7&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;Gingerbread&lt;/td&gt;
&lt;td&gt;2011/09/20(2.3.7)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Android 2.3 - 2.3.2&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;Gingerbread&lt;/td&gt;
&lt;td&gt;2010/12/06(2.3)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Android 2.2&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;Froyo&lt;/td&gt;
&lt;td&gt;2010/05/21&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Android 2.1&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;Eclair&lt;/td&gt;
&lt;td&gt;2010/01/12&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Android 2.0.1&lt;/td&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;Eclair&lt;/td&gt;
&lt;td&gt;2009/12/03&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Android 2.0&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;Eclair&lt;/td&gt;
&lt;td&gt;2009/10/26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Android 1.6&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;Donut&lt;/td&gt;
&lt;td&gt;2009/09/15&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Android 1.5&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;Cupcake&lt;/td&gt;
&lt;td&gt;2009/04/30&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Android 1.1&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;2009/02/09&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Android 1.0&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;2008/09/23&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
</content>
 </entry>
 
 <entry>
   <title>ソースコード中に0xC2A0(UTF-8のNO-BREAK SPACE)が混ざり実行できなくて困った話</title>
   <link href="http://gosyujin.github.io/2013/08/26/utf8-space-c2a0"/>
   <updated>2013-08-26T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2013/08/26/utf8-space-c2a0</id>
   <content type="html">&lt;h2 id=&quot;あらすじ&quot;&gt;あらすじ&lt;/h2&gt;

&lt;p&gt;あるソースコードをコピペして実行しようとしたところ、なんか動かない。(正確にはパッチファイルを適用しようとした)&lt;/p&gt;

&lt;p&gt;目grep してみたところ、おかしいところはなさげである。&lt;/p&gt;

&lt;h2 id=&quot;参考サイト&quot;&gt;参考サイト&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.fenrir-inc.com/jp/2011/06/post_51.html&quot;&gt;＆nbsp； は半角スペースではないというお話 (フェンリル デベロッパーズブログ)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog2.k05.biz/2013/05/utf-8-0xc2a0.html&quot;&gt;UTF-8の0xC2A0問題 【ブログ掲載のソースをコピペして、動作しないときに疑うべきこと】 某氏の猫空&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.softel.co.jp/blogs/tech/archives/769&quot;&gt;文字コードC2A0（UTF-8の半角空白）なんてあるんですね at softelメモ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.sitespiral.jp/archives/83.html&quot;&gt;Trimでも消えないスペースって？ 文字コードC2A0 サイトスパイラル(Sitespiral)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://frozentuna.hatenablog.jp/entry/2012/08/08/194135&quot;&gt;UTF-8の半角スペースについて - とりあえず落ち着け&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ja.wikipedia.org/wiki/%E3%83%8E%E3%83%BC%E3%83%96%E3%83%AC%E3%83%BC%E3%82%AF%E3%82%B9%E3%83%9A%E3%83%BC%E3%82%B9&quot;&gt;ノーブレークスペース - Wikipedia&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;調査&quot;&gt;調査&lt;/h2&gt;

&lt;p&gt;動かないファイルを色々調べてみると以下のようなことがわかった。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;ソースコード上の「半角スペースらしき空白」(A) を「半角スペース」(B) (キーボードのスペースキーで出した空白)で検索しても &lt;strong&gt;引っかからない&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;この (A) と (B) は別ものらしく &lt;code&gt;:s/(A)/(B)/&lt;/code&gt; とかすると置換が実行される&lt;/li&gt;
&lt;li&gt;また、 (A) を (B) に置換した状態だとエラーが出ずに実行できるようになった&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;「半角スペースらしき空白」が半角スペースではない何かのため、実行できなくなっていた模様。&lt;/p&gt;

&lt;p&gt;ということで、この「半角スペースらしき空白」を抽出してバイナリエディタで見てみた。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;go&quot;&gt;a b c&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;一応テキトウな文字で挟んでみる。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;a と b の間&lt;/code&gt; が「半角スペースらしき空白」&lt;/li&gt;
&lt;li&gt;&lt;code&gt;b と c の間&lt;/code&gt; が「半角スペース」&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;とした。&lt;/p&gt;

&lt;p&gt;見てみると…。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;go&quot;&gt;61 C2 A0 62 20 63&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;61&lt;/code&gt; &lt;code&gt;62&lt;/code&gt; &lt;code&gt;63&lt;/code&gt; はそれぞれ &lt;code&gt;a&lt;/code&gt; &lt;code&gt;b&lt;/code&gt; &lt;code&gt;c&lt;/code&gt; で、 &lt;code&gt;20&lt;/code&gt; は &lt;code&gt;半角スペース&lt;/code&gt; であるというところまではOK。&lt;/p&gt;

&lt;p&gt;残ったのは &lt;code&gt;C2A0&lt;/code&gt; 。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.fileformat.info/info/charset/UTF-8/list.htm&quot;&gt;Complete Character List for UTF-8&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;文字&lt;/th&gt;
&lt;th&gt;備考&lt;/th&gt;
&lt;th&gt;文字コード&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&amp;quot; &amp;quot;&lt;/td&gt;
&lt;td&gt;SPACE (U+0020)&lt;/td&gt;
&lt;td&gt;20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;----&lt;/td&gt;
&lt;td&gt;-----------------------------&lt;/td&gt;
&lt;td&gt;----&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;a&lt;/td&gt;
&lt;td&gt;LATIN SMALL LETTER A (U+0061)&lt;/td&gt;
&lt;td&gt;61&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;----&lt;/td&gt;
&lt;td&gt;-----------------------------&lt;/td&gt;
&lt;td&gt;----&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;b&lt;/td&gt;
&lt;td&gt;LATIN SMALL LETTER B (U+0062)&lt;/td&gt;
&lt;td&gt;62&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;----&lt;/td&gt;
&lt;td&gt;-----------------------------&lt;/td&gt;
&lt;td&gt;----&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;c&lt;/td&gt;
&lt;td&gt;LATIN SMALL LETTER C (U+0063)&lt;/td&gt;
&lt;td&gt;63&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;----&lt;/td&gt;
&lt;td&gt;-----------------------------&lt;/td&gt;
&lt;td&gt;----&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;quot; &amp;quot;&lt;/td&gt;
&lt;td&gt;NO-BREAK SPACE (U+00A0)&lt;/td&gt;
&lt;td&gt;c2a0&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;「半角スペースらしき空白」は NO-BREAK SPACE という文字で htmlで使う &lt;code&gt;&amp;amp;nbsp;&lt;/code&gt; と同じもの。&lt;/p&gt;

&lt;p&gt;表示する分には(レイアウトなどに気を付ける必要はあるものの)特に問題はないが、ソースコードの空白としては不適切。&lt;/p&gt;

&lt;p&gt;本文の &lt;code&gt;C2A0&lt;/code&gt; を半角スペース &lt;code&gt;20&lt;/code&gt; に置換してやる事でソースコードはソースコードとしてよみがえる。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;ところで、冒頭で「あるソースコード」としたコードだけど、これの出所はEvernoteにストックしておいたものだった。&lt;/p&gt;

&lt;p&gt;いったんノートに取り込んでしまうと、Evernote側の仕様でこうなっちゃうのかな？&lt;/p&gt;

&lt;p&gt;こういう話もあり↓&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p&gt;Evernoteは半角スペースを複数入力すると、内部的には&amp;amp;nbsp;がちょこちょこ入れられて、enmlなんかにも0xC2 0xA0というバイト列が入るんだな。vimで開いても単なるスペースにしか見えないので気付かなかった&lt;/p&gt;&amp;mdash; かと (@orangain) &lt;a href=&quot;https://twitter.com/orangain/statuses/361718067010609152&quot;&gt;July 29, 2013&lt;/a&gt;&lt;/blockquote&gt;

&lt;script async src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;p&gt;ただ、必ずそうなるわけではなく、何かを経由したときだけ変換される？&lt;/p&gt;

&lt;p&gt;もうちょい調べてみないといけないな〜。&lt;/p&gt;

&lt;h2 id=&quot;todo&quot;&gt;TODO&lt;/h2&gt;

&lt;p&gt;vi 、 emacs 、他(sedとか？)でうまく変換できるようにしたい。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Sphinxをインストールしようとしたら全然関係ないproxy周りでハマった話 続き</title>
   <link href="http://gosyujin.github.io/2013/08/23/sphinx-install-python-proxy2"/>
   <updated>2013-08-23T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2013/08/23/sphinx-install-python-proxy2</id>
   <content type="html">&lt;h2 id=&quot;前回までのあらすじ&quot;&gt;前回までのあらすじ&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://gosyujin.github.io/2013/08/21/sphinx-install-python-proxy/&quot;&gt;Sphinxをインストールしようとしたら全然関係ないproxy周りでハマった話&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;easy_install で見に行く proxy の順番はこんな感じだった。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;引数に明示的に指定した場合は引数を使う&lt;/li&gt;
&lt;li&gt;↑を満たさず、環境変数 &lt;code&gt;xxxx_proxy&lt;/code&gt; が設定されている場合はそこから読み込む&lt;/li&gt;
&lt;li&gt;↑を満たさない場合、 Windows ではレジストリ( IE の proxy 設定)を見にいく&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;で、なぜか環境変数 &lt;code&gt;HTTP_PROXY&lt;/code&gt; を読み込んだ場合は失敗して、 &lt;code&gt;HTTP_PROXY&lt;/code&gt; をクリアしてレジストリの proxy 設定を使ったら DL が成功しちゃったという話。&lt;/p&gt;

&lt;p&gt;なんでか気になったので調べた。&lt;/p&gt;

&lt;h2 id=&quot;結論&quot;&gt;結論&lt;/h2&gt;

&lt;p&gt;http &lt;strong&gt;以外&lt;/strong&gt; の proxy 設定をしていなかったから。というマヌケなオチ。&lt;/p&gt;

&lt;p&gt;次から気をつけよう。&lt;/p&gt;

&lt;h3 id=&quot;レジストリ-ie-の設定-から&quot;&gt;レジストリ( IE の設定)から&lt;/h3&gt;

&lt;p&gt;IE の 設定では、 &lt;code&gt;ツール &amp;gt; インターネットオプション &amp;gt; 接続 &amp;gt; LAN の設定 &amp;gt; 詳細設定&lt;/code&gt; の Secure にも proxy の設定が入れていた。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;すべてのプロトコルに同じプロキシサーバーを使用する&lt;/code&gt; にチェックを入れていたので。&lt;/p&gt;

&lt;p&gt;レジストリから読み込んだ場合、 Python 実行中に取得した変数 &lt;code&gt;proxies&lt;/code&gt; (使用する proxy をしまっておく変数)の値はこんな感じだった。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;p&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;http&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;http://PROXY:PORT/&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;https&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;https://PROXY:PORT/&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;ftp&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;ftp://PROXY:PORT&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;環境変数から&quot;&gt;環境変数から&lt;/h3&gt;

&lt;p&gt;一方、環境変数には &lt;code&gt;HTTP_PROXY&lt;/code&gt; しか指定していなかった。 &lt;code&gt;proxies&lt;/code&gt; を出力するとこう。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;p&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;http&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;http://PROXY:PORT/&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;なので、環境変数に &lt;code&gt;HTTPS_PROXY&lt;/code&gt; : &lt;code&gt;https://PROXY:PORT/&lt;/code&gt; を追加すると無事に easy_install できた！&lt;/p&gt;

&lt;h2 id=&quot;内部の処理&quot;&gt;内部の処理&lt;/h2&gt;

&lt;p&gt;内部がどうなっているのか見てみよう。&lt;/p&gt;

&lt;h3 id=&quot;環境変数-http_proxy-を設定している、ieのプロキシを設定している場合&quot;&gt;環境変数 &lt;code&gt;HTTP_PROXY&lt;/code&gt; を設定している、IEのプロキシを設定している場合&lt;/h3&gt;

&lt;p&gt;この場合、環境変数 &lt;code&gt;HTTP_PROXY&lt;/code&gt; が使われる。&lt;/p&gt;

&lt;p&gt;また、ProxyHandler への引数 &lt;code&gt;proxies&lt;/code&gt; が指定されている場合(明示的に指定している場合)、それが最優先で使われる。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;urllib2#ProxyHandler から urllib#getproxies を呼ぶ&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ProxyHandler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BaseHandler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# Proxies must be in front&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;handler_order&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;proxies&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;proxies&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;proxies&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getproxies&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;getproxies_environment を呼ぶ&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getproxies&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
        &lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;Return a dictionary of scheme -&amp;gt; proxy server URL mappings.&lt;/span&gt;

&lt;span class=&quot;sd&quot;&gt;        Returns settings gathered from the environment, if specified,&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;        or the registry.&lt;/span&gt;

&lt;span class=&quot;sd&quot;&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getproxies_environment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getproxies_registry&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;環境変数を取得して &lt;code&gt;xxxx_proxy&lt;/code&gt; のものを探して返す&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getproxies_environment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;Return a dictionary of scheme -&amp;gt; proxy server URL mappings.&lt;/span&gt;

&lt;span class=&quot;sd&quot;&gt;    Scan the environment for variables named &amp;lt;scheme&amp;gt;_proxy;&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;    this seems to be the standard convention.  If you need a&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;    different way, you can pass a proxies dictionary to the&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;    [Fancy]URLopener constructor.&lt;/span&gt;

&lt;span class=&quot;sd&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;proxies&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;environ&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lower&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;_proxy&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;proxies&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;proxies&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;これで &lt;code&gt;HTTP_PROXY&lt;/code&gt; が見つかって &lt;code&gt;proxies&lt;/code&gt; にぶちこまれてる。&lt;/p&gt;

&lt;h3 id=&quot;環境変数-http_proxy-を設定していない、ieのプロキシを設定している場合&quot;&gt;環境変数 &lt;code&gt;HTTP_PROXY&lt;/code&gt; を設定していない、IEのプロキシを設定している場合&lt;/h3&gt;

&lt;p&gt;この場合、 IE の proxy 設定をレジストリから探しに行く。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;getproxies&lt;em&gt;environment を呼ぶところまでは同じだが、 getproxies&lt;/em&gt;environment から設定を見つけられないので getproxies_registry へ&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getproxies_registry&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
        &lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;Return a dictionary of scheme -&amp;gt; proxy server URL mappings.&lt;/span&gt;

&lt;span class=&quot;sd&quot;&gt;        Win32 uses the registry to store proxies.&lt;/span&gt;

&lt;span class=&quot;sd&quot;&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;proxies&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;_winreg&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;except&lt;/span&gt; &lt;span class=&quot;ne&quot;&gt;ImportError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;c&quot;&gt;# Std module, so should be around - but you never know!&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;proxies&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;internetSettings&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_winreg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OpenKey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_winreg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HKEY_CURRENT_USER&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;r&amp;#39;Software\Microsoft\Windows\CurrentVersion\Internet Settings&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;proxyEnable&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_winreg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;QueryValueEx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;internetSettings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                                               &lt;span class=&quot;s&quot;&gt;&amp;#39;ProxyEnable&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;proxyEnable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;c&quot;&gt;# Returned as Unicode but problems if not converted to ASCII&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;proxyServer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_winreg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;QueryValueEx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;internetSettings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                                                       &lt;span class=&quot;s&quot;&gt;&amp;#39;ProxyServer&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;=&amp;#39;&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;proxyServer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Internet Settings に探しにいっている。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Sphinxをインストールしようとしたら全然関係ないproxy周りでハマった話</title>
   <link href="http://gosyujin.github.io/2013/08/21/sphinx-install-python-proxy"/>
   <updated>2013-08-21T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2013/08/21/sphinx-install-python-proxy</id>
   <content type="html">&lt;h2 id=&quot;あらすじ&quot;&gt;あらすじ&lt;/h2&gt;

&lt;p&gt;Sphinx を導入しようとして Python周りの環境を整えていたら easy_install がやたら失敗したりして困った。&lt;/p&gt;

&lt;h2 id=&quot;環境&quot;&gt;環境&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Windows 7&lt;/li&gt;
&lt;li&gt;Python 2.7&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;python-インストール&quot;&gt;Python インストール&lt;/h2&gt;

&lt;p&gt;…は、以前入れるだけ入れていた 2.7 があったので割愛。&lt;/p&gt;

&lt;p&gt;Sphinx-Users.jp のインストール手順では 2.6 が使われていたので、 2.7 でも大丈夫そう。&lt;/p&gt;

&lt;p&gt;環境変数 &lt;code&gt;PATH&lt;/code&gt; に以下のパスを追加。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;C:\Python27&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;Pythonのコマンドが含まれるフォルダ&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;C:\Python27\Scripts&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;次に説明するeasy_installコマンドや、Sphinxのコマンドが格納されるフォルダ&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;easyinstall-インストール-distributesetup-py&quot;&gt;easy&lt;em&gt;install インストール(distribute&lt;/em&gt;setup.py)&lt;/h2&gt;

&lt;p&gt;Ruby でいうところの Bundler のようなもの？&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.freia.jp/taka/docs/pyhack4/setuptools/index.html&quot;&gt;setuptools - 清水川Web&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;setuptoolsの互換パッケージを導入。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://python-distribute.org/&quot;&gt;python-distribute.org&lt;/a&gt; から &lt;code&gt;distribute_setup.py&lt;/code&gt; をDLし実行。&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; python distribute_setup.py
&lt;span class=&quot;go&quot;&gt;Downloading http://pypi.python.org/packages/source/d/distribute/distribute-0.6.49.tar.gz&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Extracting in c:\users\USER\appdata\local\temp\tmp00_lbf&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Now working in c:\users\USER\appdata\local\temp\tmp00_lbf\distribute-0.6.49&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Installing Distribute&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Before install bootstrap.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Scanning installed packages&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Setuptools installation detected at c:\python27\lib\site-packages&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Non-egg installation&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Moving elements out of the way...&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Already patched.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;c:\python27\lib\site-packages\setuptools-0.6c11-py2.7.egg-info already patched.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;running install&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;running bdist_egg&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;running egg_info&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;(略)&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;After install bootstrap.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;C:\Python27\Lib\site-packages\setuptools-0.6c11-py2.7.egg-info already exists&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;これで、 &lt;code&gt;PYTHON/Scripts&lt;/code&gt; 下に &lt;code&gt;easy_install&lt;/code&gt; コマンドが入る。&lt;/p&gt;

&lt;h3 id=&quot;実行時に-urllib2-urlerror-エラー&quot;&gt;実行時に urllib2.URLError エラー&lt;/h3&gt;

&lt;p&gt;ところで、初回に distribute_setup.py を実行するとこんなエラーになった。(原因はわかってない)&lt;/p&gt;

&lt;p&gt;状況はこんな感じ。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;proxyが必要な環境&lt;/li&gt;
&lt;li&gt;環境変数 &lt;code&gt;HTTP_PROXY&lt;/code&gt; は設定している&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; %http_proxy%
&lt;span class=&quot;go&quot;&gt;http://PROXY_URL:PORT/&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; python distribute_setup.py
&lt;span class=&quot;go&quot;&gt;Downloading http://pypi.python.org/packages/source/d/distribute/distribute-0.6.49.tar.gz&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Traceback (most recent call last):&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  File &amp;quot;distribute_setup.py&amp;quot;, line 564, in &amp;lt;module&amp;gt;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    sys.exit(main())&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  File &amp;quot;distribute_setup.py&amp;quot;, line 560, in main&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    tarball = download_setuptools(download_base=options.download_base)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  File &amp;quot;distribute_setup.py&amp;quot;, line 219, in download_setuptools&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    src = urlopen(url)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  File &amp;quot;C:\Python27\lib\urllib2.py&amp;quot;, line 126, in urlopen&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    return _opener.open(url, data, timeout)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  File &amp;quot;C:\Python27\lib\urllib2.py&amp;quot;, line 400, in open&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    response = meth(req, response)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  File &amp;quot;C:\Python27\lib\urllib2.py&amp;quot;, line 513, in http_response&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    &amp;#39;http&amp;#39;, request, response, code, msg, hdrs)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  File &amp;quot;C:\Python27\lib\urllib2.py&amp;quot;, line 432, in error&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    result = self._call_chain(*args)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  File &amp;quot;C:\Python27\lib\urllib2.py&amp;quot;, line 372, in _call_chain&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    result = func(*args)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  File &amp;quot;C:\Python27\lib\urllib2.py&amp;quot;, line 619, in http_error_302&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    return self.parent.open(new, timeout=req.timeout)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  File &amp;quot;C:\Python27\lib\urllib2.py&amp;quot;, line 394, in open&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    response = self._open(req, data)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  File &amp;quot;C:\Python27\lib\urllib2.py&amp;quot;, line 412, in _open&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    &amp;#39;_open&amp;#39;, req)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  File &amp;quot;C:\Python27\lib\urllib2.py&amp;quot;, line 372, in _call_chain&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    result = func(*args)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  File &amp;quot;C:\Python27\lib\urllib2.py&amp;quot;, line 1207, in https_open&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    return self.do_open(httplib.HTTPSConnection, req)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  File &amp;quot;C:\Python27\lib\urllib2.py&amp;quot;, line 1174, in do_open&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    raise URLError(err)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;urllib2.URLError: &amp;lt;urlopen error [Errno 11004] getaddrinfo failed&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;ん？Pythonは &lt;code&gt;HTTP_PROXY&lt;/code&gt; じゃダメなの？&lt;/p&gt;

&lt;p&gt;こんな話もあるようだが…。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://d.hatena.ne.jp/orangeclover/20121020/1350689017&quot;&gt;blockdiagシリーズのseqdiagとactdiagが、[Errno 10060]のダウンロードエラーでeasy_installのインストールに失敗する - みちしるべ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;今回は URL 直接指定でもエラーが変わらなかった。&lt;/p&gt;

&lt;p&gt;色々試行錯誤し、 &lt;strong&gt;とりあえず環境を一回きれいにしてみようと &lt;code&gt;HTTP_PROXY&lt;/code&gt; もクリアした&lt;/strong&gt; 状態でダメ元で実行してみた…らいけた…だと…。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;http_proxy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; python distribute_setup.py
&lt;span class=&quot;go&quot;&gt;Downloading http://pypi.python.org/packages/source/d/distribute/distribute-0.6.49.tar.gz&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Extracting in c:\users\USER\appdata\local\temp\tmp00_lbf&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;(略)&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;After install bootstrap.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;C:\Python27\Lib\site-packages\setuptools-0.6c11-py2.7.egg-info already exists&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;後述する、 Sphinx インストール時も同じエラーでハマったんだけどこの方法(環境変数クリア)で解決した。&lt;/p&gt;

&lt;p&gt;proxy必要な環境で、proxyを明示的に指定してないのになんでつながるの？どっか見てる？こわい。&lt;/p&gt;

&lt;p&gt;というわけで、ちょっと urllib のドキュメントを調べる…。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://docs.python.jp/2/library/urllib.html#module-urllib&quot;&gt;20.5. urllib — URL による任意のリソースへのアクセス — Python 2.7ja1 documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Windows 環境では、プロキシを指定する環境変数が設定されていない場合、プロキシの設定値はレジストリの Internet Settings セクションから取得されます。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://docs.python.jp/2/library/urllib2.html#module-urllib2&quot;&gt;20.6. urllib2 — URL を開くための拡張可能なライブラリ — Python 2.7ja1 documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;このクラスはプロキシを通過してリクエストを送らせます。引数 proxies を与える場合、プロトコル名からプロキシの URL へ対応付ける辞書でなくてはなりません。標準では、プロキシのリストを環境変数 &lt;protocol&gt;_proxy から読み出します。&lt;/p&gt;

&lt;p&gt;プロキシ環境変数が設定されていない場合は、 Windows 環境では、レジストリのインターネット設定セクションからプロキシ設定を手に入れ、 Mac OS X 環境では、 OS X システム設定フレームワーク (System Configuration Framework) からプロキシ情報を取得します。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;なに？レジストリ見てんの？&lt;/p&gt;

&lt;p&gt;というわけでレジストリから &lt;code&gt;Internet Settings&lt;/code&gt; を探すと、&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;HKEY_USERS

&lt;ul&gt;
&lt;li&gt;S-1-5-21-xxxxxxxx-xxxxxxxx...&lt;/li&gt;
&lt;li&gt;Software

&lt;ul&gt;
&lt;li&gt;Microsoft&lt;/li&gt;
&lt;li&gt;Windows

&lt;ul&gt;
&lt;li&gt;CurrentVersion&lt;/li&gt;
&lt;li&gt;Internet Settings&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ここに &lt;code&gt;ProxyServer&lt;/code&gt; という値があった！&lt;/p&gt;

&lt;p&gt;どうやらこれはIEのインターネットオプションから設定する値らしい。&lt;/p&gt;

&lt;p&gt;※ HKEY_USERSの下のS-xxx文字列&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;HKEY_USERS以下には、次のようなサブキーが存在します。&lt;/p&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;サブキー&lt;/th&gt;
&lt;th&gt;サブキーを参照するユーザー&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;.DEFAULT&lt;/td&gt;
&lt;td&gt;プロファイルがロードされていないユーザーが参照する。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;----------------------------------------------&lt;/td&gt;
&lt;td&gt;-----------------------------------------------------&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;S-1-5-18&lt;/td&gt;
&lt;td&gt;SYSTEMが参照する。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;----------------------------------------------&lt;/td&gt;
&lt;td&gt;-----------------------------------------------------&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;S-1-5-19&lt;/td&gt;
&lt;td&gt;LOCAL SERVICEが参照する。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;----------------------------------------------&lt;/td&gt;
&lt;td&gt;-----------------------------------------------------&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;S-1-5-20&lt;/td&gt;
&lt;td&gt;NETWORK SERVICEが参照する&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;----------------------------------------------&lt;/td&gt;
&lt;td&gt;-----------------------------------------------------&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;S-1-5-21-XXXXXXXXXX-XXXXXXXXXX-XXXXXXXXXX-XXXX&lt;/td&gt;
&lt;td&gt;特定のユーザーが参照する。SIDの最後の4文字はRIDであり、各ユーザーはこれで識別される。 RIDを除いた残りのSIDは、コンピュータのSIDである。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/blockquote&gt;

&lt;p&gt;なるほど。これを見にきたから &lt;code&gt;HTTP_PROXY&lt;/code&gt; をクリアしてもOKだったわけか。&lt;/p&gt;

&lt;p&gt;でも、 &lt;strong&gt;なんで環境変数 &lt;code&gt;HTTP_PROXY&lt;/code&gt; に値を入れている状態&lt;/strong&gt; だとインストール失敗したんだろう？( 環境変数 &lt;code&gt;HTTP_PROXY&lt;/code&gt; と レジストリ &lt;code&gt;ProxyServer&lt;/code&gt; はまったく同じ値)&lt;/p&gt;

&lt;p&gt;ここから先中身を追ってみないと分からないか…。&lt;/p&gt;

&lt;h2 id=&quot;sphinx-インストール&quot;&gt;Sphinx インストール&lt;/h2&gt;

&lt;p&gt;やっと Sphinx。&lt;/p&gt;

&lt;p&gt;easy&lt;em&gt;install で入れる。当環境では `HTTP&lt;/em&gt;PROXY` を事前にクリアする必要があった。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;http_proxy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; Scripts&lt;span class=&quot;se&quot;&gt;\e&lt;/span&gt;asy_install sphinx
&lt;span class=&quot;go&quot;&gt;Searching for sphinx&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Reading http://pypi.python.org/simple/sphinx/&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Best match: Sphinx 1.2b1&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Downloading https://pypi.python.org/packages/2.7/S/Sphinx/Sphinx-1.2b1-py2.7.egg#md5=60fbf057bc586dce8ceb55a404f5a9be&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Processing Sphinx-1.2b1-py2.7.egg&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;creating c:\python27\lib\site-packages\Sphinx-1.2b1-py2.7.egg&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Extracting Sphinx-1.2b1-py2.7.egg to c:\python27\lib\site-packages&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Adding Sphinx 1.2b1 to easy-install.pth file&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Installing sphinx-apidoc-script.py script to C:\Python27\Scripts&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Installing sphinx-apidoc.exe script to C:\Python27\Scripts&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Installing sphinx-apidoc.exe.manifest script to C:\Python27\Scripts&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Installing sphinx-build-script.py script to C:\Python27\Scripts&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Installing sphinx-build.exe script to C:\Python27\Scripts&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Installing sphinx-build.exe.manifest script to C:\Python27\Scripts&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Installing sphinx-quickstart-script.py script to C:\Python27\Scripts&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Installing sphinx-quickstart.exe script to C:\Python27\Scripts&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Installing sphinx-quickstart.exe.manifest script to C:\Python27\Scripts&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Installing sphinx-autogen-script.py script to C:\Python27\Scripts&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Installing sphinx-autogen.exe script to C:\Python27\Scripts&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Installing sphinx-autogen.exe.manifest script to C:\Python27\Scripts&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;Installed c:\python27\lib\site-packages\sphinx-1.2b1-py2.7.egg&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Processing dependencies for sphinx&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Searching for docutils&amp;gt;=0.7&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Reading http://pypi.python.org/simple/docutils/&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Best match: docutils 0.11&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Downloading https://pypi.python.org/packages/source/d/docutils/docutils-0.11.tar.gz#md5=20ac380a18b369824276864d98ec0ad6&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Processing docutils-0.11.tar.gz&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Writing c:\users\USER\appdata\local\temp\easy_install-kytfku\docutils-0.11\setup.cfg&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Running docutils-0.11\setup.py -q bdist_egg --dist-dir c:\users\USER\appdata\local\temp\easy_install-kytfku\docutils-0.11\egg-dist-tmp-l7szgx&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;warning: no files found matching &amp;#39;MANIFEST&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;warning: no files found matching &amp;#39;*&amp;#39; under directory &amp;#39;extras&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;warning: no previously-included files matching &amp;#39;.cvsignore&amp;#39; found under directory &amp;#39;*&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;warning: no previously-included files matching &amp;#39;*.pyc&amp;#39; found under directory &amp;#39;*&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;warning: no previously-included files matching &amp;#39;*~&amp;#39; found under directory &amp;#39;*&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;warning: no previously-included files matching &amp;#39;.DS_Store&amp;#39; found under directory &amp;#39;*&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;zip_safe flag not set; analyzing archive contents...&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;docutils.parsers.rst.directives.misc: module references __file__&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;docutils.writers.docutils_xml: module references __path__&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;docutils.writers.html4css1.__init__: module references __file__&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;docutils.writers.latex2e.__init__: module references __file__&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;docutils.writers.odf_odt.__init__: module references __file__&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;docutils.writers.pep_html.__init__: module references __file__&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;docutils.writers.s5_html.__init__: module references __file__&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Adding docutils 0.11 to easy-install.pth file&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Installing rst2html.py script to C:\Python27\Scripts&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Installing rst2latex.py script to C:\Python27\Scripts&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Installing rst2man.py script to C:\Python27\Scripts&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Installing rst2odt.py script to C:\Python27\Scripts&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Installing rst2odt_prepstyles.py script to C:\Python27\Scripts&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Installing rst2pseudoxml.py script to C:\Python27\Scripts&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Installing rst2s5.py script to C:\Python27\Scripts&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Installing rst2xetex.py script to C:\Python27\Scripts&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Installing rst2xml.py script to C:\Python27\Scripts&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Installing rstpep2html.py script to C:\Python27\Scripts&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;Installed c:\python27\lib\site-packages\docutils-0.11-py2.7.egg&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Searching for Jinja2&amp;gt;=2.3&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Reading http://pypi.python.org/simple/Jinja2/&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Best match: Jinja2 2.7.1&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Downloading https://pypi.python.org/packages/source/J/Jinja2/Jinja2-2.7.1.tar.gz#md5=282aed153e69f970d6e76f78ed9d027a&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Processing Jinja2-2.7.1.tar.gz&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Writing c:\users\USER\appdata\local\temp\easy_install-ewpoxa\Jinja2-2.7.1\setup.cfg&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Running Jinja2-2.7.1\setup.py -q bdist_egg --dist-dir c:\users\USER\appdata\local\temp\easy_install-ewpoxa\Jinja2-2.7.1\egg-dist-tmp-xvfdqy&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;warning: no files found matching &amp;#39;*&amp;#39; under directory &amp;#39;custom_fixers&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;warning: no previously-included files matching &amp;#39;*&amp;#39; found under directory &amp;#39;docs\_build&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;warning: no previously-included files matching &amp;#39;*.pyc&amp;#39; found under directory &amp;#39;jinja2&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;warning: no previously-included files matching &amp;#39;*.pyc&amp;#39; found under directory &amp;#39;docs&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;warning: no previously-included files matching &amp;#39;*.pyo&amp;#39; found under directory &amp;#39;jinja2&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;warning: no previously-included files matching &amp;#39;*.pyo&amp;#39; found under directory &amp;#39;docs&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Adding jinja2 2.7.1 to easy-install.pth file&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;Installed c:\python27\lib\site-packages\jinja2-2.7.1-py2.7.egg&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Searching for Pygments&amp;gt;=1.2&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Reading http://pypi.python.org/simple/Pygments/&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Best match: Pygments 1.6&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Downloading https://pypi.python.org/packages/2.7/P/Pygments/Pygments-1.6-py2.7.egg#md5=1e1e52b1e434502682aab08938163034&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Processing Pygments-1.6-py2.7.egg&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;creating c:\python27\lib\site-packages\Pygments-1.6-py2.7.egg&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Extracting Pygments-1.6-py2.7.egg to c:\python27\lib\site-packages&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Adding Pygments 1.6 to easy-install.pth file&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Installing pygmentize-script.py script to C:\Python27\Scripts&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Installing pygmentize.exe script to C:\Python27\Scripts&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Installing pygmentize.exe.manifest script to C:\Python27\Scripts&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;Installed c:\python27\lib\site-packages\pygments-1.6-py2.7.egg&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Searching for markupsafe&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Reading http://pypi.python.org/simple/markupsafe/&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Best match: MarkupSafe 0.18&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Downloading https://pypi.python.org/packages/source/M/MarkupSafe/MarkupSafe-0.18.tar.gz#md5=f8d252fd05371e51dec2fe9a36890687&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Processing MarkupSafe-0.18.tar.gz&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Writing c:\users\USER\appdata\local\temp\easy_install-3qrqxg\MarkupSafe-0.18\setup.cfg&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Running MarkupSafe-0.18\setup.py -q bdist_egg --dist-dir c:\users\USER\appdata\local\temp\easy_install-3qrqxg\MarkupSafe-0.18\egg-dist-tmp-jj55bb&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;==========================================================================&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;WARNING: The C extension could not be compiled, speedups are not enabled.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Failure information, if any, is above.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Retrying the build without the C extension now.&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;==========================================================================&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;WARNING: The C extension could not be compiled, speedups are not enabled.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Plain-Python installation succeeded.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;==========================================================================&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Adding markupsafe 0.18 to easy-install.pth file&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;Installed c:\python27\lib\site-packages\markupsafe-0.18-py2.7.egg&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Finished processing dependencies for sphinx&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;とりあえずインストールまで。&lt;/p&gt;

&lt;p&gt;設定までしようと思ったけど、思わぬ所でハマってしまった…。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;おまけ-easyinstall-インストール-ezsetup-py&quot;&gt;おまけ easy&lt;em&gt;install インストール(ez&lt;/em&gt;setup.py)&lt;/h2&gt;

&lt;p&gt;すごいはまった挙句、結局ローカルに落としてインストールした時の記録。&lt;/p&gt;

&lt;p&gt;多分 distrybute&lt;em&gt;setup.py と同様、 `HTTP&lt;/em&gt;PROXY` をクリアすれば IE の proxy 設定を参照しにいって無事にインストールされるのではないかと思われる。&lt;/p&gt;

&lt;p&gt;しかし、こちらは現在メンテナンスされていないらしい。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://sphinx-users.jp/gettingstarted/install_windows.html&quot;&gt;Windowsへのインストール :: ドキュメンテーションツール スフィンクス Sphinx-users.jp&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;ez_setup.py&lt;/code&gt; をダウンロードし、実行すると以下のようなエラー。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; python ez_setup.py
&lt;span class=&quot;go&quot;&gt;Downloading http://pypi.python.org/packages/2.7/s/setuptools/setuptools-0.6c11-py2.7.egg&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Traceback (most recent call last):&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  File &amp;quot;ez_setup.py&amp;quot;, line 278, in &amp;lt;module&amp;gt;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    main(sys.argv[1:])&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  File &amp;quot;ez_setup.py&amp;quot;, line 210, in main&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    egg = download_setuptools(version, delay=0)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  File &amp;quot;ez_setup.py&amp;quot;, line 158, in download_setuptools&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    src = urllib2.urlopen(url)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  File &amp;quot;C:\python27\lib\urllib2.py&amp;quot;, line 127, in urlopen&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    return _opener.open(url, data, timeout)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  File &amp;quot;C:\python27\lib\urllib2.py&amp;quot;, line 410, in open&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    response = meth(req, response)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  File &amp;quot;C:\python27\lib\urllib2.py&amp;quot;, line 523, in http_response&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    &amp;#39;http&amp;#39;, request, response, code, msg, hdrs)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  File &amp;quot;C:\python27\lib\urllib2.py&amp;quot;, line 442, in error&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    result = self._call_chain(*args)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  File &amp;quot;C:\python27\lib\urllib2.py&amp;quot;, line 382, in _call_chain&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    result = func(*args)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  File &amp;quot;C:\python27\lib\urllib2.py&amp;quot;, line 629, in http_error_302&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    return self.parent.open(new, timeout=req.timeout)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  File &amp;quot;C:\python27\lib\urllib2.py&amp;quot;, line 404, in open&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    response = self._open(req, data)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  File &amp;quot;C:\python27\lib\urllib2.py&amp;quot;, line 422, in _open&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    &amp;#39;_open&amp;#39;, req)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  File &amp;quot;C:\python27\lib\urllib2.py&amp;quot;, line 382, in _call_chain&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    result = func(*args)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  File &amp;quot;C:\python27\lib\urllib2.py&amp;quot;, line 1222, in https_open&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    return self.do_open(httplib.HTTPSConnection, req)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  File &amp;quot;C:\python27\lib\urllib2.py&amp;quot;, line 1184, in do_open&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    raise URLError(err)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;urllib2.URLError: &amp;lt;urlopen error [Errno 11004] getaddrinfo failed&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Downloading のurlにブラウザからアクセスするとダウンロードできるので、多分proxyの設定が適切になされていない。&lt;/p&gt;

&lt;p&gt;「urllib2 proxy」で調べると ProxyHandler を使えばよいということ(というか、環境変数 &lt;code&gt;HTTP_PROXY&lt;/code&gt; (設定済み) を呼んでくれそうな気がするんだけど)なので、 ez_setup.py の中で明示的に proxy を指定してみた。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://docs.python.jp/2/library/urllib2.html#urllib2.urlopen&quot;&gt;20.6. urllib2 ? URL を開くための拡張可能なライブラリ ? Python 2.7ja1 documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;proxy_handler&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urllib2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ProxyHandler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;http&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;http://PROXY:PORT/&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;opener&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urllib2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;build_opener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;proxy_handler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;src&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;opener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;src&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urllib2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;urlopen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;が、エラー変わらず。 proxy が原因じゃないのか。今度は Errno でググってみた。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://ss9neco.blog.fc2.com/category3-1.html&quot;&gt;ss_9&amp;#39;s log　 Python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;その際、proxy環境の場合は、&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;＃ export http_proxy=http://[proxy名]:[ポート番号]&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;にてproxy環境を整えてください。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;お、やっぱり環境変数から呼んでくれるみたい。そして、&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;また、ez_setupを取得して、以下のようなurllib2のエラーが出た時は、&lt;/p&gt;

&lt;p&gt;urllib2.URLError:&lt;/p&gt;

&lt;p&gt;setuptoolsをez_setupと同じディレクトリに置いてください。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;＃ sudo wget http://pypi.python.org/packages/2.7/s/setuptools/setuptools-0.6c11-py2.7.egg#md5=fe1f997bc722265116870bc7919059ea&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;

&lt;p&gt;ということなので、この setuptools &lt;code&gt;setuptools-0.6c11-py2.7.egg&lt;/code&gt; をDLし再び実行すると無事にインストールできた。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; python ez_setup.py
&lt;span class=&quot;go&quot;&gt;Processing setuptools-0.6c11-py2.7.egg&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Copying setuptools-0.6c11-py2.7.egg to c:\python27\lib\site-packages&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Adding setuptools 0.6c11 to easy-install.pth file&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Installing easy_install-script.py script to C:\Python27\Scripts&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Installing easy_install.exe script to C:\Python27\Scripts&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Installing easy_install.exe.manifest script to C:\Python27\Scripts&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Installing easy_install-2.7-script.py script to C:\Python27\Scripts&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Installing easy_install-2.7.exe script to C:\Python27\Scripts&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Installing easy_install-2.7.exe.manifest script to C:\Python27\Scripts&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;Installed c:\python27\lib\site-packages\setuptools-0.6c11-py2.7.egg&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Processing dependencies for setuptools==0.6c11&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Finished processing dependencies for setuptools==0.6c11&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;実行できた。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; easy_install --help

&lt;span class=&quot;go&quot;&gt;Global options:&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  --verbose (-v)  run verbosely (default)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  --quiet (-q)    run quietly (turns verbosity off)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  --dry-run (-n)  don&amp;#39;t actually do anything&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  --help (-h)     show detailed help message&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  --no-user-cfg   ignore pydistutils.cfg in your home directory&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;Options for &amp;#39;easy_install&amp;#39; command:&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  --prefix                       installation prefix&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  --zip-ok (-z)                  install package as a zipfile&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  --multi-version (-m)           make apps have to require() a version&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  --upgrade (-U)                 force upgrade (searches PyPI for latest&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;                                 versions)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  --install-dir (-d)             install package to DIR&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  --script-dir (-s)              install scripts to DIR&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  --exclude-scripts (-x)         Don&amp;#39;t install scripts&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  --always-copy (-a)             Copy all needed packages to install dir&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  --index-url (-i)               base URL of Python Package Index&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  --find-links (-f)              additional URL(s) to search for packages&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  --delete-conflicting (-D)      no longer needed; don&amp;#39;t use this&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  --ignore-conflicts-at-my-risk  no longer needed; don&amp;#39;t use this&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  --build-directory (-b)         download/extract/build in DIR; keep the&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;                                 results&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  --optimize (-O)                also compile with optimization: -O1 for&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;                                 &amp;quot;python -O&amp;quot;, -O2 for &amp;quot;python -OO&amp;quot;, and -O0 to&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;                                 disable [default: -O0]&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  --record                       filename in which to record list of installed&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;                                 files&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  --always-unzip (-Z)            don&amp;#39;t install as a zipfile, no matter what&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  --site-dirs (-S)               list of directories where .pth files work&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  --editable (-e)                Install specified packages in editable form&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  --no-deps (-N)                 don&amp;#39;t install dependencies&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  --allow-hosts (-H)             pattern(s) that hostnames must match&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  --local-snapshots-ok (-l)      allow building eggs from local checkouts&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;usage: easy_install-script.py [options] requirement_or_url ...&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;   or: easy_install-script.py --help&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Rails3のログ出力にANSIカラーコードを使用しない設定</title>
   <link href="http://gosyujin.github.io/2013/08/20/rails3-log-not-colorize"/>
   <updated>2013-08-20T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2013/08/20/rails3-log-not-colorize</id>
   <content type="html">&lt;h2 id=&quot;あらすじ&quot;&gt;あらすじ&lt;/h2&gt;

&lt;p&gt;WindowsでRails(Redmine)を実行した時のログが超見づらいのはなんで？&lt;/p&gt;

&lt;p&gt;こんな風になる。helloと表示されるはずの場合。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;go&quot;&gt;[31mhello[0m&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;何とかしたい。&lt;/p&gt;

&lt;h2 id=&quot;環境&quot;&gt;環境&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Windows 7&lt;/li&gt;
&lt;li&gt;Rails 3.2&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;参考サイト&quot;&gt;参考サイト&lt;/h2&gt;

&lt;h3 id=&quot;ansiカラーというコードを使用されている&quot;&gt;ANSIカラーというコードを使用されている&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://melborne.github.io/2010/11/07/Ruby-ANSI/&quot;&gt;RubyでANSIカラーシーケンスを学ぼう！&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://hatenaclang.blogspot.jp/2011/03/ansi.html&quot;&gt;謎のC言語ブログ: ANSI標準エスケープシーケンス&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;この現象自体を止めるには&quot;&gt;この現象自体を止めるには&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://qiita.com/nekoruri/items/3dc559949b1ece85962a&quot;&gt;Ruby - Rails3でログの色分けを止める - Qiita [キータ]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://railsdoc.com/config#%E3%83%AD%E3%82%B0%E3%82%92%E5%87%BA%E5%8A%9B%E3%81%99%E3%82%8B%E3%81%A8%E3%81%8D%E3%81%AB%E3%82%AB%E3%83%A9%E3%83%BC%E3%81%AB%E3%81%99%E3%82%8B%E3%81%8B%28config.colorize_logging%29&quot;&gt;設定ファイル(config) - Railsドキュメント&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;windows-コマンドプロンプト-でもansiカラー-未実施&quot;&gt;Windows(コマンドプロンプト)でもANSIカラー(未実施)&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://rubyist.g.hatena.ne.jp/yyamasak/20100106&quot;&gt;WindowsのコマンドプロンプトでRailsのログをカラー表示する - yyamasakの日記 - Rubyist&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://homepage2.nifty.com/LM/kurogam/w2k-ansi.htm&quot;&gt;Windows ansi.sys&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.moongift.jp/2011/01/20110102-2/&quot;&gt;WindowsのコマンドプロンプトでもANSIカラーを使いたい「wac」｜オープンソース・ソフトウェア、ITニュースを毎日紹介するエンジニア、デザイナー向けブログ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;ansiカラー&quot;&gt;ANSIカラー&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;ターミナルにおいて、文字に色を付けるためのエスケープシーケンスみたい&lt;/li&gt;
&lt;li&gt;ソースコード上には &lt;code&gt;print &amp;quot;\e[31mhello\e[0m&amp;quot;&lt;/code&gt; こう記載されている

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;\e[xxm&lt;/code&gt; がコード&lt;/li&gt;
&lt;li&gt;&lt;code&gt;31&lt;/code&gt; は文字色を赤に&lt;/li&gt;
&lt;li&gt;&lt;code&gt;0&lt;/code&gt; は終われ&lt;/li&gt;
&lt;li&gt;コードによって文字色、背景色、装飾をいじることができる&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;で、Rail3はこれに対応しているので、UnixとかMacとかだとログが色分けされ美しく表示されるようになっている。(あとCygwinでもいけるっぽい)&lt;/p&gt;

&lt;p&gt;そういえば、さくらVPS上(CentOS)でRailsを実行している時は奇麗だったんだよな思い出してみれば。&lt;/p&gt;

&lt;h2 id=&quot;無効化するには&quot;&gt;無効化するには&lt;/h2&gt;

&lt;p&gt;Windowsでも色つけができる(参考サイト参照)ようだが、めんどいので無効化する方向で。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;REDMINE/config/application.rb&lt;/code&gt; に以下の記述を追加。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;colorize_logging&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;特定環境のみとかの設定もできるが、とりあえずオールオフで。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>WindowsにRedmine2.3をインストールする手順と、プラグイン作成用メモ</title>
   <link href="http://gosyujin.github.io/2013/08/09/redmine2.3-install-and-plugin"/>
   <updated>2013-08-09T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2013/08/09/redmine2.3-install-and-plugin</id>
   <content type="html">&lt;h2 id=&quot;あらすじ&quot;&gt;あらすじ&lt;/h2&gt;

&lt;p&gt;Redmine 2.0台におけるインストール方法〜起動方法とプラグインの作り方のメモ。&lt;/p&gt;

&lt;h2 id=&quot;環境&quot;&gt;環境&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Windows 7 32bit&lt;/li&gt;
&lt;li&gt;Ruby 1.9.3

&lt;ul&gt;
&lt;li&gt;Bundler 1.3.5 導入済&lt;/li&gt;
&lt;li&gt;DevKit 導入済&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Redmine 2.3.1&lt;/li&gt;
&lt;li&gt;MySql 5.6.12.1&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;参考サイト&quot;&gt;参考サイト&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://redmine.jp/guide/RedmineInstall/&quot;&gt;Redmineのインストール — Redmine Guide 日本語訳&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.redmine.org/projects/redmine/wiki/Hooks#View-hooks-2&quot;&gt;Hooks - Redmine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.redmine.org/projects/redmine/wiki/Hooks_List&quot;&gt;Hooks List - Redmine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.r-labs.org/projects/r-labs/wiki/%E3%83%97%E3%83%A9%E3%82%B0%E3%82%A4%E3%83%B3_%E3%83%9B%E3%83%83%E3%82%AF&quot;&gt;プラグイン ホック - r-labs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://railsdoc.com/view&quot;&gt;ビュー(view) - Railsドキュメント&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;redmineインストール手順&quot;&gt;Redmineインストール手順&lt;/h2&gt;

&lt;p&gt;まずは準備。&lt;/p&gt;

&lt;h3 id=&quot;mysql&quot;&gt;MySQL&lt;/h3&gt;

&lt;p&gt;実はMySQLさわるのはじめてかもしれない。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.mysql.com/downloads/installer/&quot;&gt;MySQL :: Download MySQL Installer&lt;/a&gt; からインストーラをDL。Oracleのアカウントが必要&lt;/li&gt;
&lt;li&gt;基本的にPathなどの設定はそのまま。

&lt;ul&gt;
&lt;li&gt;Choosing a Setup Type: &lt;code&gt;Developer Default&lt;/code&gt; を選択&lt;/li&gt;
&lt;li&gt;MySQL Server Configuration:&lt;/li&gt;
&lt;li&gt;Server Configuration Type は &lt;code&gt;Development Machine&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;ポートは &lt;code&gt;3306&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;root&lt;/code&gt; のパスワードを入力&lt;/li&gt;
&lt;li&gt;Windows Service Details の &lt;code&gt;Start the MySQL Server at System Startup&lt;/code&gt; のチェックだけ &lt;code&gt;KILL&lt;/code&gt; そんなに使わないしPCがしょぼいので常時起動させておくこともない&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;全部終わると MySQL Workbench が立ち上がる。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Open Connection to Start Queryin に &lt;code&gt;Local instance MySQL56&lt;/code&gt; を選択&lt;/li&gt;
&lt;li&gt;root のパスワードを入力し、ログインできる事を確認&lt;/li&gt;
&lt;li&gt;コンソールから &lt;code&gt;redmine&lt;/code&gt; ユーザを作成し、 &lt;strong&gt;テーブルの権限を設定する&lt;/strong&gt; (これをよく忘れて &lt;code&gt;access denied&lt;/code&gt; になる)&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-mysql&quot; data-lang=&quot;mysql&quot;&gt;&lt;span class=&quot;k&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;database&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;redmine&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;character&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;utf8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;redmine&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;localhost&amp;#39;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;identified&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;my_password&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;grant&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;all&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;privileges&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;on&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;redmine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;redmine&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;localhost&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;で、とりあえずオッケー。&lt;/p&gt;

&lt;h3 id=&quot;redmine&quot;&gt;Redmine&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Redmine 2.3.1 をDLし、適当なところへ解凍。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;config/database.yml.example&lt;/code&gt; を &lt;code&gt;config/database.yml&lt;/code&gt; にリネームし、内容編集。MySQLとつなげるように&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;l-Scalar-Plain&quot;&gt;production&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;l-Scalar-Plain&quot;&gt;adapter&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;mysql2&lt;/span&gt;
  &lt;span class=&quot;l-Scalar-Plain&quot;&gt;database&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;redmine&lt;/span&gt;
  &lt;span class=&quot;l-Scalar-Plain&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;localhost&lt;/span&gt;
  &lt;span class=&quot;l-Scalar-Plain&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;redmine&lt;/span&gt;
  &lt;span class=&quot;l-Scalar-Plain&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;my_password&lt;/span&gt;
  &lt;span class=&quot;l-Scalar-Plain&quot;&gt;encoding&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;utf8&lt;/span&gt;

&lt;span class=&quot;l-Scalar-Plain&quot;&gt;development&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;l-Scalar-Plain&quot;&gt;adapter&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;mysql2&lt;/span&gt;
  &lt;span class=&quot;l-Scalar-Plain&quot;&gt;database&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;redmine_development&lt;/span&gt;
  &lt;span class=&quot;l-Scalar-Plain&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;localhost&lt;/span&gt;
  &lt;span class=&quot;l-Scalar-Plain&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;redmine&lt;/span&gt;
  &lt;span class=&quot;l-Scalar-Plain&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;my_password&lt;/span&gt;
  &lt;span class=&quot;l-Scalar-Plain&quot;&gt;encoding&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;utf8&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Ruby 1.9 からMySQLにつなぐには adapter は mysql2 である必要がある模様。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;そして &lt;code&gt;bundle install --path vendor/bundle --without rmagick&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;rmagickは頑張って入れてもいいけど今回はwithoutする&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;MySQL アダプターがなんか言ってる…my-sql-connector-c？&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;go&quot;&gt;(略)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Installing mysql2 (0.3.11)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;(略)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Using yard (0.8.6.2)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Your bundle is complete!&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Gems in the group rmagick were not installed.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;It was installed into ./vendor/bundle&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Post-install message from mysql2:&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;======================================================================================================&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;  You&amp;#39;ve installed the binary version of mysql2.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  It was built using MySQL Connector/C version 6.0.2.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  It&amp;#39;s recommended to use the exact same version to avoid potential issues.&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;  At the time of building this gem, the necessary DLL files where available&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  in the following download:&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;  http://dev.mysql.com/get/Downloads/Connector-C/mysql-connector-c-noinstall-6.0.2-win32.zip/from/pick&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;  And put lib\libmysql.dll file in your Ruby bin directory, for example C:\Ruby\bin&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;======================================================================================================&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;とりあえず落としてきて、 &lt;code&gt;lib/libmysql.dll&lt;/code&gt; をRubyのbinディレクトリにいれた。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;セッションストア秘密鍵の作成&lt;/li&gt;
&lt;li&gt;テーブルの作成&lt;/li&gt;
&lt;li&gt;デフォルトのロール、トラッカー、ステータス、ワークフロー、列挙項目のロード&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; rake generate_secret_token
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;RAILS_ENV&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;production
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; rake db:migrate
&lt;span class=&quot;go&quot;&gt;==  Setup: migrating ==========================================================&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-- create_table(&amp;quot;attachments&amp;quot;, {:force=&amp;gt;true})&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;   -&amp;gt; 0.1700s&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;(略)&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; rake redmine:load_default_data

&lt;span class=&quot;go&quot;&gt;Select language: ar, az, bg, bs, ca, cs, da, de, el, en, en-GB, es, et, eu, fa, fi, fr, gl, he, hr,&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;hu, id, it, ja, ko, lt, lv, mk, mn, nl, no, pl, pt, pt-BR, ro, ru, sk, sl, sq, sr, sr-YU, sv, th, tr, uk, vi, zh, zh-TW [en] ja&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;====================================&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Default configuration data loaded.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;起動&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-mysql&quot; data-lang=&quot;mysql&quot;&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ruby&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rails&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;server&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;起動したら &lt;code&gt;admin/admin&lt;/code&gt; でログインして情報を見に行ってみる。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-mysql&quot; data-lang=&quot;mysql&quot;&gt;&lt;span class=&quot;n&quot;&gt;Environment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Redmine&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;version&lt;/span&gt;                          &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stable&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Ruby&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;version&lt;/span&gt;                             &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i386&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mingw32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Rails&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;version&lt;/span&gt;                            &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;13&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Environment&lt;/span&gt;                              &lt;span class=&quot;n&quot;&gt;production&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;Database&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;adapter&lt;/span&gt;                         &lt;span class=&quot;n&quot;&gt;Mysql2&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Redmine&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plugins&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;no&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plugin&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;installed&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;OK。&lt;/p&gt;

&lt;h2 id=&quot;プラグイン作成の準備&quot;&gt;プラグイン作成の準備&lt;/h2&gt;

&lt;h3 id=&quot;コマンド&quot;&gt;コマンド&lt;/h3&gt;

&lt;p&gt;コマンドは &lt;code&gt;script/rails&lt;/code&gt; に集約されたっぽい？&lt;/p&gt;

&lt;p&gt;今まで &lt;code&gt;script/xxx&lt;/code&gt; とかやっていたコマンドは &lt;code&gt;script/rails xxx&lt;/code&gt; になっている。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; ruby script&lt;span class=&quot;se&quot;&gt;\r&lt;/span&gt;ails -h
&lt;span class=&quot;go&quot;&gt;bundler is found: bundle exec ruby script\rails -h&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Usage: rails COMMAND [ARGS]&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;The most common rails commands are:&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; generate    Generate new code (short-cut alias: &amp;quot;g&amp;quot;)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; console     Start the Rails console (short-cut alias: &amp;quot;c&amp;quot;)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; server      Start the Rails server (short-cut alias: &amp;quot;s&amp;quot;)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; dbconsole   Start a console for the database specified in config/database.yml&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;             (short-cut alias: &amp;quot;db&amp;quot;)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; new         Create a new Rails application. &amp;quot;rails new my_app&amp;quot; creates a&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;             new application called MyApp in &amp;quot;./my_app&amp;quot;&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;In addition to those, there are:&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; application  Generate the Rails application code&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; destroy      Undo code generated with &amp;quot;generate&amp;quot; (short-cut alias: &amp;quot;d&amp;quot;)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; benchmarker  See how fast a piece of code runs&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; profiler     Get profile information from a piece of code&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; plugin       Install a plugin&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; runner       Run a piece of code in the application environment (short-cut alias: &amp;quot;r&amp;quot;)&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;All commands can be run with -h (or --help) for more information.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;スケルトン作成&quot;&gt;スケルトン作成&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;ruby script/rails generate redmine_plugin PLUGIN_NAME&lt;/code&gt; で作成。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;プラグイン名はスネークケース&lt;/li&gt;
&lt;li&gt;&lt;code&gt;plugins/&lt;/code&gt; 下に作成される&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; ruby script&lt;span class=&quot;se&quot;&gt;\r&lt;/span&gt;ails generate redmine_plugin download_issues_with_journal
&lt;span class=&quot;go&quot;&gt;bundler is found: bundle exec ruby script\rails generate redmine_plugin download_issues_with_journal&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  create  plugins/download_issues_with_journal/app&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  create  plugins/download_issues_with_journal/app/controllers&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  create  plugins/download_issues_with_journal/app/helpers&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  create  plugins/download_issues_with_journal/app/models&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  create  plugins/download_issues_with_journal/app/views&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  create  plugins/download_issues_with_journal/db/migrate&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  create  plugins/download_issues_with_journal/lib/tasks&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  create  plugins/download_issues_with_journal/assets/images&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  create  plugins/download_issues_with_journal/assets/javascripts&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  create  plugins/download_issues_with_journal/assets/stylesheets&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  create  plugins/download_issues_with_journal/config/locales&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  create  plugins/download_issues_with_journal/test&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  create  plugins/download_issues_with_journal/test/fixtures&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  create  plugins/download_issues_with_journal/test/unit&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  create  plugins/download_issues_with_journal/test/functional&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  create  plugins/download_issues_with_journal/test/integration&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  create  plugins/download_issues_with_journal/README.rdoc&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  create  plugins/download_issues_with_journal/init.rb&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  create  plugins/download_issues_with_journal/config/routes.rb&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  create  plugins/download_issues_with_journal/config/locales/en.yml&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  create  plugins/download_issues_with_journal/test/test_helper.rb&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;plugins/&lt;/code&gt; 下にいれば、Redmine起動時にロードしてくれる。再起動して情報を見に行くと…。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;go&quot;&gt;Environment:&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  Redmine version                          2.3.1.stable&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  Ruby version                             1.9.3 (i386-mingw32)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  Rails version                            3.2.13&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  Environment                              production&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  Database adapter                         Mysql2&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Redmine plugins:&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  download_issues_with_journal             0.0.1                 # =&amp;gt; 増えてる！&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;init-rb&quot;&gt;init.rb&lt;/h3&gt;

&lt;p&gt;書き方が、Rubyのそれとちょっと違う。Rails流？なので、はじめは慣れが必要かも。&lt;/p&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;文字列ではなく、なるべくシンボルを使う&lt;/li&gt;
&lt;li&gt;ブロックは括弧 {} ではなく、 do, end を使う&lt;/li&gt;
&lt;li&gt;メソッドの括弧 () は省略する&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;今は特にすることもないので、authorやurlを適当に編集したら次へ。&lt;/p&gt;

&lt;h3 id=&quot;viewのフック&quot;&gt;viewのフック&lt;/h3&gt;

&lt;p&gt;「特定の画面に何か文字とか機能を追加する」場合、viewをフックすることで実現できる。(他にも手段はあるみたいだが、とりあえず)&lt;/p&gt;

&lt;p&gt;どこにフックできるかは、 &lt;code&gt;app/views下のerbファイル&lt;/code&gt; を確認し、 &lt;code&gt;call_hook(xxx)&lt;/code&gt; と書かれているところがそうらしい。詳しくは参考サイト参照&lt;/p&gt;

&lt;p&gt;今回は、チケット一覧のページにフックしたいので、その辺を探してみる…。&lt;/p&gt;

&lt;p&gt;すると、 &lt;code&gt;app/views/issues/index.html.erb&lt;/code&gt; の中にこんな記述が。ページの一番下の部分にフックできそう。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;%= call_hook(:view_issues_index_bottom, { :issues =&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@issues&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:project&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@project&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:query&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@query&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;第一引数 &lt;code&gt;:view_issues_index_bottom&lt;/code&gt; はフックする時に作成するメソッド名になる、第2引数はパラメータ。これは覚えておく。&lt;/p&gt;

&lt;h4 id=&quot;フックファイル&quot;&gt;フックファイル&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;PLUGIN/lib/PLUGIN_NAME/hooks.rb&lt;/code&gt; を作り、以下のように記載。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Hooks&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Redmine&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Hook&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;ViewListener&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;view_issues_index_bottom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;view_issues_index_bottom&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;lt;p&amp;gt;Hello&amp;lt;/p&amp;gt;&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;call&lt;em&gt;hookの第一引数になっていたとおり、 `view&lt;/em&gt;issues&lt;em&gt;index&lt;/em&gt;bottom` メソッドを作る。&lt;/p&gt;

&lt;p&gt;次に上記のフックを読み込むために &lt;code&gt;init.rb&lt;/code&gt; に require を追加する。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;download_issues_with_journal/hooks&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;これで Redmine を再起動すると、チケット一覧ページに Hello と表示されているはず。&lt;/p&gt;

&lt;h4 id=&quot;viewファイル&quot;&gt;Viewファイル&lt;/h4&gt;

&lt;p&gt;また、View担当部分はきちんとViewにわけることもできる。&lt;/p&gt;

&lt;p&gt;フック部分を以下のように変更。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Hooks&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Redmine&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Hook&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;ViewListener&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;view_issues_index_bottom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:controller&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:render_to_string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;:partial&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;hooks/download_issues_with_journal/view_issues_index_bottom&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;:locals&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;:partial&lt;/code&gt; は &lt;code&gt;app/views/&lt;/code&gt; 以下のパスを指定。&lt;/p&gt;

&lt;p&gt;上記のように指定すると &lt;code&gt;app/views/hooks/download_issues_with_journal/_view_issues_index_bottom.html.erb&lt;/code&gt; (部分描画用のファイルは先頭に &lt;code&gt;_&lt;/code&gt; を付けるのがルール)が呼ばれる。中身はこんな感じ。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;contextual&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;%= @project %&amp;gt;&lt;/span&gt;
&lt;span class=&quot;sx&quot;&gt;  &amp;lt;%=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;link_to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;link ror&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;http://rubyonrails.org&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;%&amp;gt;&lt;/span&gt;
&lt;span class=&quot;sx&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;チケット一覧を開いているプロジェクト名とRuby on Railsへのリンクが表示される。&lt;/p&gt;

&lt;p&gt;これでViewをフックしつつ、Viewの定義自体はerbファイルに追い出すことができた。&lt;/p&gt;

&lt;h3 id=&quot;controllerと連携&quot;&gt;Controllerと連携&lt;/h3&gt;

&lt;p&gt;ここまでViewをいじっていると、ファイル構造はこんな感じになった。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;go&quot;&gt;download_issues_with_journal&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;├─app&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;│  └─views&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;│      └─hooks&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;│          └─download_issues_with_journal&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;│              └─_view_issues_index_bottom.html.erb (3)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;├─assets&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;├─config&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;├─db&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;├─lib&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;│  └─download_issues_with_journal&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;│      └─hooks.rb (1)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;├─init.rb (2)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;└─test&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;(1)でチケット一覧画面をフックし、(2)でそれをrequire、(3)に追加したい画面ソースを書いた。&lt;/p&gt;

&lt;p&gt;次にController(ユーザのアクションに対応したメソッド)を作り、Viewと連携を取る。&lt;/p&gt;

&lt;p&gt;いじるファイルは以下。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Controllerファイル(新規作成)&lt;/li&gt;
&lt;li&gt;Viewファイル(Controllerを呼ぶように編集)&lt;/li&gt;
&lt;li&gt;Routeファイル(編集)&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;controller&quot;&gt;Controller&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;app/controller/export_controller.rb&lt;/code&gt; を作成。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;export_controller なので、、 &lt;code&gt;export&lt;/code&gt; がこの先 &lt;code&gt;:controller&lt;/code&gt; に指定する名前になる&lt;/li&gt;
&lt;li&gt;ApplicationController クラスを継承&lt;/li&gt;
&lt;li&gt;unloadable を書かないと Development モードで動かない。今はおまじないでいい&lt;/li&gt;
&lt;li&gt;処理を書いていく。メソッド名が &lt;code&gt;:action&lt;/code&gt; となる&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ExportController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ApplicationController&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;unloadable&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;export_with_journal&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;export_with_journal&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;send_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;aa&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;text/csv&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:filename&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;test.csv&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;view&quot;&gt;View&lt;/h4&gt;

&lt;p&gt;Controller に定義した :controller と :action 名に従って、リンク先を変更する。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;contextual&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;%= link_to(&amp;quot;dl &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@project&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt; issues&amp;quot;, {:controller =&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;export&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:action&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;export_with_journal&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;%&amp;gt;&lt;/span&gt;
&lt;span class=&quot;sx&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;route&quot;&gt;Route&lt;/h4&gt;

&lt;p&gt;Controller と View を結びつける。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;match&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;projects/export/:action&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:controller&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;export&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;これで、ViewのリンクをたたくとControllerが呼ばれる。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Jekyllバージョンアップの際に思いのほか手こずった話 Jekyll Bootstrapの更新に追従したい編</title>
   <link href="http://gosyujin.github.io/2013/08/07/jekyll-maintenance-1"/>
   <updated>2013-08-07T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2013/08/07/jekyll-maintenance-1</id>
   <content type="html">&lt;h2 id=&quot;あらすじ&quot;&gt;あらすじ&lt;/h2&gt;

&lt;p&gt;forkとか、fetchとか、本で読んでるだけじゃ実際やりたい時にどうやりゃいいかわからん…という話。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Github Pagesで運用しているJekyllのバージョンアップをする時に死んだ&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;原因は、他の人が公開しているプラグインやcssをほいほい &lt;strong&gt;コピペ&lt;/strong&gt; していたため

&lt;ul&gt;
&lt;li&gt;公開先ではもちろんJekyllの更新に追従しており、更新を怠った己が自爆しているだけ)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;なんとか自分のリポジトリでも追従したい。でもコピペはやだ&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;追従したいのは、主に Jekyll Bootstrap ファイル全般と @nitoyon さんのてっく煮ブログで使われているプラグイン。(特にはてな系)&lt;/p&gt;

&lt;p&gt;パッパとやって手順だけメモするかーと思ったら凄まじくてこずったので、今回はBootstrapだけ。&lt;/p&gt;

&lt;h2 id=&quot;環境&quot;&gt;環境&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Ruby 1.9.3

&lt;ul&gt;
&lt;li&gt;RedCloth (4.2.9)&lt;/li&gt;
&lt;li&gt;bundler (1.3.5)&lt;/li&gt;
&lt;li&gt;classifier (1.3.3)&lt;/li&gt;
&lt;li&gt;colorator (0.1)&lt;/li&gt;
&lt;li&gt;commander (4.1.4)&lt;/li&gt;
&lt;li&gt;directory_watcher (1.4.1)&lt;/li&gt;
&lt;li&gt;fast-stemmer (1.0.2)&lt;/li&gt;
&lt;li&gt;highline (1.6.19)&lt;/li&gt;
&lt;li&gt;hparser (0.4.0 dc35f05)&lt;/li&gt;
&lt;li&gt;jekyll (1.0.0 9f94eaf)&lt;/li&gt;
&lt;li&gt;kramdown (0.14.2)&lt;/li&gt;
&lt;li&gt;liquid (2.5.1)&lt;/li&gt;
&lt;li&gt;maruku (0.6.1)&lt;/li&gt;
&lt;li&gt;posix-spawn (0.3.6)&lt;/li&gt;
&lt;li&gt;pygments.rb (0.4.2)&lt;/li&gt;
&lt;li&gt;rake (10.1.0)&lt;/li&gt;
&lt;li&gt;rdiscount (2.1.6)&lt;/li&gt;
&lt;li&gt;redcarpet (2.2.2)&lt;/li&gt;
&lt;li&gt;safe_yaml (0.7.1)&lt;/li&gt;
&lt;li&gt;syntax (1.0.0)&lt;/li&gt;
&lt;li&gt;yajl-ruby (1.1.0)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;参考サイト&quot;&gt;参考サイト&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://git-scm.com/book/ja/Git-%E3%81%AE%E3%81%95%E3%81%BE%E3%81%96%E3%81%BE%E3%81%AA%E3%83%84%E3%83%BC%E3%83%AB-%E3%82%B5%E3%83%96%E3%83%A2%E3%82%B8%E3%83%A5%E3%83%BC%E3%83%AB&quot;&gt;Git - サブモジュール&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://qiita.com/uasi/items/77d41698630fef012f82&quot;&gt;Git で複数のリポジトリをまとめたり、逆に切り出したりする - Qiita [キータ]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://memo.yomukaku.net/entries/Xj9vo6X&quot;&gt;gitでforkしたrepoにoriginalのrepoをmergeする手順 - memo.yomukaku.net&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://bmath.org/wordpress/?p=1733&quot;&gt;fork元の xupdate が更新されたので追従する ｜ BmathLog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.livedoor.jp/odaxsen/archives/1624005.html&quot;&gt;オダろぐ : Git＞マージがコンフリクトしたときに，どちらかを有効にする方法&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;やりたい事-jekyll-bootstrap-編&quot;&gt;やりたい事: Jekyll Bootstrap 編&lt;/h2&gt;

&lt;p&gt;テンプレートとかcssが更新されたらそれを取得して適用したい。&lt;/p&gt;

&lt;p&gt;初回に 0.2.13 を持ってくる時はごっそりコピーして自分のリポジトリにaddしてただけなので…。&lt;/p&gt;

&lt;p&gt;毎回コピーするよりはなにかうまい方法を探したい。&lt;/p&gt;

&lt;h3 id=&quot;方針&quot;&gt;方針&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Jekyll Bootstrapの新しいバージョン(ブランチ/タグ)をみて新しいのが出たらマージ&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;その1-jekyll-bootstrapリポジトリから直接更新分を持ってくる-断念&quot;&gt;その1: Jekyll Bootstrapリポジトリから直接更新分を持ってくる(断念)&lt;/h3&gt;

&lt;p&gt;まずは、自分のJekyllプロジェクトに、本家のJekyl Bootstrapをリモートリポジトリとして登録する。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git remote add jb http://github.com/plusjade/jekyll-bootstrap.git
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git remote -v
&lt;span class=&quot;go&quot;&gt;jb      http://github.com/plusjade/jekyll-bootstrap.git (fetch)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;jb      http://github.com/plusjade/jekyll-bootstrap.git (push)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;origin  http://github.com/gosyujin/gosyujin.github.com.git (fetch)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;origin  http://github.com/gosyujin/gosyujin.github.com.git (push)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;マージする&quot;&gt;マージする&lt;/h4&gt;

&lt;p&gt;適用するブランチ/タグを探す。&lt;/p&gt;

&lt;p&gt;参考: ブランチなら&lt;code&gt;remote show&lt;/code&gt; でも見れるんだけど、タグを見るには &lt;code&gt;ls-remote --tags&lt;/code&gt; コマンドというものがあるみたい。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git ls-remote --tags jb v*
&lt;span class=&quot;go&quot;&gt;20f90ffb0fa840f6aea90fc581ffd0dc84ee701f        refs/tags/v0.1.0&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;c1972379f3fa93998947f355948359c24f1307a5        refs/tags/v0.1.0^{}&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;8d498097c81e685fee3b1d1ffe61fcb66784db31        refs/tags/v0.2.0&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;4c29c7ed76a1f972b456f3cd158432caef5c0a81        refs/tags/v0.2.0^{}&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;37c14cf57ef968b8d27a54f9c3b55957bd9f7591        refs/tags/v0.2.1&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;3a2df76133171e1cd576708a60694e7d0632b671        refs/tags/v0.2.1^{}&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;f23e43f6f5cc564a3f411c503ca4eceb88b8b4c7        refs/tags/v0.2.13&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;9c0026973bf54324304ed1b917bb227603d87071        refs/tags/v0.2.13^{}&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;8fc944393399c6f64a2fa54045ce3cb7282e1970        refs/tags/v0.2.7&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;12e41751883d7336225cfd039139137bac9eca4d        refs/tags/v0.2.7^{}&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;7b27f21b7eb8f84be4decfe9085d82c6eb374e8d        refs/tags/v0.2.8&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;cefdd4e2c3ff08a1e949e035d492387b90329c88        refs/tags/v0.2.8^{}&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;653b332f47eff2f8fbe36eaca206fa0f1136d9ad        refs/tags/v0.2.9&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;162a85dfb6f2801840b00ae995adeb322487132b        refs/tags/v0.2.9^{}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;ん？ &lt;code&gt;^{}&lt;/code&gt; はなんだ…？ちょっとわからないところがあるが、いったんおいといて最新版をfetchしてmerge。(どうもtagが切られていないだけで、0.3.0が出ているよう)&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git fetch jb HEAD
&lt;span class=&quot;go&quot;&gt;warning: no common commits&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;remote: Counting objects: 658, done.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;remote: Compressing objects: 100% (350/350), done.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;remote: Total 658 (delta 324), reused 560 (delta 272)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Receiving objects: 100% (658/658), 209.25 KiB, done.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Resolving deltas: 100% (324/324), done.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;From http://github.com/plusjade/jekyll-bootstrap&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; * tag               HEAD     -&amp;gt; FETCH_HEAD&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git checkout &lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 適用したいブランチに移動&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git merge FETCH_HEAD
&lt;span class=&quot;go&quot;&gt;Auto-merging index.md&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;CONFLICT (add/add): Merge conflict in index.md&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Auto-merging changelog.md&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;CONFLICT (add/add): Merge conflict in changelog.md&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Auto-merging atom.xml&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;CONFLICT (add/add): Merge conflict in atom.xml&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;(略)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;いっぱいコンフリクトしたので、地道にコンフリクト解消。。。&lt;/p&gt;

&lt;h4 id=&quot;結論&quot;&gt;結論&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;毎回コピーはしなくてよくなった&lt;/li&gt;
&lt;li&gt;Jekyll Bootstrap の更新はチェックする必要がある&lt;/li&gt;
&lt;li&gt;コンフリクト解消作業は毎回やることに…？(量が増えたら毎回めんどい？)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ログを確認するとき、Jekyll Bootstrapの更新も表示されてしまう&lt;/strong&gt; (かなり多い)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Bootstrap側でどんな更新があったかまでは確認できる必要もないんだけど…と思って調べていくと、 git checkout に &lt;code&gt;--orphan&lt;/code&gt; オプションがあるということがわかった。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.kernel.org/pub/software/scm/git/docs/git-checkout.html&quot;&gt;git-checkout(1)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://onjiro.blogspot.jp/2013/03/fuelphpgitorphan.html&quot;&gt;ひょうたん: FuelPHPのgit管理にorphanブランチ使ったらどうかねぇ？&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;これは使えるかも?&lt;/p&gt;

&lt;h3 id=&quot;その2-jekyll-bootstrapリポジトリを一回forkしてそこから更新分を持ってくる-採用&quot;&gt;その2: Jekyll Bootstrapリポジトリを一回forkしてそこから更新分を持ってくる(採用)&lt;/h3&gt;

&lt;p&gt;今度は、はじめに &lt;strong&gt;forkして&lt;/strong&gt; 自分のところに持ってくる。そしてclone。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git clone http://github.com/gosyujin/jekyll-bootstrap.git &lt;span class=&quot;c&quot;&gt;# forkしたのでアカウントが `plusjade` から自分に変わっている&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;自分用ブランチの作成&quot;&gt;自分用ブランチの作成&lt;/h4&gt;

&lt;p&gt;Bootstrap系のログを除外したいので、まったく独立した &lt;code&gt;oreore-jb&lt;/code&gt; ブランチを作りたい。&lt;/p&gt;

&lt;p&gt;独立したブランチを作るには &lt;code&gt;checkout --orphan&lt;/code&gt; を使う。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git checkout --orphan oreore-jb
&lt;span class=&quot;go&quot;&gt;Switched to a new branch &amp;#39;oreore-jb&amp;#39;&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git st
&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt; On branch oreore-jb
&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt; Initial commit
&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt; Changes to be committed:
&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;use &lt;span class=&quot;s2&quot;&gt;&amp;quot;git rm --cached &amp;lt;file&amp;gt;...&amp;quot;&lt;/span&gt; to unstage&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt;       new file:   .gitignore
&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt;       new file:   404.html
&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt;       new file:   README.md
&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt;       new file:   Rakefile
&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt;       new file:   _config.yml
&lt;span class=&quot;go&quot;&gt;(略)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;ファイルはステージングされた状態になっているのでそのままadd。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git add .
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git com &lt;span class=&quot;s2&quot;&gt;&amp;quot;first commit&amp;quot;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;[oreore-jb (root-commit) df703a3] fc&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; 46 files changed, 2530 insertions(+)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; create mode 100644 .gitignore&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; create mode 100644 404.html&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; create mode 100644 README.md&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; create mode 100644 Rakefile&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; create mode 100644 _config.yml&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;(略)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;これで、独立した &lt;code&gt;oreore-jb&lt;/code&gt; ブランチにBootstrapの最新版が入ったことになる。&lt;/p&gt;

&lt;p&gt;試しにmasterブランチでいくつか適当にコミットしたあとグラフを確認してみる。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git g &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;グラフ表示エイリアス&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;*   bb73195 8940469 2013-08-06 kk_Ataka  (HEAD, master) test2&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;| * df703a3 fac1d1e 2013-08-06 kk_Ataka  (oreore-jb) first commit&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;*   9da0a7c fac1d1e 2013-08-06 kk_Ataka  test1j&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;*   7501cf3 4b3dcb2 2013-07-26 Jade Dominguez  (origin/master, origin/HEAD) Merge add-drafts. closes #167&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;|\&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;| * c2d70e5 4b3dcb2 2013-07-23 Jade Dominguez  add draft feature&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;過去を断ち切れてる。&lt;/p&gt;

&lt;p&gt;一度 &lt;code&gt;oreore-jb&lt;/code&gt; を作れたら、以降は&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;本家の更新をチェック&lt;/li&gt;
&lt;li&gt;masterブランチにfetch, merge&lt;/li&gt;
&lt;li&gt;独立ブランチ2 &lt;code&gt;feature&lt;/code&gt; を作成&lt;/li&gt;
&lt;li&gt;&lt;code&gt;feature&lt;/code&gt; と &lt;code&gt;oreore-jb&lt;/code&gt; とmerge&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;するのかな？？&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git checkout --orphan feature &lt;span class=&quot;c&quot;&gt;# 本家の最新版を取り入れた後…&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git add ./
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git commit -m &lt;span class=&quot;s2&quot;&gt;&amp;quot;更新取り入れ&amp;quot;&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# この時点でブランチは大きく1. 本流, 2. oreore-jb, 3. feature の3つが存在する&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git checkout oreore-jb
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git merge feature             &lt;span class=&quot;c&quot;&gt;# 変更されてるところはぶつかる&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Auto-merging Rakefile&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;CONFLICT (add/add): Merge conflict in Rakefile&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Automatic merge failed; fix conflicts and then commit the result.&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git ch --theirs Rakefile      &lt;span class=&quot;c&quot;&gt;# theirsのファイルかoursのファイルか(エディタ使って手でなおしてもいい)&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git add ./
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git commit -m &lt;span class=&quot;s2&quot;&gt;&amp;quot;vX.X.X&amp;quot;&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git g
&lt;span class=&quot;go&quot;&gt;*     221593a 028b015 2013-08-06 kk_Ataka  (HEAD, master) 本流の変更4&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;| *   940c432 a4f1743 2013-08-06 kk_Ataka  (oreore-jb) com&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;| |\&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;| | * 1938f54 a4f1743 2013-08-06 kk_Ataka  (feature) 新バージョン&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;* |   7b7427f f3131bb 2013-08-06 kk_Ataka  本流の変更3&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;* |   d109479 bd61d9c 2013-08-06 kk_Ataka  本流の変更2&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;| *   1fd0b54 9d627ae 2013-08-06 kk_Ataka  merge&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;| |\&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;| | * 626d51a 9d627ae 2013-08-06 kk_Ataka  tuizui&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;* |   6c592be 9d627ae 2013-08-06 kk_Ataka  本流の変更&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;| *   59abd4b 4b3dcb2 2013-08-06 kk_Ataka  first commit&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;*     7501cf3 4b3dcb2 2013-07-26 Jade Dominguez  (origin/master, origin/HEAD) Merge add-drafts. closes #167&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git push origin oreore-jb:oreore-jb&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;わかりにくいけどグラフの左が本流、右が今回作ったJekyll Bootstrap自体の履歴をもたない &lt;code&gt;oreore-jb&lt;/code&gt; 傍流。&lt;/p&gt;

&lt;h4 id=&quot;合体&quot;&gt;合体&lt;/h4&gt;

&lt;p&gt;これを、自分のJekyllにmergeしてやる。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git re add jb http://github.com/gosyujin/jekyll-bootstrap.git
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git fetch jb oreore-jb
&lt;span class=&quot;go&quot;&gt;remote: Counting objects: 7, done.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;remote: Compressing objects: 100% (5/5), done.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;remote: Total 5 (delta 3), reused 0 (delta 0)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Unpacking objects: 100% (5/5), done.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;From http://github.com/gosyujin/jekyll-bootstrap.git&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; * branch            oreore-jb  -&amp;gt; FETCH_HEAD&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git merge FETCH_HEAD   &lt;span class=&quot;c&quot;&gt;# コンフリクトした場合は解消にいそしむ&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git g
&lt;span class=&quot;go&quot;&gt;| *     feaea36 1675a4d 2013-08-06 kk_Ataka  (HEAD, source) Merge branch &amp;#39;oreore-jb&amp;#39; of ../jekyll-bootstrap into source&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;| |\&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;| | *   940c432 a4f1743 2013-08-06 kk_Ataka  com&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;| | |\&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;| | | * 1938f54 a4f1743 2013-08-06 kk_Ataka  新バージョン&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;| * |   6caafdd 7d2b1c0 2013-08-06 kk_Ataka  OK&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;| |\ \&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;| | |/&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;| | *   1fd0b54 9d627ae 2013-08-06 kk_Ataka  merge&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;| | |\&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;| | | * 626d51a 9d627ae 2013-08-06 kk_Ataka  tuizui&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;| | *   59abd4b 4b3dcb2 2013-08-06 kk_Ataka  first commit&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;* |     b3f9818 1d67408 2013-08-06 kk_Ataka  (origin/master, origin/HEAD) deploy at 2013-08-06 01:03:02 +0900&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;| *     524de33 4135ebe 2013-08-04 kk_Ataka  (origin/source) 追加 AndroidアプリのIntentタイプ&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;グラフの左はdeploy用のブランチなのでおいといて、真ん中がソースを管理している &lt;code&gt;source&lt;/code&gt; ブランチ、右が &lt;code&gt;oreore-jb&lt;/code&gt; 。&lt;/p&gt;

&lt;h4 id=&quot;結論&quot;&gt;結論&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;毎回コピーはしなくてよくなった&lt;/li&gt;
&lt;li&gt;Jekyll Bootstrap の更新はチェックする必要がある&lt;/li&gt;
&lt;li&gt;コンフリクト解消作業は毎回やることに…？(量が増えたら毎回めんどい？)&lt;/li&gt;
&lt;li&gt;ログは自分がBootstrapから切り出した最小限のものだけにできた&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;というわけで、自分の中では一応納得。&lt;/p&gt;

&lt;p&gt;しかし、これがいい方法なのかはわからんー。&lt;/p&gt;

&lt;p&gt;後半へ続く。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Androidアプリのインストール、起動方法によってIntentのタイプが微妙に変わる件</title>
   <link href="http://gosyujin.github.io/2013/08/04/android-install-intent"/>
   <updated>2013-08-04T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2013/08/04/android-install-intent</id>
   <content type="html">&lt;h2 id=&quot;あらすじ&quot;&gt;あらすじ&lt;/h2&gt;

&lt;p&gt;Androidアプリにおいて、Eclipseからビルドしていた時は想定通り動いていたのに、リリース署名をしたアプリ(apkファイル)をインストールした場合だけ動作が想定していないものになった。&lt;/p&gt;

&lt;p&gt;具体的には、Activityがむちゃくちゃたまる現象が起こるということで非常に困った。&lt;/p&gt;

&lt;h2 id=&quot;結論&quot;&gt;結論&lt;/h2&gt;

&lt;p&gt;起動のさせ方により、起動時のIntentフラグが変わる。これはAndroid内部で知らぬ間にやられてしまう。&lt;/p&gt;

&lt;p&gt;onCreate時などでIntentのフラグをチェックして何とかするしかない。&lt;/p&gt;

&lt;h2 id=&quot;環境&quot;&gt;環境&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;AndroidDeveloperTools Build: v21.1.0-569685&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;ソースの中身&quot;&gt;ソースの中身&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;メインのActivityには &lt;code&gt;action.Main&lt;/code&gt; と &lt;code&gt;category.LAUNCHER&lt;/code&gt; しか設定していない。

&lt;ul&gt;
&lt;li&gt;AndroidManifest.xmlはプロジェクト作成時ほぼそのまま&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;uses-sdk&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:minSdkVersion=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;13&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:targetSdkVersion=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;14&amp;quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;nt&quot;&gt;&amp;lt;application&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:allowBackup=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;true&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:icon=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;@drawable/ic_launcher&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:label=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;@string/app_name&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:theme=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;@style/AppTheme&amp;quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;activity&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;android:name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;com.example.testproject.MainActivity&amp;quot;&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;android:label=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;@string/app_name&amp;quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;intent-filter&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;action&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;android:name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;android.intent.action.MAIN&amp;quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;

        &lt;span class=&quot;nt&quot;&gt;&amp;lt;category&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;android:name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;android.intent.category.LAUNCHER&amp;quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/intent-filter&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/activity&amp;gt;&lt;/span&gt;
    (略)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;FLAG設定は特に記載せず

&lt;ul&gt;
&lt;li&gt;メインのActivity(MainActivity.java)もほぼそのまま&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MainActivity&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Activity&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Bundle&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;savedInstanceState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;savedInstanceState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;setContentView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;activity_main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onCreateOptionsMenu&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Menu&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;menu&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;getMenuInflater&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;inflate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;menu&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;menu&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
       &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;単純にHelo Worldを表示するだけのサンプルプログラム。&lt;/p&gt;

&lt;h2 id=&quot;現象&quot;&gt;現象&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;特定の手順&lt;/strong&gt; を踏んだ時だけ MainActivity のスタックが溜まりまくり、Hello World画面→Hello World画面→Hello World画面→Hello World画面...とバックキーを押しまくっても一向にホーム画面が現れなくなる。&lt;/p&gt;

&lt;p&gt;また、以下のような状況でもある。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;この現象は起こらない時は全然起こらないし、起こったと思ったらすぐなおることもある&lt;/li&gt;
&lt;li&gt;Eclipse経由でビルドしていた時はなんともなかったのに、apk経由でインストールした途端急に起こり始めた&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;再現性調査&quot;&gt;再現性調査&lt;/h3&gt;

&lt;p&gt;とりあえずいろいろな状況で &lt;code&gt;adb.exe shell dumpsys activity activities&lt;/code&gt; を使いタスクのHistを確認しまくってみた。&lt;/p&gt;

&lt;p&gt;以下は正常時のHist。このMainActivityが一個だけ。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;go&quot;&gt;* TaskRecord{418cbab0 #42 A com.example.testproject}&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  affinity=com.example.testproject&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  intent={act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.example.testproject/.MainActivity bnds=[120,254][240,404]}&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  realActivity=com.example.testproject/.MainActivity&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  * Hist #1: ActivityRecord{41448a70 com.example.testproject/.MainActivity}&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      packageName=com.example.testproject processName=com.example.testproject&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      launchedFromUid=10064 app=ProcessRecord{41545a80 23603:com.example.testproject/10159}&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      Intent { act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.example.testproject/.MainActivity bnds=[120,254][240,404] }&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      frontOfTask=true task=TaskRecord{418cbab0 #42 A com.example.testproject}&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      taskAffinity=com.example.testproject&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      realActivity=com.example.testproject/.MainActivity&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      base=/data/app/com.example.testproject-1.apk/data/app/com.example.testproject-1.apk data=/data/data/com.example.testproject&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      thumbHolder=TaskRecord{418cbab0 #42 A com.example.testproject}&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  TaskRecord{418cbab0 #42 A com.example.testproject}&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    Run #1: ActivityRecord{41448a70 com.example.testproject/.MainActivity}&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  mResumedActivity: ActivityRecord{41448a70 com.example.testproject/.MainActivity}&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  mFocusedActivity: ActivityRecord{41448a70 com.example.testproject/.MainActivity}&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;* Recent #0: TaskRecord{418cbab0 #42 A com.example.testproject}&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  affinity=com.example.testproject&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  intent={act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=com.example.testproject/.MainActivity bnds=[120,254][240,404]}&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  realActivity=com.example.testproject/.MainActivity&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  intent={act=android.intent.action.DELETE dat=package:com.example.testproject#com.example.testproject.MainActivity flg=0x10800000 cmp=com.android.packageinstaller/.UninstallerActivity}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;溜まりまくる場合のHist。MainActivityがやまほど生まれてる。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;go&quot;&gt;* TaskRecord{41446350 #45 A com.example.testproject}&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  affinity=com.example.testproject&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  intent={act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10000000 pkg=com.example.testproject cmp=com.example.testproject/.MainActivity}&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  realActivity=com.example.testproject/.MainActivity&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  * Hist #8: ActivityRecord{416dcb20 com.example.testproject/.MainActivity}&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      packageName=com.example.testproject processName=com.example.testproject&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      launchedFromUid=10064 app=ProcessRecord{414f9d80 27069:com.example.testproject/10159}&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      Intent { act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10600000 cmp=com.example.testproject/.MainActivity bnds=[0,405][120,555] }&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      frontOfTask=false task=TaskRecord{41446350 #45 A com.example.testproject}&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      taskAffinity=com.example.testproject&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      realActivity=com.example.testproject/.MainActivity&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      base=/data/app/com.example.testproject-1.apk/data/app/com.example.testproject-1.apk data=/data/data/com.example.testproject&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      thumbHolder=TaskRecord{41446350 #45 A com.example.testproject}&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  * Hist #7: ActivityRecord{41604ef8 com.example.testproject/.MainActivity}&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      packageName=com.example.testproject processName=com.example.testproject&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      launchedFromUid=10064 app=ProcessRecord{414f9d80 27069:com.example.testproject/10159}&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      Intent { act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10600000 cmp=com.example.testproject/.MainActivity bnds=[0,405][120,555] }&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      frontOfTask=false task=TaskRecord{41446350 #45 A com.example.testproject}&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      taskAffinity=com.example.testproject&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      realActivity=com.example.testproject/.MainActivity&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      base=/data/app/com.example.testproject-1.apk/data/app/com.example.testproject-1.apk data=/data/data/com.example.testproject&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      thumbHolder=TaskRecord{41446350 #45 A com.example.testproject}&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  * Hist #6: ActivityRecord{41562120 com.example.testproject/.MainActivity}&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      packageName=com.example.testproject processName=com.example.testproject&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      launchedFromUid=10064 app=ProcessRecord{414f9d80 27069:com.example.testproject/10159}&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      Intent { act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10600000 cmp=com.example.testproject/.MainActivity bnds=[0,405][120,555] }&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      frontOfTask=false task=TaskRecord{41446350 #45 A com.example.testproject}&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      taskAffinity=com.example.testproject&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      realActivity=com.example.testproject/.MainActivity&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      base=/data/app/com.example.testproject-1.apk/data/app/com.example.testproject-1.apk data=/data/data/com.example.testproject&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      thumbHolder=TaskRecord{41446350 #45 A com.example.testproject}&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  * Hist #5: ActivityRecord{41451680 com.example.testproject/.MainActivity}&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      packageName=com.example.testproject processName=com.example.testproject&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      launchedFromUid=10064 app=ProcessRecord{414f9d80 27069:com.example.testproject/10159}&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      Intent { act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10600000 cmp=com.example.testproject/.MainActivity bnds=[0,405][120,555] }&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      frontOfTask=false task=TaskRecord{41446350 #45 A com.example.testproject}&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      taskAffinity=com.example.testproject&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      realActivity=com.example.testproject/.MainActivity&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      base=/data/app/com.example.testproject-1.apk/data/app/com.example.testproject-1.apk data=/data/data/com.example.testproject&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      thumbHolder=TaskRecord{41446350 #45 A com.example.testproject}&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  * Hist #4: ActivityRecord{41554ec0 com.example.testproject/.MainActivity}&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      packageName=com.example.testproject processName=com.example.testproject&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      launchedFromUid=10064 app=ProcessRecord{414f9d80 27069:com.example.testproject/10159}&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      Intent { act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10600000 cmp=com.example.testproject/.MainActivity }&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      frontOfTask=false task=TaskRecord{41446350 #45 A com.example.testproject}&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      taskAffinity=com.example.testproject&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      realActivity=com.example.testproject/.MainActivity&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      base=/data/app/com.example.testproject-1.apk/data/app/com.example.testproject-1.apk data=/data/data/com.example.testproject&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      thumbHolder=TaskRecord{41446350 #45 A com.example.testproject}&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  * Hist #3: ActivityRecord{416f12c0 com.example.testproject/.MainActivity}&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      packageName=com.example.testproject processName=com.example.testproject&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      launchedFromUid=10064 app=ProcessRecord{414f9d80 27069:com.example.testproject/10159}&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      Intent { act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10600000 cmp=com.example.testproject/.MainActivity }&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      frontOfTask=false task=TaskRecord{41446350 #45 A com.example.testproject}&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      taskAffinity=com.example.testproject&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      realActivity=com.example.testproject/.MainActivity&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      base=/data/app/com.example.testproject-1.apk/data/app/com.example.testproject-1.apk data=/data/data/com.example.testproject&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      thumbHolder=TaskRecord{41446350 #45 A com.example.testproject}&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  * Hist #2: ActivityRecord{413febd0 com.example.testproject/.MainActivity}&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      packageName=com.example.testproject processName=com.example.testproject&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      launchedFromUid=10078 app=ProcessRecord{414f9d80 27069:com.example.testproject/10159}&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      Intent { act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10000000 pkg=com.example.testproject cmp=com.example.testproject/.MainActivity }&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      frontOfTask=true task=TaskRecord{41446350 #45 A com.example.testproject}&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      taskAffinity=com.example.testproject&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      realActivity=com.example.testproject/.MainActivity&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      base=/data/app/com.example.testproject-1.apk/data/app/com.example.testproject-1.apk data=/data/data/com.example.testproject&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      thumbHolder=TaskRecord{41446350 #45 A com.example.testproject}&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  TaskRecord{41446350 #45 A com.example.testproject}&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    Run #8: ActivityRecord{416dcb20 com.example.testproject/.MainActivity}&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  TaskRecord{41446350 #45 A com.example.testproject}&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    Run #6: ActivityRecord{41604ef8 com.example.testproject/.MainActivity}&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    Run #5: ActivityRecord{41562120 com.example.testproject/.MainActivity}&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    Run #4: ActivityRecord{41451680 com.example.testproject/.MainActivity}&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    Run #3: ActivityRecord{41554ec0 com.example.testproject/.MainActivity}&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    Run #2: ActivityRecord{416f12c0 com.example.testproject/.MainActivity}&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    Run #1: ActivityRecord{413febd0 com.example.testproject/.MainActivity}&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  mResumedActivity: ActivityRecord{416dcb20 com.example.testproject/.MainActivity}&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  mFocusedActivity: ActivityRecord{416dcb20 com.example.testproject/.MainActivity}&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  * Recent #0: TaskRecord{41446350 #45 A com.example.testproject}&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    affinity=com.example.testproject&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    intent={act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10000000 pkg=com.example.testproject cmp=com.example.testproject/.MainActivity}&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    realActivity=com.example.testproject/.MainActivity&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    intent={act=android.intent.action.DELETE dat=package:com.example.testproject#com.example.testproject.MainActivity flg=0x10800000 cmp=com.android.packageinstaller/.UninstallerActivity}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;再現方法&quot;&gt;再現方法&lt;/h3&gt;

&lt;p&gt;以下の操作で再現がとれた。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;apkを作成する&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;apkをAndroid端末に送る&lt;/li&gt;
&lt;li&gt;ファイルマネージャアプリなどからapkを選択しインストールする&lt;/li&gt;
&lt;li&gt;「アプリケーションをインストールしました 完了/開く」画面で &lt;strong&gt;「開く」&lt;/strong&gt; を選択しアプリを起動&lt;/li&gt;
&lt;li&gt;ホームキーでホーム画面に戻る( &lt;strong&gt;バックキーでアプリ終了&lt;/strong&gt; させた場合は正常時の挙動に移行)&lt;/li&gt;
&lt;li&gt;再びアプリ起動&lt;/li&gt;
&lt;li&gt;ホームキー、アプリ起動を繰り返す&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;どうやら &lt;strong&gt;「apk経由でインストール」&lt;/strong&gt; し、 &lt;strong&gt;「そのままアプリを開いた」&lt;/strong&gt; ときだけ変になる模様。&lt;/p&gt;

&lt;p&gt;そして上記のdumpファイルから正常時とおかしい時を比較すると、 &lt;code&gt;Intentのフラグ&lt;/code&gt; 設定が異なっているみたい。&lt;/p&gt;

&lt;h3 id=&quot;ソース修正&quot;&gt;ソース修正&lt;/h3&gt;

&lt;p&gt;MainActivityにonResumeメソッドとIntentのフラグを出力するToastを追加してみた。&lt;/p&gt;

&lt;p&gt;dumpファイルのフラグは16進で出力されているが、ソースからフラグを取得してみる( &lt;code&gt;getIntent().getFlags()&lt;/code&gt; )と10進で格納されているようなので、16進に変換している。(268435456→10000000)&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Bundle&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;savedInstanceState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;savedInstanceState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;Toast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;makeText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;FLAG:&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toHexString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getIntent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getFlags&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Toast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;LENGTH_SHORT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;setContentView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;activity_main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
   &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onCreateOptionsMenu&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Menu&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;menu&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;getMenuInflater&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;inflate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;menu&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;menu&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;   &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;   &lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onResume&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;     &lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;onResume&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;Toast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;makeText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;FLAG:&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toHexString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getIntent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getFlags&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Toast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;LENGTH_SHORT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;すると、以下のようなフラグが出力された。dumpを見ても同じ値になっているな。&lt;/p&gt;

&lt;h3 id=&quot;操作時のフラグ&quot;&gt;操作時のフラグ&lt;/h3&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;インストール方法&lt;/th&gt;
&lt;th&gt;操作&lt;/th&gt;
&lt;th&gt;フラグ&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;正常時&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;----------------&lt;/td&gt;
&lt;td&gt;--------------------------------------------&lt;/td&gt;
&lt;td&gt;-----------&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Eclipse Run&lt;/td&gt;
&lt;td&gt;ビルド後起動&lt;/td&gt;
&lt;td&gt;&lt;code&gt;10000000&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;バックキーでいったんアプリ終了→アプリ起動&lt;/td&gt;
&lt;td&gt;&lt;code&gt;10020000&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;apkインストール&lt;/td&gt;
&lt;td&gt;インストール後「完了」→アプリ起動&lt;/td&gt;
&lt;td&gt;&lt;code&gt;10020000&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;バックキーで終了後タスク履歴から呼びだした時&lt;/td&gt;
&lt;td&gt;&lt;code&gt;10304000&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;----------------&lt;/td&gt;
&lt;td&gt;--------------------------------------------&lt;/td&gt;
&lt;td&gt;----------&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;おかしい時&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;----------------&lt;/td&gt;
&lt;td&gt;--------------------------------------------&lt;/td&gt;
&lt;td&gt;----------&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;apkインストール&lt;/td&gt;
&lt;td&gt;インストール後、即「開く」&lt;/td&gt;
&lt;td&gt;&lt;code&gt;10000000&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;その後、ホームキー→アプリ起動&lt;/td&gt;
&lt;td&gt;&lt;code&gt;10600000&lt;/code&gt; ...&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;ふーむ。呼び方によってフラグの値が変わっている…。だが、そういうこともあるらしい。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://ahoworld.blog58.fc2.com/?m&amp;amp;no=378&quot;&gt;とまと日記 android shell am コマンド&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;これがなんなのか…。javadocから照らし合わせてみよう。&lt;/p&gt;

&lt;h3 id=&quot;フラグ一覧-抜粋&quot;&gt;フラグ一覧(抜粋)&lt;/h3&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;フラグ(16進)&lt;/th&gt;
&lt;th&gt;ばらし&lt;/th&gt;
&lt;th&gt;フラグ(10進)&lt;/th&gt;
&lt;th&gt;値&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;正常時&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-------------&lt;/td&gt;
&lt;td&gt;--------&lt;/td&gt;
&lt;td&gt;------------&lt;/td&gt;
&lt;td&gt;--------------------------------------&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;10200000&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;10000000&lt;/td&gt;
&lt;td&gt;268435456&lt;/td&gt;
&lt;td&gt;&lt;code&gt;FLAG_ACTIVITY_NEW_TASK&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;00200000&lt;/td&gt;
&lt;td&gt;002097152&lt;/td&gt;
&lt;td&gt;&lt;code&gt;FLAG_ACTIVITY_RESET_TASK_IF_NEEDED&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;10304000&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;10000000&lt;/td&gt;
&lt;td&gt;268435456&lt;/td&gt;
&lt;td&gt;&lt;code&gt;FLAG_ACTIVITY_NEW_TASK&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;00200000&lt;/td&gt;
&lt;td&gt;002097152&lt;/td&gt;
&lt;td&gt;&lt;code&gt;FLAG_ACTIVITY_RESET_TASK_IF_NEEDED&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;00100000&lt;/td&gt;
&lt;td&gt;001048576&lt;/td&gt;
&lt;td&gt;&lt;code&gt;FLAG_ACTIVITY_LAUNCHED_FROM_HISTORY&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;00004000&lt;/td&gt;
&lt;td&gt;000016384&lt;/td&gt;
&lt;td&gt;？&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-------------&lt;/td&gt;
&lt;td&gt;--------&lt;/td&gt;
&lt;td&gt;------------&lt;/td&gt;
&lt;td&gt;--------------------------------------&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;おかしい時&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-------------&lt;/td&gt;
&lt;td&gt;--------&lt;/td&gt;
&lt;td&gt;------------&lt;/td&gt;
&lt;td&gt;--------------------------------------&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;10600000&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;10000000&lt;/td&gt;
&lt;td&gt;268435456&lt;/td&gt;
&lt;td&gt;&lt;code&gt;FLAG_ACTIVITY_NEW_TASK&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;00400000&lt;/td&gt;
&lt;td&gt;004194304&lt;/td&gt;
&lt;td&gt;&lt;code&gt;FLAG_ACTIVITY_BROUGHT_TO_FRONT&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;00200000&lt;/td&gt;
&lt;td&gt;002097152&lt;/td&gt;
&lt;td&gt;&lt;code&gt;FLAG_ACTIVITY_RESET_TASK_IF_NEEDED&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;ul&gt;
&lt;li&gt;参考: &lt;a href=&quot;http://www.androidjavadoc.com/2.3/constant-values.html#android.content.Intent.FLAG_ACTIVITY_RESET_TASK_IF_NEEDED&quot;&gt;Constant Field Values&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;両者を比較すると、 apk経由のときだけ &lt;code&gt;FLAG_ACTIVITY_BROUGHT_TO_FRONT&lt;/code&gt; というフラグがあるなー。なんじゃこりゃ。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.android.com/reference/android/content/Intent.html#FLAG_ACTIVITY_BROUGHT_TO_FRONT&quot;&gt;Intent ｜ Android Developers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;This flag is not normally set by application code, but set for you by the system as described in the launchMode documentation for the singleTask mode.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.saturn.dti.ne.jp/npaka/android/LaunchMode/&quot;&gt;Androidメモ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;既存アクティビティ(singleTask)を最前面に呼び出す。システムによって設定される。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;やはり！Androidの中の人が勝手にセットしているっぽいなー。これが悪さをしているのか？&lt;/p&gt;

&lt;h2 id=&quot;解決方法&quot;&gt;解決方法&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;FLAG_ACTIVITY_BROUGHT_TO_FRONT&lt;/code&gt; でググったらandroid group japanのメーリングリストが引っかかった！ほぼ同じ現象。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.mailinglistarchive.com/html/android-group-japan@googlegroups.com/2012-09/msg00445.html&quot;&gt;Re: [android-group-japan: 20121] apkインストー ル時のホームボタン挙動の変化について&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;ブラウザからinstallして起動したときと、ランチャーから起動した時では、&lt;/p&gt;

&lt;p&gt;起動するときのIntentが微妙に異なります。&lt;/p&gt;

&lt;p&gt;その為、ランチャーから起動した場合の、「既に起動していたら二重起動しない」という&lt;/p&gt;

&lt;p&gt;仕組みが動作しません。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;この状態でapkを作成し、適当なサーバに配置した上で、ブラウザからインストールし、インストール完了時に「開く」を選んで、そのまま起動します。
Activity1の起動後、Activity2へ遷移します。
その後、ホームボタンでホーム画面へ移動し、アイコンをタップして復帰します。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;この時には、Activity stackは以下のようになっています。&lt;/p&gt;

&lt;p&gt;Activity1-&amp;gt;Activity2-&amp;gt;Activity1&amp;#39;&lt;/p&gt;

&lt;p&gt;二重起動されたActivity1&amp;#39;では、起動IntentにFLAG&lt;em&gt;ACTIVITY&lt;/em&gt;BROUGHT&lt;em&gt;TO&lt;/em&gt;FRONTがセットされるようなので、&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Bundle&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;savedInstanceState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;savedInstanceState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getIntent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getFlags&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Intent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;FLAG_ACTIVITY_BROUGHT_TO_FRONT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;finish&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;のようにすると、所望の動作になると思います。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;なるほど。今Activityにセットされているフラグに &lt;code&gt;FLAG_ACTIVITY_BROUGHT_TO_FRONT&lt;/code&gt; が含まれていたら終われってことか。&lt;/p&gt;

&lt;p&gt;確かにこれならHistも増えない。&lt;/p&gt;

&lt;p&gt;…んでも、こんなケースまったく想定してなかったし、スマートフォンアプリにおけるテストで気を付けるところとか、本とかにまとまってないのかな。&lt;/p&gt;

&lt;p&gt;みんなはどうやって要点抑えてるんだろう。社内ノウハウ集的なものがあるのかな？&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;以下、いろいろ考えた結果のボツ案。できるのかもしれないけどギブした。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;onCreate時にフラグを書きかえる&lt;/li&gt;
&lt;li&gt;Activity#onUserLeaveHint(ホームキータップ)時にフラグを書きかえ(これだとそのまま処理続けられるし) &lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>iOSのバックアップ/リストアで残るもの/消えるもの それを編集する手段</title>
   <link href="http://gosyujin.github.io/2013/07/18/ios-backup-restore"/>
   <updated>2013-07-18T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2013/07/18/ios-backup-restore</id>
   <content type="html">&lt;h2 id=&quot;あらすじ&quot;&gt;あらすじ&lt;/h2&gt;

&lt;p&gt;iOSのバックアップ/リストア周りでえらいハメられたので、まとめてみた。&lt;/p&gt;

&lt;p&gt;iOS 7 が出るとどうなってしまうのか…。&lt;/p&gt;

&lt;h2 id=&quot;バックアップの方式&quot;&gt;バックアップの方式&lt;/h2&gt;

&lt;p&gt;iTunesの「概要」画面から選べる&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;iCloudにバックアップ&lt;/li&gt;
&lt;li&gt;このコンピュータにバックアップ

&lt;ul&gt;
&lt;li&gt;そのまま&lt;/li&gt;
&lt;li&gt;ローカルのバックアップを暗号化&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;あまり意識していなかったんだけど、iCloudバックアップは以下の条件を満たす時に実行される模様&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Wi-Fi 経由でインターネットに接続されている(MUST)&lt;/li&gt;
&lt;li&gt;電源に接続されている&lt;/li&gt;
&lt;li&gt;画面がロックされている&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;中でも、Wi-Fiだけは確実に満たす必要がある。(3G回線では、手動でiCloud同期もできない)&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://support.apple.com/kb/ht1766?viewlocale=ja_JP&amp;amp;locale=ja_JP&quot;&gt;iOS：コンテンツのバックアップと復元方法&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;バックアップされる内容&quot;&gt;バックアップされる内容&lt;/h2&gt;

&lt;p&gt;SandboxとKeyChainの大きく2つに分けられる&lt;/p&gt;

&lt;h3 id=&quot;sandboxの内容&quot;&gt;Sandboxの内容&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://cocoadays.blogspot.jp/2011/11/info-icloud.html&quot;&gt;Cocoaの日々: [Info] 特定のファイルをiCloudバックアップ対象外にする&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://d.hatena.ne.jp/yoheiM/20110227&quot;&gt;[XCODE] iPhone iOSのディレクトリ構成について学んだ - YoheiM技術やらずに終われまテン&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://d.hatena.ne.jp/ntaku/20110104/1294146555&quot;&gt;アプリケーションディレクトリの構造とアクセス方法 - プログラミングノート&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;/var/mobile/Applications/01234567-890A-BCDE-FGHI-JKLMNOPQRSTU(ランダム文字列)/&lt;/code&gt; 下のファイルがバックアップマシンに保存されたりされなかったり、 &lt;strong&gt;基本的には&lt;/strong&gt; 以下の階層のバックアップと定義してあるものがそのまま保存される&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Documents/&lt;/code&gt; バックアップ、アプリに関わる重要なファイル置き場&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Library/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Caches/&lt;/code&gt; 非バックアップ、アプリで使用するが消えても大丈夫(また作れる)なファイル置き場&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Preferences/&lt;/code&gt; バックアップ、アプリの設定ファイル置き場&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tmp/&lt;/code&gt; 非バックアップ、一時ファイル置き場&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;基本的&lt;/strong&gt; じゃない場合が、 &lt;strong&gt;このコンピュータにバックアップ ローカルのバックアップを暗号化&lt;/strong&gt; した時&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;「ローカルのバックアップを暗号化」を選んだ時にユーザが入力したパスワードで暗号化され、保存される&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;どんなファイルが入っているかはXcodeの &lt;code&gt;Organizer =&amp;gt; 任意の端末 =&amp;gt; Applications =&amp;gt; 任意のアプリケーション&lt;/code&gt; の Data file in Sandboxで確認できる。&lt;/p&gt;

&lt;h3 id=&quot;keychainの内容&quot;&gt;KeyChainの内容&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://cocoadays.blogspot.jp/2011/02/ios-keychain-services.html&quot;&gt;Cocoaの日々: [iOS] Keychain Services とは&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://did2memo.net/2012/10/02/iphone-how-to-backup-and-restore-key-chain/&quot;&gt;復元が不完全！？iPhoneバックアップで認証情報が復元できない理由とバックアップのオススメ設定 ｜ 情報科学屋さんを目指す人のメモ&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;内容はバックアップマシンに保存されるが、 &lt;strong&gt;暗号化&lt;/strong&gt; されている&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;暗号化されたKeyChain情報を複合化するための鍵は &lt;strong&gt;基本的には&lt;/strong&gt; 暗号化したiOS端末から外に出ない&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;そのため、同じマシンでバックアップ/リストアをすると…&lt;/li&gt;
&lt;li&gt;バックアップ ... KeyChain情報をバックアップマシンに格納&lt;/li&gt;
&lt;li&gt;リストア ... 暗号化されたKeyChain情報が端末に戻ってくる&lt;/li&gt;
&lt;li&gt;同一端末なので、複合化するための鍵は持っている&lt;/li&gt;
&lt;li&gt;パスワードとか復活できる&lt;/li&gt;
&lt;li&gt;一方、機種変更時などで、新端末にリストアすると…&lt;/li&gt;
&lt;li&gt;バックアップ ... KeyChain情報をバックアップマシンに格納&lt;/li&gt;
&lt;li&gt;リストア ... 暗号化されたKeyChain情報が端末に戻ってくる？(戻ってくることすらないのかな？確認方法がわからん)&lt;/li&gt;
&lt;li&gt;端末が異なるので、複合化するための鍵が &lt;strong&gt;ない&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;パスワードとか入れ直し…&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;基本的&lt;/strong&gt; じゃない場合が、 &lt;strong&gt;このコンピュータにバックアップ ローカルのバックアップを暗号化&lt;/strong&gt; した時&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;この時、鍵もバックアップマシンに保存され、 &lt;strong&gt;全部丸ごと暗号化&lt;/strong&gt; される&lt;/li&gt;
&lt;li&gt;「ローカルのバックアップを暗号化」を選んだ時にユーザが入力したパスワードで暗号化される&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;バックアップ方法&quot;&gt;バックアップ方法&lt;/h2&gt;

&lt;p&gt;上記の仕様でよろしくやってくれる。&lt;/p&gt;

&lt;h2 id=&quot;バックアップ除外方法&quot;&gt;バックアップ除外方法&lt;/h2&gt;

&lt;p&gt;かといって、全部一括でバックアップとして外部サーバにあげられると困るファイルもあるはず。(著作権、個人情報、etc)&lt;/p&gt;

&lt;p&gt;なので、そういうファイルはあらかじめバックアップ対象から除外しておく必要がある。&lt;/p&gt;

&lt;p&gt;方法はiOSのバージョンによって異なる。&lt;/p&gt;

&lt;p&gt;現時点では、 &lt;code&gt;iOS 5.1 以降&lt;/code&gt; と &lt;code&gt;iOS 5.0.1&lt;/code&gt; で場合分けした対応が必須みたい。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.apple.com/library/ios/qa/qa1719/_index.html&quot;&gt;Technical Q&amp;amp;A QA1719: Technical Q&amp;amp;A QA1719&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/10836134/nsurlisexcludedfrombackupkey-can-not-be-set-correctly&quot;&gt;iphone - NSURLIsExcludedFromBackupKey can not be set correctly - Stack Overflow&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;ios-5-0&quot;&gt;iOS 5.0&lt;/h3&gt;

&lt;p&gt;そんなものはない。&lt;/p&gt;

&lt;h3 id=&quot;ios-5-0-1&quot;&gt;iOS 5.0.1&lt;/h3&gt;

&lt;p&gt;上記のdeveloper.apple.comのサンプルベタ貼り。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-objc&quot; data-lang=&quot;objc&quot;&gt;&lt;span class=&quot;cp&quot;&gt;#import &amp;lt;sys/xattr.h&amp;gt;&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;BOOL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addSkipBackupAttributeToItemAtURL:&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;NSURL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;URL&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([[&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;NSFileManager&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;defaultManager&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;fileExistsAtPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;URL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;filePath&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;URL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fileSystemRepresentation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;attrName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;com.apple.MobileBackup&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;u_int8_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;attrValue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;setxattr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;filePath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;attrName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;attrValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;sizeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;attrValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;ios-5-1-以降&quot;&gt;iOS 5.1 以降&lt;/h3&gt;

&lt;p&gt;上記のdeveloper.apple.comのサンプルベタ貼り。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-objc&quot; data-lang=&quot;objc&quot;&gt;&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;BOOL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addSkipBackupAttributeToItemAtURL:&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;NSURL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;URL&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([[&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;NSFileManager&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;defaultManager&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;fileExistsAtPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;URL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]);&lt;/span&gt;
    &lt;span class=&quot;bp&quot;&gt;NSError&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;BOOL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;success&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;URL&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;setResourceValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;NSNumber&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;numberWithBool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;YES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
                          &lt;span class=&quot;nl&quot;&gt;forKey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NSURLIsExcludedFromBackupKey&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;success&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;NSLog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;@&amp;quot;Error excluding %@ from backup %@&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;URL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lastPathComponent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;success&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;注意点&quot;&gt;注意点&lt;/h2&gt;

&lt;p&gt;addSkipBackupAttributeToItemAtURLメソッドの引数になっているNSURLにおいては、iOS 5.0.1 と 5.1 以降で渡す時のフォーマットが違う。&lt;/p&gt;

&lt;p&gt;こんな文字列があった時、&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;filePath = &amp;quot;/var/mobile/Applications/ランダム文字列/Documents/Settings.xml&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;iOS 5.0.1 &lt;code&gt;[NSURL URLWithString:filePath]&lt;/code&gt; で渡す&lt;/li&gt;
&lt;li&gt;iOS 5.1 以降 &lt;code&gt;[NSURL fileURLWithPath:filePath]&lt;/code&gt; で渡す&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;違いはこうなるみたい。スキームが付加される？(詳しく調べていない)&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;[NSURL URLWithString:filePath]
=&amp;gt; /var/mobile/Applications/ランダム文字列/Documents/Settings.xml
[NSURL fileURLWithPath:filePath]
=&amp;gt; file://localhost/var/mobile/Applications/ランダム文字列/Documents/Settings.xml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>Over-the-Airという形式でiOSアプリのインストールを試みるが失敗する場合がある</title>
   <link href="http://gosyujin.github.io/2013/06/05/ios-over-the-air"/>
   <updated>2013-06-05T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2013/06/05/ios-over-the-air</id>
   <content type="html">&lt;h2 id=&quot;あらすじ&quot;&gt;あらすじ&lt;/h2&gt;

&lt;p&gt;iOSアプリをサーバに置いてそこからインストールできるようにしたかった。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;結果、Over-the-Airという方式でインストール環境を作り、インストールできるようなったので手順のメモ&lt;/li&gt;
&lt;li&gt;と、なぜか失敗する端末もあるので、後半にその調査メモ(とりあえず、インストールはできたが、根本原因がわからん)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;インストール環境構築手順&quot;&gt;インストール環境構築手順&lt;/h2&gt;

&lt;h3 id=&quot;参考サイト&quot;&gt;参考サイト&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://mushikago.com/i/?p=2083&quot;&gt;iOS用アプリのAdHoc版を作る（Xcode） ｜ MUSHIKAGO APPS MEMO&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.livedoor.jp/arumisoft/archives/12055981.html&quot;&gt;iPadな日記 : AdHoc配布のやり方&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://d.hatena.ne.jp/zentoo/20121024/1351097392&quot;&gt;iOSアプリのAd-Hoc install (Over-the-Air, HTTP経由) がなんかよくわからんけど失敗する、という時はとにかくログを見るべしという話 - 愛と勇気と缶ビール&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;前提&quot;&gt;前提&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;iOS端末実機にXcode経由でアプリがビルドができる状態になっている事&lt;/li&gt;
&lt;li&gt;Webサーバ構築済で It works!! できる事&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;まだよくわかってないところもあるので、以下は必要ない手順、ファイルも多いかも。。。&lt;/p&gt;

&lt;p&gt;別の作業と混同している可能性も。&lt;/p&gt;

&lt;h3 id=&quot;前準備&quot;&gt;前準備&lt;/h3&gt;

&lt;h4 id=&quot;certificatesigningrequest-certsigningrequest-準備&quot;&gt;CertificateSigningRequest.certSigningRequest 準備&lt;/h4&gt;

&lt;p&gt;はじめに &lt;code&gt;CertificateSigningRequest.certSigningRequest&lt;/code&gt; をMac上で作成する&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;キーチェインアクセス&lt;/code&gt; を起動&lt;/li&gt;
&lt;li&gt;&lt;code&gt;キーチェインアクセス -&amp;gt; 証明書アシスタント -&amp;gt; 認証局に証明書を要求...&lt;/code&gt; を選択

&lt;ul&gt;
&lt;li&gt;メールアドレス: メアド入力&lt;/li&gt;
&lt;li&gt;通称: (なんでもいい？)&lt;/li&gt;
&lt;li&gt;要求の処理: &lt;code&gt;ディスクに保存&lt;/code&gt; にチェック、 &lt;code&gt;鍵ペア情報を指定&lt;/code&gt; にチェック&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;そのまま続ける(鍵ペア情報はデフォルトのまま)

&lt;ul&gt;
&lt;li&gt;鍵のサイズ: 2048ビット&lt;/li&gt;
&lt;li&gt;アルゴリズム: RSA&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CertificateSigningRequest.certSigningRequest&lt;/code&gt; が作成される(次で使う)&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;destribution用certificates-作成&quot;&gt;Destribution用Certificates 作成&lt;/h4&gt;

&lt;p&gt;実機にインストールできるという事は、Developer用のCertificateは作成済のはず。今回はDestribution用を作る。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.apple.com/&quot;&gt;Apple Developer&lt;/a&gt; から iOS Apps へ&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Certificates -&amp;gt; All(なんでもいい) -&amp;gt; +アイコン&lt;/code&gt; で新しくCertificatesを作る&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Select Type&lt;/code&gt; : &lt;code&gt;App Store and Ad Hoc&lt;/code&gt; を選択

&lt;ul&gt;
&lt;li&gt;1個作ったらそれ以上作れない？ 改めて見に行ったらdisable状態で選択できなかったので、以降は記憶で&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CertificateSigningRequest.certSigningRequest&lt;/code&gt; を選択&lt;/li&gt;
&lt;li&gt;作成されたDistribution Certificateをダウンロードしておく: &lt;code&gt;ios_distribution.cer&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;destribution用provisioning-profile-作成&quot;&gt;Destribution用Provisioning Profile 作成&lt;/h4&gt;

&lt;p&gt;実機にインストールできるという事は、Developer用の以下略。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;引き続き &lt;a href=&quot;https://developer.apple.com/&quot;&gt;Apple Developer&lt;/a&gt; の iOS Apps &lt;/li&gt;
&lt;li&gt;&lt;code&gt;Provisioning Profiles -&amp;gt; All(なんでもいい) -&amp;gt; +アイコン&lt;/code&gt; で新しくProvisioning Profileを作る&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Select Type&lt;/code&gt; : &lt;code&gt;Ad Hoc&lt;/code&gt; を選択&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Configure&lt;/code&gt; : &lt;code&gt;Select App ID&lt;/code&gt; App ID を選択するが、前提で使っている実機にインストールする時に使っているProvisioning Profileと同じ App ID を選択&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Configure&lt;/code&gt; : &lt;code&gt;Select certificates&lt;/code&gt; 上で作成した時のDestribution用のCertificateファイルがあるはずなのでそれを選ぶ&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Configure&lt;/code&gt; : &lt;code&gt;Select devices&lt;/code&gt; インストールしたいデバイスを選ぶ&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Generate&lt;/code&gt; : Profile Nameを入力&lt;/li&gt;
&lt;li&gt;作成されたDestribution Provisioning Profile をダウンロードしておく: &lt;code&gt;PROJECT_NAME.mobileprovision&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ここまでで作ったファイルは、なんかうまくいかない時に使う &lt;strong&gt;かも&lt;/strong&gt; 。&lt;/p&gt;

&lt;h3 id=&quot;アプリ側準備&quot;&gt;アプリ側準備&lt;/h3&gt;

&lt;h4 id=&quot;provisioning-profileインストール&quot;&gt;Provisioning Profileインストール&lt;/h4&gt;

&lt;p&gt;※ ここは、サーバに &lt;code&gt;PROJECT_NAME.mobileprovision&lt;/code&gt; を配備し、サーバ経由でインストールする方法もあるっぽい。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Xcodeからビルドしたいプロジェクトを起動する&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Organizer -&amp;gt; Devices -&amp;gt; LIBRARY -&amp;gt; Provisioning Profiles&lt;/code&gt; に上で作った &lt;code&gt;PROJECT_NAME&lt;/code&gt; のProvisioning Profileがある事を確認する

&lt;ul&gt;
&lt;li&gt;また、status が &lt;code&gt;Valid profile&lt;/code&gt; になっている事を確認する&lt;/li&gt;
&lt;li&gt;キーチェインへの登録とかがうまくいってないと、statusが 〜not found〜 みたいになる場合がある&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;インストールしたい端末と Xcode を接続する&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Organizer -&amp;gt; Devices -&amp;gt; 接続した端末 -&amp;gt; Provisioning Profiles&lt;/code&gt; に &lt;code&gt;PROJECT_NAME&lt;/code&gt; がある事を確認する

&lt;ul&gt;
&lt;li&gt;なければ、LIBRARYのProvisioning Profileからドラッグ＆ドロップしたりして持ってくる&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;ipaファイル作成&quot;&gt;ipaファイル作成&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;引き続きXcode&lt;/li&gt;
&lt;li&gt;Organizerからプロジェクトに戻りBuild Settingsへ

&lt;ul&gt;
&lt;li&gt;Code Signing Identity を &lt;code&gt;iPhone Distribution:&lt;/code&gt; へ変更(必要？)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Product -&amp;gt; Archive&lt;/code&gt; を選択&lt;/li&gt;
&lt;li&gt;アーカイブ化が成功したら &lt;code&gt;Organizer -&amp;gt; Archives&lt;/code&gt; 画面が起動する

&lt;ul&gt;
&lt;li&gt;作成されたアーカイブを選択し &lt;code&gt;Distribute...&lt;/code&gt; 選択&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Select the method of distribution&lt;/code&gt; : &lt;code&gt;Save for Enterprise or Ad-Hoc Deployment&lt;/code&gt; 選択&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Choose an Identity to sign with&lt;/code&gt; : https://developer.apple.com で作成した iOS Distribution が存在するはずなので、それを選択&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Save as&lt;/code&gt; : 保存場所とファイル名を選択、 &lt;code&gt;Save for Enterprise Distribution&lt;/code&gt; にチェックを入れる&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Application URL&lt;/code&gt; : ipaファイルを配備する時のフルパスを入力する

&lt;ul&gt;
&lt;li&gt;例: IPが &lt;code&gt;xx.xx.xx.xx&lt;/code&gt; であるサーバの &lt;code&gt;DOCUMENT_ROOT/ipa/helloworld.ipa&lt;/code&gt; に置くとしたら &lt;code&gt;http://xx.xx.xx.xx/ipa/helloworld.ipa&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Title以下は適当で(アイコンの設定とかなので、とりあえずインストールしたいだけの場合はTitle以外空白でもいい)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;helloworld.ipa&lt;/code&gt; と &lt;code&gt;helloworld.plist&lt;/code&gt; が作成される&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;ダウンロードページ準備&quot;&gt;ダウンロードページ準備&lt;/h3&gt;

&lt;p&gt;※ 作らなくても、Safari等から決められたUrlを直叩きすればインストールできる。…が、長くて直叩きはめんどい。&lt;/p&gt;

&lt;p&gt;index.htmlとして、以下のようなリンクを持つページを作成する。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;(略)
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;itms-services://?action=download-manifest&amp;amp;url=PLIST_FULL_PATH&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Download !!&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;PLIST_FULL_PATH&lt;/code&gt; : plistファイルを配備する時のフルパスを入力する(ipaファイルと同じ所に置く)

&lt;ul&gt;
&lt;li&gt;例: IPが &lt;code&gt;xx.xx.xx.xx&lt;/code&gt; であるサーバの &lt;code&gt;DOCUMENT_ROOT/ipa/helloworld.plist&lt;/code&gt; に置くとしたら &lt;code&gt;http://xx.xx.xx.xx/ipa/helloworld.plist&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;サーバ配備&quot;&gt;サーバ配備&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;サーバに以下のファイルを配備する。

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;helloworld.ipa&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;helloworld.plist&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;index.html&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; cp index.html DOCUMENT_ROOT/
&lt;span class=&quot;go&quot;&gt;  $ cp helloworld.ipa DOCUMENT_ROOT/ipa/&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  $ chmod 755 DOCUMENT_ROOT/ipa/helloworld.ipa &lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  $ cp helloworld.plist DOCUMENT_ROOT/ipa/&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  $ chmod 755 DOCUMENT_ROOT/ipa/helloworld.plist&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;ダウンロードするのでアクセス権限を変更しておく。&lt;/p&gt;

&lt;h3 id=&quot;アクセス、インストール&quot;&gt;アクセス、インストール&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;端末から http://xx.xx.xx.xx/ へアクセスし、indexのリンクを叩く&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;quot;xx.xx.xx.xx&amp;quot;により&amp;quot;PROJECT&amp;quot;がインストールされます&lt;/code&gt; と表示されるので、インストールを選択&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;うまくいけば&lt;/strong&gt; インストール成功&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;うまくいかない場合&quot;&gt;うまくいかない場合&lt;/h2&gt;

&lt;p&gt;ここからが本題。&lt;/p&gt;

&lt;p&gt;大体うまくいくんだけど、一部うまく場合がある。なんでかがわからない。&lt;/p&gt;

&lt;h3 id=&quot;パターン1&quot;&gt;パターン1&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;iOS Deployment Target&lt;/code&gt; のバージョンより低いバージョンの端末でインストールしようとした場合、エラーダイアログとともに失敗する。&lt;/p&gt;

&lt;p&gt;これは凡ミスなので、TargetのiOSバージョンを下げてやればよい。&lt;/p&gt;

&lt;h3 id=&quot;パターン2&quot;&gt;パターン2&lt;/h3&gt;

&lt;p&gt;未遭遇だが、Provisioning Profileが正常にインストールされていない場合などもこけるはず。&lt;/p&gt;

&lt;p&gt;設定アプリの一般からプロファイルを確認。&lt;/p&gt;

&lt;h3 id=&quot;パターン3-未解決&quot;&gt;パターン3(未解決)&lt;/h3&gt;

&lt;p&gt;これで困った。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Safariにて、index.htmlに記載されたリンクを叩きインストール開始&lt;/li&gt;
&lt;li&gt;端末の画面がSafariからホーム画面に遷移&lt;/li&gt;
&lt;li&gt;アイコンが現れ、 &lt;strong&gt;待機中...&lt;/strong&gt; と表示される&lt;/li&gt;
&lt;li&gt;そこで止まる！

&lt;ul&gt;
&lt;li&gt;エラーなし、警告なしでずっと待機中のまま&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;iOSのバージョンとかにもよるのかと思ったが、違うっぽい。インストールできてる端末もあるし、Provisioning Profileも入ってるから端末の問題と思われる。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;iOS 5.0.1: インストール成功した&lt;/li&gt;
&lt;li&gt;iOS 5.1.1: インストール成功した&lt;/li&gt;
&lt;li&gt;iOS 6.0.1: &lt;strong&gt;このエラーでインストールできなかった&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;↑とは別のiOS 6.0.1: &lt;strong&gt;インストール成功した&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;内部のログとか見れないかと調べていると、2通りの方法で調べられた。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Xcodeの &lt;code&gt;Organizer -&amp;gt; 端末 -&amp;gt; Console&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Appleから &lt;code&gt;iPhone 構成ユーティリティ&lt;/code&gt; アプリをダウンロード&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;どっちも端末とMacを接続すれば使える。&lt;/p&gt;

&lt;p&gt;…で、確認してみたら以下のようなログが延々と出ていた。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;go&quot;&gt;May xx xx:xx:xx iOS端末名 com.apple.launchd[1] (com.apple.ubd) &amp;lt;Notice&amp;gt;: (com.apple.ubd) Throttling respawn: Will start in 1 seconds&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;May xx xx:xx:xx iOS端末名 com.apple.launchd[1] (com.apple.ubd) &amp;lt;Notice&amp;gt;: (com.apple.ubd) Throttling respawn: Will start in 1 seconds&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;May xx xx:xx:xx iOS端末名 com.apple.launchd[1] (com.apple.ubd) &amp;lt;Notice&amp;gt;: (com.apple.ubd) Throttling respawn: Will start in 1 seconds&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;May xx xx:xx:xx iOS端末名 com.apple.launchd[1] (com.apple.ubd) &amp;lt;Notice&amp;gt;: (com.apple.ubd) Throttling respawn: Will start in 1 seconds&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;May xx xx:xx:xx iOS端末名 com.apple.launchd[1] (com.apple.ubd) &amp;lt;Notice&amp;gt;: (com.apple.ubd) Throttling respawn: Will start in 1 seconds&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;(略)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;うーん、なんだろうこれ。&lt;/p&gt;

&lt;p&gt;とりあえずエラーメッセージでググってみた。&lt;/p&gt;

&lt;p&gt;launchdはプロセスの起動を制御するデーモンプロセス。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://yawarakakajiya.blogspot.jp/2011/01/ios-launchd.html&quot;&gt;柔らか鍛冶屋: iOS: launchd&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.itmedia.co.jp/enterprise/articles/0704/26/news009_2.html&quot;&gt;Undocumented Mac OS X：第1回　initを置き換えるlaunchd【前編】 (2/3) - ITmedia エンタープライズ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;こやつがubdを1秒毎に呼ぼうとしてる？&lt;/p&gt;

&lt;p&gt;ubdとはなんぞや…。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.macinside.info/process.php?name=ubd&quot;&gt;What is &amp;quot;ubd&amp;quot;? — Process safety information — MacInside (Beta)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&amp;quot;ubd&amp;quot; is the Ubiquity Server Process.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;何者なんだ…。OSXの方でなにやらエラーログを出しまくるという現象あり。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://discussionsjapan.apple.com/thread/10106396?start=15&amp;amp;tstart=0&quot;&gt;Ubiquityの大量エラーログ: Apple サポートコミュニティ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://discussionsjapan.apple.com/message/100633645#100633645&quot;&gt;Mobile Documentsフォルダが勝手に書き換えられる: Apple サポートコミュニティ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;iCloud関係なの？確かにログインはした事あるけど、今はログアウト済なんだよなあ。&lt;/p&gt;

&lt;p&gt;また、iPhone5のバッテリー持ちが4よりもひどいという所ではまったく同じログを吐いている人も。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://discussions.apple.com/message/20379541#20379541&quot;&gt;iPhone 5 battery life is way worse than...: Apple Support Communities&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ただし、決定打ではない…。&lt;/p&gt;

&lt;p&gt;困り果てているところへこんな情報。(OSXっぽいけど)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.insanelymac.com/forum/topic/281143-comappleubd-problem/&quot;&gt;com.apple.ubd problem - OSx86 10.8 (Mountain Lion) - InsanelyMac Forum&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;This message would repeat in the logs every 10 seconds. 
And would continue to repeat even after the offending application had been force quit. 
A quick search for com.apple.ubd shows it is the iCloud synchronization daemon.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;アプリケーションをあらかたkillしてみる？

&lt;ul&gt;
&lt;li&gt;念のため端末自体も再起動してみる&lt;/li&gt;
&lt;li&gt;再起動後、ダメ元でもう一度インストールしてみる

&lt;ul&gt;
&lt;li&gt;インストールされた&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;なんで！？&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;しかも&quot;&gt;しかも&lt;/h2&gt;

&lt;p&gt;正常にインストールできるようになってからも、インストール失敗した端末だけは依然として&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;go&quot;&gt;May xx xx:xx:xx iOS端末名 com.apple.launchd[1] (com.apple.ubd) &amp;lt;Notice&amp;gt;: (com.apple.ubd) Throttling respawn: Will start in 1 seconds&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;ログは出続けている…。&lt;/p&gt;

&lt;p&gt;インストールできない問題と、このエラーメッセージは関係ないの！？&lt;/p&gt;

&lt;p&gt;数ある内の一台だけ…なぜ。 &lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Jekyll@GitHub Pagesの運用形態を変えたのでAnalyticsの設定が効かなくなっていた</title>
   <link href="http://gosyujin.github.io/2013/05/27/jekyll-githubpages-analytics-setting"/>
   <updated>2013-05-27T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2013/05/27/jekyll-githubpages-analytics-setting</id>
   <content type="html">&lt;h2 id=&quot;あらすじ&quot;&gt;あらすじ&lt;/h2&gt;

&lt;p&gt;Jekyllで指定していたGoogle Analyticsの設定が効かなくなっていた。&lt;/p&gt;

&lt;p&gt;他のGitHub Pages@Jekyllでは正しくGoogle Analyticsが動いているのに…。&lt;/p&gt;

&lt;h2 id=&quot;結論&quot;&gt;結論&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;前回 GitHub Pages の運用形態を変えていた ... &lt;a href=&quot;http://gosyujin.github.io/2013/05/21/jekyll-plugin-githubpages/&quot;&gt;GitHub PagesでJekyllプラグインを使えるようにするには…&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;変更前: &lt;code&gt;master&lt;/code&gt; ブランチにコンテンツを配備し、GitHubにデプロイしてもらう&lt;/li&gt;
&lt;li&gt;変更後: &lt;code&gt;source&lt;/code&gt; ブランチを作成しコンテンツを移動。ローカルでビルドした静的ファイルを &lt;code&gt;master&lt;/code&gt; ブランチにpush&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;それによる &lt;strong&gt;オプション指定の凡ミス&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;おぉ…。&lt;/p&gt;

&lt;h2 id=&quot;参考サイト&quot;&gt;参考サイト&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://tokkono.cute.coocan.jp/blog/slow/index.php/programming/making-blog-with-jekyll/&quot;&gt;WordPressよりjekyllで本格的ブログを作りたくなる、かもしれないまとめ ｜ ゆっくりと…&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://melborne.github.io/2012/05/13/first-step-of-jekyll/&quot;&gt;30分のチュートリアルでJekyllを理解する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://css.studiomohawk.com/jekyll/2011/06/11/jekyll/&quot;&gt;Jekyll ｜ CSS Radar ｜ Little Books For Front End Developers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Shopify/liquid/wiki/Liquid-for-Designers&quot;&gt;Liquid for Designers · Shopify/liquid Wiki · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/plusjade/jekyll-bootstrap&quot;&gt;plusjade/jekyll-bootstrap · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;ハマり&quot;&gt;ハマり&lt;/h2&gt;

&lt;h3 id=&quot;前提-github-pagesの運用形態&quot;&gt;前提: GitHub Pagesの運用形態&lt;/h3&gt;

&lt;p&gt;指定のブランチに以下のようなファイル群を置いておく事で、GitHub Pagesができる。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Jekyllのコンテンツ

&lt;ul&gt;
&lt;li&gt;Jekyllに必要なファイルをpushしておけば、GitHubがよろしくデプロイしておいてくれる&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;静的ファイル

&lt;ul&gt;
&lt;li&gt;そのまま表示される&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Jekyllのコンテンツをpushして、後はおまかせするだけの運用は便利だけど、 &lt;strong&gt;自作プラグインが動かない&lt;/strong&gt; という問題がある。&lt;/p&gt;

&lt;p&gt;プラグインを動作させるためには、以下のように、あらかじめローカルでビルドした静的ファイルをpushしなければならない。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;master&lt;/code&gt; 以外の別ブランチ(仮に &lt;code&gt;source&lt;/code&gt; ブランチ)を作成し、そこでJekyllのコンテンツを管理する&lt;/li&gt;
&lt;li&gt;ローカルの &lt;code&gt;source&lt;/code&gt; ブランチで編集を終えたら、 &lt;code&gt;jekyll build&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;生成された成果物を &lt;code&gt;master&lt;/code&gt; ブランチにpushする

&lt;ul&gt;
&lt;li&gt;ローカルでbuildしているので、プラグインが動作した状態で静的ファイルが出来ている&lt;/li&gt;
&lt;li&gt;こんな感じの手法をとっているのがOctopress&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;この情報をもとに、Rakefileにdeployコマンドを作った。&lt;/p&gt;

&lt;p&gt;https://github.com/gosyujin/gosyujin.github.com/blob/source/Rakefile&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# Usage: rake deploy&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;desc&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Begin a push static file to GitHub&amp;quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;task&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:deploy&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;sh&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;jekyll build&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;! Push to source branch of GitHub&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;sh&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;git push origin source:source&amp;quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;略&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;analyticsの設定はどう読み込まれているのか&quot;&gt;analyticsの設定はどう読み込まれているのか&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;_includes/JB/analytics&lt;/code&gt; を見ると、analyticsを読み込むには以下の条件を満たす必要がある。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;safe&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;JB&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;analytics&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;provider&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;JB&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;analytics&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;%}&lt;/span&gt;

&lt;span class=&quot;sx&quot;&gt;{% case site.JB.analytics.provider %}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;when&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;%}&lt;/span&gt;
&lt;span class=&quot;sx&quot;&gt;  {% include JB/analytics-providers/google %}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;略&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;大事なのは、 &lt;strong&gt;site.safe がtrue&lt;/strong&gt; である事。&lt;/p&gt;

&lt;p&gt;このsafeオプションがtrueになっている条件を見落としてた。trueじゃないとanalytics読み込みはなされない。&lt;/p&gt;

&lt;p&gt;しかし…。&lt;/p&gt;

&lt;p&gt;※ safeはデフォルトではfalse&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; bundle &lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;jekyll --help
&lt;span class=&quot;go&quot;&gt;    jekyll&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;(略)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    --safe &lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        Safe mode (defaults to false)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;※ https://help.github.com/articles/pages-don-t-build-unable-to-run-jekyll 本家のhelpでも &lt;code&gt;--safe&lt;/code&gt; オプションよろしく！とのこと。&lt;/p&gt;

&lt;p&gt;GitHubがJekyllのコンテンツをデプロイする際は、必ず &lt;code&gt;--safe&lt;/code&gt; がつけられる。(そのため、自作プラグインが動かなくなる)&lt;/p&gt;

&lt;p&gt;しかし、safeがfalseじゃないと自作のプラグインを動かせないので、 &lt;code&gt;_includes/JB/analytics&lt;/code&gt; から &lt;code&gt;if site.safe&lt;/code&gt; の条件を削除する事で対応。&lt;/p&gt;

&lt;p&gt;ローカルで埋め込んだ後で、pushすればいい。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;以下、どこが原因かわからなかったので、Jekyll Bootstrapのデフォルトファイルを読んでいった結果。&lt;/p&gt;

&lt;h2 id=&quot;蛇足&quot;&gt;蛇足&lt;/h2&gt;

&lt;h3 id=&quot;ディレクトリ構成&quot;&gt;ディレクトリ構成&lt;/h3&gt;

&lt;p&gt;Jekyll Bootstrapを落としてくるとファイル構成はこう。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;404.html&lt;/li&gt;
&lt;li&gt;README.md&lt;/li&gt;
&lt;li&gt;Rakefile&lt;/li&gt;
&lt;li&gt;_config.yml&lt;/li&gt;
&lt;li&gt;_includes/&lt;/li&gt;
&lt;li&gt;_layouts/&lt;/li&gt;
&lt;li&gt;_plugins/&lt;/li&gt;
&lt;li&gt;_posts/&lt;/li&gt;
&lt;li&gt;_site/&lt;/li&gt;
&lt;li&gt;archive.html&lt;/li&gt;
&lt;li&gt;assets/&lt;/li&gt;
&lt;li&gt;atom.xml&lt;/li&gt;
&lt;li&gt;categories.html&lt;/li&gt;
&lt;li&gt;changelog.md&lt;/li&gt;
&lt;li&gt;index.md&lt;/li&gt;
&lt;li&gt;pages.html&lt;/li&gt;
&lt;li&gt;rss.xml&lt;/li&gt;
&lt;li&gt;sitemap.txt&lt;/li&gt;
&lt;li&gt;tags.html&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;その中の &lt;code&gt;_layouts&lt;/code&gt; ディレクトリの中にテンプレート的なファイルがある。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;_layouts/

&lt;ul&gt;
&lt;li&gt;default.html&lt;/li&gt;
&lt;li&gt;page.html&lt;/li&gt;
&lt;li&gt;post.html&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;htmlを見てみると…。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cat&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_layouts&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;html&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;---&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;theme&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;twitter&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;---&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;JB&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setup&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;%}&lt;/span&gt;
&lt;span class=&quot;sx&quot;&gt;{% include themes/twitter/default.html %}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cat&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_layouts&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;html&lt;/span&gt; 
&lt;span class=&quot;o&quot;&gt;---&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;default&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;---&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;JB&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setup&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;%}&lt;/span&gt;
&lt;span class=&quot;sx&quot;&gt;{% include themes/twitter/page.html %}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cat&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_layouts&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;html&lt;/span&gt; 
&lt;span class=&quot;o&quot;&gt;---&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;default&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;---&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;JB&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setup&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;%}&lt;/span&gt;
&lt;span class=&quot;sx&quot;&gt;{% include themes/twitter/post.html %}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;こんな感じ。はじめのハイフンで囲まれたエリアはyaml front matter？ http://jekyllrb.com/docs/frontmatter/&lt;/p&gt;

&lt;p&gt;続いて、&lt;code&gt;JB/setup&lt;/code&gt; と &lt;code&gt;themes/twitter/default.html&lt;/code&gt; &lt;code&gt;page.html&lt;/code&gt; &lt;code&gt;post.html&lt;/code&gt; をインクルードしている。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;layout: default&lt;/code&gt; と書かれている page.html と post.html は default.html を親にしている事がわかる。&lt;/p&gt;

&lt;h3 id=&quot;include-jb-setup&quot;&gt;include JB/setup&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;layout/default.html 一つ目の include である &lt;code&gt;JB/setup&lt;/code&gt; を見てみる。 include なだけあって、 `&lt;/em&gt;includes` ディレクトリにある。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;capture&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jbcache&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;%}&lt;/span&gt;
&lt;span class=&quot;sx&quot;&gt;  &amp;lt;!--&lt;/span&gt;
&lt;span class=&quot;sx&quot;&gt;  - Dynamically set liquid variables for working with URLs/paths&lt;/span&gt;
&lt;span class=&quot;sx&quot;&gt;  --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;sx&quot;&gt;  {% if site.JB.setup.provider == %}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;custom&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setup&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;%}&lt;/span&gt;
&lt;span class=&quot;sx&quot;&gt;  {% else %}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;safe&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;JB&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BASE_PATH&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;JB&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BASE_PATH&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;#39;&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;%}&lt;/span&gt;
&lt;span class=&quot;sx&quot;&gt;      {% assign BASE_PATH = site.JB.BASE_PATH %}&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;assign&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;HOME_PATH&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;JB&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BASE_PATH&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;%}&lt;/span&gt;
&lt;span class=&quot;sx&quot;&gt;    {% else %}&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;assign&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;BASE_PATH&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;%}&lt;/span&gt;
&lt;span class=&quot;sx&quot;&gt;      {% assign HOME_PATH = %}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;endif&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;%}&lt;/span&gt;

&lt;span class=&quot;sx&quot;&gt;    {% if site.JB.ASSET_PATH %}&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;assign&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ASSET_PATH&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;JB&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ASSET_PATH&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;%}&lt;/span&gt;
&lt;span class=&quot;sx&quot;&gt;    {% else %}&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;capture&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ASSET_PATH&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;%}/assets/themes/{% endcapture %}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;endif&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;%}&lt;/span&gt;
&lt;span class=&quot;sx&quot;&gt;  {% endif %}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;endcapture&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;%}{% assign jbcache = nil %}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;site.JB.hogehogeの設定を確認して、パス設定などしているよう。&lt;/p&gt;

&lt;p&gt;この &lt;code&gt;site.JB.hogehoge&lt;/code&gt; っていうのは &lt;code&gt;_config.yml&lt;/code&gt; に定義しているパラメータだよね。こんな感じで定義されている。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;JB&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;version&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;BASE_PATH&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;ASSET_PATH&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;archive_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/archive.html&lt;/span&gt;
&lt;span class=&quot;sr&quot;&gt;  categories_path : /&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;categories&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;html&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;tags_path&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/tags.html&lt;/span&gt;
&lt;span class=&quot;sr&quot;&gt;  atom_path : /&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;atom&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xml&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;rss_path&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/rss.xml&lt;/span&gt;
&lt;span class=&quot;sr&quot;&gt;  (略)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;どんな値になっているのか確認のため、 &lt;code&gt;JB/setup&lt;/code&gt; の先頭に以下のような出力を足してみる。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;go&quot;&gt;safe {{site.safe}} &amp;lt;br&amp;gt;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;site.JB {{site.JB}} &amp;lt;br&amp;gt;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;provider {{site.JB.setup.provider}} &amp;lt;br&amp;gt;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;base {{site.JB.BASE_PATH}} &amp;lt;br&amp;gt;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;asset {{site.JB.ASSET_PATH}} &amp;lt;br&amp;gt;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;page name {{ page.theme.name }}&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;{% capture jbcache %}&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;略&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;で、実行結果。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;go&quot;&gt;safe false &lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;site.JB {&amp;quot;version&amp;quot;=&amp;gt;&amp;quot;0.3.0&amp;quot;, &amp;quot;BASE_PATH&amp;quot;=&amp;gt;false, &amp;quot;ASSET_PATH&amp;quot;=&amp;gt;false, &amp;quot;archive_path&amp;quot;=&amp;gt;&amp;quot;/archive.html&amp;quot;, &amp;quot;categories_path&amp;quot;=&amp;gt;&amp;quot;/categories.html&amp;quot;, &amp;quot;tags_path&amp;quot;=&amp;gt;&amp;quot;/tags.html&amp;quot;, &amp;quot;atom_path&amp;quot;=&amp;gt;&amp;quot;/atom.xml&amp;quot;, &amp;quot;rss_path&amp;quot;=&amp;gt;&amp;quot;/rss.xml&amp;quot;, &amp;quot;comments&amp;quot;=&amp;gt;{&amp;quot;provider&amp;quot;=&amp;gt;&amp;quot;disqus&amp;quot;, &amp;quot;disqus&amp;quot;=&amp;gt;{&amp;quot;short_name&amp;quot;=&amp;gt;&amp;quot;jekyllbootstrap&amp;quot;}, &amp;quot;livefyre&amp;quot;=&amp;gt;{&amp;quot;site_id&amp;quot;=&amp;gt;123}, &amp;quot;intensedebate&amp;quot;=&amp;gt;{&amp;quot;account&amp;quot;=&amp;gt;&amp;quot;123abc&amp;quot;}, &amp;quot;facebook&amp;quot;=&amp;gt;{&amp;quot;appid&amp;quot;=&amp;gt;123, &amp;quot;num_posts&amp;quot;=&amp;gt;5, &amp;quot;width&amp;quot;=&amp;gt;580, &amp;quot;colorscheme&amp;quot;=&amp;gt;&amp;quot;light&amp;quot;}}, &amp;quot;analytics&amp;quot;=&amp;gt;{&amp;quot;provider&amp;quot;=&amp;gt;&amp;quot;google&amp;quot;, &amp;quot;google&amp;quot;=&amp;gt;{&amp;quot;tracking_id&amp;quot;=&amp;gt;&amp;quot;UA-123-12&amp;quot;}, &amp;quot;getclicky&amp;quot;=&amp;gt;{&amp;quot;site_id&amp;quot;=&amp;gt;nil}, &amp;quot;mixpanel&amp;quot;=&amp;gt;{&amp;quot;token&amp;quot;=&amp;gt;&amp;quot;_MIXPANEL_TOKEN_&amp;quot;}}, &amp;quot;sharing&amp;quot;=&amp;gt;{&amp;quot;provider&amp;quot;=&amp;gt;false}} &lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;provider &lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;base false &lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;asset false &lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;page name twitter&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;なるほど。実行結果的にはifの最後を通っているようなので、 ASSET_PATH の設定をしている事になる。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;ASSET_PATH = /assets/themes/twitter&lt;/code&gt; となった。&lt;/p&gt;

&lt;h3 id=&quot;include-themes-twitter-default-html&quot;&gt;include themes/twitter/default.html&lt;/h3&gt;

&lt;p&gt;_layouts/default.html の二つ目の include。一部を除き、htmlがつらつらと…。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;lang=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;en&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;utf-8&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;{{ page.title }}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
    {% if page.description %}&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;description&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;{{ page.description }}&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;{% endif %}
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;author&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;kk_Ataka&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Enable responsive viewport --&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;viewport&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;width=device-width, initial-scale=1.0&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
(略)
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;container-narrow&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

      &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;content&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        {{ content }}
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;hr&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;動的に表示させたい部分はliquidで埋め込んでいる。&lt;code&gt;{{ }}&lt;/code&gt; とか &lt;code&gt;{% %}&lt;/code&gt; で始まる部分がそう。&lt;/p&gt;

&lt;p&gt;で、 &lt;code&gt;content&lt;/code&gt; 部分に子？の内容が埋め込まれるのか。&lt;/p&gt;

&lt;h3 id=&quot;まとめ&quot;&gt;まとめ&lt;/h3&gt;

&lt;p&gt;rake post title=hoge として作った _posts/2013-xx-yy-hoge.md を表示するためには、こんな風に埋め込みしていっている？&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/images/2013-05-27/jekyll-page.png&quot; alt=&quot;jekyll-page&quot;&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>記事の目次を出力するJekyllプラグインの改良</title>
   <link href="http://gosyujin.github.io/2013/05/23/jekyll-liquid-plugin2"/>
   <updated>2013-05-23T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2013/05/23/jekyll-liquid-plugin2</id>
   <content type="html">&lt;h2 id=&quot;前回までのあらすじ&quot;&gt;前回までのあらすじ&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://gosyujin.github.io/2012/10/10/jekyll-liquid-plugin/&quot;&gt;Jekyll(Liquid)で記事の目次を出力するプラグインを作ってみた&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;これの続き。昔の話すぎて、忘れないようにメモ。&lt;/p&gt;

&lt;h3 id=&quot;前回の疑問&quot;&gt;前回の疑問&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;…あれ？　別の環境でやったら hタグに section , section-1 , section-2 … って連番が振られてる！？　なんで！&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;これは原因がわかった。 使っているMarkdownパーサが違うだけだった。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;rdiscount&lt;/code&gt; … idなし&lt;/li&gt;
&lt;li&gt;&lt;code&gt;kramdown&lt;/code&gt; … idにsection-xが振られる&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;今回やったこと&quot;&gt;今回やったこと&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;kramdownで動くようにkramdownいじったりtree_list.rbいじったり&lt;/li&gt;
&lt;li&gt;プラスバグ修正&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;目次から記事へのリンク&lt;/p&gt;

&lt;p&gt;(略) めんどいので自動で振ってほしい&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;kramdownのidの振り方&quot;&gt;kramdownのidの振り方&lt;/h3&gt;

&lt;p&gt;kramdownがhタグにidを振っている方法を調べてみると、&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;半角文字はそれが &lt;code&gt;そのままid&lt;/code&gt; になる&lt;/li&gt;
&lt;li&gt;スペースは &lt;code&gt;ハイフン&lt;/code&gt; になる&lt;/li&gt;
&lt;li&gt;全角文字は &lt;code&gt;なくなる&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;全部全角文字だった場合 &lt;code&gt;section&lt;/code&gt; と振られる&lt;/li&gt;
&lt;li&gt;2度目以降のsectionは順に &lt;code&gt;section-x&lt;/code&gt; と振られる&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;こんな感じになっているっぽい。以下は一例。&lt;/p&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;見出しの内容&lt;/th&gt;
&lt;th&gt;hタグのid&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;ほげいち&lt;/td&gt;
&lt;td&gt;&amp;lt;h2 id=&amp;quot;section&amp;quot;&amp;gt;ほげ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ほげに&lt;/td&gt;
&lt;td&gt;&amp;lt;h2 id=&amp;quot;section-2&amp;quot;&amp;gt;ほげに&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ほげさん&lt;/td&gt;
&lt;td&gt;&amp;lt;h2 id=&amp;quot;section-3&amp;quot;&amp;gt;ほげさん&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;hoge&lt;/td&gt;
&lt;td&gt;&amp;lt;h2 id=&amp;quot;hoge&amp;quot;&amp;gt;hoge&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;piyoとは&lt;/td&gt;
&lt;td&gt;&amp;lt;h2 id=&amp;quot;piyo&amp;quot;&amp;gt;piyoとは&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ほげよん&lt;/td&gt;
&lt;td&gt;&amp;lt;h2 id=&amp;quot;section-4&amp;quot;&amp;gt;ほげよん&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;h4 id=&quot;ソース&quot;&gt;ソース&lt;/h4&gt;

&lt;p&gt;実際にソースを見てみよう。 &lt;code&gt;kramdown-0.14.0\lib\kramdown\converter\base.rb&lt;/code&gt; に書いてあった。&lt;del&gt;めんどくさいので&lt;/del&gt; 今回は全ての見出しがsectionとなってほしいので、以下の行をコメントアウトした。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# Generate an unique alpha-numeric ID from the the string +str+ for use as a header ID.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# Uses the option +auto_id_prefix+: the value of this option is prepended to every generated&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# ID.&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;generate_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;gen_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gsub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/^[^a-zA-Z]+/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;         &lt;span class=&quot;c1&quot;&gt;# コメントアウト&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;gen_id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tr!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;^a-zA-Z0-9 -&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;               &lt;span class=&quot;c1&quot;&gt;# コメントアウト&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;gen_id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tr!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;                         &lt;span class=&quot;c1&quot;&gt;# コメントアウト&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;gen_id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;downcase!&lt;/span&gt;                             &lt;span class=&quot;c1&quot;&gt;# コメントアウト&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;gen_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;section&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gen_id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;     &lt;span class=&quot;c1&quot;&gt;# if 以降をコメントアウト&lt;/span&gt;
  &lt;span class=&quot;vi&quot;&gt;@used_ids&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@used_ids&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;has_key?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gen_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;gen_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;-&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@used_ids&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gen_id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_s&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@used_ids&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gen_id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;vi&quot;&gt;@options&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:auto_id_prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gen_id&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;これで半角だろうが全部section-xと振られるようになった。&lt;/p&gt;

&lt;p&gt;…が、よく考えたら自分のプラグインでこれと同じ処理をしたら良かったんじゃ…。&lt;/p&gt;

&lt;h3 id=&quot;tree_list-rbのバグ修正&quot;&gt;tree_list.rbのバグ修正&lt;/h3&gt;

&lt;p&gt;目次に貼ったリンクが正しい見出しに飛んでいるか確認してたら、一個バグ見つけた。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;引用部分の見出しにもidが振られるが、tree_listでは文頭にある見出ししか集めてなかった

&lt;ul&gt;
&lt;li&gt;でも、正直引用部分の見出しは目次にはいらない…&lt;/li&gt;
&lt;li&gt;集めるだけ集めて捨てるか… &lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>GitHub PagesでJekyllプラグインを使えるようにするには…</title>
   <link href="http://gosyujin.github.io/2013/05/21/jekyll-plugin-githubpages"/>
   <updated>2013-05-21T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2013/05/21/jekyll-plugin-githubpages</id>
   <content type="html">&lt;h2 id=&quot;あらすじ&quot;&gt;あらすじ&lt;/h2&gt;

&lt;p&gt;Jekyll＠GitHub Pagesの場合、Liquidで(自分で)作ったプラグインは使えないという事が判明した。(ローカルで起動した場合/safeモードじゃない場合は関係ない)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://webtech-walker.com/archive/2012/09/fired-myblog.html&quot;&gt;俺の最強ブログシステムも火を噴いてたぜ - Webtech Walker&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;これを回避するには&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;GitHub Pages をやめる(レンタルサーバを借りてデプロイ)&lt;/li&gt;
&lt;li&gt;GitHub Pages に &lt;strong&gt;静的ファイル&lt;/strong&gt; としてhtml自体をデプロイ&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;する方法がありそう。今回はGitHub Pagesを使い続けたいので後者で頑張ってみる。&lt;/p&gt;

&lt;h2 id=&quot;参考サイト&quot;&gt;参考サイト&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://help.github.com/categories/20/articles&quot;&gt;github:help&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;そもそもgithub-pagesとはなんぞや&quot;&gt;そもそもGitHub Pagesとはなんぞや&lt;/h2&gt;

&lt;blockquote&gt;
&lt;h3 id=&quot;user-amp-organization-pages&quot;&gt;User &amp;amp; Organization Pages&lt;/h3&gt;

&lt;p&gt;User &amp;amp; Organization Pages はPagesファイル専用のスペシャルリポジトリとして生きている。このリポジトリはaccount nameを使用する。例えば、defunkt/defunkt.github.com&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;このリポジトリは &lt;code&gt;username/username.github.com&lt;/code&gt; というnaming schemeを使わなければならない&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;master&lt;/code&gt; ブランチからのコンテンツはビルドとパブリッシュに使用される&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;...&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;project-pages&quot;&gt;Project Pages&lt;/h3&gt;

&lt;p&gt;Project Pages は同じリポジトリからプロジェクトとして維持される。これらのページはUser PageとOrg Pagesほとんど正確に同じである。いくつかのわずかな違いはある。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;gh-pages&lt;/code&gt; ブランチはビルドとパブリッシュに使用される&lt;/li&gt;
&lt;li&gt;カスタムドメインを使っていないなら、Project PagesはUser Pageのサブパスの下で使われる。 &lt;code&gt;username.github.com/projectname&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;ということは&quot;&gt;ということは&lt;/h3&gt;

&lt;p&gt;まず、GitHub Pagesは2種類ある。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;ユーザ、組織用&lt;/strong&gt; のページ

&lt;ul&gt;
&lt;li&gt;己のページ&lt;/li&gt;
&lt;li&gt;&lt;code&gt;USERNAME.github.com&lt;/code&gt; という特別なリポジトリを作れば &lt;code&gt;http://USERNAME.github.com&lt;/code&gt; でアクセスできる&lt;/li&gt;
&lt;li&gt;ビルドには &lt;code&gt;master&lt;/code&gt; ブランチが使用される&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;プロジェクト&lt;/strong&gt; のページ

&lt;ul&gt;
&lt;li&gt;各プロジェクト用のページ&lt;/li&gt;
&lt;li&gt;GitHubに &lt;code&gt;PROJECT&lt;/code&gt; というプロジェクトがあれば &lt;code&gt;http://USERNAME.github.com/PROJECT&lt;/code&gt; でアクセスできる&lt;/li&gt;
&lt;li&gt;ビルドには &lt;strong&gt;&lt;code&gt;gh-pages&lt;/code&gt;&lt;/strong&gt; ブランチが使用される&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;という事でよろしい？&lt;/p&gt;

&lt;h3 id=&quot;かぶった場合どうなる？&quot;&gt;かぶった場合どうなる？&lt;/h3&gt;

&lt;p&gt;ところで、こうなるとユーザのGitHub Pagesにプロジェクト名と同じ階層でファイルを作ったらどっちが呼ばれるの？&lt;/p&gt;

&lt;p&gt;=&amp;gt; &lt;a href=&quot;http://aligach.net/diary/20120716.html&quot;&gt;あーありがち - github pagesとjekyllを今さら練習 , 夏だ&lt;/a&gt; によると、&lt;/p&gt;

&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;github.com/wtnabe/wtnabe.github.com 内に /ical2gcal/index.html を作成

&lt;ul&gt;
&lt;li&gt;作った /ical2gcal/index.html が wtnabe.github.com/ical2gcal/ に表示される&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;github.com/wtnabe/ical2gcal に gh-pages branch を作る

&lt;ul&gt;
&lt;li&gt;作った gh-pages が wtnabe.github.com/ical2gcal/ に表示される&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;github.com/wtnabe/wtnabe.github.com/ical2gcal/index.html を編集

&lt;ul&gt;
&lt;li&gt;今編集したファイルが表示される。つまり 1 に戻る。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;

&lt;p&gt;ちょっと気をつけないといけない。&lt;/p&gt;

&lt;h2 id=&quot;github-pagesの作り方&quot;&gt;GitHub Pagesの作り方&lt;/h2&gt;

&lt;p&gt;プロジェクト用のGitHub Pagesの場合。&lt;/p&gt;

&lt;p&gt;既に &lt;code&gt;master&lt;/code&gt; が少し育っているとして &lt;code&gt;gh-pages&lt;/code&gt; ブランチを作成してみる。とりあえず、GitHubから以下のようなコマンド例が提示される。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /path/to/repo-name
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git symbolic-ref HEAD refs/heads/gh-pages
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; rm .git/index
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git clean -fdx
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;My GitHub Page&amp;quot;&lt;/span&gt; &amp;gt; index.html
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git add .
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git commit -a -m &lt;span class=&quot;s2&quot;&gt;&amp;quot;First pages commit&amp;quot;&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git push origin gh-pages&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;何をやっているのかというと… &lt;code&gt;master&lt;/code&gt; ブランチ(というか、ソースとかがある本流のブランチ？)と &lt;strong&gt;独立した空っぽのブランチ&lt;/strong&gt; を作り、そこにindex.htmlをpushしている。&lt;/p&gt;

&lt;h3 id=&quot;コマンド、オプションのメモ&quot;&gt;コマンド、オプションのメモ&lt;/h3&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /path/to/repo-name
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git symbolic-ref HEAD refs/heads/gh-pages&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;HEAD(.git/HEAD)ファイル&lt;/code&gt; には最終コミットの参照が入っている。例えば…&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; cat .git/HEAD
&lt;span class=&quot;go&quot;&gt;ref: refs/heads/master&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;こんなん。で、checkoutとかすると変わる。このHEADファイルを変更するためのコマンドが &lt;code&gt;symbolic-ref&lt;/code&gt; 。&lt;/p&gt;

&lt;p&gt;移動した後は、Gitで管理していたファイルはインデックスに移っている。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; rm .git/index
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git clean -fdx&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;ので、まず &lt;code&gt;index&lt;/code&gt; ファイルを削除してインデックスにあったファイルを追跡対象から除外。&lt;/p&gt;

&lt;p&gt;そして &lt;code&gt;clean&lt;/code&gt; コマンドで追跡対象外のファイルを掃除。 &lt;code&gt;-f&lt;/code&gt; 実行(このオプションを指定しないと実行されない)、 &lt;code&gt;-d&lt;/code&gt; ディレクトリも含める。 &lt;code&gt;-x&lt;/code&gt; 無視ファイルも削除&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;My GitHub Page&amp;quot;&lt;/span&gt; &amp;gt; index.html
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git add .
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git commit -a -m &lt;span class=&quot;s2&quot;&gt;&amp;quot;First pages commit&amp;quot;&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git push origin gh-pages&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;奇麗さっぱりしたらindex.htmlを作ってFirst commit...。&lt;/p&gt;

&lt;p&gt;これで &lt;code&gt;master&lt;/code&gt; ブランチ(ソース)とは完全に独立した &lt;code&gt;gh-pages&lt;/code&gt; ブランチが作成できた。&lt;/p&gt;

&lt;h2 id=&quot;jekylプラグインをgithub-pagesで使えるようにするには&quot;&gt;JekylプラグインをGitHub Pagesで使えるようにするには&lt;/h2&gt;

&lt;p&gt;さてようやく本題。&lt;/p&gt;

&lt;p&gt;今までの情報からわかった事は以下。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;自分が使っているのは &lt;strong&gt;ユーザ用のGitHub Pages&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;つまり、 &lt;strong&gt;&lt;code&gt;master&lt;/code&gt;&lt;/strong&gt; ブランチのファイルがビルドされる&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;今の &lt;code&gt;master&lt;/code&gt; ブランチにはJekyll用のソースがある

&lt;ul&gt;
&lt;li&gt;ページのテンプレートやMarkdownで書かれたエントリなど&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;この状況を以下のように変更する。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;source&lt;/code&gt; ブランチ: 現在の &lt;code&gt;master&lt;/code&gt; ブランチのソースをそのまま持ってくる

&lt;ul&gt;
&lt;li&gt;エントリなどはこちらで書いていく事になる&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;master&lt;/code&gt; ブランチ: 一旦からっぽにして、 &lt;code&gt;source&lt;/code&gt; ブランチのソースから生成した &lt;strong&gt;静的ファイル&lt;/strong&gt; を持ってきてプッシュする

&lt;ul&gt;
&lt;li&gt;ローカルで一旦生成しちゃった後でGitHub Pagesにpushしているから、プラグインが動かないという問題も起こらない&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;そうすると&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;source&lt;/code&gt; ブランチでファイルを生成する(_site/直下)&lt;/li&gt;
&lt;li&gt;これを &lt;code&gt;master&lt;/code&gt; にコピーする&lt;/li&gt;
&lt;li&gt;push&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;を毎回やらなければならない…それはめんどくさい！&lt;/p&gt;

&lt;p&gt;これはrakeでやればいいかな。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Rakefile にdeployコマンドとして上記の動作を実行してくれる処理を記載する

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/gosyujin/gosyujin.github.com/commit/2943985064ced913767157eb0fdae431b68ac491&quot;&gt;deploy タスクを追加 2943985 gosyujin/gosyujin.github.com GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;こんな感じ。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# Usage: rake deploy&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;desc&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Begin a push static file to GitHub&amp;quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;task&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:deploy&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;! Copy static file from _site to _deploy&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;sh&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;cp -r _site/* _deploy/&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;! Change directory _deplay&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;_deploy&amp;quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;! Push to master branch of GitHub&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sh&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;git add *&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;deploy at &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;begin&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;sh&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;git commit -m &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&amp;quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;sh&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;git push origin master:master&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;rescue&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;! Error - git command abort&amp;quot;&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;exit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;とやれば、手間はそれほど変わらずにGitHub PagesでJekyllプラグインが使えるか。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>BPStudy#68に参加しました #bpstudy</title>
   <link href="http://gosyujin.github.io/2013/04/27/bpstudy68"/>
   <updated>2013-04-27T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2013/04/27/bpstudy68</id>
   <content type="html">&lt;h2 id=&quot;詳細&quot;&gt;詳細&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://connpass.com/event/2207/&quot;&gt;BPStudy#68 - connpass&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;テーマはChef。&lt;/p&gt;

&lt;p&gt;入門からChefの実運用例まで。&lt;/p&gt;

&lt;h2 id=&quot;所感&quot;&gt;所感&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://gosyujin.github.io/2013/04/01/chef-helloworld/&quot;&gt;入門Chef Solo - Infrastructure as Code を読みながらChef Soloで遊べるようになるまで&lt;/a&gt; で入門していたので復習も兼ねて

&lt;ul&gt;
&lt;li&gt;Chef Server / Chef Clientはまだ試していない&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;レシピのテストってうまい事できないのかな？

&lt;ul&gt;
&lt;li&gt;文法チェック以上、Serverspec未満の事は今のところ直接実行して確認してる&lt;/li&gt;
&lt;li&gt;vagrantでvm作る、実行、壊すを繰り返し&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;iptablesとか、SELinuxあたりの設定は会社によって or 案件によって固定で、かつそんなに変更がないと思うので、ここだけでも速やかにChefで管理したいな&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;第1部-明日からはじめる-chef-入門&quot;&gt;第1部 明日からはじめる Chef 入門&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://twitter.com/tk0miya&quot;&gt;tk0miya&lt;/a&gt;さん&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;iframe src=&quot;http://www.slideshare.net/slideshow/embed_code/20014957&quot; width=&quot;427&quot; height=&quot;356&quot; frameborder=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; style=&quot;border:1px solid #CCC;border-width:1px 1px 0;margin-bottom:5px&quot; allowfullscreen webkitallowfullscreen mozallowfullscreen&gt; &lt;/iframe&gt; &lt;div style=&quot;margin-bottom:5px&quot;&gt; &lt;strong&gt; &lt;a href=&quot;http://www.slideshare.net/TakeshiKomiya/chef-20014957&quot; title=&quot;明日から始める Chef 入門 #bpstudy&quot; target=&quot;_blank&quot;&gt;明日から始める Chef 入門 #bpstudy&lt;/a&gt; &lt;/strong&gt; from &lt;strong&gt;&lt;a href=&quot;http://www.slideshare.net/TakeshiKomiya&quot; target=&quot;_blank&quot;&gt;Takeshi Komiya&lt;/a&gt;&lt;/strong&gt; &lt;/div&gt;&lt;/p&gt;

&lt;h3 id=&quot;サーバ、どうやって構築している？&quot;&gt;サーバ、どうやって構築している？&lt;/h3&gt;

&lt;p&gt;手順書？Wikiを見て？職人がやってる？&lt;/p&gt;

&lt;h3 id=&quot;よくある話&quot;&gt;よくある話&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;手順書通りにやってもうごかない&lt;/li&gt;
&lt;li&gt;サーバごとに設定がちがう&lt;/li&gt;
&lt;li&gt;手順を飛ばしちゃって事故る

&lt;ul&gt;
&lt;li&gt;手作業で複数だいは辛い&lt;/li&gt;
&lt;li&gt;クロスチェック欄など…&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;自動化しよう！&quot;&gt;自動化しよう！&lt;/h3&gt;

&lt;p&gt;どうやってやる？&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;シェルスクリプト&lt;/li&gt;
&lt;li&gt;PXE + kickstart&lt;/li&gt;
&lt;li&gt;sed/awk

&lt;ul&gt;
&lt;li&gt;PHP&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;オレオレパッケージ&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;環境構築について、継続的デリバリーにはこう書かれている。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;本番環境と同じ方法で開発環境を構築する&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;自動化ツールについて&quot;&gt;自動化ツールについて&lt;/h3&gt;

&lt;h4 id=&quot;アプローチの違い&quot;&gt;アプローチの違い&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;手順ベース

&lt;ul&gt;
&lt;li&gt;手順を意識する必要&lt;/li&gt;
&lt;li&gt;手作業と混ぜやすい&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;定義ベース

&lt;ul&gt;
&lt;li&gt;あるべき姿を定義(例: nginxが入っているべき)&lt;/li&gt;
&lt;li&gt;何度実行してもよい = &lt;strong&gt;冪等性&lt;/strong&gt; を持つ&lt;/li&gt;
&lt;li&gt;定義の仕方は覚えないといけない&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;大抵は&lt;/strong&gt; 、状態を意識しなくてよい&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;インストールが必要か&quot;&gt;インストールが必要か&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;インストールが必要、各ホストにクライアントを&lt;/li&gt;
&lt;li&gt;&lt;p&gt;sshで流しこむのか&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;共有リソースの有無&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;よく使う定義の手順は共有されているか&lt;/li&gt;
&lt;li&gt;書く言語のパッケージリポジトリのようなもの&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;他の構成ツール&quot;&gt;他の構成ツール&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;定義ベース

&lt;ul&gt;
&lt;li&gt;puppet&lt;/li&gt;
&lt;li&gt;chef&lt;/li&gt;
&lt;li&gt;salt&lt;/li&gt;
&lt;li&gt;ansible&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;手順ベース

&lt;ul&gt;
&lt;li&gt;cinnamon&lt;/li&gt;
&lt;li&gt;capistrano&lt;/li&gt;
&lt;li&gt;fabric&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;こんなにあるとは…fabricとpuppetくらいしか聞いた事なかった。&lt;/p&gt;

&lt;h3 id=&quot;chef&quot;&gt;Chef&lt;/h3&gt;

&lt;h4 id=&quot;chefができること&quot;&gt;Chefができること&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;OS、ファイル、パッケージの操作&lt;/li&gt;
&lt;li&gt;サービス起動/停止&lt;/li&gt;
&lt;li&gt;ユーザ作成&lt;/li&gt;
&lt;li&gt;gemなどのインストール&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;chef特徴&quot;&gt;Chef特徴&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;定義ベース&lt;/li&gt;
&lt;li&gt;各ホストにChef(Ruby)のインストールが必要&lt;/li&gt;
&lt;li&gt;共有リソースを持っている&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;chefの種類&quot;&gt;Chefの種類&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Chef-Server Chef-Client&lt;/li&gt;
&lt;li&gt;Hosted Chef(ASP)

&lt;ul&gt;
&lt;li&gt;サーバが大量にある場合有効かも&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Chef-solo

&lt;ul&gt;
&lt;li&gt;練習用 / サーバが少ない場合これでも回せる&lt;/li&gt;
&lt;li&gt;20台以下くらいならこれで&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;インストール&quot;&gt;インストール&lt;/h3&gt;

&lt;p&gt;の前に&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;OSのインストール&lt;/li&gt;
&lt;li&gt;ネットワーク設定&lt;/li&gt;
&lt;li&gt;sudo可能なユーザの作成&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;は準備必要。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Rubyが入っていなくてもcurlでいける&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;環境構築&quot;&gt;環境構築&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;設定対象を決める&lt;/li&gt;
&lt;li&gt;Community siteでクックブックで探す&lt;/li&gt;
&lt;li&gt;試す&lt;/li&gt;
&lt;li&gt;だめだったら自分で書く&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;はじめにCommunityからクックブックを探してみるとよいという話。&lt;/p&gt;

&lt;p&gt;ただし、固執し過ぎるとハマる。&lt;/p&gt;

&lt;h3 id=&quot;必要なファイル&quot;&gt;必要なファイル&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;solo.rb

&lt;ul&gt;
&lt;li&gt;設定ファイル&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;sodo.json

&lt;ul&gt;
&lt;li&gt;run_list 実行するクックブックを列挙&lt;/li&gt;
&lt;li&gt;file&lt;em&gt;cache&lt;/em&gt;path&lt;/li&gt;
&lt;li&gt;cookbook_path&lt;/li&gt;
&lt;li&gt;attributes 設定情報、クックブックのREADMEを見てみるとよい&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;自分でクックブックを作ってみる&quot;&gt;自分でクックブックを作ってみる&lt;/h3&gt;

&lt;p&gt;knifeコマンドで。&lt;/p&gt;

&lt;h3 id=&quot;利用事例&quot;&gt;利用事例&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Railsアプリ環境

&lt;ul&gt;
&lt;li&gt;みんながやるような事をクックブックに&lt;/li&gt;
&lt;li&gt;ネットワーク周りの設定(iptables, SELinux)&lt;/li&gt;
&lt;li&gt;OSの設定(yum, log, syslog)&lt;/li&gt;
&lt;li&gt;ツールインストール(Python, Git, Mercurial)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;周辺ツール&quot;&gt;周辺ツール&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;vagrant

&lt;ul&gt;
&lt;li&gt;vmを使い捨てられる&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;librarian-chef berkshelf

&lt;ul&gt;
&lt;li&gt;Ruby のbundlerのようなもの&lt;/li&gt;
&lt;li&gt;Jenkinsクックブック入れようとしたらJavaが必要などの依存を解消してくれる&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;knife-solo paratrooper-chef

&lt;ul&gt;
&lt;li&gt;chef-soloをリモート実行するツール&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;chefのデメリット&quot;&gt;Chefのデメリット&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;community cookbookの不備&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;全員がChefを覚える必要がある&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;手動で書き換えたところにChefで流し込むと、手動の部分が消えてしまう&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;まだ定石がない&lt;/li&gt;
&lt;li&gt;テストが難しい

&lt;ul&gt;
&lt;li&gt;serverspec, chefspecが候補&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;はじめるにはコストが掛かる&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;第2部-chefで構築するbp-redmine環境&quot;&gt;第2部 Chefで構築するBP-Redmine環境&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://twitter.com/shimizukawa&quot;&gt;shimizukawa&lt;/a&gt;さん&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://shimizukawa.bitbucket.org/bpstudy68-chef/index.html&quot;&gt;Chefで構築するBP-Redmine環境&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;実際の導入事例の紹介。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;BeProudのRedmine環境&lt;/li&gt;
&lt;li&gt;Webサービスのサーバ構成(10台)&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;bp-redmine&quot;&gt;BP-Redmine&lt;/h3&gt;

&lt;h4 id=&quot;redmineの管理&quot;&gt;Redmineの管理&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;メンテナンスが大変&lt;/li&gt;
&lt;li&gt;構築手順が残っていない or 残っていても集めるのが大変(Wikiとかに散らばってる)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;それならChefでまとめる。&lt;/p&gt;

&lt;h4 id=&quot;セットアップ内容&quot;&gt;セットアップ内容&lt;/h4&gt;

&lt;p&gt;Apache, Redmine, Ldapなどを入れていく方針…。&lt;/p&gt;

&lt;p&gt;しかし、一部GUI必須のインストール(Skypeなど)がある。&lt;/p&gt;

&lt;p&gt;GUIのインストールもChefでできるかもしれないが、今回は切り離して考える。&lt;/p&gt;

&lt;h4 id=&quot;使用ツール&quot;&gt;使用ツール&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;vagrant&lt;/li&gt;
&lt;li&gt;librarian-chef&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;webサービス&quot;&gt;Webサービス&lt;/h3&gt;

&lt;h4 id=&quot;セットアップ内容&quot;&gt;セットアップ内容&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;サーバは10台&lt;/li&gt;
&lt;li&gt;iptablesの設定など&lt;/li&gt;
&lt;li&gt;サーバ間はssh接続&lt;/li&gt;
&lt;li&gt;などなど&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;サーバの役割&quot;&gt;サーバの役割&lt;/h4&gt;

&lt;p&gt;役割ごとにRoleでグルーピング。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;抽象的なロール

&lt;ul&gt;
&lt;li&gt;common&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;機能

&lt;ul&gt;
&lt;li&gt;django, nginx, loadbalancerなど&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;大きいロール

&lt;ul&gt;
&lt;li&gt;gatewayサーバ&lt;/li&gt;
&lt;li&gt;batchサーバ&lt;/li&gt;
&lt;li&gt;devサーバ&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;環境別にenvironment的に分け。(Chef 11.4.0ではenvironmentをサポートしていないため)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;個人のvagrant&lt;/li&gt;
&lt;li&gt;社内&lt;/li&gt;
&lt;li&gt;検証用&lt;/li&gt;
&lt;li&gt;本番&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;クックブック&quot;&gt;クックブック&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;opscodeとgithubから持ってきたもの&lt;/li&gt;
&lt;li&gt;案件に依存するものは自作

&lt;ul&gt;
&lt;li&gt;hosts, ssh, iptables, nginxなどなど&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;課題など&quot;&gt;課題など&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;鍵とかはどう管理するか&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Jekyllのバージョンを 0.12.0 にあげた</title>
   <link href="http://gosyujin.github.io/2013/04/11/jekyll-0120"/>
   <updated>2013-04-11T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2013/04/11/jekyll-0120</id>
   <content type="html">&lt;h2 id=&quot;あらすじ&quot;&gt;あらすじ&lt;/h2&gt;

&lt;p&gt;ぼちぼちJekyllのバージョンを上げてみる。&lt;/p&gt;

&lt;h2 id=&quot;参考サイト&quot;&gt;参考サイト&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://tech.nitoyon.com/ja/blog/2012/12/25/jekyll-0-12-0/&quot;&gt;Jekyll の 0.12.0 でシンタックス ハイライトが便利になった - てっく煮ブログ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;手順&quot;&gt;手順&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;Gemfile&lt;/code&gt; をちょっと修正。redcarpetを追加する、のとpygmentsのバージョンをアップ。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;rake&amp;#39;&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;jekyll&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:git&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;git://github.com/mojombo/jekyll.git&amp;#39;&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;RedCloth&amp;#39;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;rdiscount&amp;#39;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;redcarpet&amp;#39;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;#gem &amp;#39;rdiscount&amp;#39;&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;hparser&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:git&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;git://github.com/hotchpotch/hparser.git&amp;#39;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;pygments.rb&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;=0.2.12&amp;#39;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;pygments.rb&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;=0.3.2&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;そして &lt;code&gt;bundle install&lt;/code&gt; 。&lt;/p&gt;

&lt;p&gt;オプションもだいぶ変わってるみたい。&lt;/p&gt;

&lt;p&gt;昔。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; jekyll --help
&lt;span class=&quot;go&quot;&gt;bundle exec jekyll --help&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Jekyll is a blog-aware, static site generator.&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;Basic Command Line Usage:&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  jekyll                                                   # . -&amp;gt; ./_site&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  jekyll &amp;lt;path to write generated site&amp;gt;                    # . -&amp;gt; &amp;lt;path&amp;gt;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  jekyll &amp;lt;path to source&amp;gt; &amp;lt;path to write generated site&amp;gt;   # &amp;lt;path&amp;gt; -&amp;gt; &amp;lt;path&amp;gt;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  jekyll import &amp;lt;importer name&amp;gt; &amp;lt;options&amp;gt;            DB to import from&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        --user [TEXT]                Username to use when importing&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        --pass [TEXT]                Password to use when importing&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        --host [HOST ADDRESS]        Host to import from&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        --site [SITE NAME]           Site to import from&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        --[no-]safe                  Safe mode (default unsafe)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        --[no-]auto                  Auto-regenerate&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        --server [PORT]              Start web server (default port 4000)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        --no-server                  Do not start a web server&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        --base-url [BASE_URL]        Serve website from a given base URL (default &amp;#39;/&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        --[no-]lsi                   Use LSI for better related posts&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        --[no-]kdown&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        --time [TIME]                Time to generate the site for&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        --[no-]future                Render future dated posts&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        --permalink [TYPE]           Use &amp;#39;date&amp;#39; (default) for YYYY/MM/DD&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        --paginate [POSTS_PER_PAGE]  Paginate a blog&amp;#39;s posts&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        --limit_posts [MAX_POSTS]    Limit the number of posts to publish&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        --url [URL]                  Set custom site.url&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        --version                    Display current version&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;今。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; jekyll -h
&lt;span class=&quot;go&quot;&gt;bundle exec jekyll -h&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  NAME:&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;    jekyll&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;  DESCRIPTION:&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;    Jekyll is a blog-aware, static site generator in Ruby&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;  COMMANDS:&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        &lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    build                Build your site                &lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    help                 Display global or [command] help documentation.                &lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    import               Import your old blog to Jekyll         &lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    serve                Serve your site locally                &lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;  ALI      Safe mode (defaults to false)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        &lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    --plugins &lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        Plugins directory (defaults to ./_plugins)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        &lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    --layouts &lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        Layouts directory (defaults to ./_layouts)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        &lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    -h, --help &lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        Display help documentation&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;          Display backtrace when an error occurs&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;ビルドする時は、 &lt;code&gt;jekyll build&lt;/code&gt; 。&lt;/p&gt;

&lt;p&gt;サーバ起動するときは &lt;code&gt;jekyll serve&lt;/code&gt; 。&lt;/p&gt;

&lt;p&gt;Redcarpetを使う場合は &lt;code&gt;_config.yml&lt;/code&gt; を編集してRedcarpetを使うように指定してやる。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;l-Scalar-Plain&quot;&gt;auto&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;true&lt;/span&gt;
 &lt;span class=&quot;l-Scalar-Plain&quot;&gt;pygments&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;l-Scalar-Plain&quot;&gt;-markdown&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;kramdown&lt;/span&gt;
&lt;span class=&quot;l-Scalar-Plain&quot;&gt;+markdown&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;redcarpet&lt;/span&gt;
&lt;span class=&quot;l-Scalar-Plain&quot;&gt;+#markdown&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;kramdown&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title> 入門Chef Solo - Infrastructure as Code を読みながらChef Soloで遊べるようになるまで</title>
   <link href="http://gosyujin.github.io/2013/04/01/chef-helloworld"/>
   <updated>2013-04-01T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2013/04/01/chef-helloworld</id>
   <content type="html">&lt;h2 id=&quot;あらすじ&quot;&gt;あらすじ&lt;/h2&gt;

&lt;p&gt;Chefを触ってみたいと思いつつ、取っ掛かりを作るにはかなり用語が多いなーとウダウダしていたら、3/11にこんな本が出版されており。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.amazon.co.jp/exec/obidos/ASIN/B00BSPH158/everlasting-22/ref=nosim/&quot;&gt;Amazon.co.jp： 入門Chef Solo - Infrastructure as Code eBook: 伊藤直也: Kindleストア&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;早速購入。&lt;/p&gt;

&lt;p&gt;本書のはじめにはこんな事が書かれていました。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;公式ドキュメントがあまりにしっかり書かれすぎていることもあって「はじめの一歩」としてどの辺りを知ればいいのか、つまり「普通に使う分にはこの程度知っていればOK」というのがどの辺りなのかを掴むのが難しい…というのが筆者の個人的な印象です。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;はじめの一歩をどうしようか迷ってる場合オススメと……。&lt;/p&gt;

&lt;p&gt;ではHello Worldしてみよう。&lt;/p&gt;

&lt;h2 id=&quot;環境-windows編&quot;&gt;環境(Windows編)&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Windows XP&lt;/li&gt;
&lt;li&gt;Ruby 1.9.3&lt;/li&gt;
&lt;li&gt;Rubygems 1.8.24&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;手順&quot;&gt;手順&lt;/h2&gt;

&lt;h3 id=&quot;chef-インストール&quot;&gt;Chef インストール&lt;/h3&gt;

&lt;p&gt;ネットワークに繋がっていないぼっち環境のため、vendor/cacheディレクトリに必要なGemをありったけ放り込んでbundle install。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; bundle install --local --path vendor/bundle
&lt;span class=&quot;go&quot;&gt;Installing erubis (2.7.0)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Installing highline (1.6.16)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Installing json (1.7.7)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Installing mixlib-log (1.4.1)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Installing mixlib-authentication (1.3.0)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Installing mixlib-cli (1.3.0)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Installing mixlib-config (1.1.2)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Installing win32-api (1.4.8)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Installing windows-api (0.4.2)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Installing windows-pr (1.2.2)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Installing win32-process (0.6.6)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Installing mixlib-shellout (1.1.0)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Installing net-ssh (2.6.6)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Installing net-ssh-gateway (1.2.0)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Installing net-ssh-multi (1.1)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Installing ipaddress (0.8.0)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Installing systemu (2.5.2)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Installing yajl-ruby (1.1.0)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Installing ohai (6.16.0)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Installing mime-types (1.21)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Installing rest-client (1.6.7)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Installing chef (11.4.0)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Using bundler (1.3.1)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;構成-レポジトリ、クックブック、レシピ&quot;&gt;構成 レポジトリ、クックブック、レシピ&lt;/h3&gt;

&lt;p&gt;Chefには &lt;code&gt;レポジトリ&lt;/code&gt; , &lt;code&gt;クックブック&lt;/code&gt; , &lt;code&gt;レシピ&lt;/code&gt; という概念がある。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;レシピ: コード化された手順書&lt;/li&gt;
&lt;li&gt;クックブック: 特定レシピのデータをまとめる&lt;/li&gt;
&lt;li&gt;レポジトリ: クックブックを含めた全体&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;レポジトリ作成-コピー&quot;&gt;レポジトリ作成(コピー)&lt;/h4&gt;

&lt;p&gt;まずは、レポジトリのサンプルをGitHubから取得。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git clone http://github.com/opscode/chef-repo.git&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;中身はこんな感じ。それぞれの役目はまだわからない。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;LICENSE&lt;/li&gt;
&lt;li&gt;README.md&lt;/li&gt;
&lt;li&gt;Rakefile&lt;/li&gt;
&lt;li&gt;certificates/&lt;/li&gt;
&lt;li&gt;chefignore&lt;/li&gt;
&lt;li&gt;config/&lt;/li&gt;
&lt;li&gt;cookbooks/&lt;/li&gt;
&lt;li&gt;data_bags/&lt;/li&gt;
&lt;li&gt;environments/&lt;/li&gt;
&lt;li&gt;roles/&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;クックブック作成&quot;&gt;クックブック作成&lt;/h4&gt;

&lt;p&gt;クックブックを作るためにはツール &lt;code&gt;knife&lt;/code&gt; を使う。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;knife&lt;/code&gt; の初期設定。 &lt;code&gt;knife&lt;/code&gt; はChefをインストールすれば使えるようになっている。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; bundle &lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;knife -h
&lt;span class=&quot;go&quot;&gt;Usage: knife sub-command (options)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    -s, --server-url URL             Chef Server URL&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    -k, --key KEY                    API Client Key&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        --[no-]color                 Use colored output, defaults to enabled&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    -c, --config CONFIG              The configuration file to use&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        --defaults                   Accept default values for all questions&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    -d, --disable-editing            Do not open EDITOR, just accept the data as is&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    -e, --editor EDITOR              Set the editor to use for interactive commands&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    -E, --environment ENVIRONMENT    Set the Chef environment&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    -F, --format FORMAT              Which format to use for output&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    -u, --user USER                  API Client Username&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        --print-after                Show the data after a destructive operation&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    -V, --verbose                    More verbose output. Use twice for max verbosity&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    -v, --version                    Show chef version&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    -y, --yes                        Say yes to all prompts for confirmation&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    -h, --help                       Show this message&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;設定ファイルなど作成するために &lt;code&gt;knife configure&lt;/code&gt; を実行。&lt;/p&gt;

&lt;p&gt;色々聞かれるが、今はそのままでいい。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; bundle &lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;knife configure
&lt;span class=&quot;go&quot;&gt;WARNING: No knife configuration file found&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Where should I put the config file? [C:/Documents and Settings/USER/.chef/knife.rb]&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Please enter the chef server URL: [http://localhost:4000]&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Please enter an existing username or clientname for the API: [USER] kk_Ataka&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Please enter the validation clientname: [chef-validator]&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Please enter the location of the validation key: [/etc/chef/validation.pem]&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Please enter the path to a chef repository (or leave blank):&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;*****&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;You must place your client key in:&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  C:/Documents and Settings/USER/.chef/kk_Ataka.pem&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Before running commands with Knife!&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;*****&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;You must place your validation key in:&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  C:/etc/chef/validation.pem&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Before generating instance data with Knife!&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;*****&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Configuration file written to C:/Documents and Settings/USER/.chef/knife.rb&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;初期設定が終わったので、さっき落としたレポジトリの中でクックブックを作る。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;knife cookbook create COOKBOOK_NAME -o COOKBOOK_DIR&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; bundle &lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;knife cookbook create hello -o cookbooks
&lt;span class=&quot;go&quot;&gt;** Creating cookbook hello&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;** Creating README for cookbook: hello&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;** Creating CHANGELOG for cookbook: hello&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;** Creating metadata for cookbook: hello&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;これで &lt;code&gt;chef-repo/cookbooks/hello&lt;/code&gt; の中に以下のようなファイル。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;CHANGELOG.md&lt;/li&gt;
&lt;li&gt;README.md&lt;/li&gt;
&lt;li&gt;attributes/&lt;/li&gt;
&lt;li&gt;definitions/&lt;/li&gt;
&lt;li&gt;files/&lt;/li&gt;
&lt;li&gt;libraries/&lt;/li&gt;
&lt;li&gt;metadata.rb*&lt;/li&gt;
&lt;li&gt;providers/&lt;/li&gt;
&lt;li&gt;recipes/&lt;/li&gt;
&lt;li&gt;resources/&lt;/li&gt;
&lt;li&gt;templates/&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;knife&lt;/code&gt; コマンドも、生成されたファイルもまだ全然わからないけど、&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;レポジトリを作成&lt;/li&gt;
&lt;li&gt;クックブックを作成&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;まではできたので、次はいよいよレシピを作成。&lt;/p&gt;

&lt;h4 id=&quot;レシピ編集&quot;&gt;レシピ編集&lt;/h4&gt;

&lt;p&gt;すでにひな形はできている。(コメントだけだけど) &lt;code&gt;chef-repo/cookbooks/hello/recipes/default.rb&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# Cookbook Name:: hello&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# Recipe:: default&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# Copyright 2013, YOUR_COMPANY_NAME&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# All rights reserved - Do Not Redistribute&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;上記ファイルに追記。&lt;/p&gt;

&lt;p&gt;はじめはlogでHello Worldを吐くだけのレシピを作成。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;log&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Hello World!&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;その他設定色々、動かすためにもう少し&quot;&gt;その他設定色々、動かすためにもう少し&lt;/h3&gt;

&lt;p&gt;レポジトリの直下 &lt;code&gt;chef-repo/&lt;/code&gt; に どのレシピを実行するか指定するjsonファイルを作る。名前は &lt;code&gt;localhost.json&lt;/code&gt; とした。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span class=&quot;err&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;localhost.json&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;run_list&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;recipe[hello]&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;同じくレポジトリの直下に、テンポラリディレクトリの設定などを記述する &lt;code&gt;solo.rb&lt;/code&gt; を作る。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# solo.rb&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;file_cache_path&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;C:/chef/tmp/chef-solo&amp;quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cookbook_path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;C:/chef/chef-repo/cookbooks&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;実行&quot;&gt;実行&lt;/h3&gt;

&lt;p&gt;…すると、Gemsが結構足りないのか、Load Errorが多発。&lt;/p&gt;

&lt;p&gt;ffi がないって言われたり、ruby-wmiがないって言われたり、win32/serviceがないって言われたり…。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; bundle &lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;chef-solo -c solo.rb -j ./localhost.json
&lt;span class=&quot;go&quot;&gt;C:/rubies/Ruby-193-p0/lib/ruby/site_ruby/1.9.1/rubygems/core_ext/kernel_require.rb:45:in `require&amp;#39;:&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;cannot load such file -- win32/service (LoadError)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        from C:/rubies/Ruby-193-p0/lib/ruby/site_ruby/1.9.1/rubygems/core_ext/kernel_require.rb:45:in `require&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        from C:/chef/vendor/bundle/ruby/1.9.1/gems/chef-11.4.0/lib/chef/provider/service/windows.rb:24:in `&amp;lt;top (required)&amp;gt;&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        from C:/rubies/Ruby-193-p0/lib/ruby/site_ruby/1.9.1/rubygems/core_ext/kernel_require.rb:45:in `require&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        from C:/rubies/Ruby-193-p0/lib/ruby/site_ruby/1.9.1/rubygems/core_ext/kernel_require.rb:45:in `require&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        from C:/chef/vendor/bundle/ruby/1.9.1/gems/chef-11.4.0/lib/chef/providers.rb:77:in `&amp;lt;top (required)&amp;gt;&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        from C:/rubies/Ruby-193-p0/lib/ruby/site_ruby/1.9.1/rubygems/core_ext/kernel_require.rb:45:in `require&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        from C:/rubies/Ruby-193-p0/lib/ruby/site_ruby/1.9.1/rubygems/core_ext/kernel_require.rb:45:in `require&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        from C:/chef/vendor/bundle/ruby/1.9.1/gems/chef-11.4.0/lib/chef.rb:25:in&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;`&amp;lt;top (required)&amp;gt;&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        from C:/rubies/Ruby-193-p0/lib/ruby/site_ruby/1.9.1/rubygems/core_ext/kernel_require.rb:45:in `require&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        from C:/rubies/Ruby-193-p0/lib/ruby/site_ruby/1.9.1/rubygems/core_ext/kernel_require.rb:45:in `require&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        from C:/chef/vendor/bundle/ruby/1.9.1/gems/chef-11.4.0/lib/chef/application/solo.rb:19:in `&amp;lt;top (required)&amp;gt;&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        from C:/rubies/Ruby-193-p0/lib/ruby/site_ruby/1.9.1/rubygems/core_ext/kernel_require.rb:45:in `require&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        from C:/rubies/Ruby-193-p0/lib/ruby/site_ruby/1.9.1/rubygems/core_ext/kernel_require.rb:45:in `require&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        from C:/chef/vendor/bundle/ruby/1.9.1/gems/chef-11.4.0/bin/chef-solo:23:in `&amp;lt;top (required)&amp;gt;&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        from C:/chef/vendor/bundle/ruby/1.9.1/bin/chef-solo:23:in `load&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        from C:/chef/vendor/bundle/ruby/1.9.1/bin/chef-solo:23:in `&amp;lt;main&amp;gt;&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;色々調べてみる……。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/12868121/cannot-load-such-file-ruby-wmi-loaderror-cannot-load-such-file-win32-s&quot;&gt;windows - cannot load such file -- ruby-wmi (LoadError) &amp;amp; cannot load such file -- win32/service (LoadError) - Stack Overflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://wiki.opscode.com/display/chef/Common+Errors#CommonErrors-Nosuchfiletoloadrubywmi&quot;&gt;Common Errors - Chef - Opscode Open Source Wiki&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;最終的にGemfileはこうなった。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:rubygems&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;http://rubygems.org&amp;quot;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;chef&amp;quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;ffi&amp;#39;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;win32-service&amp;quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;ruby-wmi&amp;quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;windows-api&amp;quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;windows-pr&amp;quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;rdp-ruby-wmi&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;満を辞して！&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; bundle &lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;chef-solo -c solo.rb -j ./localhost.json
&lt;span class=&quot;go&quot;&gt;Starting Chef Client, version 11.4.0&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;[2013-03-22T17:32:30+09:00] WARN: unable to detect ip6address&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Compiling Cookbooks...&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Converging 1 resources&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Recipe: hello::default&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  * log[Hello World] action write&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;Chef Client finished, 1 resources updated&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;本当に何かインストールしてみる&quot;&gt;本当に何かインストールしてみる&lt;/h2&gt;

&lt;p&gt;ここからは、本当に何かをインストールしてみる。&lt;/p&gt;

&lt;p&gt;……と同時に、サーバいじるんだからWindowsじゃなくていいよねということで構成変更。&lt;/p&gt;

&lt;h2 id=&quot;環境-linux編&quot;&gt;環境(Linux編)&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Red Hat Linux 5.4&lt;/li&gt;
&lt;li&gt;Ruby 1.9.3&lt;/li&gt;
&lt;li&gt;Rubygems 1.8.23&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;インストールテスト-zsh&quot;&gt;インストールテスト(zsh)&lt;/h2&gt;

&lt;p&gt;zshをchefでインストールしてみる。&lt;/p&gt;

&lt;p&gt;ただし、外部に接続できないサーバなので、&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;zshのrpmをダウンロードして&lt;/li&gt;
&lt;li&gt;サーバに転送&lt;/li&gt;
&lt;li&gt;chefでは(サーバ内の)ローカルにあるrpmを指定しインストール&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;できるように準備。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;chef-solo/cookbooks/hello/recipes/default.rb&lt;/code&gt; にzshを追加。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;zsh&amp;quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;action&lt;/span&gt;   &lt;span class=&quot;ss&quot;&gt;:install&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;source&lt;/span&gt;   &lt;span class=&quot;s2&quot;&gt;&amp;quot;/home/kk_Ataka/zsh-3.0.5-6.i386.rpm&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;provider&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Chef&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Provider&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Package&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Rpm&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;log&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Hello World&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;通常は、 &lt;code&gt;action :install&lt;/code&gt; だけで、chef側がrpmをよろしくやってくれるみたいだけど、今回はローカルのrpmを使うので、 &lt;code&gt;source&lt;/code&gt; を指定してやる。&lt;/p&gt;

&lt;p&gt;そして実行…あれ…なんかエラー出る。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; bundle &lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;chef-solo -c solo.rb -j localhost.json
&lt;span class=&quot;go&quot;&gt;The source :rubygems is deprecated because HTTP requests are insecure.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Please change your source to &amp;#39;https://rubygems.org&amp;#39; if possible, or &amp;#39;http://rubygems.org&amp;#39; if not.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Starting Chef Client, version 11.4.0&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Compiling Cookbooks...&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Converging 2 resources&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Recipe: hello::default&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  * package[zsh] action install&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;================================================================================&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Error executing action `install` on resource &amp;#39;package[zsh]&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;================================================================================&lt;/span&gt;


&lt;span class=&quot;go&quot;&gt;Chef::Exceptions::Exec&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;----------------------&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;rpm  -U /home/kk_Ataka/zsh-3.0.5-6.i386.rpm returned 1, expected 0&lt;/span&gt;


&lt;span class=&quot;go&quot;&gt;Resource Declaration:&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;---------------------&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt; In /home/kk_Ataka/chef/chef-repo/cookbooks/hello/recipes/default.rb

&lt;span class=&quot;go&quot;&gt;  9: package &amp;quot;zsh&amp;quot; do&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; 10:   action   :install&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; 11:   source   &amp;quot;/home/kk_Ataka/zsh-3.0.5-6.i386.rpm&amp;quot;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; 12:   provider Chef::Provider::Package::Rpm&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; 13: end&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; 14: log &amp;quot;Hello World&amp;quot;&lt;/span&gt;



&lt;span class=&quot;go&quot;&gt;Compiled Resource:&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;------------------&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt; Declared in /home/kk_Ataka/chef/chef-repo/cookbooks/hello/recipes/default.rb:9:in &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;from_file&lt;span class=&quot;err&quot;&gt;&amp;#39;&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;package(&amp;quot;zsh&amp;quot;) do&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  provider Chef::Provider::Package::Rpm&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  action [:install]&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  retries 0&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  retry_delay 2&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  package_name &amp;quot;zsh&amp;quot;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  source &amp;quot;/home/kk_Ataka/zsh-3.0.5-6.i386.rpm&amp;quot;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  version &amp;quot;3.0.5-6&amp;quot;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  cookbook_name :hello&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  recipe_name &amp;quot;default&amp;quot;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;end&lt;/span&gt;



&lt;span class=&quot;go&quot;&gt;[2013-03-25T19:00:12+09:00] ERROR: Running exception handlers&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;[2013-03-25T19:00:12+09:00] ERROR: Exception handlers complete&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Chef Client failed. 0 resources updated&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;[2013-03-25T19:00:12+09:00] FATAL: Stacktrace dumped to /home/kk_Ataka/chef/chef-repo/tmp/chef-solo/chef-stacktrace.out&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;[2013-03-25T19:00:12+09:00] FATAL: Chef::Exceptions::Exec: package[zsh] (hello::default line 9) had an error: Chef::Exceptions::Exec: rpm  -U /home/kk_Ataka/zsh-3.0.5-6.i386.rpm returned 1, expected 0&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;なんでだろ。あ、 &lt;strong&gt;一般ユーザだから&lt;/strong&gt; か、そういえば？&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; rpm  -U /home/kk_Ataka/zsh-3.0.5-6.i386.rpm
&lt;span class=&quot;go&quot;&gt;エラー: can&amp;#39;t create transaction lock on /var/lib/rpm/__db.000&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;やはり。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; su
&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt; bundle &lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;chef-solo -c solo.rb -j localhost.json
&lt;span class=&quot;go&quot;&gt;Starting Chef Client, version 11.4.0&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Compiling Cookbooks...&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Converging 2 resources&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Recipe: hello::default&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  * package[zsh] action install&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      - install version 3.0.5-6 of package zsh&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;        * log[Hello World] action write&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;    Chef Client finished, 2 resources updated&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;いったー。&lt;/p&gt;

&lt;h2 id=&quot;インストールテスト-nginx&quot;&gt;インストールテスト(nginx)&lt;/h2&gt;

&lt;p&gt;次にnginxを入れてみる。&lt;/p&gt;

&lt;p&gt;レシピはインストールするパッケージ毎に分けた方がいいみたいなんだけど、今回は仮なので同じレシピに詰め込んでいく。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;nginx&amp;quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;action&lt;/span&gt;   &lt;span class=&quot;ss&quot;&gt;:install&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;source&lt;/span&gt;   &lt;span class=&quot;s2&quot;&gt;&amp;quot;/var/package/nginx-1.2.7-1.el5.ngx.i386.rpm&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;provider&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Chef&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Provider&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Package&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Rpm&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;chef実行！&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;go&quot;&gt;[2013-03-28T19:20:48+09:00] ERROR: Running exception handlers&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;[2013-03-28T19:20:48+09:00] ERROR: Exception handlers complete&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Chef Client failed. 0 resources updated&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;[2013-03-28T15:20:48+09:00] FATAL: Stacktrace dumped to /home/kk_Ataka/chef/chef-repo/tmp/chef-solo/chef-stacktrace.out&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;[2013-03-28T19:20:48+09:00] FATAL: Chef::Exceptions::Exec: package[nginx] (hello::default line 18) had an error: Chef::Exceptions::Exec: rpm  -U /var/package/nginx-1.2.7-1.el5.ngx.i386.rpm returned 1, expected 0&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;だめ？何だこのエラー…直接rpmできるか確認してみるか。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;go&quot;&gt;rpm -ivh /var/package/nginx-1.2.7-1.el5.ngx.i386.rpm&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;警告: /var/package/nginx-1.2.7-1.el5.ngx.i386.rpm: ヘッダ V3 RSA/SHA1 signature: NOKEY, key ID 7bd9bf62&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;エラー: 依存性の欠如:&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        libpcre.so.0 は nginx-1.2.7-1.el5.ngx.i386 に必要とされています&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;あ、ライブラリが足りないのか。PCREをDLしてインストールする必要があるのね&lt;/p&gt;

&lt;p&gt;まずはnginxとその依存ファイルをインストールするように書いてみた。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;pcre&amp;quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;action&lt;/span&gt;   &lt;span class=&quot;ss&quot;&gt;:install&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;source&lt;/span&gt;   &lt;span class=&quot;s2&quot;&gt;&amp;quot;/var/package/pcre-6.6-6.el5_6.1.i386.rpm&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;provider&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Chef&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Provider&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Package&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Rpm&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;pcre-devel&amp;quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;action&lt;/span&gt;   &lt;span class=&quot;ss&quot;&gt;:install&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;source&lt;/span&gt;   &lt;span class=&quot;s2&quot;&gt;&amp;quot;/var/package/pcre-devel-6.6-6.el5_6.1.i386.rpm&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;provider&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Chef&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Provider&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Package&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Rpm&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;nginx&amp;quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;action&lt;/span&gt;   &lt;span class=&quot;ss&quot;&gt;:install&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;source&lt;/span&gt;   &lt;span class=&quot;s2&quot;&gt;&amp;quot;/var/package/nginx-1.2.7-1.el5.ngx.i386.rpm&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;provider&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Chef&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Provider&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Package&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Rpm&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;で、インストール。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt; bundle &lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;chef-solo -c solo.rb -j localhost.json
&lt;span class=&quot;go&quot;&gt;Starting Chef Client, version 11.4.0&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Compiling Cookbooks...&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Converging 4 resources&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Recipe: hello::default&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  * package[zsh] action install&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    - install version 3.0.5-6 of package zsh&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;  * package[pcre] action install &lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    - install version 6.6-6.el5_6.1 of package pcre&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;  * package[pcre-devel] action install&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    - install version 6.6-6.el5_6.1 of package pcre-devel&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;  * package[nginx] action install&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    - install version 1.2.7-1.el5.ngx of package nginx&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;はいった！んでnginxがあるかどうか確認…。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt; nginx -v
&lt;span class=&quot;go&quot;&gt;nginx version: nginx/1.2.7&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;ある！じゃあ起動。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt; /etc/init.d/nginx start
&lt;span class=&quot;go&quot;&gt;nginx を起動中:                                            [  OK  ]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;きたーーー！&lt;/p&gt;

&lt;h3 id=&quot;service&quot;&gt;service&lt;/h3&gt;

&lt;p&gt;今までレシピには &lt;code&gt;package&lt;/code&gt; と &lt;code&gt;log&lt;/code&gt; しか使っていなかった。&lt;/p&gt;

&lt;p&gt;次に、 &lt;code&gt;service&lt;/code&gt; の定義方法を確認。&lt;/p&gt;

&lt;p&gt;serviceを定義する事でサービス周りの操作をできる。&lt;/p&gt;

&lt;p&gt;例えば、サービス自動起動の設定はなんにもしないとこうなってる。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt; chkconfig --list &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; grep nginx
&lt;span class=&quot;go&quot;&gt;nginx           0:off   1:off   2:on    3:on    4:on    5:on    6:off&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;レシピのservice &amp;gt; &lt;code&gt;action&lt;/code&gt; を &lt;code&gt;:disable&lt;/code&gt; にして再インストールすると。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;service&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;nginx&amp;quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;action&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:disable&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;go&quot;&gt;* package[nginx] action install (up to date)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  * service[nginx] action disable&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    - disable service service[nginx]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;サービスが無効になる。逆に &lt;code&gt;:enable&lt;/code&gt;にしてみる。プラス、 &lt;code&gt;start&lt;/code&gt; もつけてみる。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;service&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;nginx&amp;quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;action&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:enable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:start&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt; chkconfig --list &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; grep nginx
&lt;span class=&quot;go&quot;&gt;nginx           0:off   1:off   2:off   3:off   4:off   5:off   6:off&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;go&quot;&gt;* package[nginx] action install (up to date)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  * service[nginx] action enable&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    - enable service service[nginx]&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;  * service[nginx] action start&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    - start service service[nginx]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;起動時にサービスが上がるようになり、chefコマンド実行後にnginxが起動状態となっている。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt; chkconfig --list &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; grep nginx
&lt;span class=&quot;go&quot;&gt;nginx           0:off   1:off   2:on    3:on    4:on    5:on    6:off&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt; /etc/init.d/nginx status
&lt;span class=&quot;go&quot;&gt;nginx (pid  20026) を実行中...&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;次に &lt;code&gt;supports&lt;/code&gt; 。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;service&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;nginx&amp;quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;supports&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:status&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:restart&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:reload&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;action&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:enable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:start&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;これは、「他のリソースに、このサービスが使えるオプションを教える」ためのもの…らしい。&lt;/p&gt;

&lt;p&gt;なくても動くが、指定しておくと吉という事。まだシチュエーションがよくわかっていない。&lt;/p&gt;

&lt;h3 id=&quot;template&quot;&gt;template&lt;/h3&gt;

&lt;p&gt;設定ファイルを配備する。&lt;/p&gt;

&lt;p&gt;例えば、 &lt;code&gt;/etc/nginx/nginx.conf&lt;/code&gt; はそのまま入れるとこうなっている。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt; ls -l /etc/nginx/nginx.conf
&lt;span class=&quot;go&quot;&gt;-rw-r--r-- 1 root root 643  2月 12 22:57 /etc/nginx/nginx.conf&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-nginx&quot; data-lang=&quot;nginx&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# cat /etc/nginx/nginx.conf&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;user&lt;/span&gt;  &lt;span class=&quot;s&quot;&gt;nginx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;worker_processes&lt;/span&gt;  &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;error_log&lt;/span&gt;  &lt;span class=&quot;s&quot;&gt;/var/log/nginx/error.log&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;warn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;pid&lt;/span&gt;        &lt;span class=&quot;s&quot;&gt;/var/run/nginx.pid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;events&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;worker_connections&lt;/span&gt;  &lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;http&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;include&lt;/span&gt;       &lt;span class=&quot;s&quot;&gt;/etc/nginx/mime.types&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;default_type&lt;/span&gt;  &lt;span class=&quot;s&quot;&gt;application/octet-stream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kn&quot;&gt;log_format&lt;/span&gt;  &lt;span class=&quot;s&quot;&gt;main&lt;/span&gt;  &lt;span class=&quot;s&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$remote_addr&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$remote_user&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$time_local]&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$request&amp;quot;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;&lt;/span&gt;
                      &lt;span class=&quot;s&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$status&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$body_bytes_sent&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$http_referer&amp;quot;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;&lt;/span&gt;
                      &lt;span class=&quot;s&quot;&gt;&amp;#39;&amp;quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$http_user_agent&amp;quot;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$http_x_forwarded_for&amp;quot;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kn&quot;&gt;access_log&lt;/span&gt;  &lt;span class=&quot;s&quot;&gt;/var/log/nginx/access.log&lt;/span&gt;  &lt;span class=&quot;s&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kn&quot;&gt;sendfile&lt;/span&gt;        &lt;span class=&quot;no&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;#tcp_nopush     on;&lt;/span&gt;

    &lt;span class=&quot;kn&quot;&gt;keepalive_timeout&lt;/span&gt;  &lt;span class=&quot;mi&quot;&gt;65&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;#gzip  on;&lt;/span&gt;

    &lt;span class=&quot;kn&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/etc/nginx/conf.d/*.conf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;これをパーミッションから内容から色々操作したい。&lt;/p&gt;

&lt;p&gt;そんな時にレシピ &lt;code&gt;template&lt;/code&gt; を追記。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;template&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;nginx.conf&amp;quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;     &lt;span class=&quot;s2&quot;&gt;&amp;quot;/etc/nginx/nginx.conf&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;source&lt;/span&gt;   &lt;span class=&quot;s2&quot;&gt;&amp;quot;nginx.conf.erb&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;owner&lt;/span&gt;    &lt;span class=&quot;s2&quot;&gt;&amp;quot;root&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;group&lt;/span&gt;    &lt;span class=&quot;s2&quot;&gt;&amp;quot;root&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;mode&lt;/span&gt;     &lt;span class=&quot;mo&quot;&gt;0644&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;source&lt;/code&gt; が今回使うテンプレートとなる。ファイル名しか書いていないが、クックブック内の &lt;code&gt;templates/default/&lt;/code&gt; 下が読まれる様子。&lt;/p&gt;

&lt;p&gt;また、 &lt;code&gt;source&lt;/code&gt; を書かないと、Chefが &lt;code&gt;nginx.conf.erb&lt;/code&gt; を探しに行くみたい。この時の前半部 &lt;code&gt;nginx.conf&lt;/code&gt; は template の nginx.conf から来ているんだろうか。&lt;/p&gt;

&lt;p&gt;で、 &lt;code&gt;templates/default/nginx.conf.erb&lt;/code&gt; を作成する。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-nginx&quot; data-lang=&quot;nginx&quot;&gt;&lt;span class=&quot;k&quot;&gt;user&lt;/span&gt;            &lt;span class=&quot;s&quot;&gt;nginx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;worker_processes&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;error_log&lt;/span&gt;       &lt;span class=&quot;s&quot;&gt;/var/log/nginx/error.log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;pid&lt;/span&gt;             &lt;span class=&quot;s&quot;&gt;/var/run/nginx.pid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;events&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kn&quot;&gt;worker_connections&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;http&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kn&quot;&gt;include&lt;/span&gt;       &lt;span class=&quot;s&quot;&gt;/etc/nginx/mime.types&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kn&quot;&gt;default_type&lt;/span&gt;  &lt;span class=&quot;s&quot;&gt;application/octet-stream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kn&quot;&gt;server&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;listen&lt;/span&gt;      &lt;span class=&quot;s&quot;&gt;&amp;lt;%=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;node[&amp;#39;nginx&amp;#39;][&amp;#39;port&amp;#39;]&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;%&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;server_name&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;localhost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;location&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;kn&quot;&gt;root&lt;/span&gt;  &lt;span class=&quot;s&quot;&gt;/usr/share/nginx/html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;kn&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;index.htm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;基本的には、思うままに設定ファイルを作成するだけ。&lt;/p&gt;

&lt;p&gt;ただし、一点特徴として、設定ファイルの中に &lt;code&gt;Attribute&lt;/code&gt; が使える。変数を埋め込んで展開できる。&lt;/p&gt;

&lt;p&gt;上記のファイルでは &lt;code&gt;listen&lt;/code&gt; の値を &lt;code&gt;&amp;lt;%= node[&amp;#39;nginx&amp;#39;][&amp;#39;port&amp;#39;] %&amp;gt;&lt;/code&gt; としてある。&lt;/p&gt;

&lt;p&gt;これはどこに定義しているかというと……。&lt;/p&gt;

&lt;p&gt;レポジトリ直下に作っていた &lt;code&gt;localhost.json&lt;/code&gt; に定義している。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span class=&quot;err&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;localhost.json&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;nginx&amp;quot;&lt;/span&gt;    &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;quot;port&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8090&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;run_list&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;recipe[hello]&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;これが使われる。&lt;/p&gt;

&lt;p&gt;んで、templateを使ってchef実行！&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt; bundle &lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;chef-solo -c solo.rb -j localhost.json
&lt;span class=&quot;go&quot;&gt;Starting Chef Client, version 11.4.0&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Compiling Cookbooks...&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Converging 6 resources&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Recipe: hello::default&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  * package[zsh] action install (up to date)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  * package[pcre] action install (up to date)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  * package[pcre-devel] action install (up to date)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  * package[nginx] action install (up to date)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  * service[nginx] action enable (up to date)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  * service[nginx] action start (up to date)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  * template[nginx.conf] action create&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    - update template[nginx.conf] from 772e91 to acb62b&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        --- /etc/nginx/nginx.conf       2013-03-29 19:05:50.000000000 +0900&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        +++ /tmp/chef-rendered-template20130329-1313-3044nz     2013-03-29 19:05:56.000000000 +0900&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        @@ -1,32 +1,21 @@&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        -&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        -user  nginx;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        -worker_processes  1;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        -&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        -error_log  /var/log/nginx/error.log warn;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        -pid        /var/run/nginx.pid;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        -&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        +user            nginx;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        +worker_processes 1;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        +error_log       /var/log/nginx/error.log;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        +pid             /var/run/nginx.pid;&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;         events {&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        -    worker_connections  1024;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        +  worker_connections 1024;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;         }&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;        -&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;         http {&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        -    include       /etc/nginx/mime.types;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        -    default_type  application/octet-stream;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        -&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        -    log_format  main  &amp;#39;$remote_addr - $remote_user [$time_local] &amp;quot;$request&amp;quot; &amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        -                      &amp;#39;$status $body_bytes_sent &amp;quot;$http_referer&amp;quot; &amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        -                      &amp;#39;&amp;quot;$http_user_agent&amp;quot; &amp;quot;$http_x_forwarded_for&amp;quot;&amp;#39;;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        -&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        -    access_log  /var/log/nginx/access.log  main;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        -&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        -    sendfile        on;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        -    #tcp_nopush     on;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        -&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        -    keepalive_timeout  65;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        -&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        -    #gzip  on;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        -&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        -    include /etc/nginx/conf.d/*.conf;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        +  include      /etc/nginx/mime.types;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        +  default_type application/octet-stream;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        +  server {&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        +    listen      8090;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        +    server_name localhost;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        +    location / {&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        +      root  /usr/share/nginx/html;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        +      index index.htm;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        +    }&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        +  }&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;         }&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;お、置き換わったっぽい。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt; ls -l /etc/nginx/nginx.conf
&lt;span class=&quot;go&quot;&gt;-rw-r--r-- 1 root root 392  3月 29 19:05 /etc/nginx/nginx.conf&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;644のroot:rootになってる。&lt;/p&gt;

&lt;p&gt;中身は……。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-nginx&quot; data-lang=&quot;nginx&quot;&gt;&lt;span class=&quot;k&quot;&gt;user&lt;/span&gt;            &lt;span class=&quot;s&quot;&gt;nginx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;worker_processes&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;error_log&lt;/span&gt;       &lt;span class=&quot;s&quot;&gt;/var/log/nginx/error.log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;pid&lt;/span&gt;             &lt;span class=&quot;s&quot;&gt;/var/run/nginx.pid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;events&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kn&quot;&gt;worker_connections&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;http&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kn&quot;&gt;include&lt;/span&gt;      &lt;span class=&quot;s&quot;&gt;/etc/nginx/mime.types&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kn&quot;&gt;default_type&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;application/octet-stream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kn&quot;&gt;server&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;listen&lt;/span&gt;      &lt;span class=&quot;mi&quot;&gt;8090&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;server_name&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;localhost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;location&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;kn&quot;&gt;root&lt;/span&gt;  &lt;span class=&quot;s&quot;&gt;/usr/share/nginx/html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;kn&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;index.htm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;置き変わってる。listen ポートも8090になってる。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;notifies&lt;/code&gt; の話はまた今度。&lt;/p&gt;

&lt;h3 id=&quot;cookbook-file&quot;&gt;cookbook file&lt;/h3&gt;

&lt;p&gt;クックブック内のファイルをサーバの特定の場所に配備。&lt;/p&gt;

&lt;p&gt;まず、クックブックの &lt;code&gt;files/default&lt;/code&gt; ディレクトリにファイルを作る。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt; touch cookbooks/hello/files/default/README
&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;this is readme file&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; cookbooks/hello/files/default/README&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;これをレシピに &lt;code&gt;cookbook_file&lt;/code&gt; として記載。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;cookbook_file&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;/tmp/README&amp;quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;mode&lt;/span&gt; &lt;span class=&quot;mo&quot;&gt;00444&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt; bundle &lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;chef-solo -c solo.rb -j localhost.json
&lt;span class=&quot;go&quot;&gt;(略)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  * template[nginx.conf] action create (up to date)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  * cookbook_file[/tmp/README] action create&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    - create a new cookbook_file /tmp/README&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        --- /tmp/chef-tempfile20130329-2216-1jqt4bi     2013-03-29 23:41:59.000000000 +0900&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        +++ /home/kk_Ataka/chef/chef-repo/cookbooks/hello/files/default/README     2013-03-29 23:37:45.000000000 +0900&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        @@ -0,0 +1 @@&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        +this is readme file&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;Chef Client finished, 1 resources updated&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;できてるかな？&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt; ls -l /tmp/README
&lt;span class=&quot;go&quot;&gt;-r--r--r-- 1 root root 20  3月 29 23:41 /tmp/README&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt; cat /tmp/README
&lt;span class=&quot;go&quot;&gt;this is readme file&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;おーできてる。&lt;/p&gt;

&lt;p&gt;他にも &lt;code&gt;source&lt;/code&gt; , &lt;code&gt;owner&lt;/code&gt; , &lt;code&gt;group&lt;/code&gt; , &lt;code&gt;path&lt;/code&gt; , &lt;code&gt;checksum&lt;/code&gt; などを指定できる。&lt;/p&gt;

&lt;p&gt;checksumは &lt;code&gt;SHA-256&lt;/code&gt; が使われる。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt; sha256sum cookbooks/hello/files/default/README
&lt;span class=&quot;go&quot;&gt;ee55fd3276ac9361a6e632e100dba72bfa34c06f8feb2c3f8d8ae95f06941bf0  cookbooks/hello/files/default/README&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;ほい。これをレシピに指定。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;cookbook_file&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;/tmp/README&amp;quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;mode&lt;/span&gt; &lt;span class=&quot;mo&quot;&gt;00444&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;checksum&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;ee55fd3276ac9361a6e632e100dba72bfa34c06f8feb2c3f8d8ae95f06941bf0&amp;quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;問題がなければ、何事もなく。checksumを誤ると……。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;cookbook_file&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;/tmp/README&amp;quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;mode&lt;/span&gt; &lt;span class=&quot;mo&quot;&gt;00444&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;checksum&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;hoge&amp;quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;エラーとなる。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt; bundle &lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;chef-solo -c solo.rb -j localhost.json
&lt;span class=&quot;go&quot;&gt;Starting Chef Client, version 11.4.0&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Compiling Cookbooks...&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;================================================================================&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Recipe Compile Error in /home/kk_Ataka/chef/chef-repo/cookbooks/hello/recipes/default.rb&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;================================================================================&lt;/span&gt;


&lt;span class=&quot;go&quot;&gt;Chef::Exceptions::ValidationFailed&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;----------------------------------&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Option checksum&amp;#39;s value hoge does not match regular expression /^[a-zA-Z0-9]{64}$/&lt;/span&gt;


&lt;span class=&quot;go&quot;&gt;Cookbook Trace:&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;---------------&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  /home/kk_Ataka/chef/chef-repo/cookbooks/hello/recipes/default.rb:49:in `block in from_file&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  /home/kk_Ataka/chef/chef-repo/cookbooks/hello/recipes/default.rb:47:in `from_file&amp;#39;&lt;/span&gt;


&lt;span class=&quot;go&quot;&gt;Relevant File Content:&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;----------------------&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;/home/kk_Ataka/chef/chef-repo/cookbooks/hello/recipes/default.rb:&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt; 42:    group    &amp;quot;root&amp;quot;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; 43:    mode     0644&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; 44:  #  notifies :reload, &amp;#39;service[nginx]&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; 45:  end&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; 46:&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; 47:  cookbook_file &amp;quot;/tmp/README&amp;quot; do&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; 48:    mode 00444&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; 49&amp;gt;&amp;gt;   checksum &amp;quot;hoge&amp;quot;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; 50:  end&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; 51:&lt;/span&gt;


&lt;span class=&quot;go&quot;&gt;[2013-03-29T23:53:54+09:00] ERROR: Running exception handlers&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;[2013-03-29T23:53:54+09:00] ERROR: Exception handlers complete&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Chef Client failed. 0 resources updated&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;[2013-03-29T23:53:54+09:00] FATAL: Stacktrace dumped to /home/kk_Ataka/chef/chef-repo/tmp/chef-solo/chef-stacktrace.out&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;[2013-03-29T23:53:54+09:00] FATAL: Chef::Exceptions::ValidationFailed: Option checksum&amp;#39;s value hoge does not match regular expression /^[a-zA-Z0-9]{64}$&lt;/span&gt;/&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;directory&quot;&gt;directory&lt;/h3&gt;

&lt;p&gt;そのもの、ディレクトリを作る または 削除する。レシピはこう。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;directory&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;/tmp/mydirectory&amp;quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;mode&lt;/span&gt; &lt;span class=&quot;mo&quot;&gt;00755&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;owner&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;kk_Ataka&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;action&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:create&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;action&lt;/code&gt; に作るか消すかを設定、 &lt;code&gt;:create&lt;/code&gt; か &lt;code&gt;:delete&lt;/code&gt; を指定。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt; bundle &lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;chef-solo -c solo.rb -j localhost.json
&lt;span class=&quot;go&quot;&gt;(略)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  * directory[/tmp/mydirectory] action create&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    - create new directory /tmp/mydirectory&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    - change mode from &amp;#39;&amp;#39; to &amp;#39;0755&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    - change owner from &amp;#39;&amp;#39; to &amp;#39;kk_Ataka&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;できた。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt; ls -l /tmp/
&lt;span class=&quot;go&quot;&gt;drwxr-xr-x  2 kk_Ataka root 4096  3月 29 23:03 mydirectory&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;ところで、レシピを記述する順番とかは意識する必要があるんだろうか。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;README を &lt;code&gt;/tmp/mydirectory&lt;/code&gt; に置きたい&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/tmp/mydirectory&lt;/code&gt; はレシピで作る(今はない)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;後でディレクトリを作る。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;cookbook_file&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;/tmp/mydirectory/README&amp;quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;mode&lt;/span&gt; &lt;span class=&quot;mo&quot;&gt;00444&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;checksum&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;ee55fd3276ac9361a6e632e100dba72bfa34c06f8feb2c3f8d8ae95f06941bf0&amp;quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;directory&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;/tmp/mydirectory&amp;quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;mode&lt;/span&gt; &lt;span class=&quot;mo&quot;&gt;00755&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;action&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:create&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;結果、ダメ。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;go&quot;&gt;[2013-03-29T23:11:39+09:00] ERROR: Running exception handlers&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;[2013-03-29T23:11:39+09:00] ERROR: Exception handlers complete&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Chef Client failed. 0 resources updated&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;[2013-03-29T23:11:39+09:00] FATAL: Stacktrace dumped to /home/kk_Ataka/chef/chef-repo/tmp/chef-solo/chef-stacktrace.out&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;[2013-03-29T23:11:39+09:00] FATAL: Chef::Exceptions::EnclosingDirectoryDoesNotExist: cookbook_file[/tmp/mydirectory/README] (hello::default line 47) had an error: Chef::Exceptions::EnclosingDirectoryDoesNotExist: Parent directory /tmp/mydirectory does not exist.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;先にディレクトリを作る。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;directory&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;/tmp/mydirectory&amp;quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;mode&lt;/span&gt; &lt;span class=&quot;mo&quot;&gt;00755&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;action&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:create&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cookbook_file&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;/tmp/mydirectory/README&amp;quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;mode&lt;/span&gt; &lt;span class=&quot;mo&quot;&gt;00444&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;checksum&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;ee55fd3276ac9361a6e632e100dba72bfa34c06f8feb2c3f8d8ae95f06941bf0&amp;quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;結果、いけた。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;go&quot;&gt;* directory[/tmp/mydirectory] action create&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    - create new directory /tmp/mydirectory&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    - change mode from &amp;#39;&amp;#39; to &amp;#39;0755&amp;#39;&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;  * cookbook_file[/tmp/mydirectory/README] action create&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    - create a new cookbook_file /tmp/mydirectory/README&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        --- /tmp/chef-tempfile20130329-4457-myq1xs      2013-03-29 23:13:10.000000000 +0900&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        +++ /home/kk_Ataka/chef/chef-repo/cookbooks/hello/files/default/README     2013-03-29 23:37:45.000000000 +0900&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        @@ -0,0 +1 @@&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        +this is readme file&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;Chef Client finished, 2 resources updated&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt; ls -l /tmp/
&lt;span class=&quot;go&quot;&gt;合計 8&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;drwxr-xr-x  2 root root 4096  3月 29 23:13 mydirectory&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt; ls -l /tmp/mydirectory/
&lt;span class=&quot;go&quot;&gt;合計 4&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-r--r--r-- 1 root root 20  3月 29 23:13 README&lt;/span&gt;

&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt; cat /tmp/mydirectory/README
&lt;span class=&quot;go&quot;&gt;this is readme file&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;存在しないディレクトリを作ったりという事は、Chefではよろしくやってくれない&lt;/li&gt;
&lt;li&gt;必要なディレクトリなどは先に作っておく必要がある&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ということかな。&lt;/p&gt;

&lt;h3 id=&quot;user&quot;&gt;user&lt;/h3&gt;

&lt;p&gt;ユーザ作成。 &lt;code&gt;action&lt;/code&gt; は &lt;code&gt;:create&lt;/code&gt; の場合省略していいみたい。削除する場合は &lt;code&gt;:remove&lt;/code&gt; 修正もできるが一旦置いておく。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;ataka_man&amp;quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;action&lt;/span&gt;   &lt;span class=&quot;ss&quot;&gt;:create&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;comment&lt;/span&gt;  &lt;span class=&quot;s2&quot;&gt;&amp;quot;from_chef&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;home&lt;/span&gt;     &lt;span class=&quot;s2&quot;&gt;&amp;quot;/home/ataka_man&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;shell&lt;/span&gt;    &lt;span class=&quot;s2&quot;&gt;&amp;quot;/bin/bash&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;go&quot;&gt;* user[ataka_man] action create&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    - create user user[ataka_man]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;group&quot;&gt;group&lt;/h3&gt;

&lt;p&gt;グループもユーザ同様作成できる。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;group&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;xenoblade&amp;quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;action&lt;/span&gt;  &lt;span class=&quot;ss&quot;&gt;:create&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;gid&lt;/span&gt;     &lt;span class=&quot;mi&quot;&gt;999&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;members&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ataka_man&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;go&quot;&gt;* group[xenoblade] action create&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    - create group[xenoblade]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;bash&quot;&gt;bash&lt;/h3&gt;

&lt;p&gt;bashを使う事も出来る。が、「あるべき状態」に持っていくのがたいへんなので、ご利用は計画的に。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;bash&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;make_echofile_in homedir&amp;quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;kk_Ataka&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;group&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;kk_Ataka&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;cwd&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;/&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;environment&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;HOGE_PATH&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;/home/kk_Ataka/&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;code&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;EOC&lt;/span&gt;
&lt;span class=&quot;sh&quot;&gt;    cd $HOGE_PATH&lt;/span&gt;
&lt;span class=&quot;sh&quot;&gt;    touch hello&lt;/span&gt;
&lt;span class=&quot;sh&quot;&gt;    chmod 777 hello&lt;/span&gt;
&lt;span class=&quot;sh&quot;&gt;    echo &amp;quot;#!/bin/bash&amp;quot; &amp;gt;&amp;gt; hello&lt;/span&gt;
&lt;span class=&quot;sh&quot;&gt;    echo &amp;quot;echo hello&amp;quot;  &amp;gt;&amp;gt; hello&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;  EOC&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;creates&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;/home/kk_Ataka/hello&amp;quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;cwd&lt;/code&gt; はカレントワーキングディレクトリ、 &lt;code&gt;environment&lt;/code&gt; は環境変数を指定できる。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;code&lt;/code&gt; に実行したいコマンドを記述。&lt;/p&gt;

&lt;p&gt;ここでは、&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;environment&lt;/code&gt; に記載したパスに移動&lt;/li&gt;
&lt;li&gt;hello ファイルを作成&lt;/li&gt;
&lt;li&gt;実行権限変更&lt;/li&gt;
&lt;li&gt;echo文追加&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;している。&lt;/p&gt;

&lt;p&gt;最後の &lt;code&gt;creates&lt;/code&gt; は &lt;strong&gt;creates に定義したコマンドがある(実行できる)場合は、このリソースを実行しない&lt;/strong&gt; という判断のために使用される。&lt;/p&gt;

&lt;p&gt;上記のレシピを実行すると、初回は&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;go&quot;&gt;* bash[make_echofile_in homedir] action run&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    - execute &amp;quot;bash&amp;quot;  &amp;quot;/tmp/chef-script20130329-11001-k8nowp&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;実行されるが、2回目以降は&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;go&quot;&gt;* bash[make_echofile_in homedir] action run&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;こうなる。2回目以降は /home/kk_Ataka/hello が実行できるから、リソースを実行しない事になっている。&lt;/p&gt;

&lt;p&gt;しかし、 &lt;code&gt;creates&lt;/code&gt; をコメントアウトすると&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;go&quot;&gt;* bash[make_echofile_in homedir] action run&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    - execute &amp;quot;bash&amp;quot;  &amp;quot;/tmp/chef-script20130329-11473-1bf7sg9&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;go&quot;&gt;* bash[make_echofile_in homedir] action run&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    - execute &amp;quot;bash&amp;quot;  &amp;quot;/tmp/chef-script20130329-xxxxx-xxxxxxx&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;何度もexecuteされる。helloファイルも作成され続ける。&lt;/p&gt;

&lt;p&gt;ここまでで、本書の2, 3, 9-13, 15辺りをひと通り触った事になる。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Selenium WebDriverでFirefoxがロードできなくなった</title>
   <link href="http://gosyujin.github.io/2013/03/18/selenium-firefox-loaderror"/>
   <updated>2013-03-18T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2013/03/18/selenium-firefox-loaderror</id>
   <content type="html">&lt;h2 id=&quot;あらすじ&quot;&gt;あらすじ&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;Selenium IDE&lt;/code&gt; でテストケースを作成し、WebDriver形式でエクスポートしたRSpecファイルを &lt;code&gt;Firefox&lt;/code&gt; で実行すると、 &lt;code&gt;invalid byte sequence&lt;/code&gt; エラーが表示されるようになった。&lt;/p&gt;

&lt;p&gt;どこさわったからこうなったのかわからん……。&lt;/p&gt;

&lt;p&gt;(以下では、WebDriver.for時にテスト用のprofileを指定している) &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; rspec test.rb
&lt;span class=&quot;go&quot;&gt;F&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;Failures:&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;  1) test&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;     Failure/Error: @driver = Selenium::WebDriver.for :firefox, :profile =&amp;gt; profile&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;     ArgumentError:&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;       invalid byte sequence in UTF-8&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;     # ./test.rb:13:in `block (2 levels) in &amp;lt;top (required)&amp;gt;&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;profileの中かな？　とか思っていたけど。&lt;/p&gt;

&lt;h2 id=&quot;環境&quot;&gt;環境&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Ruby 1.9.3

&lt;ul&gt;
&lt;li&gt;RubyGems 2.0.1&lt;/li&gt;
&lt;li&gt;bundler (1.3.1)&lt;/li&gt;
&lt;li&gt;childprocess (0.3.9)&lt;/li&gt;
&lt;li&gt;diff-lcs (1.2.1)&lt;/li&gt;
&lt;li&gt;ffi (1.4.0)&lt;/li&gt;
&lt;li&gt;multi_json (1.6.1)&lt;/li&gt;
&lt;li&gt;rspec (2.13.0)&lt;/li&gt;
&lt;li&gt;rspec-core (2.13.0)&lt;/li&gt;
&lt;li&gt;rspec-expectations (2.13.0)&lt;/li&gt;
&lt;li&gt;rspec-mocks (2.13.0)&lt;/li&gt;
&lt;li&gt;rubyzip (0.9.9)&lt;/li&gt;
&lt;li&gt;selenium-webdriver (2.31.0)&lt;/li&gt;
&lt;li&gt;websocket (1.0.7)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Firefox 19.0.2 (x86 en-US)

&lt;ul&gt;
&lt;li&gt;プロファイルは &lt;code&gt;C:/Selenium/&lt;/code&gt; のものを使用 ( &lt;code&gt;firefox.exe -ProfileManager&lt;/code&gt; から)&lt;/li&gt;
&lt;li&gt;Selenium IDE 1.1.0&lt;/li&gt;
&lt;li&gt;Selenium IDE: Ruby Formatters 1.1.0&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;※ IEのDriverを使うと、正常に起動できる&lt;/p&gt;

&lt;h2 id=&quot;原因&quot;&gt;原因&lt;/h2&gt;

&lt;p&gt;とりあえず、WebDriver.for :firefox (vendor/bundle/ruby/1.9.1/gems/selenium-webdriver-2.31.0/lib/selenium/webdriver/common/driver.rb) から順々に処理を追っていったら……。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;browser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;opts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{})&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;listener&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;opts&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;delete&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:listener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

   &lt;span class=&quot;n&quot;&gt;bridge&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;browser&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;when&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:firefox&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:ff&lt;/span&gt;
              &lt;span class=&quot;no&quot;&gt;Firefox&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Bridge&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;opts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;どうも、レジストリを読み込むところ (vendor/bundle/ruby/1.9.1/gems/selenium-webdriver-2.31.0/lib/selenium/webdriver/firefox/binary.rb) の &lt;code&gt;reg.keys[0]&lt;/code&gt; で処理が止まっていることがわかった。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;windows_registry_path&lt;/span&gt;
     &lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;win32/registry&amp;#39;&lt;/span&gt;

     &lt;span class=&quot;n&quot;&gt;lm&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Win32&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Registry&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;HKEY_LOCAL_MACHINE&lt;/span&gt;
     &lt;span class=&quot;n&quot;&gt;lm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;SOFTWARE&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Mozilla&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Mozilla Firefox&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# ここ&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;SOFTWARE&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Mozilla&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Mozilla Firefox&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Main&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
       &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entry&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=~&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/pathtoexe/i&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
         &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entry&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;last&lt;/span&gt;
       &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
     &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;rescue&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;LoadError&lt;/span&gt;
     &lt;span class=&quot;c1&quot;&gt;# older JRuby or IronRuby does not have win32/registry&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;rescue&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Win32&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Registry&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Error&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;HKEY_LOCAL_MACHINE/SOFTWARE/Mozilla/Mozilla Firefox/hogehoge/Main&lt;/code&gt; を開こうとして力尽きている模様。。&lt;/p&gt;

&lt;p&gt;もしかしてこのレジストリ情報が存在しない？&lt;/p&gt;

&lt;p&gt;&lt;code&gt;regedit&lt;/code&gt; で確認してみる。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;go&quot;&gt;マイ コンピュータ&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;`HKEY_LOCAL_MACHINE&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; |&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; `SOFTWARE&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  |&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  `Mozilla&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;   |&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;   |`Firefox&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;   |`MaintenanceService&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;   |`Mozilla Firefox&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;   | |&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;   | `19.0.2 (en-US)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;   |  |&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;   |  |`Main&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;   |  `Uninstall&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;   `Mozilla Firefox 19.0.2&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;19.0.2 (en-US)&lt;/code&gt; が &lt;code&gt;reg.keys[0]&lt;/code&gt; に該当してる部分だなあ。&lt;/p&gt;

&lt;h2 id=&quot;解決策&quot;&gt;解決策&lt;/h2&gt;

&lt;p&gt;WebDriverのソースを直接ベタ書きすると、一応起動させる事ができた。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;lm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;SOFTWARE&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Mozilla&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Mozilla Firefox&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;SOFTWARE&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Mozilla&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Mozilla Firefox&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Main&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;SOFTWARE&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Mozilla&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Mozilla Firefox&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;19.0.2 \(en-US\)&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Main&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
     &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entry&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=~&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/pathtoexe/i&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;一応、Firefoxをアンインストールしてレジストリも消してから17.0に落としたり、18.0に上げたり、19.0に戻したりしたけど、全部上記の箇所で引っかかってた。&lt;/p&gt;

&lt;p&gt;ベタ書くと動く。&lt;/p&gt;

&lt;p&gt;うーん、なんでいきなりレジストリが読めなくなったのかきっかけがわからん。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>IEとかiPhoneWebView上でSeleniumを走らせる</title>
   <link href="http://gosyujin.github.io/2013/03/07/selenium-ie-iphone-browser"/>
   <updated>2013-03-07T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2013/03/07/selenium-ie-iphone-browser</id>
   <content type="html">&lt;h2 id=&quot;あらすじ&quot;&gt;あらすじ&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Firefoxのアドオンである &lt;code&gt;Selenium IDE&lt;/code&gt; で作ったテストケースをWebDriver, RSpec形式でエクスポート&lt;/li&gt;
&lt;li&gt;このソースは、デフォルトではFirefoxでテストが開始されるようになっている&lt;/li&gt;
&lt;li&gt;これを、 &lt;code&gt;IE&lt;/code&gt; でテストするようにしたり、 &lt;code&gt;iPhoneWebView&lt;/code&gt; (内部ブラウザ)を起動してテストするようにしたい&lt;/li&gt;
&lt;li&gt;結果としては、どちらもテスト可能だが、準備が若干めんどい&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;ieでテストをするには&quot;&gt;IEでテストをするには&lt;/h2&gt;

&lt;h3 id=&quot;環境&quot;&gt;環境&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;IE 9&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;手順&quot;&gt;手順&lt;/h3&gt;

&lt;p&gt;基本的には、 &lt;code&gt;Selenium IDE&lt;/code&gt; で生成したテストコードの「何のブラウザを開くか」ってところを変えればいいはず……。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;  &lt;span class=&quot;vi&quot;&gt;@driver&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Selenium&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;WebDriver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:firefox&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;  &lt;span class=&quot;vi&quot;&gt;@driver&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Selenium&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;WebDriver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:ie&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;……が、それだけではダメ。実行すると以下のようなエラーが出る。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;ss&quot;&gt;Failures&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;

  &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;MailcheckSpec&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;test_mailcheck_spec&lt;/span&gt;
     &lt;span class=&quot;no&quot;&gt;Failure&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;Error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@driver&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Selenium&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;WebDriver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:ie&lt;/span&gt;
     &lt;span class=&quot;no&quot;&gt;Selenium&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;WebDriver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Error&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;WebDriverError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
       &lt;span class=&quot;no&quot;&gt;Unable&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;find&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;standalone&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;executable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Please&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;download&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;IEDriverServer&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;google&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;selenium&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;downloads&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;list&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;place&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;executable&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;o&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;your&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
     &lt;span class=&quot;c1&quot;&gt;# ./mailcheck_spec.rb:10:in `block (2 levels) in &amp;lt;top (required)&amp;gt;&amp;#39;&lt;/span&gt;

&lt;span class=&quot;no&quot;&gt;Finished&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;05651&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;seconds&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;example&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;failure&lt;/span&gt;

&lt;span class=&quot;no&quot;&gt;Failed&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;examples&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;rspec&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;/mailcheck_spec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;24&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# MailcheckSpec test_mailcheck_spec&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;むむ。IEを動かすには &lt;code&gt;IEDriverServer&lt;/code&gt; というものが必要なのか。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://code.google.com/p/selenium/wiki/InternetExplorerDriver&quot;&gt;InternetExplorerDriver - selenium - Everything you wanted to know about the Internet Explorer driver - Browser automation framework - Google Project Hosting&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;You do not need to run an installer before using the InternetExplorerDriver, though some configuration is required. The standalone server executable must be downloaded from the Downloads page and placed in your PATH.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;上記のサイトからIEWebDriver(64bitか32bit)をダウンロードし、パスが通っている場所に移す。&lt;/p&gt;

&lt;p&gt;この時、 &lt;code&gt;IE -&amp;gt; ツール -&amp;gt; インターネット オプション -&amp;gt; セキュリティ -&amp;gt; インターネット、イントラ、信頼済み、制限つきサイト全ての保護モードの設定を同じ&lt;/code&gt; にする必要がある(揃っていればON/OFFはどちらでも良いらしい) &lt;/p&gt;

&lt;p&gt;で、再び実行すると、IEDriverServerが起動し、IEが開かれる！&lt;/p&gt;

&lt;h2 id=&quot;iphoneでテストをするには&quot;&gt;iPhoneでテストをするには&lt;/h2&gt;

&lt;h3 id=&quot;環境&quot;&gt;環境&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Xcode 4.5 (4.2以上)&lt;/li&gt;
&lt;li&gt;Java 1.6 (SE Runtime Environment (build 1.6.0_29-b11-402-11M3527))&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;参考サイト&quot;&gt;参考サイト&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://techmemomemo.blogspot.jp/2012/10/seleniumiphone-driverwiki.html&quot;&gt;SeleniumのiPhone DriverのWikiを翻訳してみた&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://d.hatena.ne.jp/perezvon/20120517/1337262144&quot;&gt;iWebDriverでテストする - スコトプリゴニエフスク通信&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;手順&quot;&gt;手順&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git clone https://code.google.com/p/selenium/&lt;/code&gt; でソースをDL&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;selenium/
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; ./go iphone
&lt;span class=&quot;go&quot;&gt;(in /Users/user/Desktop/selenium)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Using iPhoneSDK: &amp;#39;iphonesimulator6.0&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Building iWebDriver iphone app.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Build settings from command line:&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    ARCHS = i386&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    SDKROOT = iphonesimulator6.0&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;=== BUILD NATIVE TARGET iWebDriver OF PROJECT iWebDriver WITH CONFIGURATION Debug ===&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Check dependencies&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;(略)&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;** BUILD SUCCEEDED **&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;Compiling: //java/client/src/org/openqa/selenium/remote:api as build/java/client/src/org/openqa/selenium/remote/api.jar&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Compiling: //java/client/src/org/openqa/selenium:beta as build/java/client/src/org/openqa/selenium/beta.jar&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Compiling: //java/client/src/org/openqa/selenium/logging:api as build/java/client/src/org/openqa/selenium/logging/api.jar&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Compiling: //java/client/src/org/openqa/selenium:base as build/java/client/src/org/openqa/selenium/base.jar&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Compiling: //java/client/src/org/openqa/selenium/logging:logging as build/java/client/src/org/openqa/selenium/logging/logging.jar&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Compiling: //java/client/src/org/openqa/selenium:codecs as build/java/client/src/org/openqa/selenium/codecs.jar&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Compiling: //java/client/src/org/openqa/selenium/interactions:api as build/java/client/src/org/openqa/selenium/interactions/api.jar&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Compiling: //java/client/src/org/openqa/selenium/security:security as build/java/client/src/org/openqa/selenium/security/security.jar&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Compiling: //java/client/src/org/openqa/selenium:webdriver-api as build/java/client/src/org/openqa/selenium/webdriver-api.jar&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Compiling: //java/client/src/org/openqa/selenium/remote:base as build/java/client/src/org/openqa/selenium/remote/base.jar&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Compiling: //java/client/src/org/openqa/selenium/interactions:interactions as build/java/client/src/org/openqa/selenium/interactions/interactions.jar&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Compiling: //java/client/src/org/openqa/selenium/browserlaunchers:proxies as build/java/client/src/org/openqa/selenium/browserlaunchers/proxies.jar&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Compiling: //java/client/src/org/openqa/selenium/remote:common as build/java/client/src/org/openqa/selenium/remote/common.jar&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Compiling: //java/client/src/org/openqa/selenium/net:net as build/java/client/src/org/openqa/selenium/net/net.jar&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Compiling: //java/client/src/org/openqa/selenium/os:os as build/java/client/src/org/openqa/selenium/os/os.jar&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Compiling: //java/client/src/org/openqa/selenium/io:io as build/java/client/src/org/openqa/selenium/io/io.jar&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Compiling: //java/client/src/org/openqa/selenium/remote:remote as build/java/client/src/org/openqa/selenium/remote/remote.jar&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Compiling: //java/client/src/org/openqa/selenium/iphone:iphone as build/java/client/src/org/openqa/selenium/iphone/iphone.jar&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;実機にインストール&quot;&gt;実機にインストール&lt;/h3&gt;

&lt;p&gt;もちろん、iPhoneシミュレータでも動かせるようだが、今回はいきなり実機に放り込む。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;git clone してきたseleniumディレクトリの下にある &lt;code&gt;selenium/iphone/iWebDriver.xcodeproj&lt;/code&gt; をXcodeで起動

&lt;ul&gt;
&lt;li&gt;iPhoneを接続、ビルド&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;ビルド成功したら、 &lt;code&gt;iWebDriver&lt;/code&gt; アプリがiPhoneにインストールされる

&lt;ul&gt;
&lt;li&gt;起動すると、白い画面と画面下にアドレスが表示される( &lt;code&gt;Started at http://xx.xx.xx.xx:3001/wd/hub/&lt;/code&gt; のような感じ)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Xcode上の設定としては以下を行った。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Build Settingsの &lt;code&gt;Valid architectures&lt;/code&gt; を &lt;code&gt;i386&lt;/code&gt; から &lt;code&gt;armv7&lt;/code&gt; に変えた&lt;/li&gt;
&lt;li&gt;同じく &lt;code&gt;Code Signing Identity&lt;/code&gt; を &lt;code&gt;iPhone Developer&lt;/code&gt; に変えた&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Info.plist&lt;/code&gt; ファイルに &lt;code&gt;Application does not run in background: YES&lt;/code&gt; を追加した

&lt;ul&gt;
&lt;li&gt;一回終了したら、またはじめからとしたいため&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;操作&quot;&gt;操作&lt;/h3&gt;

&lt;p&gt;http://code.google.com/p/selenium/wiki/IPhoneDriver には以下のようにdriverの定義しろとある。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;vi&quot;&gt;@driver&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Selenium&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;WebDriver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:remote&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;http://localhost:3001/wd/hub&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:desired_capabilities&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:iphone&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# or use the convenience class which uses localhost:3001 by default&lt;/span&gt;
&lt;span class=&quot;vi&quot;&gt;@driver&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Selenium&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;WebDriver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:iphone&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;ただし、これはローカル上(シミュレータ？)の場合で、実機につなぎたい場合は &lt;code&gt;:url&lt;/code&gt; のlocalhostを上記のiPhoneアプリ上に表示されたアドレスに置き換える。&lt;/p&gt;

&lt;p&gt;……が、どうも動かない。以下のようなエラーが出る。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;go&quot;&gt;An error occurred in an after hook&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  RSpec::Expectations::ExpectationNotMetError: expected: []&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;     got: nil (using ==)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  occurred at /hogeproject/vendor/bundle/ruby/1.9.1/gems/rspec-expectations-2.13.0/lib/rspec/expectations/fail_with.rb:32:in `fail_with&amp;#39;&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;F&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;Failures:&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;  1) MailcheckSpec test_mailcheck_spec1&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;     Failure/Error: @driver = Selenium::WebDriver.for :iphone&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;     Selenium::WebDriver::Error::WebDriverError:&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;       unexpected response, code=403, content-type=&amp;quot;text/html&amp;quot;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;       &amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;       &amp;lt;head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;       &amp;lt;title&amp;gt;Error 403 Forbidden for Proxy&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;       &amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;       &amp;lt;body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;       &amp;lt;h2&amp;gt;HTTP ERROR: 403&amp;lt;/h2&amp;gt;&amp;lt;pre&amp;gt;Forbidden for Proxy&amp;lt;/pre&amp;gt;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;       &amp;lt;p&amp;gt;RequestURI=/wd/hub/session&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;       &amp;lt;p&amp;gt;&amp;lt;i&amp;gt;&amp;lt;small&amp;gt;&amp;lt;a href=&amp;quot;http://jetty.mortbay.org&amp;quot;&amp;gt;Powered by Jetty://&amp;lt;/a&amp;gt;&amp;lt;/small&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;/p&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;二つ目のWebDriver.forをコメントアウトすると動いた。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;vi&quot;&gt;@driver&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Selenium&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;WebDriver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:remote&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;http://localhost:3001/wd/hub&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:desired_capabilities&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:iphone&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# or use the convenience class which uses localhost:3001 by default&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# @driver = Selenium::WebDriver.for :iphone&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;注意&quot;&gt;注意&lt;/h3&gt;

&lt;p&gt;動かすタイミングとしては、&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;iPhoneのiWebDriverアプリを立ち上げ、 &lt;code&gt;Started at: ...&lt;/code&gt; と表示されるのを待つ&lt;/li&gt;
&lt;li&gt;PCからテストを実行する&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;iWebDriverが起動しきる前に先走ってテスト実行してしまうと余裕でエラーになったりする。&lt;/p&gt;

&lt;p&gt;それでちょっとハマった。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>自作EvernoteスクリプトをOAuth対応する</title>
   <link href="http://gosyujin.github.io/2013/03/03/evernote-oauth"/>
   <updated>2013-03-03T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2013/03/03/evernote-oauth</id>
   <content type="html">&lt;h2 id=&quot;あらすじ&quot;&gt;あらすじ&lt;/h2&gt;

&lt;p&gt;結構前に、Evernoteの認証方法がOAuthになるので、変更してくださいねーというメールがEvernoteからきていた。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://dev.evernote.com/intl/jp/documentation/cloud/chapters/Transition.php&quot;&gt;ユーザ名とパスワードによる認証から OAuth 認証への移行 - Evernote Developers&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;そのまま従来のスクリプトを動かしていると、認証エラーになるので、OAuth認証ができるように修正した。&lt;/p&gt;

&lt;p&gt;主に自分用メモ。&lt;/p&gt;

&lt;h2 id=&quot;環境&quot;&gt;環境&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Ruby 1.8.7&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;注: Evernoteスクリプトは自分しか使っていない。&lt;/p&gt;

&lt;h2 id=&quot;参考サイト&quot;&gt;参考サイト&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.evernote.com/intl/jp/documentation/cloud/chapters/Authentication.php#devtoken&quot;&gt;認証 - Evernote Developers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;手順&quot;&gt;手順&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://sandbox.evernote.com/api/DeveloperToken.action&quot;&gt;サンドボックス用のデベロッパトークンを取得 »&lt;/a&gt; ログイン必要&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.evernote.com/api/DeveloperToken.action&quot;&gt;テストの完了後、プロダクション用のデベロッパトークンを取得 »&lt;/a&gt; ログイン必要&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/static/images/EvernoteOAuth-0.jpg&quot; alt=&quot;img&quot;&gt;
&lt;img src=&quot;/static/images/EvernoteOAuth-1.jpg&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;

&lt;p&gt;他の人が使っていない、自分だけで使っている場合は以降の箇所だけ修正すればよい。&lt;/p&gt;

&lt;h2 id=&quot;修正箇所&quot;&gt;修正箇所&lt;/h2&gt;

&lt;p&gt;上記のDeveloperTokenをソース上で取得できるようにする。(今まで使っていたuserid、パスワードはいらない)以下では、Pitを使ってtokenなどを別出ししているので、そこを修正。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Pit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;evernote&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:require&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;            &lt;span class=&quot;s2&quot;&gt;&amp;quot;developerToken&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;your evernote token.&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
         &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;従来は、 &lt;code&gt;userStore.authenticate()&lt;/code&gt; で認証を通して、 &lt;code&gt;authenticationToken&lt;/code&gt; を使うようにしていたが、このくだりを &lt;strong&gt;まるまるカット&lt;/strong&gt; 。&lt;/p&gt;

&lt;p&gt;この &lt;code&gt;authenticationToken&lt;/code&gt; を &lt;code&gt;developerToken&lt;/code&gt; に置き換えてやる。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# 認証&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;        &lt;span class=&quot;vi&quot;&gt;@auth&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;auth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;userStore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;        &lt;span class=&quot;vi&quot;&gt;@authToken&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@auth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;authenticationToken&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;       
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;        &lt;span class=&quot;vi&quot;&gt;@authToken&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;developerToken&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;で、一個だけ困ったのが、認証結果からuserのshardIdを取ってきてnoteStoreUrlを生成していた箇所。&lt;/p&gt;

&lt;p&gt;まるまるカットされたので、どうやって取得するのかな？　と思ったら、userStoreに &lt;code&gt;getNoteStoreUrl(token)&lt;/code&gt; というメソッドがあるので、これを使えば良い。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;noteStoreUrlBase&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;https://&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;evernoteHost&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/edam/note/&amp;quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;noteStoreUrl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;noteStoreUrlBase&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@auth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shardId&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;noteStoreUrl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;userStore&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getNoteStoreUrl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@authToken&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
         &lt;span class=&quot;n&quot;&gt;noteStoreTransport&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Thrift&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;HTTPClientTransport&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;noteStoreUrl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
         &lt;span class=&quot;n&quot;&gt;noteStoreProtocol&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Thrift&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;BinaryProtocol&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;noteStoreTransport&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
         &lt;span class=&quot;vi&quot;&gt;@noteStore&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Evernote&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;EDAM&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;NoteStore&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;NoteStore&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;noteStoreProtocol&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;これだけで、とりあえず動くようにはなった！&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Ruby 2.0.0 をpikとrvm経由でインストール&環境構築</title>
   <link href="http://gosyujin.github.io/2013/02/25/ruby200-helloworld-pik-rvm"/>
   <updated>2013-02-25T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2013/02/25/ruby200-helloworld-pik-rvm</id>
   <content type="html">&lt;h2 id=&quot;あらすじ&quot;&gt;あらすじ&lt;/h2&gt;

&lt;p&gt;Ruby 2.0.0 がリリースされたので、インストールしつつ、新機能を使ってみる。&lt;/p&gt;

&lt;p&gt;…と思ったけど、意外とてこずったので、とりあえずインストールと準備だけ。&lt;/p&gt;

&lt;p&gt;後途中にGemの作り方めも。&lt;/p&gt;

&lt;h2 id=&quot;環境1&quot;&gt;環境1&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Windows XP&lt;/li&gt;
&lt;li&gt;Ruby 2.0.0&lt;/li&gt;
&lt;li&gt;pik&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;インストール&quot;&gt;インストール&lt;/h2&gt;

&lt;p&gt;まずはインストール。pikなので &lt;code&gt;pik install&lt;/code&gt; で。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; pik install ruby 2.0.0
&lt;span class=&quot;go&quot;&gt;** Downloading:  http://rubyforge.org/frs/download.php/76807/ruby-2.0.0-p0-i386-mingw32.7z&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;   to:  C:\Documents and Settings\user\.pik\downloads\ruby-2.0.0-p0-i386-mingw32.7z&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;ruby-2.0.0-p0-i386-mingw32.7z: 100% |oooooooooo|   8.9MB/  8.9MB Time: 00:00:57&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;** Extracting:  C:\Documents and Settings\user\.pik\downloads\ruby-2.0.0-p0-i386-mingw32.7z&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;   to:  C:\rubies\Ruby-200-p0&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;done&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;** Adding:  200: ruby 2.0.0p0 (2013-02-24) [i386-mingw32]&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; Located at:  C:\rubies\Ruby-200-p0\bin&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;あっさり。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; pik default
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; ruby -v
&lt;span class=&quot;go&quot;&gt;bundler is found: bundle exec ruby -v&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;ruby 1.9.3p0 (2011-10-30) [i386-mingw32]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;今は、1.9.3。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; pik list
&lt;span class=&quot;go&quot;&gt;  167: jruby 1.6.7 (ruby-1.8.7-p357) (2012-02-22 3e82bc8) (Java HotSpot(TM) Client VM 1.6.0_04)...&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  187: ruby 1.8.7 (2010-12-23 patchlevel 330) [i386-mswin32]&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  187: ruby 1.8.7 (2011-06-30 patchlevel 352) [i386-mingw32]&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  192: ruby 1.9.2p290 (2011-07-09) [i386-mingw32]&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;* 193: ruby 1.9.3p0 (2011-10-30) [i386-mingw32]&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  200: ruby 2.0.0p0 (2013-02-24) [i386-mingw32]&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; pik use 200
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; pik list
&lt;span class=&quot;go&quot;&gt;  167: jruby 1.6.7 (ruby-1.8.7-p357) (2012-02-22 3e82bc8) (Java HotSpot(TM) Client VM 1.6.0_04)...&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  187: ruby 1.8.7 (2010-12-23 patchlevel 330) [i386-mswin32]&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  187: ruby 1.8.7 (2011-06-30 patchlevel 352) [i386-mingw32]&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  192: ruby 1.9.2p290 (2011-07-09) [i386-mingw32]&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  193: ruby 1.9.3p0 (2011-10-30) [i386-mingw32]&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;* 200: ruby 2.0.0p0 (2013-02-24) [i386-mingw32]&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; ruby -v
&lt;span class=&quot;go&quot;&gt;bundler is NOT found or Gemfile is NOT found: ruby -v&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;ruby 2.0.0p0 (2013-02-24) [i386-mingw32]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;2.0.0に切り替わった！&lt;/p&gt;

&lt;p&gt;gem確認。。。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; gem list
&lt;span class=&quot;go&quot;&gt;Failed to load C:/Documents and Settings/user/.gemrc because it doesn&amp;#39;t contain valid YAML hash&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;*** LOCAL GEMS ***&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;bigdecimal (1.2.0)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;io-console (0.4.2)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;json (1.7.7)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;minitest (4.3.2)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;psych (2.0.0)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;rake (0.9.6)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;rdoc (4.0.0)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;test-unit (2.0.0.0)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;あれ？なんかエラー出る…。&lt;/p&gt;

&lt;p&gt;色々動かしてみたら、どうも &lt;code&gt;空の.gemrc&lt;/code&gt; があると、警告が出るようになった様子。出てても問題なさげ？&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Ruby 1.9.3

&lt;ul&gt;
&lt;li&gt;.gemrcなし: 何も出ない&lt;/li&gt;
&lt;li&gt;空.gemrc: 何も出ない&lt;/li&gt;
&lt;li&gt;記載あり.gemrc: 何も出ない&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Ruby 2.0.0

&lt;ul&gt;
&lt;li&gt;.gemrcなし: 何も出ない&lt;/li&gt;
&lt;li&gt;空.gemrc: &lt;code&gt;Failed to load ...&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;記載あり.gemrc: 何も出ない&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;という事で、今は特に使っていないので、いさぎよく.gemrcを削除。&lt;/p&gt;

&lt;h3 id=&quot;環境構築&quot;&gt;環境構築&lt;/h3&gt;

&lt;p&gt;Bundlerだけでも入れておこうかな&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; gem install bundler
&lt;span class=&quot;go&quot;&gt;Fetching: bundler-1.2.4.gem (100%)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Successfully installed bundler-1.2.4&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Parsing documentation for bundler-1.2.4&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Installing ri documentation for bundler-1.2.4&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Done installing documentation for bundler (18 sec).&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;1 gem installed&lt;/span&gt;

&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; ruby -v
&lt;span class=&quot;go&quot;&gt;bundler is found: bundle exec ruby -v&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Bundler is not compatible with Ruby 2.0 or Rubygems 2.0.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Please upgrade to Bundler 1.3 or higher.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;ガーン。Bundler 1.3以降じゃないと対応してないのかー。&lt;/p&gt;

&lt;p&gt;あれ？GitHubには24 February 2013に1.3出てるって書かれてる。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/carlhuda/bundler&quot;&gt;carlhuda/bundler · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;まだRubygemsに反映されていないのかな？なら直接入れてみよう。&lt;/p&gt;

&lt;p&gt;一旦、旧Bundler削除。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; gem uninstall bundler
&lt;span class=&quot;go&quot;&gt;Remove executables:&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        bundle&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;in addition to the gem? [Yn]  y&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Removing bundle&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Successfully uninstalled bundler-1.2.4&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;次に、上記のサイトからbundlerを落としてくる。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git clone http://github.com/carlhuda/bundler.git
&lt;span class=&quot;go&quot;&gt;Cloning into &amp;#39;bundler&amp;#39;...&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;remote: Counting objects: 28447, done.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;remote: Compressing objects: 100% (9733/9733), done.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;remote: Total 28447 (delta 19095), reused 27460 (delta 18213)Receiving objects:  99% (28163/28447), 2.47 MiB | 2.43 MiB/s&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Receiving objects: 100% (28447/28447), 5.30 MiB | 2.43 MiB/s, done.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Resolving deltas: 100% (19095/19095), done.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Checking out files: 100% (214/214), done.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;で、gemを作る。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; gem build bundler.gemspec
&lt;span class=&quot;go&quot;&gt;  Successfully built RubyGem&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  Name: bundler&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  Version: 1.3.0&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  File: bundler-1.3.0.gem&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;bundler-1.3.0.gem&lt;/code&gt; ができるので、これをインストール。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; gem install --local bundler-1.3.0.gem
&lt;span class=&quot;go&quot;&gt;Successfully installed bundler-1.3.0&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Done installing documentation for bundler (0 sec).&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;1 gem installed&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; bundle -v
&lt;span class=&quot;go&quot;&gt;Bundler version 1.3.0&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;入った。
1プロジェクトだけbundle installしてみたけどうまく動いたので、とりあえずOKかな。&lt;/p&gt;

&lt;p&gt;次。&lt;/p&gt;

&lt;h2 id=&quot;環境2&quot;&gt;環境2&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;CentOS 6.2&lt;/li&gt;
&lt;li&gt;Ruby 2.0.0&lt;/li&gt;
&lt;li&gt;rvm 1.11.6&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;インストール&quot;&gt;インストール&lt;/h2&gt;

&lt;p&gt;……する前に。そのままだと &lt;code&gt;rvm list known&lt;/code&gt; を見てもruby 1.9.3までしかないので、rvmの更新を行う。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://kuroigamen.com/51&quot;&gt;RVM がかなり古くなってたので、RVM のアップデートに挑戦 - KUROIGAMEN(黒い画面)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; rvm -v

&lt;span class=&quot;go&quot;&gt;rvm 1.11.6 () by Wayne E. Seguin &amp;lt;wayneeseguin@gmail.com&amp;gt;, Michal Papis &amp;lt;mpapis@gmail.com&amp;gt; [https://rvm.beginrescueend.com/]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; rvm get latest
&lt;span class=&quot;go&quot;&gt;Downloading RVM version 1.18.14&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;                                 Dload  Upload   Total   Spent    Left  Speed&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;100   125  100   125    0     0    147      0 --:--:-- --:--:-- --:--:--   193&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;100 1490k  100 1490k    0     0   315k      0  0:00:04  0:00:04 --:--:--  493k&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;Upgrading the RVM installation in /home/kk_Ataka/.rvm/&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    RVM PATH line found in /home/kk_Ataka/.bashrc.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    RVM sourcing line found in /home/kk_Ataka/.bashrc /home/kk_Ataka/.bash_profile /home/kk_Ataka/.zlogin.&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;Upgrade Notes:&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;  * For screen users, please do not forget to read https://rvm.io/workflow/screen/.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  * If your shell exits on entering a directory with freshly checked out sources&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  * RVM comes with set of default gems including &amp;#39;bundler&amp;#39;, &amp;#39;rake&amp;#39;, &amp;#39;rubygems-bundler&amp;#39; and &amp;#39;rvm&amp;#39; gems,&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    if you do not wish to get this gems install RVM with this flag: --without-gems=&amp;quot;rvm rubygems-bundler&amp;quot;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    this option is remembered, it&amp;#39;s enough to use it once.&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;  * If you wish to get more default(global) gems installed, install RVM with this flag: --with-gems=&amp;quot;pry vagrant&amp;quot;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    this option is remembered, it&amp;#39;s enough to use it once.&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;  * For first installed ruby RVM will: display rvm requirements, set it as default and use it.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    To avoid this behavior either use full path to rvm binary or prefix it with `command `.&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;  * Binary rubies are installed by default if available, you can read about it in help:&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      rvm help install&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      rvm help mount&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;  * The default umask for multi-user installation got extended to `umask u=rwx,g=rwx,o=rx`,&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    comment it out to avoid automatic updates.&lt;/span&gt;


&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt; RVM:  Shell scripts enabling management of multiple ruby environments.
&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt; RTFM: https://rvm.io/
&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt; HELP: http://webchat.freenode.net/?channels&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;rvm &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;#rvm on irc.freenode.net)&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt; Cheatsheet: http://cheat.errtheblog.com/s/rvm/
&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt; Screencast: http://screencasts.org/episodes/how-to-use-rvm

&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt; In &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; of any issues &lt;span class=&quot;nb&quot;&gt;read &lt;/span&gt;output of &lt;span class=&quot;s1&quot;&gt;&amp;#39;rvm requirements&amp;#39;&lt;/span&gt; and/or &lt;span class=&quot;s1&quot;&gt;&amp;#39;rvm notes&amp;#39;&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;Upgrade of RVM in /home/kk_Ataka/.rvm/ is complete.&lt;/span&gt;

&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt; kk_Ataka,
&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt;   Thank you &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; using RVM!
&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt;   I sincerely hope that RVM helps to make your life easier and
&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt;   more enjoyable!!!
&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt; ~Wayne

&lt;span class=&quot;go&quot;&gt;RVM reloaded!&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;一覧を確認すると……あった。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; rvm list known
&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt; MRI Rubies
&lt;span class=&quot;go&quot;&gt;[ruby-]1.8.6[-p420]&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;[ruby-]1.8.7[-p371]&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;[ruby-]1.9.1[-p431]&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;[ruby-]1.9.2[-p320]&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;[ruby-]1.9.3-p125&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;[ruby-]1.9.3-p194&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;[ruby-]1.9.3-p286&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;[ruby-]1.9.3-p327&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;[ruby-]1.9.3-p362&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;[ruby-]1.9.3-p374&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;[ruby-]1.9.3-p385&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;[ruby-]1.9.3-[p392]&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;[ruby-]1.9.3-head&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;[ruby-]2.0.0-rc1&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;[ruby-]2.0.0-rc2&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;[ruby-]2.0.0[-p0]&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;ruby-head&lt;/span&gt;

&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt; GoRuby
&lt;span class=&quot;go&quot;&gt;goruby&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;...&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;そしてインストール。でもここで止まる……。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; rvm install ruby-2.0.0
&lt;span class=&quot;go&quot;&gt;Searching for binary rubies, this might take some time.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;No binary rubies available for: centos/6.2/x86_64/ruby-2.0.0-p0.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Continuing with compilation. Please read &amp;#39;rvm mount&amp;#39; to get more information on binary rubies.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Fetching yaml-0.1.4.tar.gz to /home/kk_Ataka/.rvm/archives&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;####################################################################### 100.0%&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Extracting yaml to /home/kk_Ataka/.rvm/src/yaml-0.1.4&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Prepare yaml in /home/kk_Ataka/.rvm/src/yaml-0.1.4.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Configuring yaml in /home/kk_Ataka/.rvm/src/yaml-0.1.4.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Compiling yaml in /home/kk_Ataka/.rvm/src/yaml-0.1.4.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Installing yaml to /home/kk_Ataka/.rvm/usr&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Installing Ruby from source to: /home/kk_Ataka/.rvm/rubies/ruby-2.0.0-p0, this may take a while depending on your cpu(s)...&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;ruby-2.0.0-p0 - #downloading ruby-2.0.0-p0, this may take a while depending on your connection...&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;####################################################################### 100.0%&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;ruby-2.0.0-p0 - #extracting ruby-2.0.0-p0 to /home/kk_Ataka/.rvm/src/ruby-2.0.0-p0&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;ruby-2.0.0-p0 - #extracted to /home/kk_Ataka/.rvm/src/ruby-2.0.0-p0&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;ruby-2.0.0-p0 - #configuring&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;ruby-2.0.0-p0 - #compiling&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;かなり時間がかかったので、どこかで処理が止まっているのかなと思い一回abortさせてしまったが、再度挑戦したらいけた。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; rvm install ruby-2.0.0
&lt;span class=&quot;go&quot;&gt;Searching for binary rubies, this might take some time.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;No binary rubies available for: centos/6.2/x86_64/ruby-2.0.0-p0.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Continuing with compilation. Please read &amp;#39;rvm mount&amp;#39; to get more information on binary rubies.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Installing Ruby from source to: /home/kk_Ataka/.rvm/rubies/ruby-2.0.0-p0, this may take a while depending on your cpu(s)...&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;ruby-2.0.0-p0 - #downloading ruby-2.0.0-p0, this may take a while depending on your connection...&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;ruby-2.0.0-p0 - #extracted to /home/kk_Ataka/.rvm/src/ruby-2.0.0-p0 (already extracted)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;ruby-2.0.0-p0 - #configuring&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;ruby-2.0.0-p0 - #compiling&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;ruby-2.0.0-p0 - #installing &lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Retrieving rubygems-2.0.0&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;####################################################################### 100.0%&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Extracting rubygems-2.0.0 ...&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Removing old Rubygems files...&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Installing rubygems-2.0.0 for ruby-2.0.0-p0 ...&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Installation of rubygems completed successfully.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Saving wrappers to &amp;#39;/home/kk_Ataka/.rvm/bin&amp;#39;.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;ruby-2.0.0-p0 - #adjusting #shebangs for (gem irb erb ri rdoc testrb rake).&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;ruby-2.0.0-p0 - #importing default gemsets, this may take time ...&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Install of ruby-2.0.0-p0 - #complete&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; rvm list

&lt;span class=&quot;go&quot;&gt;rvm rubies&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;   ruby-1.8.7-p358 [ x86_64 ]&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;=* ruby-1.9.2-p318 [ x86_64 ]&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;   ruby-1.9.3-p125 [ x86_64 ]&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;   ruby-2.0.0-p0 [ x86_64 ]&lt;/span&gt;

&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; - &lt;span class=&quot;nv&quot;&gt;current&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;* - current &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; default
&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt;  * - default&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;切り替えもできる。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; rvm use ruby-2.0.0
&lt;span class=&quot;go&quot;&gt;Using /home/kk_Ataka/.rvm/gems/ruby-2.0.0-p0&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; ruby -v
&lt;span class=&quot;go&quot;&gt;ruby -v&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;ruby 2.0.0p0 (2013-02-24 revision 39474) [x86_64-linux]&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; gem list

&lt;span class=&quot;go&quot;&gt;*** LOCAL GEMS ***&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;bigdecimal (1.2.0)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;bundler (1.3.0.pre.8)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;io-console (0.4.2)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;json (1.7.7)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;minitest (4.3.2)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;psych (2.0.0)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;rake (10.0.3, 0.9.6)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;rdoc (4.0.0)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;rubygems-bundler (1.1.0)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;rvm (1.11.3.6)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;test-unit (2.0.0.0)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;あれ？こっちはbundlerのpreが入っとる。&lt;/p&gt;

&lt;p&gt;bundle実行した時に警告？が出るなー。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; bundle install
&lt;span class=&quot;go&quot;&gt;The source :rubygems is deprecated because HTTP requests are insecure.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Please change your source to &amp;#39;https://rubygems.org&amp;#39; if possible, or &amp;#39;http://rubygems.org&amp;#39; if not.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>すごいHaskellたのしく学ぼうでHaskellことはじめ4</title>
   <link href="http://gosyujin.github.io/2013/02/19/haskell-helloworld5"/>
   <updated>2013-02-19T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2013/02/19/haskell-helloworld5</id>
   <content type="html">&lt;h2 id=&quot;前回までのあらすじ&quot;&gt;前回までのあらすじ&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://gosyujin.github.com/2013/02/04/haskell-helloworld4/&quot;&gt;すごいHaskellたのしく学ぼうでHaskellことはじめ3&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;なんとなーく再帰は書けたかなー？というレベル。&lt;/p&gt;

&lt;p&gt;この先生きのこれるのか……。&lt;/p&gt;

&lt;h2 id=&quot;参考&quot;&gt;参考&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;すごいHaskellたのしく学ぼう&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;5章-高階関数&quot;&gt;5章 高階関数&lt;/h2&gt;

&lt;h3 id=&quot;カリー化&quot;&gt;カリー化&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Haskellでは &lt;strong&gt;すべての関数が引数を一つだけとる&lt;/strong&gt; 事になっている。

&lt;ul&gt;
&lt;li&gt;……んでも今まで普通に二つとか引数とってなかったっけ？ &lt;code&gt;max&lt;/code&gt; とか&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;max関数&quot;&gt;max関数&lt;/h4&gt;

&lt;p&gt;本書より、 &lt;code&gt;max 4 5&lt;/code&gt; の場合……。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;はじめに &lt;code&gt;max 4&lt;/code&gt; が適用される&lt;/li&gt;
&lt;li&gt;&lt;code&gt;max 4&lt;/code&gt; の返り値は &lt;code&gt;5 に適用するための別の関数&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;別の関数 5&lt;/code&gt; が適用され、最終的な値が返る&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ふーむ……？&lt;/p&gt;

&lt;p&gt;max関数の型はこう。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-haskell&quot; data-lang=&quot;haskell&quot;&gt;&lt;span class=&quot;kt&quot;&gt;Prelude&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;max&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;max&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Ord&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;こう書く事もできる。 &lt;code&gt;a型の値を引数にとり、a型の値を返す&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-haskell&quot; data-lang=&quot;haskell&quot;&gt;&lt;span class=&quot;nf&quot;&gt;max&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Ord&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
 

&lt;p&gt;関数を本来より少ない引数で呼び出すことを &lt;code&gt;部分適用する&lt;/code&gt; という。 &lt;code&gt;部分適用&lt;/code&gt; すると、関数をその場で作りだし、それを他の関数に渡せる。&lt;/p&gt;

&lt;p&gt;それを踏まえて、max関数。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;はじめに &lt;code&gt;max 4&lt;/code&gt; が適用される (一つ目のa)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;max 4&lt;/code&gt; の返り値は &lt;strong&gt;引数を一つとって関数を返す関数&lt;/strong&gt; となる
( ( a -&amp;gt; a ) の部分)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;引数を一つとって関数を返す関数&lt;/strong&gt; に5が適用され、最終的な値が返る ( かっこの中の a -&amp;gt; a )&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;これらから、部分適用できる、というのは何となくだけどわかった。これはかけるのだ。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-haskell&quot; data-lang=&quot;haskell&quot;&gt;&lt;span class=&quot;kt&quot;&gt;Prelude&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;max&amp;#39;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;max&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;Prelude&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;max&amp;#39;&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;max&amp;#39;&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Num&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Ord&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;Prelude&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;max&amp;#39;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
 

&lt;p&gt;これがわからない。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-haskell&quot; data-lang=&quot;haskell&quot;&gt;&lt;span class=&quot;kt&quot;&gt;Prelude&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;max&amp;#39;&amp;#39;&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;max&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;Prelude&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;max&amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;max&amp;#39;&amp;#39;&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Integer&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Integer&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;Prelude&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;max&amp;#39;&amp;#39;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
 

&lt;p&gt;やっていることは上と等価なはずなんだけど、関数定義の部分に変数xがいない。&lt;/p&gt;

&lt;p&gt;max 4 の返り値が &lt;strong&gt;引数を一つとって関数を返す関数&lt;/strong&gt; であるから、max&amp;#39;&amp;#39; も引数を一つとれるということ？&lt;/p&gt;

&lt;h3 id=&quot;セクション&quot;&gt;セクション&lt;/h3&gt;

&lt;p&gt;中置関数(divとか)も部分適用ができる。&lt;/p&gt;

&lt;p&gt;ん？カリー化どこいったの？&lt;/p&gt;

&lt;p&gt;カリー化=部分適用……ではないんだよね？ - &lt;a href=&quot;http://d.hatena.ne.jp/kazu-yamamoto/20110906/1315279311&quot;&gt;カリー化談義 - あどけない話&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;ともあれ、中置関数はこう書く。かっこでくくって部分適用したい方の引数に値を書く。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-haskell&quot; data-lang=&quot;haskell&quot;&gt;&lt;span class=&quot;nf&quot;&gt;divideByTen&lt;/span&gt;  &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(`&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;divideByTen&amp;#39;&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;`)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-haskell&quot; data-lang=&quot;haskell&quot;&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;divideByTen&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;#&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;divideByTen&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;#&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;divideByTen&amp;#39;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;#&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;divideByTen&amp;#39;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;#&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;ただし、引き算を使うときだけ注意しなければならない。 &lt;code&gt;(-4)&lt;/code&gt; は &lt;code&gt;マイナス4&lt;/code&gt; として扱われる。(引きたい時は &lt;code&gt;subtract&lt;/code&gt; 関数を使う)&lt;/p&gt;

&lt;h3 id=&quot;関数を表示する&quot;&gt;関数を表示する&lt;/h3&gt;

&lt;p&gt;これがどうなのか知りたかった！……んだけど「Show型クラスのインスタンスでないとエラーとなる」だって。&lt;/p&gt;

&lt;p&gt;結局「その関数」(今回はdiv)が引数をどう取るか、部分適用して今どういう状態になっているのか(本書の言い方だと、どんな小さい工場になっているか)知らないと、部分適用しているかどうかってわからないって事？&lt;/p&gt;

&lt;p&gt;うーん。&lt;/p&gt;

&lt;h3 id=&quot;高階実演&quot;&gt;高階実演&lt;/h3&gt;

&lt;p&gt;Haskellでは関数も引数にとれる。同じ関数を二回適用する。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-haskell&quot; data-lang=&quot;haskell&quot;&gt;&lt;span class=&quot;nf&quot;&gt;applyTwice&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-haskell&quot; data-lang=&quot;haskell&quot;&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;applyTwice&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tail&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;f (f x) -&amp;gt; f (tail [1,2,3,4]) -&amp;gt; f ([2,3,4]) -&amp;gt; tail [2,3,4] -&amp;gt; [3,4]&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;ってことかな。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-haskell&quot; data-lang=&quot;haskell&quot;&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;applyTwice&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Hoge&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;A&amp;quot;&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;&amp;quot;AHogeHoge&amp;quot;&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;applyTwice&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Hoge&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;A&amp;quot;&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;&amp;quot;HogeHogeA&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;こういうのに対しては部分適用が使われている。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;f (f x) -&amp;gt; f ((++ &amp;quot;Hoge&amp;quot;) &amp;quot;A&amp;quot; -&amp;gt; f (&amp;quot;AHoge&amp;quot;) -&amp;gt; (++ &amp;quot;Hoge&amp;quot;) &amp;quot;AHoge&amp;quot; -&amp;gt; &amp;quot;AHogeHoge&amp;quot;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;こういうことか！順番あってる？&lt;/p&gt;

&lt;h4 id=&quot;zipwith&quot;&gt;zipWith&lt;/h4&gt;

&lt;p&gt;こんな関数。1つの関数と2つのリストを引数に持ち、リストの各要素に関数を適用する。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-haskell&quot; data-lang=&quot;haskell&quot;&gt;&lt;span class=&quot;kt&quot;&gt;Prelude&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;zipWith&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-haskell&quot; data-lang=&quot;haskell&quot;&gt;&lt;span class=&quot;nf&quot;&gt;zipWith&amp;#39;&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;[]&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;zipWith&amp;#39;&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;[]&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;zipWith&amp;#39;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;zipWith&amp;#39;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xs&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ys&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;flip&quot;&gt;flip&lt;/h4&gt;

&lt;p&gt;これも関数と2つの値をとる。で、値の順番を入れ替える。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-haskell&quot; data-lang=&quot;haskell&quot;&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;flip&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;flip&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;***&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Exception:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;divide&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;zero&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;flip&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;flip&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-haskell&quot; data-lang=&quot;haskell&quot;&gt;&lt;span class=&quot;nf&quot;&gt;flip&amp;#39;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;んー何となく書けたんだけど、解説がわからないぞ……。(解説ではxとyが逆になってる)&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;この新しいバージョンのflip&amp;#39; では、関数がカリー化されていることをうまく使っています。flip&amp;#39; f を引数y とx なしで呼び出したら、2 つの引数を取る、引数の入れ替わったf が返るでしょう。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;そうなの？&lt;/p&gt;

&lt;p&gt;型を調べてみる。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-haskell&quot; data-lang=&quot;haskell&quot;&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;flip&amp;#39;&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;flip&amp;#39;&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t1&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t2&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t2&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t1&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;あ、わかったかも。並べて、&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-haskell&quot; data-lang=&quot;haskell&quot;&gt;&lt;span class=&quot;nf&quot;&gt;flip&amp;#39;&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t1&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t2&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t2&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t1&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;flip&amp;#39;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;最初の引数(f)は &lt;code&gt;引数を二つ(t1, t2)をとり、関数(t)を返す関数&lt;/code&gt; &lt;code&gt;(div) y x&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;最初の引数(f)に次の引数(x / t2)を適用すると &lt;code&gt;最初の引数(f)に引数t2を適用した関数を返す関数&lt;/code&gt; を返す &lt;code&gt;(div) y 0&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;最初の引数(f)に引数t2を適用した関数を返す関数&lt;/code&gt; に次の次の引数(y /t1)を適用すると &lt;code&gt;結果をshowする関数？&lt;/code&gt; を返す？ &lt;code&gt;(div) 2 0&lt;/code&gt; = 0&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;……？&lt;/p&gt;

&lt;p&gt;あれ？違うっぽいな……。 &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;続く！&lt;/strong&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>すごいHaskellたのしく学ぼうでHaskellことはじめ3</title>
   <link href="http://gosyujin.github.io/2013/02/04/haskell-helloworld4"/>
   <updated>2013-02-04T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2013/02/04/haskell-helloworld4</id>
   <content type="html">&lt;h2 id=&quot;前回までのあらすじ&quot;&gt;前回までのあらすじ&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://gosyujin.github.com/2013/01/24/haskell-helloworld3/&quot;&gt;すごいHaskellたのしく学ぼうでHaskellことはじめ2&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;参考&quot;&gt;参考&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;すごいHaskellたのしく学ぼう&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;4章-再帰&quot;&gt;4章 再帰&lt;/h2&gt;

&lt;p&gt;リストの中の最大値を取得するmax&amp;#39;関数を実装する。&lt;/p&gt;

&lt;h3 id=&quot;max-39-関数&quot;&gt;max&amp;#39;関数&lt;/h3&gt;

&lt;h4 id=&quot;手順&quot;&gt;手順&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;動作原理はP53の図の通り。max&amp;#39;をずーっと掘っていく&lt;/li&gt;
&lt;li&gt;max&amp;#39;にリストを渡すと、ずーっと3番目のmax&amp;#39;が実行されるが、最後の一回だけは要素一つのリストになっているので、2番目の式が実行される&lt;/li&gt;
&lt;li&gt;最後までいったらさかのぼる &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-haskell&quot; data-lang=&quot;haskell&quot;&gt;&lt;span class=&quot;nf&quot;&gt;max&amp;#39;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;ne&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;empty&amp;quot;&lt;/span&gt;        &lt;span class=&quot;c1&quot;&gt;-- 1番目&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;max&amp;#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;                   &lt;span class=&quot;c1&quot;&gt;-- 2番目&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;max&amp;#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;max&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;max&amp;#39;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;-- 3番目&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;実行結果&quot;&gt;実行結果&lt;/h4&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-haskell&quot; data-lang=&quot;haskell&quot;&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;max&amp;#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;max&amp;#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;max&amp;#39;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;[]&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;***&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Exception:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;empty&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;他の再帰&quot;&gt;他の再帰&lt;/h3&gt;

&lt;p&gt;残りの再帰例も写経してみる+一部いじってみる。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-haskell&quot; data-lang=&quot;haskell&quot;&gt;&lt;span class=&quot;nf&quot;&gt;replicate&amp;#39;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;     &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;[]&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;otherwise&lt;/span&gt;  &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;concat&lt;/span&gt;
 &lt;span class=&quot;kr&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;concat&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;replicate&amp;#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;

&lt;span class=&quot;nf&quot;&gt;take&amp;#39;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;_&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;      &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;[]&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;take&amp;#39;&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;[]&lt;/span&gt;     &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;[]&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;take&amp;#39;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;concat&lt;/span&gt;
 &lt;span class=&quot;kr&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;concat&lt;/span&gt;  &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;take&amp;#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xs&lt;/span&gt;

&lt;span class=&quot;nf&quot;&gt;reverse&amp;#39;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;[]&lt;/span&gt;     &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;[]&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;reverse&amp;#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reverse&amp;#39;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;nf&quot;&gt;zip&amp;#39;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;_&lt;/span&gt;          &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;[]&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;zip&amp;#39;&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;[]&lt;/span&gt;          &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;[]&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;zip&amp;#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;concat&lt;/span&gt;
 &lt;span class=&quot;kr&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;concat&lt;/span&gt;      &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;zip&amp;#39;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xs&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ys&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;写経してみれば、なんとなく書きっぷりはわかってくるな。 &lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>すごいHaskellたのしく学ぼうでHaskellことはじめ2</title>
   <link href="http://gosyujin.github.io/2013/01/24/haskell-helloworld3"/>
   <updated>2013-01-24T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2013/01/24/haskell-helloworld3</id>
   <content type="html">&lt;h2 id=&quot;前回までのあらすじ&quot;&gt;前回までのあらすじ&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://gosyujin.github.com/2013/01/21/haskell-helloworld2/&quot;&gt;すごいHaskellたのしく学ぼうでHaskellことはじめ&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;GitHub Pagesの方にリンクを貼ってみよう。&lt;/p&gt;

&lt;h2 id=&quot;参考&quot;&gt;参考&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;すごいHaskellたのしく学ぼう&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;3章-関数の構文&quot;&gt;3章 関数の構文&lt;/h2&gt;

&lt;h3 id=&quot;パターンマッチ&quot;&gt;パターンマッチ&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;関数の場合分け&lt;/li&gt;
&lt;li&gt;上から順番に調べられる&lt;/li&gt;
&lt;li&gt;全てに合致するパターンを最後に入れておくと吉&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-haskell&quot; data-lang=&quot;haskell&quot;&gt;&lt;span class=&quot;nf&quot;&gt;lucky&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;SEVEN !&amp;quot;&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;lucky&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Other Number&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-haskell&quot; data-lang=&quot;haskell&quot;&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lucky&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;&amp;quot;Other Number&amp;quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lucky&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;&amp;quot;SEVEN !&amp;quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lucky&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;&amp;quot;Other Number&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;上から順番なので、一行目と二行目をひっくり返すと、引数に7を渡しても &amp;quot;SEVEN !&amp;quot; が出力されなくなる。&lt;/p&gt;

&lt;h3 id=&quot;タプルのパターンマッチ&quot;&gt;タプルのパターンマッチ&lt;/h3&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-haskell&quot; data-lang=&quot;haskell&quot;&gt;&lt;span class=&quot;nf&quot;&gt;addVectors&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-haskell&quot; data-lang=&quot;haskell&quot;&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;addVectors&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;リストのパターンマッチ&quot;&gt;リストのパターンマッチ&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;x:xs&lt;/code&gt; … リストの先頭要素xと残りのxs(リスト &lt;code&gt;[1,2,3]&lt;/code&gt; は &lt;code&gt;1:2:3:[]&lt;/code&gt; と表せる)&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-haskell&quot; data-lang=&quot;haskell&quot;&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;それを踏まえてhead関数の独自実装。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;error&lt;/code&gt; はランタイムエラーを発生させる&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-haskell&quot; data-lang=&quot;haskell&quot;&gt;&lt;span class=&quot;nf&quot;&gt;head&amp;#39;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;ne&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Error Dayo&amp;quot;&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;head&amp;#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-haskell&quot; data-lang=&quot;haskell&quot;&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;head&amp;#39;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;He is ...&amp;quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;&amp;#39;H&amp;#39;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;head&amp;#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;head&amp;#39;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;[]&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;***&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Exception:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Error&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Dayo&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;head&amp;#39;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;***&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Exception:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Error&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Dayo&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;上記のコードでは、 &lt;code&gt;xs&lt;/code&gt; は一回も使っていない = どうでもいい値 なので &lt;code&gt;_&lt;/code&gt; とする事もできる。&lt;/p&gt;

&lt;h3 id=&quot;as&quot;&gt;as&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;引数をパターンマッチのパターンに分解するが、その値自体も使う場合&lt;/li&gt;
&lt;li&gt;パターンの前に &lt;code&gt;変数@&lt;/code&gt; を追加&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-haskell&quot; data-lang=&quot;haskell&quot;&gt;&lt;span class=&quot;nf&quot;&gt;firstLetter&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Empty&amp;quot;&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;firstLetter&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;The first letter of &amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;all&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot; is &amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-haskell&quot; data-lang=&quot;haskell&quot;&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;firstLetter&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Watashi&amp;quot;&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;&amp;quot;The first letter of Watashi is W&amp;quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;firstLetter&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;&amp;quot;Empty&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;ガード&quot;&gt;ガード&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;場合分け&lt;/li&gt;
&lt;li&gt;if else のようなもの&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ひとつ以上のスペース&lt;/strong&gt; でインデントする必要がある&lt;/li&gt;
&lt;li&gt;上から順番に&lt;/li&gt;
&lt;li&gt;全てキャッチするのは &lt;code&gt;otherwise&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-haskell&quot; data-lang=&quot;haskell&quot;&gt;&lt;span class=&quot;nf&quot;&gt;bmiTell&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bmi&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bmi&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;18.5&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Yase!&amp;quot;&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bmi&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;25.0&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Normal!&amp;quot;&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bmi&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;30.0&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Debuya!&amp;quot;&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;otherwise&lt;/span&gt;   &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Otherwise!&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-haskell&quot; data-lang=&quot;haskell&quot;&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bmiTell&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;&amp;quot;Yase!&amp;quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bmiTell&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;19&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;&amp;quot;Normal!&amp;quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bmiTell&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;26&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;&amp;quot;Debuya!&amp;quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bmiTell&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;31&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;&amp;quot;Otherwise!&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;where&quot;&gt;Where&lt;/h3&gt;

&lt;p&gt;BMIって「体重(kg) / (身長(m) ^ 2)」らしいので、上記の関数をこんな風に変えられる。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-haskell&quot; data-lang=&quot;haskell&quot;&gt;&lt;span class=&quot;nf&quot;&gt;bmiTell&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wei&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hei&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wei&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hei&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;^&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;18.5&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Yase!&amp;quot;&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wei&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hei&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;^&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;25.0&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Normal!&amp;quot;&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wei&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hei&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;^&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;30.0&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Debuya!&amp;quot;&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;otherwise&lt;/span&gt;   &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Otherwise!&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-haskell&quot; data-lang=&quot;haskell&quot;&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bmiTell&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;40&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.5&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;&amp;quot;Yase!&amp;quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bmiTell&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.5&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;&amp;quot;Normal!&amp;quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bmiTell&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;60&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.5&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;&amp;quot;Debuya!&amp;quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bmiTell&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;90&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.5&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;&amp;quot;Otherwise!&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;ただし、上記のガード式だとBMI算出を無駄に繰り返している。whereを使って置き換える。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-haskell&quot; data-lang=&quot;haskell&quot;&gt;&lt;span class=&quot;nf&quot;&gt;bmiTell&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wei&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hei&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bmi&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;18.5&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Yase!&amp;quot;&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bmi&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;25.0&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Normal!&amp;quot;&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bmi&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;30.0&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Debuya!&amp;quot;&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;otherwise&lt;/span&gt;   &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Otherwise!&amp;quot;&lt;/span&gt;
 &lt;span class=&quot;kr&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bmi&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wei&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hei&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;^&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;同一パターンの中でしか使えない。&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-haskell&quot; data-lang=&quot;haskell&quot;&gt;&lt;span class=&quot;nf&quot;&gt;greet&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Juan&amp;quot;&lt;/span&gt;     &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hell&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot; Juan&amp;quot;&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;greet&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Fernando&amp;quot;&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hell&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot; Fernando&amp;quot;&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;greet&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;       &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hell&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;
 &lt;span class=&quot;kr&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hell&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Hell.&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;コンパイルすると20, 21行目でNot in scope。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-haskell&quot; data-lang=&quot;haskell&quot;&gt;&lt;span class=&quot;nf&quot;&gt;xxx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hs&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Not&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scope&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hell&amp;#39;&lt;/span&gt;

&lt;span class=&quot;nf&quot;&gt;xxx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hs&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;21&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Not&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scope&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hell&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;let&quot;&gt;let&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;let ... in ...&lt;/li&gt;
&lt;li&gt;whereと似ている&lt;/li&gt;
&lt;li&gt;letは式、whereはそうじゃない&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-haskell&quot; data-lang=&quot;haskell&quot;&gt;&lt;span class=&quot;nf&quot;&gt;cylinder&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt;
 &lt;span class=&quot;kr&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sideArea&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pi&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;
     &lt;span class=&quot;n&quot;&gt;topArea&lt;/span&gt;  &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pi&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;^&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
 &lt;span class=&quot;kr&quot;&gt;in&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;sideArea&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;topArea&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-haskell&quot; data-lang=&quot;haskell&quot;&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cylinder&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;
&lt;span class=&quot;mf&quot;&gt;175.92918860102841&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;case&quot;&gt;case&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;case ... of ... -&amp;gt; ...&lt;/li&gt;
&lt;li&gt;caseも式&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-haskell&quot; data-lang=&quot;haskell&quot;&gt;&lt;span class=&quot;nf&quot;&gt;head&amp;#39;&amp;#39;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;ne&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Error&amp;quot;&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;head&amp;#39;&amp;#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;

&lt;span class=&quot;nf&quot;&gt;head&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xs&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xs&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;[]&lt;/span&gt;    &lt;span class=&quot;ow&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;ne&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Error&amp;quot;&lt;/span&gt;
                        &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-haskell&quot; data-lang=&quot;haskell&quot;&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;head&amp;#39;&amp;#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;head&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;head&amp;#39;&amp;#39;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;[]&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;***&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Exception:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Error&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;head&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;[]&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;***&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Exception:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Error&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>すごいHaskellたのしく学ぼうでHaskellことはじめ</title>
   <link href="http://gosyujin.github.io/2013/01/21/haskell-helloworld2"/>
   <updated>2013-01-21T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2013/01/21/haskell-helloworld2</id>
   <content type="html">&lt;h2 id=&quot;あらすじ&quot;&gt;あらすじ&lt;/h2&gt;

&lt;p&gt;Halkellを学ぶにあたってのメモやわからない所を以下に時系列でつらつらと。&lt;/p&gt;

&lt;h2 id=&quot;参考&quot;&gt;参考&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;すごいHaskellたのしく学ぼう&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;2章-型を信じろ！&quot;&gt;2章 型を信じろ！&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Haskellでは、すべての式の型がコンパイル時にわかっている&lt;/li&gt;
&lt;li&gt;また、自分で書かなくても型推論でなんとかしてくれる&lt;/li&gt;
&lt;li&gt;式の型は &lt;code&gt;:t&lt;/code&gt; コマンドで調べられる&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-haskell&quot; data-lang=&quot;haskell&quot;&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Hello&amp;quot;&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;&amp;quot;Hello&amp;quot;&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Char&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Num&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Hello&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Hello&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Bool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Char&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Bool&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;::&lt;/code&gt; は &lt;code&gt;の型を持つ&lt;/code&gt; の意味

&lt;ul&gt;
&lt;li&gt;&amp;quot;Hello&amp;quot;はChar型のリスト(文字列)を持つ&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;こんな関数を作る。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-haskell&quot; data-lang=&quot;haskell&quot;&gt;&lt;span class=&quot;nf&quot;&gt;removeNonUppercase&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Char&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Char&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;removeNonUppercase&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;st&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;st&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;elem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;&amp;#39;A&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;&amp;#39;Z&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;実行結果はこう。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-haskell&quot; data-lang=&quot;haskell&quot;&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;removeNonUppercase&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Hello World&amp;quot;&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;&amp;quot;HW&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;この関数は &lt;code&gt;[Char] -&amp;gt; [Char]&lt;/code&gt; という型を持つ。これは &lt;code&gt;1つの文字列型を受け取り、1つの文字列型を返す&lt;/code&gt; と考える。たしかに&amp;quot;Hello World&amp;quot;を受け取り&amp;quot;HW&amp;quot;を返してるな。&lt;/p&gt;

&lt;p&gt;次はこんな関数。ちょっとややこしくなってきた。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-haskell&quot; data-lang=&quot;haskell&quot;&gt;&lt;span class=&quot;nf&quot;&gt;addThree&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;addThree&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-haskell&quot; data-lang=&quot;haskell&quot;&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;addThree&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;ここでは、 &lt;code&gt;3つのIntを受け取り、1つのIntを返す&lt;/code&gt; としか読めないが、いったんそう覚えておく。うーん。&lt;/p&gt;

&lt;h3 id=&quot;型変数&quot;&gt;型変数&lt;/h3&gt;

&lt;p&gt;headって、リストを引数に渡せば文字だろうが数値だろうがheadを返してくれる。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-haskell&quot; data-lang=&quot;haskell&quot;&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;head&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;head&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;&amp;#39;s&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;&amp;#39;f&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;&amp;#39;s&amp;#39;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;head&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;True&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;型はどうなってんの？&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-haskell&quot; data-lang=&quot;haskell&quot;&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;head&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;a…だと…。&lt;/p&gt;

&lt;p&gt;aは型変数と呼ばれ、どんな型でもとれる。ただし、aは同じである必要がある。&lt;/p&gt;

&lt;p&gt;今回は数値を渡したら &lt;code&gt;[Int] -&amp;gt; Int&lt;/code&gt; となるという事かな。&lt;/p&gt;

&lt;h3 id=&quot;型クラス&quot;&gt;型クラス&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;なんらかの振る舞いを定義するインターフェース&lt;/li&gt;
&lt;li&gt;関数の集まり&lt;/li&gt;
&lt;li&gt;型クラスに集まる関数をメソッドとも呼ぶ&lt;/li&gt;
&lt;li&gt;関数が特殊文字のみの場合、デフォルトで中置関数になる

&lt;ul&gt;
&lt;li&gt;+とか*とか&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ふーむ。よくわからんので実例を見てみよう。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-haskell&quot; data-lang=&quot;haskell&quot;&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Eq&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Bool&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;True&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;False&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;(==) は1つの何かの型の引数と1つの何かの型の引数を受け取り、Bool型を返す。&lt;/p&gt;

&lt;p&gt;中置関数なので、実際は &lt;code&gt;(==) 1 1&lt;/code&gt; こういう事か。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-haskell&quot; data-lang=&quot;haskell&quot;&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Num&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;これはIntとIntを渡してIntが返る。&lt;/p&gt;

&lt;p&gt;なるほどね。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;=&amp;gt;&lt;/code&gt; はなんだろう。&lt;/p&gt;

&lt;h4 id=&quot;gt&quot;&gt;=&amp;gt;&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;このシンボルより前にあるものは型クラス制約と呼ばれる。&lt;/li&gt;
&lt;li&gt;(==)の場合は1つの何かの型の引数と1つの何かの型の引数を受け取り、Bool型を返す。ただし &lt;code&gt;引数aはEqクラスのインスタンスでなければならない&lt;/code&gt; という事か&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;型クラスのクラスは、オブジェクト指向のクラスとは同じでない&lt;/strong&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;わかったようなわからんような。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>プログラミングHaskellでHaskellことはじめ</title>
   <link href="http://gosyujin.github.io/2013/01/09/haskell-helloworld"/>
   <updated>2013-01-09T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2013/01/09/haskell-helloworld</id>
   <content type="html">&lt;h2 id=&quot;あらすじ&quot;&gt;あらすじ&lt;/h2&gt;

&lt;p&gt;やりたいことがあるのだけど、調べていたらHaskellでやってみました系の記事が多い気がしたので読めるようになりたい！&lt;/p&gt;

&lt;h2 id=&quot;参考&quot;&gt;参考&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;プログラミングHaskell&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;※ とても良書だと思うのだけど、超初心者が挑むには早すぎたので、以下の簡単なライブラリを使用してみた後は「すごいHaskell」にいったん移行しました。&lt;/p&gt;

&lt;p&gt;(本の中の記述が数学記号で書かれているのが予想外にキツい。記号の意味はわかるんだけど、 &lt;code&gt;Haskellでの書き方が&lt;/code&gt; わからないので脳内で数学記号をHaskellに戻して…をやっていると全く進まなかった…。一周目はまず無心で写経しないとダメなタイプ)&lt;/p&gt;

&lt;h2 id=&quot;インストール&quot;&gt;インストール&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.haskell.org/haskellwiki/Haskell%E5%85%A5%E9%96%80_5%E3%82%B9%E3%83%86%E3%83%83%E3%83%97&quot;&gt;Haskell入門 5ステップ - HaskellWiki&lt;/a&gt; によると、HaskellはGHCかHugsのどちらかで行けるよう。&lt;/p&gt;

&lt;p&gt;ただし、Hugsはもうメンテナンスされていないみたい。&lt;/p&gt;

&lt;h3 id=&quot;hugs&quot;&gt;Hugs&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://cvs.haskell.org/Hugs/pages/downloading.htm&quot;&gt;Downloading Hugs&lt;/a&gt; からDL。Windows版は.exeなのでそのままインストール。&lt;/p&gt;

&lt;h3 id=&quot;ghc&quot;&gt;GHC&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://www.haskell.org/ghc/&quot;&gt;The Glasgow Haskell Compiler&lt;/a&gt; からDL。これもWindows版は.exeがあるのでそのままインストールできる。&lt;/p&gt;

&lt;p&gt;※ これよりもHaskellPlatformも入れた方が良いらしい。オールインワン的な？&lt;/p&gt;

&lt;p&gt;Downloadページには &lt;code&gt;Bundled packages and cabal-install&lt;/code&gt; と書かれている。cabalとは&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Cabal is a system for building and packaging Haskell libraries and programs. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;パッケージを作る…とかはまだ必要ないと思うけど。&lt;a href=&quot;http://www.haskell.org/cabal/&quot;&gt;The Haskell Cabal&lt;/a&gt; からDLできるのだが、setupファイルが.hsで、Haskellファイルのようなので、Haskellを入れてからsetupする感じか。まだいらない。&lt;/p&gt;

&lt;h2 id=&quot;ghciのコマンド&quot;&gt;ghciのコマンド&lt;/h2&gt;

&lt;p&gt;コロンから始まるいろいろなコマンドでファイルをロードしたり、ghciを終了したりできる。まずは脱出できるように。&lt;/p&gt;

&lt;h2 id=&quot;変数&quot;&gt;変数&lt;/h2&gt;

&lt;p&gt;小文字から始まればよいみたい。意外なのはシングルクォーテーションが使えること。まじか。&lt;/p&gt;

&lt;p&gt;test.hsとして、関数をこう定義する。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-haskell&quot; data-lang=&quot;haskell&quot;&gt;&lt;span class=&quot;nf&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&amp;#39;&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;ghciから呼ぶ。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-haskell&quot; data-lang=&quot;haskell&quot;&gt;&lt;span class=&quot;kt&quot;&gt;Prelude&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;load&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hs&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Compiling&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Main&lt;/span&gt;             &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;interpreted&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;Ok&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;modules&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loaded&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;13&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;26&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;呼べる！&lt;/p&gt;

&lt;h2 id=&quot;hello-world&quot;&gt;Hello World&lt;/h2&gt;

&lt;p&gt;以下ghcとghciを使ってやっていく。&lt;/p&gt;

&lt;p&gt;インストールが完了したらコマンドプロンプトを起動し、 &lt;code&gt;ghci&lt;/code&gt; と入力。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-haskell&quot; data-lang=&quot;haskell&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ghci&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;GHCi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;version&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;7.6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;://&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;www&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;haskell&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ghc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;  &lt;span class=&quot;kt&quot;&gt;:?&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;help&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;Loading&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ghc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;prim&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;linking&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;Loading&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gmp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;linking&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;Loading&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;base&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;linking&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;Prelude&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;とりあえずよくわからないが、Hello World。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-haskell&quot; data-lang=&quot;haskell&quot;&gt;&lt;span class=&quot;kt&quot;&gt;Prelude&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Hello World&amp;quot;&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;&amp;quot;Hello World&amp;quot;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;Prelude&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;putStrLn&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Hello World&amp;quot;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;Hello&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;World&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;ファイルに記述してコンパイルして実行させる事もできる。 &lt;code&gt;hello.hs&lt;/code&gt; ファイルを作って以下のように記述する。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-haskell&quot; data-lang=&quot;haskell&quot;&gt;&lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;putStrLn&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Hello World&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;コンパイル。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; c -o hello hello.hs
&lt;span class=&quot;go&quot;&gt;[1 of 1] Compiling Main             ( hello.hs, hello.o )&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Linking hello.exe ...&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;成功したらhello.exeというファイルができているので実行してみる。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; hello.exe
&lt;span class=&quot;go&quot;&gt;Hello World&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;階数を求める&quot;&gt;階数を求める&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;fac.hs&lt;/code&gt; として以下のようなファイルを作る。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-haskell&quot; data-lang=&quot;haskell&quot;&gt;&lt;span class=&quot;nf&quot;&gt;fac&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;then&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fac&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;なんか、右辺はなんとなく読めるな。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-haskell&quot; data-lang=&quot;haskell&quot;&gt;&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ghci&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;GHCi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;version&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;7.6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;://&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;www&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;haskell&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ghc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;  &lt;span class=&quot;kt&quot;&gt;:?&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;help&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;Loading&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ghc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;prim&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;linking&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;Loading&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gmp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;linking&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;Loading&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;base&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;linking&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;Prelude&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;load&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fac&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hs&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Compiling&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Main&lt;/span&gt;             &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fac&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;interpreted&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;Ok&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;modules&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loaded&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fac&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fac&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fac&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;24&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fac&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;42&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;1405006117752879898543142606244511569936384000000000&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;標準ライブラリを使う&quot;&gt;標準ライブラリを使う&lt;/h2&gt;

&lt;h3 id=&quot;head&quot;&gt;head&lt;/h3&gt;

&lt;p&gt;リストの先頭を取得。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-haskell&quot; data-lang=&quot;haskell&quot;&gt;&lt;span class=&quot;kt&quot;&gt;Prelude&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;head&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;Prelude&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;head&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;tail&quot;&gt;tail&lt;/h3&gt;

&lt;p&gt;リストから先頭の要素を取り除く。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-haskell&quot; data-lang=&quot;haskell&quot;&gt;&lt;span class=&quot;kt&quot;&gt;Prelude&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tail&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;Prelude&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tail&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;n&quot;&gt;!! n&lt;/h3&gt;

&lt;p&gt;リストのn番目の要素を取得。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-haskell&quot; data-lang=&quot;haskell&quot;&gt;&lt;span class=&quot;kt&quot;&gt;Prelude&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!!&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;Prelude&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!!&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;***&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Exception:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Prelude&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;too&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;large&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;take-n&quot;&gt;take n&lt;/h3&gt;

&lt;p&gt;リストの先頭からn個の要素を取得する。多く指定してもよい。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-haskell&quot; data-lang=&quot;haskell&quot;&gt;&lt;span class=&quot;kt&quot;&gt;Prelude&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;take&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;Prelude&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;take&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;Prelude&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;take&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;drop-n&quot;&gt;drop n&lt;/h3&gt;

&lt;p&gt;先頭からn個の要素を削除する。多く指定してもよい。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-haskell&quot; data-lang=&quot;haskell&quot;&gt;&lt;span class=&quot;kt&quot;&gt;Prelude&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;drop&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;Prelude&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;drop&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;Prelude&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;drop&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;[]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;length&quot;&gt;length&lt;/h3&gt;

&lt;p&gt;要素のサイズを取得する。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-haskell&quot; data-lang=&quot;haskell&quot;&gt;&lt;span class=&quot;kt&quot;&gt;Prelude&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;Prelude&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;sum&quot;&gt;sum&lt;/h3&gt;

&lt;p&gt;リストの要素の和を返す。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-haskell&quot; data-lang=&quot;haskell&quot;&gt;&lt;span class=&quot;kt&quot;&gt;Prelude&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;product&quot;&gt;product&lt;/h3&gt;

&lt;p&gt;リストの要素の積を返す。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-haskell&quot; data-lang=&quot;haskell&quot;&gt;&lt;span class=&quot;kt&quot;&gt;Prelude&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;product&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;64&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;&gt;++&lt;/h3&gt;

&lt;p&gt;リストの連結を行う。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-haskell&quot; data-lang=&quot;haskell&quot;&gt;&lt;span class=&quot;kt&quot;&gt;Prelude&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;reverse&quot;&gt;reverse&lt;/h3&gt;

&lt;p&gt;リストの要素を逆転させる。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-haskell&quot; data-lang=&quot;haskell&quot;&gt;&lt;span class=&quot;kt&quot;&gt;Prelude&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reverse&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;39-div-39&quot;&gt;&amp;#39;div&amp;#39;&lt;/h3&gt;

&lt;p&gt;&lt;del&gt;divはできなかった。&lt;/del&gt; くくるのはシングルクォーテーションじゃなくてバッククォートだった！&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-haskell&quot; data-lang=&quot;haskell&quot;&gt;&lt;span class=&quot;kt&quot;&gt;Prelude&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;&amp;#39;div&amp;#39;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;interactive&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;Syntax&lt;/span&gt; &lt;span class=&quot;ne&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;on&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;&amp;#39;div&amp;#39;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;Perhaps&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;you&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;intended&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;XTemplateHaskell&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;練習問題&quot;&gt;練習問題&lt;/h2&gt;

&lt;p&gt;2章の練習問題にあったリストの最後を取得する。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-haskell&quot; data-lang=&quot;haskell&quot;&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;head&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reverse&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>2012年KPT</title>
   <link href="http://gosyujin.github.io/2012/12/31/kpt-2012"/>
   <updated>2012-12-31T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2012/12/31/kpt-2012</id>
   <content type="html">&lt;h2 id=&quot;今年学んだこと&quot;&gt;今年学んだこと&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Ruby

&lt;ul&gt;
&lt;li&gt;Jekyll&lt;/li&gt;
&lt;li&gt;ブログをGitHub Pagesに移そうかなーと目論み、色々運用法などを試行錯誤&lt;/li&gt;
&lt;li&gt;それに伴い、Markdown書式も勉強&lt;/li&gt;
&lt;li&gt;Selenium&lt;/li&gt;
&lt;li&gt;Seleniumスクリプトを書いてみた

&lt;ul&gt;
&lt;li&gt;社内の勤怠管理システム(Web)に毎日毎日毎日手動で時刻をポチポチ入れてると体調が崩れそうになるので、時刻を取得してぶっこむ！(使い方がアレかもしれない……)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Git

&lt;ul&gt;
&lt;li&gt;git-svnを実践に投入してみた&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Jenkins

&lt;ul&gt;
&lt;li&gt;勉強会や書籍などで便利さはかなり情報として頭に入ってきた。が、なかなか導入する機会がなかった&lt;/li&gt;
&lt;li&gt;そんなあなたに っ&lt;a href=&quot;http://ser1zw.hatenablog.com/entry/20120225/1330167778&quot;&gt;続・CI超入門〜Jenkinsのススメ2 CI導入の壁を越えろ〜 に行ってきました。 - ser1zw&amp;#39;s blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;CIからはじめないJenkinsということで、かなり目から鱗。たしかにCIにしか使っちゃダメとは誰も言っていない！　自分で可能性を狭めていたのだ……&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;keep&quot;&gt;Keep&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;引き続きGitを使う

&lt;ul&gt;
&lt;li&gt;さしあたり、もう少しsvnプロジェクトをgit-svnで使っていく&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Jenkinsは「CIに使わなければならない」という(思い込みの)呪縛から解き放たれたということで、ドンドン使っていく

&lt;ul&gt;
&lt;li&gt;Redmineに登録されている不具合チケットをぶっこぬいて社内標準の不具合管理表に流し込む作業や、プロジェクトでやり取りしてるメールの添付ファイルだけをぶっこぬいて共有サーバの「受領ファイル」フォルダに突っ込む作業や上述のSeleniumスクリプトを毎日動かす程度に使い倒している&lt;/li&gt;
&lt;li&gt;あとはAntの実行にも&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;去年のTryに挙げていたブログ月一更新は達成できた
− とりあえずはてなダイアリーをはじめてようやく達成&lt;/li&gt;
&lt;li&gt;Advent Calendarは二年連続二回目の投稿&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;problem&quot;&gt;Problem&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Objective-C復習

&lt;ul&gt;
&lt;li&gt;一時期必要に迫られたので、少し本で勉強しイケるようになった……と思ったのに、数ヶ月ブランクがあくとまったく読めなくなっていた&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;gemを作れるようになれなかった

&lt;ul&gt;
&lt;li&gt;去年のTryの残件を引き続き&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;社内スクリプトの汎用化→GitHubへ

&lt;ul&gt;
&lt;li&gt;これも去年のTry&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Dropbox、EvernoteのAPIをもう少し使えるようになる&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;try&quot;&gt;Try&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;新しい言語を学ぶ

&lt;ul&gt;
&lt;li&gt;候補はHaskell&lt;/li&gt;
&lt;li&gt;今、自分がやりたいことを実現している記事がWeb上に多い言語→見ても何しているのかさっぱりわからん……&lt;/li&gt;
&lt;li&gt;なので、学びはじめる&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;TDDやるやる詐欺からの脱却

&lt;ul&gt;
&lt;li&gt;TDDBCに参加し、ちょっとずつ書くように意識はできるようになったのでもう少し&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Advent Calendar以外でも何か発表したい！(去年と同じ)&lt;/li&gt;
&lt;li&gt;友達をつくる

&lt;ul&gt;
&lt;li&gt;社内にGitとかJekyllとかの話が出来る人がおらんのよ&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;来年もがんばろう。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>メモ化を知った</title>
   <link href="http://gosyujin.github.io/2012/12/25/ruby-memo"/>
   <updated>2012-12-25T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2012/12/25/ruby-memo</id>
   <content type="html">&lt;p&gt;この投稿はRuby Advent Calendar 2012の16日目の記事としてQiitaに投稿したものです。&lt;/p&gt;

&lt;h2 id=&quot;はじめに&quot;&gt;はじめに&lt;/h2&gt;

&lt;p&gt;あんまりRuby関係ないんですが、一応、The RSpec Bookを読んでいて知ったのがきっかけなので…。&lt;/p&gt;

&lt;h2 id=&quot;あらすじ&quot;&gt;あらすじ&lt;/h2&gt;

&lt;p&gt;The RSpec Book のletの解説には以下のように記述されています。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;describe&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;テストコードはてきとう&amp;quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
     &lt;span class=&quot;n&quot;&gt;let&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;TEST&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
     &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;test let&amp;quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
       &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;should&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;TEST&amp;quot;&lt;/span&gt;
     &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;メソッドが最初に呼び出されたときに戻り値がキャッシュされ、それ以降、同じスコープ内でメソッドが呼び出されるたびにキャッシュされた値が返されることを意味します。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;これをメモ化というそうです。で、メモ化って？&lt;/p&gt;

&lt;h2 id=&quot;一番簡単なメモ化&quot;&gt;一番簡単なメモ化&lt;/h2&gt;

&lt;p&gt;調べてみると、だいたいフィボナッチ数を求める例が多い。なのでn番目のフィボナッチ数を求めるメソッドを書いてみる。&lt;/p&gt;

&lt;h3 id=&quot;普通に書いた場合&quot;&gt;普通に書いた場合&lt;/h3&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;実行していくと、己のPCスペックではf(30) = 832040 くらいからマシンがもたついてきた。&lt;/p&gt;

&lt;p&gt;これを &lt;code&gt;メモ化&lt;/code&gt; してみる。&lt;/p&gt;

&lt;h3 id=&quot;メモ化した場合&quot;&gt;メモ化した場合&lt;/h3&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# こっちは変わらず&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;f_memo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;vi&quot;&gt;@cache&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt;
  &lt;span class=&quot;vi&quot;&gt;@cache&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;実行すると、最初の一発目は同じくらい遅いんだけど、一回実行すればキャッシュとして &lt;code&gt;@cache&lt;/code&gt; に格納されるので二回目以降はバク速で求められる。&lt;/p&gt;

&lt;h2 id=&quot;とは&quot;&gt;||= とは&lt;/h2&gt;

&lt;p&gt;上の例の &lt;code&gt;@cache[n] ||= f(n)&lt;/code&gt; は &lt;code&gt;@cache[n] = @cache[n] || f(n)&lt;/code&gt; と同義。@cache[n]が真ならば@cache[n]を返す。偽ならnのフィボナッチ数を求める。 &lt;strong&gt;@cache[n]が真ならば、f(n)は評価しない、実行しない&lt;/strong&gt; 。だから早い。&lt;/p&gt;

&lt;p&gt;||=の例。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;irb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;001&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;          &lt;span class=&quot;c1&quot;&gt;# 未定義の時はエラー&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;NameError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;undefined&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;local&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;variable&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;method&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`a&amp;#39; for main:Object&lt;/span&gt;
&lt;span class=&quot;sb&quot;&gt;from (irb):1&lt;/span&gt;
&lt;span class=&quot;sb&quot;&gt;from C:/rubies/Ruby-193-p0/bin/irb:12:in `&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;irb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;002&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;# a || 500 a は偽なので500&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;irb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;003&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;irb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;004&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;irb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;005&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;irb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;006&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;# b || 500 b は真なので0のまま&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;irb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;007&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;…って所まで調べて、初めてのRubyを読み返してみたらバッチリ書いてあるし！！&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;初期化イディオム&lt;/strong&gt; として紹介されていました。。。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>git-svnインストールからgit svn dcommit完了までの手順</title>
   <link href="http://gosyujin.github.io/2012/12/12/git-svn-dcommit"/>
   <updated>2012-12-12T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2012/12/12/git-svn-dcommit</id>
   <content type="html">&lt;h2 id=&quot;あらすじ&quot;&gt;あらすじ&lt;/h2&gt;

&lt;p&gt;CentOSのインストール時に入れたGitにはgit-svnが入っていない(？)ので、一から入れようとしたが、ネットに繋がっていない環境だと結構依存とかがめんどくさかったのでメモ。&lt;/p&gt;

&lt;h2 id=&quot;環境&quot;&gt;環境&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;CentOS 6.2&lt;/li&gt;
&lt;li&gt;Git 1.7.1

&lt;ul&gt;
&lt;li&gt;git は入っているが、git svnは実行できない&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git svn 
&lt;span class=&quot;go&quot;&gt;git: &amp;#39;svn&amp;#39; is not a git command. See &amp;#39;git --help&amp;#39;.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;svn 1.6.11 (r934486)&lt;/li&gt;
&lt;li&gt;ネットにつながっていないぼっち環境&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;yumとかで入れられると一発っぽいんだけどなー。&lt;/p&gt;

&lt;h2 id=&quot;手順&quot;&gt;手順&lt;/h2&gt;

&lt;p&gt;まずは、git-svnのrpmをDLしてくる。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://rpmfind.net/linux/rpm2html/search.php?query=git-svn&quot;&gt;RPM resource git-svn&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;インストールしたいPCに持ってきて、rpmコマンド。 &lt;code&gt;perl(SVN::Core)&lt;/code&gt; と、 &lt;code&gt;perl(Term:ReadKey)&lt;/code&gt; がないと言われる。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt; rpm -ivh git-svn-1.7.1-2.el6_0.1.noarch.rpm
&lt;span class=&quot;go&quot;&gt;警告: git-svn-1.7.1-2.el6_0.1.noarch.rpm: ヘッダ V3 RSA/SHA256 Signature, key ID c105b9de: NOKEY&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;エラー: 依存性の欠如:&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        perl(SVN::Core) は git-svn-1.7.1-2.el6_0.1.noarch に必要とされています&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        perl(Term::ReadKey) は git-svn-1.7.1-2.el6_0.1.noarch に必要とされています&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;perl-svn-core&quot;&gt;perl(SVN::Core)&lt;/h3&gt;

&lt;p&gt;SVN::Coreは &lt;code&gt;subversion-perl&lt;/code&gt; というパッケージから入れられるよう。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://d.hatena.ne.jp/init9/20080709/1215571342&quot;&gt;SVN::Core は subversion-perl に入っている - init9の日記&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://rpm.pbone.net/index.php3/stat/4/idpl/18080007/dir/centos_5/com/subversion-perl-1.6.11-10.el5_8.i386.rpm.html&quot;&gt;RPM CentOS 5 subversion-perl 1.6.11 i386 rpm&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;subversion-perlをDLしてインストール。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt; rpm -ivh subversion-perl-1.6.11-7.el6.i686.rpm
&lt;span class=&quot;go&quot;&gt;警告: subversion-perl-1.6.11-7.el6.i686.rpm: ヘッダ V3 RSA/SHA1 Signature, key ID c105b9de: NOKEY&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;エラー: 依存性の欠如:&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        subversion = 1.6.11-7.el6 は subversion-perl-1.6.11-7.el6.i686 に必要と されています&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;あれ？Subversion入ってるのに見つけられてない？Subversionを入れ直してみる？&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt; rpm -ivh subversion-1.6.11-7.el6.i686.rpm
&lt;span class=&quot;go&quot;&gt;警告: subversion-1.6.11-7.el6.i686.rpm: ヘッダ V3 RSA/SHA1 Signature, key ID c105b9de: NOKEY&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;準備中...                ########################################### [100%]&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        ファイル /usr/bin/svnserve (パッケージ subversion-1.6.11-7.el6.i686 から) は、パッケージ subversion-1.6.11-2.el6_1.4.i686 からのファイルと競合しています。&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;略&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;やっぱインストール済み…1.6.11-2.el6&lt;em&gt;1&lt;/em&gt;4…だと…。このrelease番号？ってsvn --versionじゃ確認できないの？&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt; svn --version
&lt;span class=&quot;go&quot;&gt;svn, バージョン 1.6.11 (r934486)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;   コンパイル日時: Sep 27 2011, 14:59:40&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;   Copyright (C) 2000-2009 CollabNet.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;   Subversion is open source software, see http://subversion.tigris.org/&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;   This product includes software developed by CollabNet (http://www.Collab.Net/).&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;   以下のリポジトリアクセス (RA) モジュールが利用できます:&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;   * ra_neon : Neon を利用して WebDAV (DeltaV) プロトコルでリポジトリにアクセスするモジュール。&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;     - &amp;#39;http&amp;#39; スキームを操作します&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;       - &amp;#39;https&amp;#39; スキームを操作します&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;       * ra_svn : svn ネットワークプロトコルを使ってリポジトリにアクセスするモジュール 。&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;         - Cyrus SASL 認証を併用&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;   - &amp;#39;svn&amp;#39; スキームを操作します&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;   * ra_local : ローカルディスク上のリポジトリにアクセスするモジュール。&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;     - &amp;#39;file&amp;#39; スキームを操作します&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;色々探して、とりあえず1.6.11-2.el6&lt;em&gt;1&lt;/em&gt;4のsubversion-perlを見つけた。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://rpm.pbone.net/index.php3/stat/4/idpl/16844891/dir/scientific_linux_6/com/subversion-perl-1.6.11-2.el6_1.4.i686.rpm.html&quot;&gt;RPM Scientific Linux 6 subversion-perl 1.6.11 i686 rpm&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;再チャレンジ。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt; rpm -ivh subversion-perl-1.6.11-2.el6_1.4.i686.rpm
&lt;span class=&quot;go&quot;&gt;警告: subversion-perl-1.6.11-2.el6_1.4.i686.rpm: ヘッダ V4 DSA/SHA1 Signature, key ID 192a7d7d: NOKEY&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;準備中...                ########################################### [100%]&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;   1:subversion-perl        ########################################### [100%]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;入ったー。で、依存は一個消えた。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt; rpm -ivh git-svn-1.7.1-2.el6_0.1.noarch.rpm
&lt;span class=&quot;go&quot;&gt;警告: git-svn-1.7.1-2.el6_0.1.noarch.rpm: ヘッダ V3 RSA/SHA256 Signature, key ID c105b9de: NOKEY&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;エラー: 依存性の欠如:&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;        perl(Term::ReadKey) は git-svn-1.7.1-2.el6_0.1.noarch に必要とされています&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;perl-term-readkey&quot;&gt;perl(Term::ReadKey)&lt;/h3&gt;

&lt;p&gt;特にバージョンの指定がないんだけど、とりあえず後ろ(el6)は合わせてみた。elってRHELのELなのかな…？&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://blogger.horisawa.info/2012/03/rpm.html&quot;&gt;泡史朗の戯れの日々: RPMパッケージの命名規則&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://pkgs.org/centos-6-rhel-6/centos-rhel-i386/perl-TermReadKey-2.30-13.el6.i686.rpm.html&quot;&gt;perl-TermReadKey-2.30-13.el6.i686.rpm CentOS 6 (RHEL 6) Download&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;go&quot;&gt;[root@tpc6102 share]# rpm -ivh perl-TermReadKey-2.30-13.el6.i686.rpm&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;警告: perl-TermReadKey-2.30-13.el6.i686.rpm: ヘッダ V3 RSA/SHA1 Signature, key ID c105b9de: NOKEY&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;準備中...                ########################################### [100%]&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;   1:perl-TermReadKey       ########################################### [100%]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;いった！&lt;/p&gt;

&lt;p&gt;で、git-svnも入った！&lt;/p&gt;

&lt;h2 id=&quot;動作確認&quot;&gt;動作確認&lt;/h2&gt;

&lt;p&gt;コミットしようとしたらエラーが。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git svn dcommit
&lt;span class=&quot;go&quot;&gt;Committing to svn://xxxxxxx/repo/trunk ...&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Authentication realm: &amp;lt;svn://xxxxxxx:3690&amp;gt; xxxxxxxx-...&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;(gnome-ssh-askpass:20438): Gtk-WARNING **: cannot open display:&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Use of uninitialized value $password in substitution (s///) at /usr/libexec/git-core/git-svn line 3979.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;error: git-svn died of signal 11&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;GUIでLinuxをインストールしている場合、 &lt;code&gt;gnome-ssh-askpass&lt;/code&gt; を使ってパスワード認証をかますようにパスが通っており、今はtelnetなどでつないでいる(=認証画面出したいのに画面ない)のが問題みたい。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://ultimania.org/trac/yuna/wiki/pm/DVCS#git%E3%81%A7%E8%AA%8D%E8%A8%BC%E3%82%A8%E3%83%A9%E3%83%BC&quot;&gt;pm/DVCS - Yuna&amp;#39;s Technical Guide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;確かにいる。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$SSH_ASKPASS&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;/usr/libexec/openssh/gnome-ssh-askpass&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;これを空にしてやればよい。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;unset &lt;/span&gt;SSH_ASKPASS
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$SSH_ASKPASS&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;で、dcommit！&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git svn dcommit
&lt;span class=&quot;go&quot;&gt;Committing to svn://xxxxxxxx/repo/trunk ...&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Authentication realm: &amp;lt;svn://xxxxxxxx:3690&amp;gt; xxxxxxxxxxx.....&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Password for &amp;#39;kk_Ataka&amp;#39;:&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;パスワード認証もOK。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;go&quot;&gt;M       memo/test.txt&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;略&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;コミットされた！&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>はてなダイアリーのエントリをJekyllへ移行する</title>
   <link href="http://gosyujin.github.io/2012/11/12/from-hatena-to-jekyll"/>
   <updated>2012-11-12T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2012/11/12/from-hatena-to-jekyll</id>
   <content type="html">&lt;h2 id=&quot;あらすじ&quot;&gt;あらすじ&lt;/h2&gt;

&lt;p&gt;はてなダイアリーからJekylに移行したいんだけど、完全に移行し切るには過去の遺産(はてなダイアリーのエントリ)も移したいよ。&lt;/p&gt;

&lt;h2 id=&quot;はてなのエントリ取得&quot;&gt;はてなのエントリ取得&lt;/h2&gt;

&lt;p&gt;何はなくともエントリをエクスポートしてこない事には始まらない。管理画面から &lt;code&gt;データ管理 =&amp;gt; インポート/エクスポート =&amp;gt; はてなの日記データ形式&lt;/code&gt; をDL。&lt;/p&gt;

&lt;h2 id=&quot;はてな-gt-jekyll&quot;&gt;はてな =&amp;gt; Jekyll&lt;/h2&gt;

&lt;h3 id=&quot;どうやるか&quot;&gt;どうやるか&lt;/h3&gt;

&lt;p&gt;はてなのエントリをJekyllで見るためには、恐らく2通りの方法がある。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;はてなエントリをMarkdown記法に変換して、Jekyllに突っ込む&lt;/li&gt;
&lt;li&gt;はてなエントリから記事を作れるようにJekyllにパーサを突っ込む&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;さて…。&lt;/p&gt;

&lt;h3 id=&quot;てっく煮ブログさんのjekyll&quot;&gt;てっく煮ブログさんのJekyll&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://tech.nitoyon.com/ja/blog/2012/09/20/moved-completed/&quot;&gt;俺の最強ブログ システムが火を噴くぜ - てっく煮ブログ&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;自分がどうすればいいのかなーと悩んでいる時、ものすごくタイムリーに移行なされており(タイムリーでした)、かつ自分のやりたい事(はてなエントリの移行など)を全てプラグインなどで実現されていたためすぐにGitHubを見に行きました。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/nitoyon/tech.nitoyon.com&quot;&gt;nitoyon/tech.nitoyon.com ・ GitHub&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git clone https://github.com/nitoyon/tech.nitoyon.com.git&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;ぐ…中身は結構複雑。&lt;/p&gt;

&lt;p&gt;ソースを見る前にローカルで動くか見せてもらおうっと。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; vi Gemfile

&lt;span class=&quot;go&quot;&gt;gem &amp;#39;jekyll&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;gem &amp;#39;hparser&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;gem &amp;#39;sass&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;gem &amp;#39;RedCloth&amp;#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;gem &amp;#39;rdiscount&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;これで &lt;code&gt;bundle exec jekyll --server&lt;/code&gt; で行けるかと思ったけど、なんか色々ないって言われる。&lt;/p&gt;

&lt;p&gt;どうやらまだgemが最新版になっていないらしい(gemからJekyllを持ってくると、多分 JEKYLL&lt;em&gt;HOME/lib/jekyll/tags/post&lt;/em&gt;url.rbがないとか言われる)ので、GitHubから最新版を持ってくる。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git clone git://github.com/mojombo/jekyll.git &lt;span class=&quot;c&quot;&gt;# fa8400ab61cb8df176f9fb2ec52d85f93c7418a7より新しければ大丈夫そう&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git clone git://github.com/hotchpotch/hparser.git &lt;span class=&quot;c&quot;&gt;# 4fbeefc8becc45ed18bf374bec9a2d862db473d5より以下同文&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Jekyllとhparserはこれに置き換え。これで実行すると…おお、自分のローカルでてっく煮ブログが…！&lt;/p&gt;

&lt;p&gt;なんとなく動かして、どうなっているか色々見てみる。&lt;/p&gt;

&lt;h3 id=&quot;コンバート&quot;&gt;コンバート&lt;/h3&gt;

&lt;p&gt;それでは、いよいよはてなのエントリ.xmlをhogehoge.htn * n個 のファイルにコンバートする。以下の作業は全て上記のてっく煮さんのブログをcloneした中を間借りして行なっている。己のリポジトリで行なってもできる。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Gemfileに &lt;code&gt;nokogiri&lt;/code&gt; を追加する&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; vi Gemfile

&lt;span class=&quot;go&quot;&gt;gem &amp;#39;nokogiri&amp;#39;  # コンバート用&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;_scripts/&lt;/code&gt; 直下に &lt;code&gt;_posts&lt;/code&gt; と &lt;code&gt;_caches&lt;/code&gt; ディレクトリを作る&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bundle exec ruby convert_hatena_to_jekyll_posts.rb HATENA_ID はてなのエントリ.xml&lt;/code&gt; を実行！&lt;/li&gt;
&lt;li&gt;……が、途中で止まる。どうやらUrl先のtitleを探しに行くとき、対象が404だった場合例外を吐くらしい&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;対象のコンテンツが 404 になっている場合には例外が出てスクリプトが停止します。
その場合は &lt;em&gt;caches/url&lt;/em&gt;title.json に手動でエントリを追加する、元のエントリを
修正する、などして回避してください。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;との事なので、止まっては修正止まっては修正。最後まで行くと、hogehoge.htnの山が_posts下に築かれる。&lt;/p&gt;

&lt;p&gt;※ これをskipがなくなるまでやる(スーパーpreの中の文頭にアスタリスクがあるとダメみたい(Gitのグラフなどダメだった))&lt;/p&gt;

&lt;p&gt;……が。あれ？　はてなダイアリーの記事のタグが複数あってもhogehoge.htnにコンバートされると先頭の1個しか指定してくれていない？&lt;/p&gt;

&lt;h3 id=&quot;parse_dayメソッドをいじってみる…。&quot;&gt;parse_dayメソッドをいじってみる…。&lt;/h3&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;unless&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/^\*([^*]+)\*(\[.*\])(.*)/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gsub!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;][&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;,&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
     &lt;span class=&quot;n&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gsub!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;[&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
     &lt;span class=&quot;n&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gsub!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;]&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
     &lt;span class=&quot;n&quot;&gt;tags&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;,&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
     &lt;span class=&quot;n&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gsub!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;,&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;, &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

     &lt;span class=&quot;n&quot;&gt;content&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
       &lt;span class=&quot;s2&quot;&gt;&amp;quot;layout&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;post&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
       &lt;span class=&quot;s2&quot;&gt;&amp;quot;title&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name_ja&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;s2&quot;&gt;&amp;quot;description&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;s2&quot;&gt;&amp;quot;catecory&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;s2&quot;&gt;&amp;quot;tags&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tags&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;]&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;s2&quot;&gt;&amp;quot;old_url&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;http://d.hatena.ne.jp/&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hatena_id&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;old_url&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
     &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_yaml&lt;/span&gt;
     
     &lt;span class=&quot;n&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gsub!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;tags: &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;tags: [&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
     
     &lt;span class=&quot;n&quot;&gt;content&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;content&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;---&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;convert_text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hatena_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;これで、やりたいことができた……。&lt;/p&gt;

&lt;p&gt;が、yamlの扱い方がよくわからん。hogehoge.htnファイルのtagsとして &lt;code&gt;tags: [aaa, bbb, ccc]&lt;/code&gt; って出力したかったんだけど、配列の記述のまま &lt;code&gt;&amp;quot;[aaa, bbb, ccc]&amp;quot;&lt;/code&gt; to_yamlすると hogehoge.htn内で &lt;code&gt;! &amp;#39; [aaa, bbb, ccc] &amp;#39;&lt;/code&gt; こう出力されてしまったので力技でうまくいくように。&lt;/p&gt;

&lt;p&gt;まあ一回しか変換しないしいっか……。&lt;/p&gt;

&lt;p&gt;これではてなダイアリーの全ての記事がhogehoge.htnとして &lt;code&gt;_posts&lt;/code&gt; ディレクトリに生成された。&lt;/p&gt;

&lt;p&gt;あとはこれを己のJekyllの &lt;code&gt;_posts&lt;/code&gt; に放り込み、コンバートは完了。&lt;/p&gt;

&lt;h2 id=&quot;起動-変換&quot;&gt;起動/変換&lt;/h2&gt;

&lt;p&gt;最後にJekyllでhogehoge.htnファイルを静的ファイルに変換する。てっく煮さんのpluginがいくつかないと正常に変換されず、途中で止まるかも。&lt;/p&gt;

&lt;p&gt;(要確認)とりあえず &lt;code&gt;_plugins&lt;/code&gt; 下にこんだけあれば動いた。ここははてなダイアリーで使っている記法による？amazonを使ってなければamazon.rbはいらないかもしれない。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;converters
┣ hatena.rb
┣ ext
┃┗ post_to_liquid_raw.rb
┣ filters
┃┣ json_filter.rb
┃┣ locale_filter.rb
┃┗ simplify_rss_description.rb
┗ tags
  ┣ amazon.rb
  ┣ post_link.rb
  ┣ tweet.rb
  ┣ twitter.rb
  ┗ youtube.rb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;プロジェクトのGemfileでは &lt;code&gt;Jekyll&lt;/code&gt; と &lt;code&gt;hparser&lt;/code&gt; をGutHubから最新のものを持ってくればそれで良いかな。(そのうちgemでも取れるようになると思うが)あと &lt;code&gt;albino&lt;/code&gt; じゃなくて &lt;code&gt;pygments.rb&lt;/code&gt; を使うようにする。&lt;/p&gt;

&lt;h2 id=&quot;自分用todo&quot;&gt;自分用TODO&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;おかしい

&lt;ul&gt;
&lt;li&gt;2009-10-19-1255949562.htn&lt;/li&gt;
&lt;li&gt;2011-05-01-1304204171.htn&lt;/li&gt;
&lt;li&gt;2011-10-08-1318068887.htn&lt;/li&gt;
&lt;li&gt;2011-11-27-1322329546.htn&lt;/li&gt;
&lt;li&gt;2011-11-28-1322482230.htn&lt;/li&gt;
&lt;li&gt;2011-12-16-1324086694.htn&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Jekyll(Liquid)で記事の目次を出力するプラグインを作ってみた</title>
   <link href="http://gosyujin.github.io/2012/10/10/jekyll-liquid-plugin"/>
   <updated>2012-10-10T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2012/10/10/jekyll-liquid-plugin</id>
   <content type="html">&lt;h2 id=&quot;あらすじ&quot;&gt;あらすじ&lt;/h2&gt;

&lt;p&gt;Jekyllのプラグイン作成の練習。エントリから見出しを抽出して目次を出力してみたい。&lt;/p&gt;

&lt;h2 id=&quot;参考サイト&quot;&gt;参考サイト&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://d.hatena.ne.jp/yuum3/20120711/1341998687&quot;&gt;最近作った Jekyll (Liquid) のプラグイン - @yuumi3のお仕事日記&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;ソース&quot;&gt;ソース&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/gosyujin/gosyujin.github.com/blob/source/_plugins/tree_list.rb&quot;&gt;gosyujin.github.com/&lt;em&gt;plugins/tree&lt;/em&gt;list.rb at master · gosyujin/gosyujin.github.com · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;まだできてない事&quot;&gt;まだできてない事&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;記事中に &lt;code&gt;h1 (#)&lt;/code&gt; タグがあるとうまく生成されない

&lt;ul&gt;
&lt;li&gt;記事タイトルが &lt;code&gt;h1 (#)&lt;/code&gt; なので、 &lt;code&gt;h2 (##)&lt;/code&gt; 以下の見出しを集めてくるようにしている&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;目次から記事へのリンク

&lt;ul&gt;
&lt;li&gt;Markdownでは &lt;code&gt;## &amp;lt;a name=&amp;quot;section&amp;quot;&amp;gt; hoge&lt;/code&gt; と記載すればnameを振ってくれるようだけど、めんどいので自動で振ってほしい&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;むしろ今はaタグを入れているとレイアウトが崩れる&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;…あれ？　別の環境でやったら &lt;code&gt;h&lt;/code&gt;タグに &lt;code&gt;section&lt;/code&gt; , &lt;code&gt;section-1&lt;/code&gt; , &lt;code&gt;section-2&lt;/code&gt; ... って連番が振られてる！？　なんで！&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;作り方&quot;&gt;作り方&lt;/h2&gt;

&lt;p&gt;最小単位はこうなるみたい。(何もしないプラグイン)&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Jekyll&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SampleTag&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Liquid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Tag&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;initialize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tag_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xxx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tokens&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;super&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;no&quot;&gt;Liquid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Template&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;register_tag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;sample&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Jekyll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;SampleTag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;これでMarkdown中に &lt;code&gt;{% sample hogehoge fuga  %}&lt;/code&gt; と書くと、initializeメソッドの &lt;code&gt;tag_name&lt;/code&gt; にsample、 &lt;code&gt;xxx&lt;/code&gt; にhogehoge fuga、 &lt;code&gt;tokens&lt;/code&gt; に本文が渡される。&lt;/p&gt;

&lt;p&gt;という事でタグにつけた引数や本文を使う場合はinitializeで確保しとく。&lt;/p&gt;

&lt;p&gt;renderメソッドでreturnした文字列がそのままページに出力される。&lt;/p&gt;

&lt;p&gt;※ 新しくタグを作ったときは、Jekyllを再起動しないと &lt;code&gt;Unknown tag&lt;/code&gt; が出続ける。&lt;/p&gt;

&lt;h2 id=&quot;例&quot;&gt;例&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;己のJekyll下の &lt;code&gt;_plugins&lt;/code&gt; に &lt;code&gt;tree_list.rb&lt;/code&gt; を突っ込む&lt;/li&gt;
&lt;li&gt;html(postするMarkdownファイルでもいいし、テンプレートのhtmlでもいい)のどこかに &lt;code&gt;{% tree  %}&lt;/code&gt; を埋め込む&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$ jekyll --server&lt;/code&gt; 実行後localhost:4000にアクセス&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;これで文中の見出しが目次としてかき集められる。ただし、GitHub Pagesを使っている場合はソースをそのままpushするだけではダメで、対策が必要っぽい。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>bundle execを省略したいのでバッチを作った(Windows版)</title>
   <link href="http://gosyujin.github.io/2012/10/01/bundle-exec-bat"/>
   <updated>2012-10-01T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2012/10/01/bundle-exec-bat</id>
   <content type="html">&lt;h2 id=&quot;あらすじ&quot;&gt;あらすじ&lt;/h2&gt;

&lt;p&gt;Bundler、非常によいツールなんだけど、bundle exec がめんどい。&lt;/p&gt;

&lt;p&gt;ググってみたところ &lt;code&gt;gemset&lt;/code&gt; を使う方法 &lt;a href=&quot;http://blog.s21g.com/articles/1930&quot;&gt;rvmのgemsetを使ってbundlerと賢く付き合う方法 - Hello, world! - s21g&lt;/a&gt; と、 &lt;code&gt;bundler-exec.sh&lt;/code&gt; というツールを使う &lt;a href=&quot;http://d.hatena.ne.jp/willnet/20110612/1307849053&quot;&gt;bundle exec を省略する - おもしろWEBサービス開発日記&lt;/a&gt; 方法があるみたい。&lt;/p&gt;

&lt;p&gt;Windowsでこれを実現したいんだけど、gemsetはちょっと大げさな気がするので、bundler-exec.shを参考にバッチファイルを作成できないかな。&lt;/p&gt;

&lt;h2 id=&quot;参考サイト&quot;&gt;参考サイト&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.adminweb.jp/command/command/index2.html&quot;&gt;コマンドのエイリアス設定(DOSKEY)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.atmarkit.co.jp/fwin2k/win2ktips/319which/which.html&quot;&gt;whichコマンドを作る &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ykr414.com/dos/dos05.html#07&quot;&gt;コマンドプロンプトを使ってみよう！　－バッチファイル－&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.atmarkit.co.jp/fwin2k/operation/command008/command02.html&quot;&gt;Windows 2000 コマンドライン徹底活用&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://otnx.jp/CMD/%A5%B3%A5%DE%A5%F3%A5%C9%CA%CC/for/&quot;&gt;コマンド別/for&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://pgkiss.web.fc2.com/windows/batch-file.html&quot;&gt;UNIXライクなパス操作をwindowsのcmd.exeのバッチファイルのみで実現&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://d.hatena.ne.jp/superstring04/20080301/1204373672&quot;&gt;Windowsのコマンドプロンプトは変態（一部）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;調査&quot;&gt;調査&lt;/h2&gt;

&lt;p&gt;ソースを読む限り、やっている処理は&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;ruby&lt;/code&gt; とか&lt;code&gt;rspec&lt;/code&gt; とかbundle exec hogehogeしたいコマンドにaliasをはる(rubyならbundler-exec.sh rubyとなるように)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bundle&lt;/code&gt; コマンドが使えるのか探してみる。使えない場合はそのままコマンドを実行する&lt;/li&gt;
&lt;li&gt; &lt;code&gt;bundle&lt;/code&gt; が使える場合、今いるパスに &lt;code&gt;Gemfile&lt;/code&gt; ファイルがあるのか調べる。ない場合は一つ階層を上がってまた &lt;code&gt;Gemfile&lt;/code&gt; があるか探す&lt;/li&gt;
&lt;li&gt;上記をを繰り返す。 &lt;code&gt;Gemfile&lt;/code&gt; がない場合はそのままコマンドを実行する&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Gemfile&lt;/code&gt; があった場合、 &lt;code&gt;bundle exec&lt;/code&gt; を付加してコマンドを実行する&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;という感じになっている。&lt;/p&gt;

&lt;h2 id=&quot;ソース&quot;&gt;ソース&lt;/h2&gt;

&lt;p&gt;で、作ってみた。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/gosyujin/bundler-exec-bat&quot;&gt;gosyujin/bundler-exec-bat&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;使い方&quot;&gt;使い方&lt;/h2&gt;

&lt;h3 id=&quot;aliasをはる&quot;&gt;aliasをはる&lt;/h3&gt;

&lt;p&gt;コマンドプロンプトの場合にはaliasがないようなので、マクロ定義ファイルを作成し、それを起動時に読むようにバッチファイルを作る。または起動オプションを変更する必要があるらしい。(レジストリに登録などでもいい)&lt;/p&gt;

&lt;p&gt;定義ファイルは以下のように記述する。とりあえずruby, rspec, herokuを使えるように。必要なコマンドは適宜このファイルに追加する事になる。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;heroku=bundler-exec heroku $*
rspec=bundler-exec rspec $*
ruby=bundler-exec ruby $*
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;定義ファイルを読み込む場合は&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;gt; doskey /macrofile=MACRO_FILE&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;alias(マクロ)を確認するには&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;gt; doskey /macros&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;それ以降&quot;&gt;それ以降&lt;/h3&gt;

&lt;p&gt;それ以降の処理は &lt;code&gt;bundler-exec.bat&lt;/code&gt; に記述している。&lt;/p&gt;

&lt;p&gt;バッチファイルをがっつり書く機会もあまりなかったので、結構試行錯誤。(pwdをWindowsで実現させるには？　コマンドの実行結果を変数に格納するには？　while文ないの？　等々)&lt;/p&gt;

&lt;p&gt;とりあえず、動く版を作る事ができた。一応、Documents and Settings下でも実行できたのでパスにスペースが入っていても大丈夫そう。&lt;/p&gt;

&lt;p&gt;これをパスが通っているところに放り込み、下記のようなfizzbuzzディレクトリで実行してみる。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;C:\fizzbuzz
  ┣.bundle
  ┣Gemfile
  ┣Gemfile.lock
  ┣fizzbuzz.rb
  ┣autotest/
  ┣spec/
  ┗vendor/
    ┗bundle
      ┗ruby
       ┗1.9.1
         ┗…
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;まずは普通に。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; ruby fizzbuzz.rb 3
&lt;span class=&quot;go&quot;&gt;bundler is found: bundle exec ruby fizzbuzz.rb 3&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Fizz&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;ちょっと下の階層から実行しても、無事にGemfileを探してbundle exec。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;autotest&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; ruby ../fizzbuzz.rb 5
&lt;span class=&quot;go&quot;&gt;bundler is found: bundle exec ruby ../fizzbuzz.rb 5&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Buzz&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Gemfileを消して &lt;code&gt;Ruby&lt;/code&gt; コマンド実行。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; ls
&lt;span class=&quot;go&quot;&gt;autotest/    fizzbuzz.rb* spec/&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; ruby fizzbuzz.rb 15
&lt;span class=&quot;go&quot;&gt;bundler is NOT found or Gemfile is NOT found: ruby fizzbuzz.rb 15&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;FizzBuzz&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;ちゃんと &lt;code&gt;bundle exec&lt;/code&gt; なしで実行できた！&lt;/p&gt;

&lt;h2 id=&quot;残件&quot;&gt;残件&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;なんか重い&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;結構力技でやってるから…？　またはテストしてるPCがヘボいから？&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Pygmentsを使ってJekyll内記事のコードハイライトを実現する</title>
   <link href="http://gosyujin.github.io/2012/09/21/jekyll-pygments"/>
   <updated>2012-09-21T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2012/09/21/jekyll-pygments</id>
   <content type="html">&lt;h2 id=&quot;あらすじ&quot;&gt;あらすじ&lt;/h2&gt;

&lt;p&gt;Jekyllではデフォルトでコードにハイライトをつける事はできないようなので、Pygmentsという拡張を入れる。&lt;/p&gt;

&lt;h2 id=&quot;環境&quot;&gt;環境&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Python 2.7.3 (2.6以上が必要)

&lt;ul&gt;
&lt;li&gt;easy_install&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;easy&lt;em&gt;installは&lt;a href=&quot;http://peak.telecommunity.com/dist/ez_setup.py&quot;&gt;http://peak.telecommunity.com/dist/ez_setup.py&lt;/a&gt;からDLし `$ (sudo) python ez&lt;/em&gt;setup.py` でインストールする。&lt;/p&gt;

&lt;p&gt;※ 後に以下のようなエラーが出るかもしれない。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Liquid error: undefined method &amp;#39;Py_IsInitialized&amp;#39; for RubyPython::Python:Module&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;これはRubyからPythonを呼びに行くRubypythonというライブラリの中で、libpython2.7.soというファイルを探しに行くが、見つからないとすぐあきらめるようなので？　&lt;code&gt;--enable-shared&lt;/code&gt; オプションつけてのインストールが吉。&lt;/p&gt;

&lt;p&gt;また、以下の様なエラーが出た場合、libpython2.7.so.1.0が見つからなくてpythonコマンドが実行できなくなった。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ python
&amp;gt; python: error while loading shared libraries: libpython2.7.so.1.0: cannot open shared object file: No such file or directory

$ ldd python
    linux-vdso.so.1 =&amp;gt;  (0x00007fff9cf94000)
    libpython2.7.so.1.0 =&amp;gt; not found
    libpthread.so.0 =&amp;gt; /lib64/libpthread.so.0 (0x000000343d600000)
    libdl.so.2 =&amp;gt; /lib64/libdl.so.2 (0x000000343ce00000)
    libutil.so.1 =&amp;gt; /lib64/libutil.so.1 (0x0000003440200000)
    libm.so.6 =&amp;gt; /lib64/libm.so.6 (0x0000003665600000)
    libc.so.6 =&amp;gt; /lib64/libc.so.6 (0x000000343d200000)
    /lib64/ld-linux-x86-64.so.2 (0x000000343ca00000)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;/usr/libとか共有ライブラリが検索するように設定しているパスにシンボリックリンクを貼るか、LD&lt;em&gt;LIBRARY&lt;/em&gt;PATHにパスを追加するか/etc/ld.so.conf.d/hogehoge.confを作ってパスを追加するかldconfigコマンドでパスを追加してからもう一回Pythonインストールする。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://d.hatena.ne.jp/shrkw/20110124/1295851744&quot;&gt;CentOS 5.5にvirtualenvを入れて、Python2.7とFlaskの環境を作ったよ！ - Bouldering &amp;amp; Com.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://d.hatena.ne.jp/natsumesouxx/20111126/1322339821&quot;&gt;共有ライブラリのコンパイル時に必要な検索パスを追加する方法 - ドキ！丸ごと！夏目だらけの水泳大会&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;参考サイト&quot;&gt;参考サイト&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://fingaholic.tumblr.com/post/20841800395/windows-pygments&quot;&gt; Windowsでpygmentsを使ってコードハイライト &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://d.hatena.ne.jp/hokaccha/20120808/1344436656&quot;&gt;pygmentsが原因でjekyllが重くなってた&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/tombell/jekyll/commit/b2a1d61c0407d6612450fe7d90a9a1a397aaa28e&quot;&gt;Swap out albino for pygments.rb&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/mojombo/tpw/blob/master/css/syntax.css&quot;&gt;tpw / css / syntax.css&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;手順&quot;&gt;手順&lt;/h2&gt;

&lt;p&gt;いきなりeasy_install。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ easy_install Pygments
Searching for Pygments
Best match: pygments 1.5
Processing pygments-1.5-py2.7.egg
pygments 1.5 is already the active version in easy-install.pth
Installing pygmentize-script.py script to C:\Pythons\Python27\Scripts
Installing pygmentize.exe script to C:\Pythons\Python27\Scripts
Installing pygmentize.exe.manifest script to C:\Pythons\Python27\Scripts

Using c:\pythons\python27\lib\site-packages\pygments-1.5-py2.7.egg
Processing dependencies for Pygments
Finished processing dependencies for Pygments
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;highlight hogeタグをテストするが、以下のようなエラーが表示されてしまった。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;Liquid error: Bad file descriptor
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;http://fingaholic.tumblr.com/post/20841800395/windows-pygments&quot; title=&quot; Windowsでpygmentsを使ってコードハイライト &quot;&gt; Windowsでpygmentsを使ってコードハイライト &lt;/a&gt;によると、&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;C:\Ruby193\lib\ruby\gems\1.9.1\gems\albino-1.3.3\lib\albino.rbにパッチを当てる。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;という事で &lt;code&gt;albino.rb&lt;/code&gt; にパッチをあてると解決するらしい。&lt;/p&gt;

&lt;p&gt;確かに、Bundlerでインストールしたgemの中にしっかりと &lt;code&gt;albino-1.3.3&lt;/code&gt; がある。&lt;/p&gt;

&lt;p&gt;……が。このalbinoはhighlightがあるたびにPygmentsを呼ぶようなのでこのまま使っていくと超重くなるらしい。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;今現在gemでインストールできるjekyllはコードハイライトにalbinoっていう
モジュールを使ってみるみたいで、こいつはハイライトするコードブロックが
あるあるたびにpygamentsプロセスを立ち上げるらしく、それが原因で超重くなってたみたい。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;それはできれば避けたい……。&lt;/p&gt;

&lt;h2 id=&quot;jekyllの修正&quot;&gt;Jekyllの修正&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/tombell/jekyll/commit/b2a1d61c0407d6612450fe7d90a9a1a397aaa28e&quot;&gt;Swap out albino for pygments.rb&lt;/a&gt;を見ながら &lt;code&gt;albino&lt;/code&gt; を &lt;code&gt;pygments.rb&lt;/code&gt; に差し替えてやる。&lt;/p&gt;

&lt;p&gt;差し替えが完了したらpygments.rbとその依存gemを取りに行くためbundle update。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ bundle update
Fetching source index for http://rubygems.org/
Fetching source index for http://rubygems.org/
Using RedCloth (4.2.9)
Installing blankslate (3.1.2)
Using fast-stemmer (1.0.1)
Using classifier (1.3.3)
Using directory_watcher (1.4.1)
Installing ffi (1.0.11) with native extensions
Installing kramdown (0.14.0)
Using liquid (2.4.1)
Using syntax (1.0.0)
Installing maruku (0.6.1)
Installing rubypython (0.5.3)
Installing pygments.rb (0.2.13)
Using jekyll (0.11.2)
Using bundler (1.0.21)
Your bundle is updated! Use `bundle show [gemname]` to see where a bundled gem is installed.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;これでまずは&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt; {% highlight ruby  %}
 puts &amp;quot;hello world&amp;quot;
 {% endhighlight  %}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;こういう表記が一応、liquid errorがでずに出力されるようになった。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;hello world&amp;quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;world&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;w&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;hoge&amp;quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;色づけ&quot;&gt;色づけ&lt;/h2&gt;

&lt;p&gt;最後にハイライト。(記事上はもう色がついちゃってるんだけど、本来は全部黒いはず)これは&lt;a href=&quot;https://github.com/mojombo/tpw/blob/master/css/syntax.css&quot;&gt;tpw / css / syntax.css&lt;/a&gt;からCSSを持ってくれば良い。このsyntax.cssの内容を &lt;code&gt;JEKYLL_HOME\assets\themes\twitter\bootstrap\css\bootstrap.min.css&lt;/code&gt; に追記する。&lt;/p&gt;

&lt;p&gt;これでOK！&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>JekyllをGitHub Pagesに上げるための準備</title>
   <link href="http://gosyujin.github.io/2012/09/20/jekyll"/>
   <updated>2012-09-20T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2012/09/20/jekyll</id>
   <content type="html">&lt;h2 id=&quot;github-pagesに登録&quot;&gt;GitHub Pagesに登録&lt;/h2&gt;

&lt;p&gt;GitHubより &lt;code&gt;New Repository&lt;/code&gt; を選択。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/images/2012-09-20/2012-09-20-1.jpg&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Repository Name&lt;/code&gt; を &lt;code&gt;GitHubのID.github.com&lt;/code&gt; と入力しリポジトリ作成。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/images/2012-09-20/2012-09-20-2.jpg&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;

&lt;p&gt;前回の記事で作成していたJekyll Bootstrapのプッシュ先を追加し、プッシュ。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git remote add origin git@github.com:gosyujin/gosyujin.github.com.git
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; git push -u origin master&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;http://gosyujin.github.com にアクセスしても多分404なので。気長に待つ。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/images/2012-09-20/2012-09-20-3.jpg&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;

&lt;p&gt;その間にSite Urlに上のUrlでも入れとく。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/images/2012-09-20/2012-09-20-4.jpg&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;

&lt;p&gt;そんなこんなでサイトが表示されるようになっているはず。(メールが来たら？)&lt;/p&gt;

&lt;h2 id=&quot;色々な設定&quot;&gt;色々な設定&lt;/h2&gt;

&lt;p&gt;まずは &lt;code&gt;_config.yml&lt;/code&gt; 。&lt;/p&gt;

&lt;p&gt;デフォルトのmarkdownパーサの &lt;code&gt;maruku&lt;/code&gt; は日本語をうまくパースしてくれないみたいなので(日本語でリスト表記ができなかった)、 &lt;code&gt;kramdown&lt;/code&gt; に変更する。以下の記述を追加。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;l-Scalar-Plain&quot;&gt;markdown&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;kramdown&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;他、タイトルや名前、TwitterIDなどを編集。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;l-Scalar-Plain&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;kk_Atakaの日記&lt;/span&gt;
&lt;span class=&quot;l-Scalar-Plain&quot;&gt;tagline&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; 
&lt;span class=&quot;l-Scalar-Plain&quot;&gt;author&lt;/span&gt; &lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;l-Scalar-Plain&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;kk_Ataka&lt;/span&gt;
  &lt;span class=&quot;l-Scalar-Plain&quot;&gt;email&lt;/span&gt; &lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;kk_ataka@ring.skr.jp&lt;/span&gt;
  &lt;span class=&quot;l-Scalar-Plain&quot;&gt;github&lt;/span&gt; &lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;gosyujin&lt;/span&gt;
  &lt;span class=&quot;l-Scalar-Plain&quot;&gt;twitter&lt;/span&gt; &lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;kk_Ataka&lt;/span&gt;
  &lt;span class=&quot;l-Scalar-Plain&quot;&gt;feedburner&lt;/span&gt; &lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;feedname&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;production_urlをGitHub Pagesに。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;l-Scalar-Plain&quot;&gt;production_url&lt;/span&gt; &lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;http://gosyujin.github.com&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;ここから先はJekyll Bootstrapでインストールした時に入ったコメント機能とかアクセス解析の設定。&lt;/p&gt;

&lt;h3 id=&quot;コメント機能&quot;&gt;コメント機能&lt;/h3&gt;

&lt;p&gt;デフォルトでは &lt;code&gt;DISQUS&lt;/code&gt; というツールを使用している。まず&lt;a href=&quot;http://disqus.com/&quot;&gt;DISQUS - Elevating the discussion&lt;/a&gt;でユーザ登録をする必要がある。(TwitterID等でも可能)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/images/2012-09-20/2012-09-20-5.jpg&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/images/2012-09-20/2012-09-20-6.jpg&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;

&lt;p&gt;アカウントを作ったら自分のサイトを登録。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/images/2012-09-20/2012-09-20-7.jpg&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;

&lt;p&gt;ここで入力する &lt;code&gt;shortname&lt;/code&gt; を控えておく。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/images/2012-09-20/2012-09-20-8.jpg&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;_config.yml&lt;/code&gt; にさっきの &lt;code&gt;shortname&lt;/code&gt; を記述する。 &lt;code&gt;provider&lt;/code&gt; もDISQUSになっている事を確認する。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;l-Scalar-Plain&quot;&gt;comments&lt;/span&gt; &lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;l-Scalar-Plain&quot;&gt;provider&lt;/span&gt; &lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;disqus&lt;/span&gt;
  &lt;span class=&quot;l-Scalar-Plain&quot;&gt;disqus&lt;/span&gt; &lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;l-Scalar-Plain&quot;&gt;short_name&lt;/span&gt; &lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;kkataka&lt;/span&gt;
  &lt;span class=&quot;l-Scalar-Plain&quot;&gt;(略)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;これでいけるはず。(だめならUniversalコードを &lt;code&gt;_includes/JB/comments-providers/disqus&lt;/code&gt; に貼り付けてみる？)
&lt;img src=&quot;/static/images/2012-09-20/2012-09-20-9.jpg&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;

&lt;p&gt;自分のサイトにコメントが書き込まれると、こんな感じでDISQUSに表示される。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/images/2012-09-20/2012-09-20-10.jpg&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/images/2012-09-20/2012-09-20-11.jpg&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;

&lt;p&gt;現時点で、DISQUSのコメント欄を日本語にするには &lt;code&gt;Admin =&amp;gt; Settings =&amp;gt; Disqus 2012&lt;/code&gt; のチェックを外す。DISQUS 2012テーマ(？)はまだ日本語に対応していないらしい。また、 &lt;code&gt;Language&lt;/code&gt; はJapaneseにしておくこと。&lt;/p&gt;

&lt;h3 id=&quot;アクセス解析&quot;&gt;アクセス解析&lt;/h3&gt;

&lt;p&gt;デフォルトでは &lt;code&gt;Google Analytics&lt;/code&gt; を使用している。トラッキング ID(UA-xxxxxxxx-x)を控えて &lt;code&gt;_config.yml&lt;/code&gt; に記述する。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;l-Scalar-Plain&quot;&gt;analytics&lt;/span&gt; &lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;l-Scalar-Plain&quot;&gt;provider&lt;/span&gt; &lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;google&lt;/span&gt;
  &lt;span class=&quot;l-Scalar-Plain&quot;&gt;google&lt;/span&gt; &lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;l-Scalar-Plain&quot;&gt;tracking_id&lt;/span&gt; &lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;UA-xxxxxxxx-x&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;次はレイアウトの変更とかツイートボタン設置とか。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>JekyllとJekyll Bootstrapでかんたん静的サイト生成…するための準備</title>
   <link href="http://gosyujin.github.io/2012/09/14/1347595853"/>
   <updated>2012-09-14T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2012/09/14/1347595853</id>
   <content type="html">&lt;h1&gt;あらすじ&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;はてな記法、綺麗に出力できて今までお気に入りだったんだけど、欠点として、はてなでしか使わないという問題が&lt;/li&gt;&lt;li&gt;他にも文章書く時にreSTとかMarkdownを使うと捗るが、結局アウトプットするのは個人でははてなが多い……&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f1&quot; title=&quot;個人でない場合はExcelとか&quot; name=&quot;fn1&quot;&gt;*1&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;そもそもはてな記法は基本はてなじゃなきゃ見れない&lt;/li&gt;&lt;li&gt;なら最初から…？&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;うーん。他の記法使う時がきたのか。&lt;/p&gt;
&lt;h1&gt;Jekyllとは&lt;/h1&gt;
&lt;blockquote&gt;&lt;p&gt;Jekyll is a simple, blog aware, static site generator.&lt;/p&gt;&lt;cite&gt;&lt;a href=&quot;https://github.com/mojombo/jekyll/wiki&quot;&gt;https://github.com/mojombo/jekyll/wiki&lt;/a&gt;&lt;/cite&gt;&lt;/blockquote&gt;
&lt;p&gt;静的サイトのジェネレーターなのね。 HTML, Markdown, textile なんでもござれ。&lt;/p&gt;
&lt;h1&gt;参考サイト&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/mojombo/jekyll&quot;&gt;mojombo/jekyll · GitHub&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://mattn.kaoriya.net/software/lang/ruby/20090409185248.htm&quot;&gt;Big Sky :: Jekyllで始める簡単ブログ&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://melborne.github.com/2012/05/13/first-step-of-jekyll/&quot;&gt;30分のチュートリアルでJekyllを理解する&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://tokkonopapa.github.com/blog/2011/12/28/easy-usage-of-jekyll-on-github/&quot;&gt;jekyllで作る簡単GitHub Pages - T.I.D.&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://d.hatena.ne.jp/yuum3/20120620/1340180894&quot;&gt;Jekyll は軽快なブログソフトなので乗り換えてみた - @yuumi3のお仕事日記&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://d.hatena.ne.jp/takuti/20110724/1311464070&quot;&gt;Jekyllであそぼう！ - takutism&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://dsuket.hatenablog.com/entry/2012/03/06/191459&quot;&gt;静的サイト生成ツール Jekyll を使って、bootstrapサイトを作ってみたよ - webとかmacとかやってみようか R&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://d.hatena.ne.jp/seinzumtode/20120426/1335402322&quot;&gt;Jekyllをはじめる - how to code something&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;環境&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;CentOS 6.2 と、WindowsXP&lt;/li&gt;&lt;li&gt;Ruby 1.9.2&lt;ul&gt;&lt;li&gt;Bundler 1.1.4&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Git 1.7.9.6&lt;/li&gt;&lt;li&gt;Jekyll 0.11.2&lt;/li&gt;&lt;li&gt;RedCloth 4.2.9&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;いきなり動かす&lt;/h1&gt;
&lt;p&gt;本来は決まったディレクトリを作ったり、コンフィグファイルを作ったり、レイアウトファイルを作ったりしていく……のだけど、Jekyll Bootstrapを使えばいきなりフルセットで動かす事ができる。&lt;/p&gt;
&lt;p&gt;取得はGitで。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git clone http://github.com/plusjade/jekyll-bootstrap.git JEKYLL_HOME&lt;/pre&gt;
&lt;p&gt;JekyllはBundlerでインストールするので移動してGemfileを作成。そしてjekyllコマンドで実行！&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ cd JEKYLL_HOME
$ vi Gemfile
$ cat Gemfile
source :rubygems
source &amp;quot;http://rubygems.org&amp;quot;

gem &#39;jekyll&#39;
gem &#39;RedCloth&#39;

$ bundle install --path vendor/bundle
$ bundle exec jekyll --server&lt;/pre&gt;
&lt;p&gt;これで、&lt;a href=&quot;http://localhost:4000&quot;&gt;http://localhost:4000&lt;/a&gt; にアクセスしてみると超カッコいいサンプルページが出来上がっている。CentOSは以上。&lt;/p&gt;
&lt;h1&gt;ハマり for Windows&lt;/h1&gt;
&lt;p&gt;ところで、Windows XPで同じ事やっても_site下に静的ファイルが全然できなかった。……まあ、そもそもXP使うなって話？&lt;/p&gt;
&lt;p&gt;結果としては、&lt;span class=&quot;deco&quot; style=&quot;color:#FF0000;&quot;&gt;RedCloth-4.2.9-x86-mingw32直下のspecディレクトリを削除したら生成されるようになった。&lt;/span&gt;静的ファイル生成の流れを追っていくと、&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;jekyll/bin/jekyll内でsite.processメソッドが呼ばれている&lt;/li&gt;&lt;li&gt;jekyll/lib/jekyll/site.rbのprocessメソッドからread,readからread_directoriesメソッドが呼ばれている&lt;/li&gt;&lt;li&gt;read_directoriesメソッドは以下のようになっている&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;ruby&quot;&gt;     def read_directories(dir = &#39;&#39;)
       base = File.join(self.source, dir)
       entries = Dir.chdir(base) { filter_entries(Dir[&#39;*&#39;]) }
       self.read_posts(dir)

       entries.each do |f|
         f_abs = File.join(base, f)
         f_rel = File.join(dir, f)
         if File.directory?(f_abs)
           next if self.dest.sub(/\/$/, &#39;&#39;) == f_abs
           read_directories(f_rel)
         elsif !File.symlink?(f_abs)
           first3 = File.open(f_abs) { |fd| fd.read(3) }
           if first3 == &amp;quot;---&amp;quot;
#＼yaml！／
             # file appears to have a YAML header so process it as a page
             pages &amp;lt;&amp;lt; Page.new(self, self.source, dir, f)
           else
             # otherwise treat it as a static file
             static_files &amp;lt;&amp;lt; StaticFile.new(self, self.source, dir, f)
           end
         end
       end
     end&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;読み込むファイルをputs して眺めていると、＼yaml！／のところでRedCloth-4.2.9-x86-mingw32\spec\fixtures\basic.ymlを呼んだ瞬間止まっている模様……&lt;/li&gt;&lt;li&gt;まあ、specファイルだしなくてもいいよね？　削除、で、動いたという事で&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f2&quot; title=&quot;なんでbasic.ymlを読もうとして止まったかまでは調べてないです……&quot; name=&quot;fn2&quot;&gt;*2&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;で、動かす(Windows)。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ be jekyll --server
Configuration from C:/HOGE/jekyll/_config.yml
Auto-regenerating enabled: C:/HOGE/project/jekyll -&amp;gt; C:/HOGE/project/jekyll/_site
[2012-09-12 23:50:51] regeneration: 983 files changed
[2012-09-12 23:50:54] INFO  WEBrick 1.3.1
[2012-09-12 23:50:54] INFO  ruby 1.9.2 (2011-07-09) [i386-mingw32]
[2012-09-12 23:50:54] INFO  WEBrick::HTTPServer#start: pid=5944 port=4000

 ___________________________________________________________________________
| Maruku tells you:
+---------------------------------------------------------------------------
| Unclosed span (waiting for [&amp;quot;_&amp;quot;])
| ---------------------------------------------------------------------------
| Included file &#39;sig.markdown&#39; not found in _includes directoryEOF
| -------------------------------------------------------------|--------------
|                                                              +--- Byte 61
| Shown bytes [0 to 61] of 61:
| &amp;gt;Included file &#39;sig.markdown&#39; not found in _includes directory
|
| At line 2
|       text     |Included file &#39;sig.markdown&#39; not found in _includes directory|
|      empty --&amp;gt; ||
|       text     |This _is_ cool|
|
|
| Elements read in span:
|
| Current string:
|   &amp;quot;includes directory&amp;quot;
+---------------------------------------------------------------------------
!C:/HOGE/project/jekyll/vendor/bundle/ruby/1.9.1/gems/maruku-0.6.0/lib/maruku/errors_management.rb:49:in `maruku_error&#39;
!C:/HOGE/project/jekyll/vendor/bundle/ruby/1.9.1/gems/maruku-0.6.0/lib/maruku/input/parse_span_better.rb:222:in `read_span&#39;
!C:/HOGE/project/jekyll/vendor/bundle/ruby/1.9.1/gems/maruku-0.6.0/lib/maruku/input/parse_span_better.rb:423:in `read_em&#39;
!C:/HOGE/project/jekyll/vendor/bundle/ruby/1.9.1/gems/maruku-0.6.0/lib/maruku/input/parse_span_better.rb:202:in `read_span&#39;
!C:/HOGE/project/jekyll/vendor/bundle/ruby/1.9.1/gems/maruku-0.6.0/lib/maruku/input/parse_span_better.rb:46:in `parse_span_better&#39;
\___________________________________________________________________________
&lt;/pre&gt;
&lt;p&gt;エラーは出てるけど、これで &lt;a href=&quot;http://localhost:4000&quot;&gt;http://localhost:4000&lt;/a&gt;にアクセスするとページが見れる！&lt;/p&gt;
&lt;p&gt;sig ... 署名？　あんまりよくないけど、空っぽでも存在さえすれば怒られないっぽい。&lt;/p&gt;
&lt;div class=&quot;footnote&quot;&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn1&quot; name=&quot;f1&quot;&gt;*1&lt;/a&gt;: 個人でない場合はExcelとか&lt;/p&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn2&quot; name=&quot;f2&quot;&gt;*2&lt;/a&gt;: なんでbasic.ymlを読もうとして止まったかまでは調べてないです……&lt;/p&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>Fluentdの自作プラグインがロードできないのでソースの中身を追ってみる…</title>
   <link href="http://gosyujin.github.io/2012/09/13/1347508570"/>
   <updated>2012-09-13T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2012/09/13/1347508570</id>
   <content type="html">&lt;h1&gt;あらすじ&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;http://d.hatena.ne.jp/kk_Ataka/20120817/1345209899&quot;&gt;前回&lt;/a&gt;までに簡単なプラグインを作成する事はできた。&lt;/p&gt;
&lt;p&gt;次はプラグインをGem化しようかなと思って色々いじってたら、実行時になんかうまくプラグインが読めない……。なんで？&lt;/p&gt;
&lt;h1&gt;参考サイト&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/fluent/fluentd&quot;&gt;fluent/fluentd · GitHub&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://d.hatena.ne.jp/tagomoris/20120715/1342368392&quot;&gt;Fluentdでparser用の正規表現を書く・試す - tagomorisのメモ置き場&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://blog.ksauzz.com/?p=37&quot;&gt;fluent pluginの作成 » ksauzz weblog&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;今できてる事とできてない事&lt;/h1&gt;
&lt;p&gt;BundlerでFluentdをインストールし、&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ bundle exec fluentd -c /hoge/fluent.conf -p /hoge/plugin &lt;/pre&gt;
&lt;p&gt;を実行した時……&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;gem installで入れたfluentdのプラグインはちゃんとロードできる&lt;ul&gt;&lt;li&gt;Gemにしちゃえばロードできる&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;プラグインディレクトリ直下(-p /hoge/plugin)にササッと作ってみたプラグインもロードでき、動いた&lt;ul&gt;&lt;li&gt;直下に放り込めばロードできる&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;/hoge/plugin
└in_hoge.rb              # これはロードできる&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;&lt;span class=&quot;deco&quot; style=&quot;color:#FF0000;&quot;&gt;gem未満、ササッと作った以上のプラグインがロードできない&lt;/span&gt;&lt;ul&gt;&lt;li&gt;fluent-pluginっぽいディレクトリ構成にした程度のもの。まだローカルに置いてあるだけでgemには成り切れていない&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;/hoge/plugin
├in_hoge.rb              # これはロードできる
└fluent-plugin-hogehoge
　├lib
　│└fluent
　│　└plugin
　│　　└in_hogehoge.rb  # これがロードできない
　├fluent-plugin-hogehoge.gemspec
　└他&lt;/pre&gt;
&lt;h1&gt;調査結果と(暫定)解決策&lt;/h1&gt;
&lt;h2&gt;fluentdのプラグインロード順番&lt;/h2&gt;
&lt;p&gt;fluentdコマンドを実行すると、 &lt;span class=&quot;deco&quot; style=&quot;font-weight:bold;&quot;&gt;なんやかんやあって&lt;/span&gt; プラグインをロードしにいく。ソースは$FLUENTD_HOME/lib/fluent/plugin.rb&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;$FLUENTD_HOME/lib/fluent/plugin/直下のrbファイルをロードする&lt;ul&gt;&lt;li&gt;in_exec.rbとか&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;gem_pluginをロードする&lt;ul&gt;&lt;li&gt;これは今回空だった&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;/etc/fluent/plugin/直下のrbファイルをロードする&lt;ul&gt;&lt;li&gt;デフォルトのプラグイン置き場&lt;/li&gt;&lt;li&gt;デフォルトの設定は$FLUENTD_HOME/lib/fluent/env.rbに定義されている&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;オプションで-p /hoge/pluginを指定していた場合、/hoge/plugin直下のrbファイルもロードする&lt;ul&gt;&lt;li&gt;また、&lt;span class=&quot;deco&quot; style=&quot;color:#FF0000;&quot;&gt;-pオプションは複数指定できる&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;fluent.confに定義されている&lt;source&gt; type hogeが今までロードしたファイルにあるか確認。あった場合はそのままロードできる&lt;/li&gt;&lt;/ol&gt;
&lt;ul&gt;&lt;li&gt;なかった場合はもう少し色々な場所の探索にチャレンジする&lt;ul&gt;&lt;li&gt;&lt;span class=&quot;deco&quot; style=&quot;color:#FF0000;&quot;&gt;$LOAD_PATHと、gem installしたディレクトリ直下のどこかにlib/fluent/plugin/&lt;type&gt;_&lt;name&gt;.rb&lt;/span&gt;が存在するか&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;解決策&lt;/h1&gt;
&lt;ol&gt;&lt;li&gt;fluentd自体の$LOAD_PATHに追加&lt;ul&gt;&lt;li&gt;本体に毎回修正かけるの？&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;in_hogehoge.rbをロードしてくれる場所へコピー(デフォルトプラグイン(/etc/fluent/plugin)など)&lt;ul&gt;&lt;li&gt;コピペ？&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;さっさと作ってgem installできるようにもっていく&lt;ul&gt;&lt;li&gt;うーん…&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;オプション-pを複数指定する&lt;ul&gt;&lt;li&gt;上の場合は -p /hoge/plugin -p /hoge/plugin/fluent-plugin-hogehoge/lib/fluent/plugin としてやればよい&lt;ul&gt;&lt;li&gt;fluentd本体でわざわざlib/fluent/plugin下を探すようにコーディングされてるのにこんな指定の仕方するものかな？　何か違う気がする……下みたいに未完成のプラグインが増えていくとオプションガンガン長くなっていく？&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ol&gt;
&lt;pre class=&quot;&quot;&gt;/hoge/plugin
├in_hoge.rb
├fluent-plugin-hogehoge
│└lib
│　└fluent
│　　└plugin
│　　　└in_hogehoge.rb
├fluent-plugin-hogehoge2
│└lib
│　└fluent
│　　└plugin
│　　　└in_hogehoge2.rb
└fluent-plugin-hogehoge3
　└lib
　　└fluent
　　　└plugin
　　　　└in_hogehoge3.rb&lt;/pre&gt;
&lt;p&gt;以下、調査ログ。&lt;/p&gt;
&lt;h1&gt;調査ログ&lt;/h1&gt;
&lt;p&gt;セットアップをすると指定したディレクトリにconfigファイルとpluginディレクトリができる。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ fluentd -s fluentd-hoge
Installed fluentd-hoge/fluent.conf.
$ ls fluentd-hoge/
fluent.conf  plugin&lt;/pre&gt;
&lt;p&gt;pluginディレクトリにそのままプラグイン(rbファイル)を入れておくと、起動時に読み込まれる。&lt;/p&gt;
&lt;h1&gt;bundle gemコマンドを使ってプラグインを作っていく&lt;/h1&gt;
&lt;pre class=&quot;&quot;&gt;$ cd plugin # プラグインを作るからとりあえずpluginディレクトリに移動する
$ bundle gem fluent-plugin-hogehoge
      create  fluent-plugin-hogehoge/Gemfile
      create  fluent-plugin-hogehoge/Rakefile
      create  fluent-plugin-hogehoge/LICENSE
      create  fluent-plugin-hogehoge/README.md
      create  fluent-plugin-hogehoge/.gitignore
      create  fluent-plugin-hogehoge/fluent-plugin-hogehoge.gemspec
      create  fluent-plugin-hogehoge/lib/fluent-plugin-hogehoge.rb
      create  fluent-plugin-hogehoge/lib/fluent-plugin-hogehoge/version.rb
Initializating git repo in /略/fluent-hoge/plugin/fluent-plugin-hogehoge&lt;/pre&gt;
&lt;p&gt;なんかいろいろ出来たがちょっとルールがあるようなので整形していく。公式サイトより&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Installing custom plugins&lt;/p&gt;&lt;p&gt;To install a plugin, put a ruby script to /etc/fluent/plugin directory.&lt;/p&gt;&lt;p&gt;Or you can create gem package that includes lib/fluent/plugin/&lt;TYPE&gt;_&lt;NAME&gt;.rb file.&lt;/p&gt;&lt;p&gt;TYPE is in for input plugins, out for output plugins and buf for buffer plugins.&lt;/p&gt;&lt;p&gt;It’s like lib/fluent/plugin/out_mail.rb.&lt;/p&gt;&lt;p&gt;The packaged gem can be distributed and installed using RubyGems.&lt;/p&gt;&lt;p&gt;See Searching plugins.&lt;/p&gt;&lt;cite&gt;&lt;a href=&quot;http://fluentd.org/doc/devel.html&quot;&gt;http://fluentd.org/doc/devel.html&lt;/a&gt;&lt;/cite&gt;&lt;/blockquote&gt;
&lt;ul&gt;&lt;li&gt;プラグインは/etc/fluent/pluginにインストールするといいよ&lt;ul&gt;&lt;li&gt;また、-pオプションを指定すればfluent-hoge/plugin下も呼んでくれる&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Gem packageを作る場合はパッケージの下にlib/fluent/plugin/&lt;TYPE&gt;_&lt;NAME&gt;.rbって名前にしておいてね&lt;ul&gt;&lt;li&gt;他の方が作ったプラグイン＠GitHubを見ていると確かにそうなっていた！&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;TYPE&gt;はinputプラグインならin、outputプラグインならoutといったように&lt;ul&gt;&lt;li&gt;このルールは後ほど効いてくる&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;ってわけでディレクトリはこんな構成に。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;fluent-hoge/
├(略)
├fluent.conf
└plugin/　…　(1)
　└fluent-plugin-hogehoge
　　├Gemfile                      # この辺はほぼいじってない
　　├LICENSE                      # この辺はほぼいじってない
　　├README.md                    # この辺はほぼいじってない
　　├Rakefile                     # この辺はほぼいじってない
　　├fluent-plugin-inputs.gemspec # この辺はほぼいじってない
　　└lib/
　　　└fluent/
　　　　└plugin/
　　　　　└in_inputs.rb&lt;/pre&gt;
&lt;p&gt;プラグインも作成。ただ{&quot;plugin&quot;=&gt;&quot;yes&quot;}を出力しまくるだけのソース。&lt;/p&gt;
&lt;pre class=&quot;ruby&quot;&gt;class FluPluGem &amp;lt; Fluent::Input
  Fluent::Plugin.register_input(&amp;quot;inputs&amp;quot;, self)
  def initialize
    super
  end

  def configure(conf)
    super
  end

  def start
    puts &amp;quot;a starts&amp;quot;
    @thread = Thread.new(&amp;amp;method(:run))
  end

  def run
    loop do
      Fluent::Engine.emit(&amp;quot;debugx.debug&amp;quot;, Fluent::Engine.now, {&amp;quot;plugin&amp;quot; =&amp;gt; &amp;quot;yes&amp;quot;})
      sleep(2)
    end
  end
end&lt;/pre&gt;
&lt;p&gt;fluent.confにプラグインを追加。&lt;/p&gt;
&lt;pre class=&quot;xml&quot;&gt;&amp;lt;source&amp;gt;
  type inputs
&amp;lt;/source&amp;gt;&lt;/pre&gt;
&lt;p&gt;この状態で起動！&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;/usr/local/bin/fluentd -c /略/fluent-hoge/fluent.conf -p /略/fluent-hoge/plugin/
2012-09-07 19:57:48 +0900: starting fluentd-0.10.25
2012-09-07 19:57:48 +0900: reading config file path=&amp;quot;/略/fluent-hoge/fluent.conf&amp;quot;
2012-09-07 19:57:48 +0900: adding source type=&amp;quot;forward&amp;quot;
2012-09-07 19:57:48 +0900: adding source type=&amp;quot;inputs&amp;quot;
2012-09-07 19:57:48 +0900: config error file=&amp;quot;/略/fluent-hoge/fluent.conf&amp;quot; error=&amp;quot;Unknown input plugin &#39;inputs&#39;. Run &#39;gem search -rd fluent-plugin&#39; to find plugins&amp;quot;
2012-09-07 19:57:48 +0900: process finished code=256
2012-09-07 19:57:48 +0900: process died within 1 second. exit.&lt;/pre&gt;
&lt;p&gt;失敗した…。inputsっていうプラグインなぞないって言われた。でも、プラグイン本体(in_inputs.rb)をplugin直下(ディレクトリ構成の(1)の部分)に持ってくると…&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;/usr/local/bin/fluentd -c /略/fluent-hoge/fluent.conf -p /略/fluent-hoge/plugin/
2012-09-07 20:02:28 +0900: starting fluentd-0.10.25
2012-09-07 20:02:28 +0900: reading config file path=&amp;quot;/略/fluent-hoge/fluent.conf&amp;quot;
2012-09-07 20:02:28 +0900: adding source type=&amp;quot;forward&amp;quot;
2012-09-07 20:02:28 +0900: adding source type=&amp;quot;inputs&amp;quot;
2012-09-07 20:02:28 +0900: adding source type=&amp;quot;thread&amp;quot;
2012-09-07 20:02:28 +0900: adding source type=&amp;quot;tail&amp;quot;
2012-09-07 20:02:28 +0900: &#39;pos_file PATH&#39; parameter is not set to a &#39;tail&#39; source.
2012-09-07 20:02:28 +0900: this parameter is highly recommended to save the position to resume tailing.
2012-09-07 20:02:28 +0900: adding match pattern=&amp;quot;stdd.std&amp;quot; type=&amp;quot;file&amp;quot;
2012-09-07 20:02:28 +0900: adding match pattern=&amp;quot;devid.devid&amp;quot; type=&amp;quot;file&amp;quot;
2012-09-07 20:02:28 +0900: adding match pattern=&amp;quot;jenkins.**&amp;quot; type=&amp;quot;file&amp;quot;
2012-09-07 20:02:28 +0900: adding match pattern=&amp;quot;debug.**&amp;quot; type=&amp;quot;stdout&amp;quot;
2012-09-07 20:02:28 +0900: listening fluent socket on 0.0.0.0:24224&lt;/pre&gt;
&lt;p&gt;起動した…。&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Or you can create gem package that includes lib/fluent/plugin/&lt;TYPE&gt;_&lt;NAME&gt;.rb file.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;この文の認識が間違ってるのかなー？&lt;/p&gt;
&lt;p&gt;よくわからないので本丸を攻めてみる。pluginの処理を記述しているのはそのものplugin.rb、また、それを呼ぼうとしているはsupervisor.rb,engine.rbあたりっぽい。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/fluent/fluentd/blob/master/lib/fluent/plugin.rb&quot;&gt;fluentd/lib/fluent/plugin.rb at master · fluent/fluentd · GitHub&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/fluent/fluentd/blob/master/lib/fluent/engine.rb&quot;&gt;fluentd/lib/fluent/engine.rb at master · fluent/fluentd · GitHub&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/fluent/fluentd/blob/master/lib/fluent/supervisor.rb&quot;&gt;fluentd/lib/fluent/supervisor.rb at master · fluent/fluentd · GitHub&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;ロードしているのはplugin内だろうと思い、いろいろ出力してみる。&lt;/p&gt;
&lt;pre class=&quot;ruby&quot;&gt;  def load_plugins
    dir = File.join(File.dirname(__FILE__), &amp;quot;plugin&amp;quot;)
puts &amp;quot;!load_plugins:#{dir}&amp;quot;
    load_plugin_dir(dir)
    load_gem_plugins
  end&lt;/pre&gt;
&lt;pre class=&quot;ruby&quot;&gt;  def load_plugin_dir(dir)
    dir = File.expand_path(dir)
puts &amp;quot;!load_plugin_dir:#{dir}&amp;quot;
    Dir.entries(dir).sort.each {|fname|
puts &amp;quot;!load_plugin_dir:#{fname}&amp;quot;
      if fname =~ /\.rb$/
        require File.join(dir, fname)
      end
    }
    nil
  end&lt;/pre&gt;
&lt;pre class=&quot;ruby&quot;&gt;  private
  def load_gem_plugins
    return unless defined? Gem
    plugins = Gem.find_files(&#39;fluent_plugin&#39;)
puts &amp;quot;!load_gem_plugins:#{plugins}&amp;quot;
    plugins.each {|plugin|
      begin
        load plugin
      rescue ::Exception =&amp;gt; e
        msg = &amp;quot;#{plugin.inspect}: #{e.message} (#{e.class})&amp;quot;
        $log.warn &amp;quot;Error loading Fluent plugin #{msg}&amp;quot;
      end
    }
  end&lt;/pre&gt;
&lt;pre class=&quot;ruby&quot;&gt;  def try_load_plugin(name, type)
puts &amp;quot;!try_load_plugin:#{name}, #{type}&amp;quot;
    case name
    when &#39;input&#39;
      path = &amp;quot;fluent/plugin/in_#{type}&amp;quot;
    when &#39;output&#39;
      path = &amp;quot;fluent/plugin/out_#{type}&amp;quot;
    when &#39;buffer&#39;
      path = &amp;quot;fluent/plugin/buf_#{type}&amp;quot;
    else
      return
    end

    # prefer LOAD_PATH than gems
    files = $LOAD_PATH.map {|lp|
puts &amp;quot;!try_load_plugin:#{lp}&amp;quot;
      lpath = File.join(lp, &amp;quot;#{path}.rb&amp;quot;)
      File.exist?(lpath) ? lpath : nil
    }.compact
    unless files.empty?
      # prefer newer version
      require files.sort.last
      return
    end

    # search gems
    if defined?(::Gem::Specification) &amp;amp;&amp;amp; ::Gem::Specification.respond_to?(:find_all)
      specs = Gem::Specification.find_all {|spec|
        spec.contains_requirable_file? path
      }

      # prefer newer version
      specs = specs.sort_by {|spec| spec.version }
      if spec = specs.last
        spec.require_paths.each {|lib|
          file = &amp;quot;#{spec.full_gem_path}/#{lib}/#{path}&amp;quot;
          require file
        }
      end&lt;/pre&gt;
&lt;p&gt;実行結果はこうなる。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ /usr/local/bin/fluentd -c /略/fluent-hoge/fluent.conf -p /略/fluent-hoge/plugin/
2012-09-07 19:37:32 +0900: starting fluentd-0.10.25
2012-09-07 19:37:32 +0900: reading config file path=&amp;quot;/略/fluent-hoge/fluent.conf&amp;quot;&lt;/pre&gt;
&lt;p&gt;→はじめはfluent本体のpluginを呼んでる。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;!load_plugins:/usr/local/lib/ruby/gems/1.9.1/gems/fluentd-0.10.25/lib/fluent/plugin
!load_plugin_dir:/usr/local/lib/ruby/gems/1.9.1/gems/fluentd-0.10.25/lib/fluent/plugin
!load_plugin_dir:.
!load_plugin_dir:..
!load_plugin_dir:buf_file.rb
!load_plugin_dir:buf_memory.rb
!load_plugin_dir:buf_zfile.rb
!load_plugin_dir:in_exec.rb
!load_plugin_dir:in_forward.rb
!load_plugin_dir:in_gc_stat.rb
!load_plugin_dir:in_http.rb
!load_plugin_dir:in_object_space.rb
!load_plugin_dir:in_status.rb
!load_plugin_dir:in_stream.rb
!load_plugin_dir:in_syslog.rb
!load_plugin_dir:in_tail.rb
!load_plugin_dir:out_copy.rb
!load_plugin_dir:out_exec.rb
!load_plugin_dir:out_exec_filter.rb
!load_plugin_dir:out_file.rb
!load_plugin_dir:out_forward.rb
!load_plugin_dir:out_null.rb
!load_plugin_dir:out_roundrobin.rb
!load_plugin_dir:out_stdout.rb
!load_plugin_dir:out_stream.rb
!load_plugin_dir:out_test.rb&lt;/pre&gt;
&lt;p&gt;→gemはない。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;!load_gem_plugins:[]&lt;/pre&gt;
&lt;p&gt;→ここから他のpluginディレクトリ。まずは/etc/fluent/plugin。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;!load_plugin_dir:/etc/fluent/plugin
!load_plugin_dir:.
!load_plugin_dir:..&lt;/pre&gt;
&lt;p&gt;→そして-pオプションで指定したディレクトリ。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;!load_plugin_dir:/略/fluent-hoge/plugin
!load_plugin_dir:.
!load_plugin_dir:..
!load_plugin_dir:fluent-plugin-hogehoge
!load_plugin_dir:simple_thread_plugin.rb&lt;/pre&gt;
&lt;p&gt;&lt;span class=&quot;deco&quot; style=&quot;color:#FF0000;&quot;&gt;あれ？ディレクトリの上さらっと舐めるだけ？&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;ここからtypeがaddされている。みつかったものは特に何も表示されず次へ次へ……。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;2012-09-07 20:16:24 +0900: adding source type=&amp;quot;forward&amp;quot;
2012-09-07 20:16:24 +0900: adding source type=&amp;quot;thread&amp;quot;
2012-09-07 20:16:24 +0900: adding source type=&amp;quot;tail&amp;quot;
2012-09-07 20:16:24 +0900: &#39;pos_file PATH&#39; parameter is not set to a &#39;tail&#39; source.
2012-09-07 20:16:24 +0900: this parameter is highly recommended to save the position to resume tailing.&lt;/pre&gt;
&lt;p&gt;で、今回見つかってないtypeが出てくると、try_load_pluginが呼ばれる。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;2012-09-07 20:16:24 +0900: adding source type=&amp;quot;inputs&amp;quot;
!try_load_plugin:input, inputs
!try_load_plugin:/usr/local/lib/ruby/gems/1.9.1/gems/http_parser.rb-0.5.3/lib
!try_load_plugin:/usr/local/lib/ruby/gems/1.9.1/gems/msgpack-0.4.7/lib
!try_load_plugin:/usr/local/lib/ruby/gems/1.9.1/gems/yajl-ruby-1.1.0/lib
!try_load_plugin:/usr/local/lib/ruby/gems/1.9.1/gems/iobuffer-1.1.2/lib
!try_load_plugin:/usr/local/lib/ruby/gems/1.9.1/gems/cool.io-1.1.0/lib
!try_load_plugin:/usr/local/lib/ruby/gems/1.9.1/gems/http_parser.rb-0.5.3/lib
!try_load_plugin:/usr/local/lib/ruby/gems/1.9.1/gems/fluentd-0.10.25/lib
!try_load_plugin:/usr/local/lib/ruby/gems/1.9.1/gems/json-1.7.4/lib
!try_load_plugin:/usr/local/lib/ruby/site_ruby/1.9.1
!try_load_plugin:/usr/local/lib/ruby/site_ruby/1.9.1/i686-linux
!try_load_plugin:/usr/local/lib/ruby/site_ruby
!try_load_plugin:/usr/local/lib/ruby/vendor_ruby/1.9.1
!try_load_plugin:/usr/local/lib/ruby/vendor_ruby/1.9.1/i686-linux
!try_load_plugin:/usr/local/lib/ruby/vendor_ruby
!try_load_plugin:/usr/local/lib/ruby/1.9.1
!try_load_plugin:/usr/local/lib/ruby/1.9.1/i686-linux
!try_load_plugin:/usr/local/lib/ruby/gems/1.9.1/gems/fluentd-0.10.25/lib
2012-09-07 20:16:24 +0900: config error file=&amp;quot;/略/fluent-hoge/fluent.conf&amp;quot; error=&amp;quot;Unknown input plugin &#39;inputs&#39;. Run &#39;gem search -rd fluent-plugin&#39; to find plugins&amp;quot;
2012-09-07 20:16:24 +0900: process finished code=256
2012-09-07 20:16:24 +0900: process died within 1 second. exit.&lt;/pre&gt;
&lt;p&gt;まずプラグインの種類によって読み込まれるパスとファイル名が決まるみたい。&lt;/p&gt;
&lt;pre class=&quot;ruby&quot;&gt;    case name
    when &#39;input&#39;
      path = &amp;quot;fluent/plugin/in_#{type}&amp;quot;
    when &#39;output&#39;
      path = &amp;quot;fluent/plugin/out_#{type}&amp;quot;
    when &#39;buffer&#39;
      path = &amp;quot;fluent/plugin/buf_#{type}&amp;quot;
    else
      return
    end&lt;/pre&gt;
&lt;blockquote&gt;&lt;p&gt;Or you can create gem package that includes lib/fluent/plugin/&lt;TYPE&gt;_&lt;NAME&gt;.rb file.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;がここで効いてくるわけか。&lt;/p&gt;
&lt;p&gt;そしたら$LOAD_PATHの中にfluent/plugin/in_inputs.rbがないか探しに行ってる。そしてそこにもなかった場合、インストールしたGemの中を探す。&lt;/p&gt;
&lt;pre class=&quot;ruby&quot;&gt;    # prefer LOAD_PATH than gems
    files = $LOAD_PATH.map {|lp|
puts &amp;quot;!try_load_plugin:#{lp}&amp;quot;
      lpath = File.join(lp, &amp;quot;#{path}.rb&amp;quot;)
      File.exist?(lpath) ? lpath : nil
    }.compact
    unless files.empty?
      # prefer newer version
      require files.sort.last
      return
    end

    # search gems
    if defined?(::Gem::Specification) &amp;amp;&amp;amp; ::Gem::Specification.respond_to?(:find_all)
      specs = Gem::Specification.find_all {|spec|
        spec.contains_requirable_file? path
      }

      # prefer newer version
      specs = specs.sort_by {|spec| spec.version }
      if spec = specs.last
        spec.require_paths.each {|lib|
          file = &amp;quot;#{spec.full_gem_path}/#{lib}/#{path}&amp;quot;
          require file
        }
      end&lt;/pre&gt;
&lt;p&gt;っていう流れになっているらしい。&lt;/p&gt;
&lt;p&gt;うーんGemで入れたら読めるんだけどなー。&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Git add, commitをした時、中でどんな事が起こっているのか</title>
   <link href="http://gosyujin.github.io/2012/08/29/1346242547"/>
   <updated>2012-08-29T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2012/08/29/1346242547</id>
   <content type="html">&lt;h1&gt;あらすじ&lt;/h1&gt;
&lt;p&gt;いまだにファイルがどういうタイミングでリポジトリ、インデックス、ワーキングエリア間を行き来しているのかわからんので色々調べてみることに。&lt;/p&gt;
&lt;h1&gt;参考資料、サイト&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;実用Git&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://www8.atwiki.jp/git_jp/pub/Documentation.ja/tutorial-2.html&quot;&gt;git チュートリアル：パート２&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://keijinsonyaban.blogspot.jp/2011/05/git.html&quot;&gt;見えないチカラ: 【翻訳】Gitをボトムアップから理解する&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://git-scm.com/book/ja/Git%E3%81%AE%E5%86%85%E5%81%B4-Git%E3%82%AA%E3%83%96%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88&quot;&gt;Git&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;やってみる&lt;/h1&gt;
&lt;p&gt;まずは、空のREADMEファイルを作ってFirst commit。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git init
Initialized empty Git repository in /tmp/repos/.git/
$ touch README
$ git add README
$ git commit -m &amp;quot;first commit&amp;quot;
[master (root-commit) b0d99b3] first commit
 0 files changed
 create mode 100644 README
$ git log --graph --date-order --all --date=short -C -M --pretty=format:&amp;quot;%h&amp;quot;\ %t\ %ad\ %Cblue%cn%Creset\ %Cgreen%d%Creset\ %s
 * b0d99b3 543b9be 2012-08-29 kk_Ataka  (HEAD, master) first commit&lt;/pre&gt;
&lt;h2&gt;色々確認&lt;/h2&gt;
&lt;p&gt;※確認スクリプト&lt;/p&gt;
&lt;p&gt;&lt;script src=&quot;https://gist.github.com/3510904.js?file=git-kakunin&quot;&gt;&lt;/script&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20120829192353&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20120829/20120829192353.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;rev-parse コマンドはタグとかブランチとかHEAD、HEAD^^など指定したらそのコミットのSHA1が返ってくる&lt;ul&gt;&lt;li&gt;最初のコミットオブジェクトは &lt;span class=&quot;deco&quot; style=&quot;color:#0000FF;&quot;&gt;b0d99b3&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;cat-file コマンドでコミットオブジェクトの内容を確認できる&lt;ul&gt;&lt;li&gt;コミットオブジェクトに関連付いているツリーオブジェクトは &lt;span class=&quot;deco&quot; style=&quot;color:#FF0000;&quot;&gt;543b9be&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;ls-tree コマンドで上のツリーオブジェクトにぶら下がっているツリーオブジェクト、ブロブオブジェクトを確認できる&lt;ul&gt;&lt;li&gt;今は直下にREADMEファイルしかないから &lt;span class=&quot;deco&quot; style=&quot;color:#00FF00;&quot;&gt;e69de29&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;コミットすると.git/objects/の下に3つファイルが作られる&lt;ul&gt;&lt;li&gt;SHA1の先頭2桁でディレクトリを作り、その下に残りのSHA1でファイル作成&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;ゆっくり&lt;/h2&gt;
&lt;p&gt;READMEを編集してみる。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ echo &amp;quot;このリポジトリはテスト用です&amp;quot; &amp;gt; README 
$ git status
# On branch master
# Changes not staged for commit:
#   (use &amp;quot;git add &amp;lt;file&amp;gt;...&amp;quot; to update what will be committed)
#   (use &amp;quot;git checkout -- &amp;lt;file&amp;gt;...&amp;quot; to discard changes in working directory)
#
#	modified:   README
#
no changes added to commit (use &amp;quot;git add&amp;quot; and/or &amp;quot;git commit -a&amp;quot;)&lt;/pre&gt;
&lt;p&gt;で、色々確認。まだ作業エリア(ワーキングツリー)内での変更しかしてない(git addしてない)ので特に変わらず。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20120829192354&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20120829/20120829192354.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;addしたとき&lt;/h2&gt;
&lt;p&gt;ここでREADMEファイルをadd。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git add README
$ git status
# On branch master
# Changes to be committed:
#   (use &amp;quot;git reset HEAD &amp;lt;file&amp;gt;...&amp;quot; to unstage)
#
#	modified:   README
#&lt;/pre&gt;
&lt;p&gt;再度、色々確認。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20120829192355&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20120829/20120829192355.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;deco&quot; style=&quot;color:#00FF00;&quot;&gt;リポジトリにコミットされているREADME e69de29&lt;/span&gt; の他に&lt;span class=&quot;deco&quot; style=&quot;color:#666600;&quot;&gt;de7e855 というオブジェクトがステージされている&lt;/span&gt;。おまけに.git/objectsの下にも。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;addした時点で、gitリポジトリの中に入れ込まれている？&lt;/li&gt;&lt;li&gt;リセットしても.git/objectsの下からは消えない(ただ、この状態でほったらかしておくとどこからも参照されないからいずれgcされて死ぬ？)&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;$ git reset HEAD README
Unstaged changes after reset:
M	README
$ git status
# On branch master
# Changes not staged for commit:
#   (use &amp;quot;git add &amp;lt;file&amp;gt;...&amp;quot; to update what will be committed)
#   (use &amp;quot;git checkout -- &amp;lt;file&amp;gt;...&amp;quot; to discard changes in working directory)
#
#	modified:   README
#
no changes added to commit (use &amp;quot;git add&amp;quot; and/or &amp;quot;git commit -a&amp;quot;)
$ find .git/objects
.git/objects/de/7e8558a365886d75f9c1ac6861693be19bdc53
.git/objects/e6/9de29bb2d1d6434b8b29ae775ad8c2e48c5391
.git/objects/54/3b9bebdc6bd5c4b22136034a95dd097a57d3dd
.git/objects/b0/d99b34f1e2497a78619de4fde08b62f2d851f7
$ git cat-file -p de7e8558
このリポジトリはテスト用です&lt;/pre&gt;
&lt;h2&gt;commitしたとき&lt;/h2&gt;
&lt;p&gt;もう一回addして今度はコミット。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git add README
$ git commit -m &amp;quot;README追記&amp;quot;
[master 30eab42] README追記
 1 file changed, 1 insertion(+)&lt;/pre&gt;
&lt;p&gt;すごい見づらいけど、.git/objectsの下に2つファイルが増えている。追ってみると&lt;span class=&quot;deco&quot; style=&quot;color:#00FFFF;&quot;&gt;今回のコミットオブジェクト 30eab42 &lt;/span&gt;と &lt;span class=&quot;deco&quot; style=&quot;color:#FF00FF;&quot;&gt;ツリーオブジェクト 9dd7dd4 &lt;/span&gt;…の下にさっきaddした時にできていた&lt;span class=&quot;deco&quot; style=&quot;color:#666600;&quot;&gt;README(de7e855)&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20120829192357&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20120829/20120829192357.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;まとめ&lt;/h1&gt;
&lt;p&gt;以上の事から&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;addした時、既にリポジトリにファイルは追加されている。また、インデックスの参照先も更新されている&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;初期状態&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20120829203645&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20120829/20120829203645.png&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;addした後&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20120829203647&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20120829/20120829203647.png&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;commitした時、インデックスがそのまま次のコミットのツリーオブジェクトになる。そのツリーオブジェクトを取りまとめるコミットオブジェクトを作成し、tree情報とparent情報を持たせる&lt;/li&gt;&lt;li&gt;で、ブランチの参照先を更新してやる&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;commitした後&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20120829203648&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20120829/20120829203648.png&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;でいいのかなあ。&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Fluentdのプラグインを作成してみる(練習用)</title>
   <link href="http://gosyujin.github.io/2012/08/17/1345209899"/>
   <updated>2012-08-17T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2012/08/17/1345209899</id>
   <content type="html">&lt;h1&gt;前回までのあらすじ&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;2012-07-12-1342098141&quot;&gt;2012-07-12-1342098141&lt;/a&gt; で、confファイルのコメントアウトを外してとりあえず動くっていうところまではいけた。今度は簡単なプラグインを作ってみる。&lt;/p&gt;
&lt;h1&gt;参考サイト&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://fluentd.org/doc/&quot;&gt;Welcome to Fluentd’s documentation! — fluentd v0.10 documentation&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://d.hatena.ne.jp/erukiti/20120205/1328452455&quot;&gt;fluentdのプラグインは簡単に作成できる - ぽにくすじゃないだいありー&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://d.hatena.ne.jp/tagomoris/20120221/1329815126&quot;&gt;fluentdのためのプラグインをイチから書く手順(bundler版) - tagomorisのメモ置き場&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;ひたすら何かを吐き続けるプラグイン&lt;/h1&gt;
&lt;h2&gt;Inputプラグインの場合&lt;/h2&gt;
&lt;p&gt;Fluent::Inputクラスを継承する。&lt;/p&gt;
&lt;pre class=&quot;ruby&quot;&gt;class SimpleInput &amp;lt; Fluent::Input
  # 第一引数がプラグインの名前、&amp;lt;source&amp;gt; typeに指定される
  Fluent::Plugin.register_input(&amp;quot;simple_in&amp;quot;, self)

  def start
    @thread = Thread.new(&amp;amp;method(:run))
  end

  def run
    loop do
      # emitメソッドの第一引数が &amp;lt;match **.**&amp;gt; の**に該当すればその形式で出力される
      # fluent.confでdebug.**はstdoutで出力すると定義されている
      Fluent::Engine.emit(&amp;quot;debug.debug&amp;quot;, Fluent::Engine.now, {&amp;quot;simple&amp;quot; =&amp;gt; &amp;quot;debudebu&amp;quot;})
      # fluent.confに&amp;lt;match simple.output&amp;gt; type simple_outを定義したので、以下のOutput形式で出力される
      Fluent::Engine.emit(&amp;quot;simple.output&amp;quot;, Fluent::Engine.now, {&amp;quot;simple&amp;quot; =&amp;gt; &amp;quot;simout&amp;quot;})
      sleep(1)
    end
  end
end&lt;/pre&gt;
&lt;p&gt;上のソースには書かれていないけど、他にもメソッドがいくつか。(公式サイトより)&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;configure メソッド&lt;ul&gt;&lt;li&gt;スタート前に呼び出される&lt;/li&gt;&lt;li&gt;confハッシュにパラメータを入れられる？&lt;/li&gt;&lt;li&gt;エラーはFluent::ConfigErrorを投げる&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;start メソッド&lt;ul&gt;&lt;li&gt;スタート時に呼ばれる&lt;/li&gt;&lt;li&gt;ここでスレッドを作ったりファイルをオープンしたり&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;shutdown メソッド&lt;ul&gt;&lt;li&gt;シャットダウン時に呼ばれる&lt;/li&gt;&lt;li&gt;スレッドやファイルのクローズはここで。&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;イベントをsubmitするためにはFluent::Engine.emit(tag, time, record)メソッドを使う&lt;ul&gt;&lt;li&gt;tagはString、timeはUnixTime、recordはハッシュ。&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;Outputプラグインの場合&lt;/h2&gt;
&lt;p&gt;まず種類がいろいろ。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Buffered output plugins Fluent::BufferedOutputクラスを継承&lt;/li&gt;&lt;li&gt;Time sliced output plugins Fluent::TimeSlicedOutputクラスを継承/Buffered output pluginを継承したプラグイン？&lt;/li&gt;&lt;li&gt;Non-buffered output plugins Fluent::Outputクラスを継承&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;今回はFluent::Outputを使った。&lt;/p&gt;
&lt;pre class=&quot;ruby&quot;&gt;class SimpleOutput &amp;lt; Fluent::Output
  # 第一引数がプラグインの名前、&amp;lt;match&amp;gt; の typeに指定される
  Fluent::Plugin.register_output(&amp;quot;simple_out&amp;quot;, self)

  def emit(tag, es, chain)
    chain.next
    es.each do |time, record|
      # 出力内容
      puts &amp;quot;simple_out: #{time} - #{record}&amp;quot;
    end
  end
end&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;configure, start, shutdown はInputプラグイン同様にある&lt;/li&gt;&lt;li&gt;emit メソッドはイベントに到達した場合呼ばれる&lt;ul&gt;&lt;li&gt;esはFluent::EventStreamオブジェクト(イベントが入ってる？)&lt;ul&gt;&lt;li&gt;eachで回すとイベントを検索できる。&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;chainはトランザクションメッセージのオブジェクト。&lt;ul&gt;&lt;li&gt;適切なポイントでchain.nextを呼ぶとエラーを吐いたときにrollbackしてくれる。&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;プラグインをデバッグしたい場合&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;fluentdコマンド実行するときに-vvオプションを指定する事でデバッグメッセージが表示できる。&lt;/li&gt;&lt;li&gt;デバッグにはstdoutかcopyが役に立つ&lt;ul&gt;&lt;li&gt;stdoutはマッチしたイベントをコンソールに出力する&lt;/li&gt;&lt;li&gt;copyはマッチしたイベントを複数のプラグインにコピーできる&lt;ul&gt;&lt;li&gt;stdoutと一緒に使う事ができる&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;Configファイル&lt;/h1&gt;
&lt;p&gt;&gt;|?|&lt;/p&gt;
&lt;p&gt;# Inputプラグイン指定&lt;/p&gt;
&lt;p&gt;&lt;source&gt;&lt;/p&gt;
&lt;p&gt;  type simple_in&lt;/p&gt;
&lt;p&gt;&lt;/source&gt;&lt;/p&gt;
&lt;p&gt;# Fluent::Engine.emit(&quot;simple.output&quot;, Fluent::Engine.now, {&quot;simple&quot; =&gt; &quot;simout&quot;})&lt;/p&gt;
&lt;p&gt;# simple.outputタグ指定した方はsimple_output(Outputプラグイン)出力にマッチする&lt;/p&gt;
&lt;p&gt;&lt;match simple.output&gt;&lt;/p&gt;
&lt;p&gt;  type simple_out&lt;/p&gt;
&lt;p&gt;&lt;/match&gt;&lt;/p&gt;
&lt;p&gt;#&lt;/p&gt;
&lt;p&gt;## match tag=debug.** and dump to console&lt;/p&gt;
&lt;p&gt;# Fluent::Engine.emit(&quot;debug.debug&quot;, Fluent::Engine.now, {&quot;simple&quot; =&gt; &quot;debudebu&quot;})  &lt;/p&gt;
&lt;p&gt;# debug.debugタグ指定した方はstdout出力にマッチする&lt;/p&gt;
&lt;p&gt;&lt;match debug.**&gt;&lt;/p&gt;
&lt;p&gt;  type stdout&lt;/p&gt;
&lt;p&gt;&lt;/match&gt;&lt;/p&gt;
&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;これを実行すると…。&lt;/p&gt;
&lt;p&gt;&gt;|?|&lt;/p&gt;
&lt;p&gt;$ bundle exec fluentd -c /home/kk_Ataka/fluentd/fluent.conf -p /home/kk_Ataka/fluentd/plugin/&lt;/p&gt;
&lt;p&gt;2012-08-17 22:19:41 +0900: starting fluentd-0.10.24&lt;/p&gt;
&lt;p&gt;2012-08-17 22:19:41 +0900: reading config file path=&quot;/home/kk_Ataka/fluentd/fluent.conf&quot;&lt;/p&gt;
&lt;p&gt;(略)&lt;/p&gt;
&lt;p&gt;2012-08-17 22:19:41 +0900: following tail of /usr/local/apache2/logs/access_log&lt;/p&gt;
&lt;p&gt;2012-08-17 22:19:41 +0900: following tail of /usr/local/apache2/logs/error_log&lt;/p&gt;
&lt;p&gt;2012-08-17 22:19:41 +0900 debug.debug: {&quot;simple&quot;:&quot;debudebu&quot;}&lt;/p&gt;
&lt;p&gt;simple_out: 1345209581 - {&quot;simple&quot;=&gt;&quot;simout&quot;}&lt;/p&gt;
&lt;p&gt;2012-08-17 22:19:42 +0900 debug.debug: {&quot;simple&quot;:&quot;debudebu&quot;}&lt;/p&gt;
&lt;p&gt;simple_out: 1345209582 - {&quot;simple&quot;=&gt;&quot;simout&quot;}&lt;/p&gt;
&lt;p&gt;2012-08-17 22:19:43 +0900 debug.debug: {&quot;simple&quot;:&quot;debudebu&quot;}&lt;/p&gt;
&lt;p&gt;simple_out: 1345209583 - {&quot;simple&quot;=&gt;&quot;simout&quot;}&lt;/p&gt;
&lt;p&gt;2012-08-17 22:19:44 +0900 debug.debug: {&quot;simple&quot;:&quot;debudebu&quot;}&lt;/p&gt;
&lt;p&gt;simple_out: 1345209584 - {&quot;simple&quot;=&gt;&quot;simout&quot;}&lt;/p&gt;
&lt;p&gt;2012-08-17 22:19:45 +0900 debug.debug: {&quot;simple&quot;:&quot;debudebu&quot;}&lt;/p&gt;
&lt;p&gt;simple_out: 1345209585 - {&quot;simple&quot;=&gt;&quot;simout&quot;}&lt;/p&gt;
&lt;p&gt;2012-08-17 22:19:46 +0900 debug.debug: {&quot;simple&quot;:&quot;debudebu&quot;}&lt;/p&gt;
&lt;p&gt;simple_out: 1345209586 - {&quot;simple&quot;=&gt;&quot;simout&quot;}&lt;/p&gt;
&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;1秒刻みでプラグインに記述した内容が出力される。こっちが標準のstdout出力。&lt;/p&gt;
&lt;p&gt;&gt;|?|&lt;/p&gt;
&lt;p&gt;2012-08-17 22:19:46 +0900 debug.debug: {&quot;simple&quot;:&quot;debudebu&quot;}&lt;/p&gt;
&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;こっちが自分で記述したOutputプラグイン書式の出力。&lt;/p&gt;
&lt;p&gt;&gt;|?|&lt;/p&gt;
&lt;p&gt;simple_out: 1345209586 - {&quot;simple&quot;=&gt;&quot;simout&quot;}&lt;/p&gt;
&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
 </entry>
 
 <entry>
   <title>Sphinxの見出しについて学びなおし</title>
   <link href="http://gosyujin.github.io/2012/08/16/1345124098"/>
   <updated>2012-08-16T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2012/08/16/1345124098</id>
   <content type="html">&lt;h1&gt;前回までのあらすじ&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;2011-12-02-1322839748&quot;&gt;2011-12-02-1322839748&lt;/a&gt;で見出しの理解が間違っている事をSphinx 初心者 さんに教えてもらった&lt;/li&gt;&lt;li&gt;もう一度ドキュメントを見なおしてみる事に&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;参考サイト&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://sphinx.shibu.jp/rest.html#id9&quot;&gt;reStructuredText入門 — Sphinx v1.0 (hg) documentation&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://docutils.sourceforge.net/docs/user/rst/quickstart.html#sections&quot;&gt;A ReStructuredText Primer&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;見出し周辺を読み直し&lt;/h1&gt;
&lt;blockquote&gt;&lt;p&gt;セクションのヘッダは、セクションのタイトルを句読点などの記号の文字でアンダーラインを引くことで設定します。必要に応じてでオーバーラインも併用することができます。&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;使用していない種類のアンダーラインが出てくると、見出しのレベルが一段変わる、というルールになっています。&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;. These are a single line of text (one or more words) with adornment: an underline alone, or an underline and an overline together, in dashes &quot;-----&quot;, equals &quot;======&quot;, tildes &quot;~~~~~~&quot; or any of the non-alphanumeric characters = - ` : &#39; &quot; ~ ^ _ * + # &lt; &gt; that you feel comfortable with.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;つまり……&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;英数字以外の記号でアンダーラインを引くとセクションヘッダ&lt;ul&gt;&lt;li&gt;アンダーラインとオーバーラインで囲むのも別の定義として判断される&lt;/li&gt;&lt;li&gt;己がしっくりくるものを選んでよい&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;初めて出てきた順に見出しレベルが割り当てられる&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;確認&lt;/h1&gt;
&lt;p&gt;Pythonドキュメント慣例にならってこういうソースを書くと、&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;##################
上下 # 部
##################

ここは上下 # で囲った部の文章。

下 # 部
##############

ここは下 # で囲った部の文章。

*******************
上下 * 章
*******************

ここは上下 * で囲った章の文章。

下 * 章
*******************

ここは下 * で囲った章の文章。

===========================
上下 = セクション
===========================

ここは上下 = で囲ったセクションの文章。

下 = セクション
===========================

ここは下 = で囲ったセクションの文章。

---------------------------
上下 - サブセクション
---------------------------

ここは上下 - で囲ったサブセクションの文章。

下 - サブセクション
---------------------------

ここは下 - で囲ったサブセクションの文章。

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
上下 ^ サブサブセクション
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

ここは上下 ^ で囲ったサブサブセクションの文章。

下 ^ サブサブセクション
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

ここは下 ^ で囲ったサブサブセクションの文章。

&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;
上下 &amp;quot; パラグラフ
&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;

ここは上下 &amp;quot; で囲ったパラグラフの文章。

下 &amp;quot; パラグラフ
&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;

ここは下 &amp;quot; で囲ったパラグラフの文章。&lt;/pre&gt;
&lt;p&gt;htmlはこう生成される。&lt;/p&gt;
&lt;pre class=&quot;html&quot;&gt;&amp;lt;h1&amp;gt;上下 # 部&amp;lt;a class=&amp;quot;headerlink&amp;quot; href=&amp;quot;#id1&amp;quot; title=&amp;quot;Permalink to this headline&amp;quot;&amp;gt;¶&amp;lt;/a&amp;gt;&amp;lt;/h1&amp;gt;
&amp;lt;p&amp;gt;ここは上下 # で囲った部の文章。&amp;lt;/p&amp;gt;
&amp;lt;div class=&amp;quot;section&amp;quot; id=&amp;quot;id2&amp;quot;&amp;gt;
&amp;lt;h2&amp;gt;下 # 部&amp;lt;a class=&amp;quot;headerlink&amp;quot; href=&amp;quot;#id2&amp;quot; title=&amp;quot;Permalink to this headline&amp;quot;&amp;gt;¶&amp;lt;/a&amp;gt;&amp;lt;/h2&amp;gt;
&amp;lt;p&amp;gt;ここは下 # で囲った部の文章。&amp;lt;/p&amp;gt;
&amp;lt;div class=&amp;quot;section&amp;quot; id=&amp;quot;id3&amp;quot;&amp;gt;
&amp;lt;h3&amp;gt;上下 * 章&amp;lt;a class=&amp;quot;headerlink&amp;quot; href=&amp;quot;#id3&amp;quot; title=&amp;quot;Permalink to this headline&amp;quot;&amp;gt;¶&amp;lt;/a&amp;gt;&amp;lt;/h3&amp;gt;
&amp;lt;p&amp;gt;ここは上下 * で囲った章の文章。&amp;lt;/p&amp;gt;
&amp;lt;div class=&amp;quot;section&amp;quot; id=&amp;quot;id4&amp;quot;&amp;gt;
&amp;lt;h4&amp;gt;下 * 章&amp;lt;a class=&amp;quot;headerlink&amp;quot; href=&amp;quot;#id4&amp;quot; title=&amp;quot;Permalink to this headline&amp;quot;&amp;gt;¶&amp;lt;/a&amp;gt;&amp;lt;/h4&amp;gt;
&amp;lt;p&amp;gt;ここは下 * で囲った章の文章。&amp;lt;/p&amp;gt;
&amp;lt;div class=&amp;quot;section&amp;quot; id=&amp;quot;id5&amp;quot;&amp;gt;
&amp;lt;h5&amp;gt;上下 = セクション&amp;lt;a class=&amp;quot;headerlink&amp;quot; href=&amp;quot;#id5&amp;quot; title=&amp;quot;Permalink to this headline&amp;quot;&amp;gt;¶&amp;lt;/a&amp;gt;&amp;lt;/h5&amp;gt;
&amp;lt;p&amp;gt;ここは上下 = で囲ったセクションの文章。&amp;lt;/p&amp;gt;
&amp;lt;div class=&amp;quot;section&amp;quot; id=&amp;quot;id6&amp;quot;&amp;gt;
&amp;lt;h6&amp;gt;下 = セクション&amp;lt;a class=&amp;quot;headerlink&amp;quot; href=&amp;quot;#id6&amp;quot; title=&amp;quot;Permalink to this headline&amp;quot;&amp;gt;¶&amp;lt;/a&amp;gt;&amp;lt;/h6&amp;gt;
&amp;lt;p&amp;gt;ここは下 = で囲ったセクションの文章。&amp;lt;/p&amp;gt;
&amp;lt;div class=&amp;quot;section&amp;quot; id=&amp;quot;id7&amp;quot;&amp;gt;
&amp;lt;h7&amp;gt;上下 - サブセクション&amp;lt;a class=&amp;quot;headerlink&amp;quot; href=&amp;quot;#id7&amp;quot; title=&amp;quot;Permalink to this headline&amp;quot;&amp;gt;¶&amp;lt;/a&amp;gt;&amp;lt;/h7&amp;gt;
&amp;lt;p&amp;gt;ここは上下 - で囲ったサブセクションの文章。&amp;lt;/p&amp;gt;
&amp;lt;div class=&amp;quot;section&amp;quot; id=&amp;quot;id8&amp;quot;&amp;gt;
&amp;lt;h8&amp;gt;下 - サブセクション&amp;lt;a class=&amp;quot;headerlink&amp;quot; href=&amp;quot;#id8&amp;quot; title=&amp;quot;Permalink to this headline&amp;quot;&amp;gt;¶&amp;lt;/a&amp;gt;&amp;lt;/h8&amp;gt;
&amp;lt;p&amp;gt;ここは下 - で囲ったサブセクションの文章。&amp;lt;/p&amp;gt;
&amp;lt;div class=&amp;quot;section&amp;quot; id=&amp;quot;id9&amp;quot;&amp;gt;
&amp;lt;h9&amp;gt;上下 ^ サブサブセクション&amp;lt;a class=&amp;quot;headerlink&amp;quot; href=&amp;quot;#id9&amp;quot; title=&amp;quot;Permalink to this headline&amp;quot;&amp;gt;¶&amp;lt;/a&amp;gt;&amp;lt;/h9&amp;gt;
&amp;lt;p&amp;gt;ここは上下 ^ で囲ったサブサブセクションの文章。&amp;lt;/p&amp;gt;
&amp;lt;div class=&amp;quot;section&amp;quot; id=&amp;quot;id10&amp;quot;&amp;gt;
&amp;lt;h10&amp;gt;下 ^ サブサブセクション&amp;lt;a class=&amp;quot;headerlink&amp;quot; href=&amp;quot;#id10&amp;quot; title=&amp;quot;Permalink to this headline&amp;quot;&amp;gt;¶&amp;lt;/a&amp;gt;&amp;lt;/h10&amp;gt;
&amp;lt;p&amp;gt;ここは下 ^ で囲ったサブサブセクションの文章。&amp;lt;/p&amp;gt;
&amp;lt;div class=&amp;quot;section&amp;quot; id=&amp;quot;id11&amp;quot;&amp;gt;
&amp;lt;h11&amp;gt;上下 &amp;amp;#8221; パラグラフ&amp;lt;a class=&amp;quot;headerlink&amp;quot; href=&amp;quot;#id11&amp;quot; title=&amp;quot;Permalink to this headline&amp;quot;&amp;gt;¶&amp;lt;/a&amp;gt;&amp;lt;/h11&amp;gt;
&amp;lt;p&amp;gt;ここは上下 &amp;amp;#8221; で囲ったパラグラフの文章。&amp;lt;/p&amp;gt;
&amp;lt;div class=&amp;quot;section&amp;quot; id=&amp;quot;id12&amp;quot;&amp;gt;
&amp;lt;h12&amp;gt;下 &amp;amp;#8221; パラグラフ&amp;lt;a class=&amp;quot;headerlink&amp;quot; href=&amp;quot;#id12&amp;quot; title=&amp;quot;Permalink to this headline&amp;quot;&amp;gt;¶&amp;lt;/a&amp;gt;&amp;lt;/h12&amp;gt;
&amp;lt;p&amp;gt;ここは下 &amp;amp;#8221; で囲ったパラグラフの文章。&amp;lt;/p&amp;gt;&lt;/pre&gt;
&lt;p&gt;まあ、h12まであるページとか見たことないんだけど、新しいものを定義し続けるとどんどん深くなる。&lt;/p&gt;
&lt;p&gt;ここでソースを以下のように編集。がっつりカットしつつ、適当に数個残し。あと&lt;&lt;&lt;で新しいセクションを定義してみた。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;  # 部
##############

ここは下 # で囲った部の文章。

*******************
上下 * 章
*******************

ここは上下 * で囲った章の文章。

下 - サブセクション
---------------------------

ここは下 - で囲ったサブセクションの文章。

&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;
新しく作った
&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;

&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;で新しくセクションを作ってみた。&lt;/pre&gt;
&lt;p&gt;htmlはこう生成される。&lt;/p&gt;
&lt;pre class=&quot;html&quot;&gt;&amp;lt;h1&amp;gt;下 # 部&amp;lt;a class=&amp;quot;headerlink&amp;quot; href=&amp;quot;#id1&amp;quot; title=&amp;quot;Permalink to this headline&amp;quot;&amp;gt;¶&amp;lt;/a&amp;gt;&amp;lt;/h1&amp;gt;
&amp;lt;p&amp;gt;ここは下 # で囲った部の文章。&amp;lt;/p&amp;gt;
&amp;lt;div class=&amp;quot;section&amp;quot; id=&amp;quot;id2&amp;quot;&amp;gt;
&amp;lt;h2&amp;gt;上下 * 章&amp;lt;a class=&amp;quot;headerlink&amp;quot; href=&amp;quot;#id2&amp;quot; title=&amp;quot;Permalink to this headline&amp;quot;&amp;gt;¶&amp;lt;/a&amp;gt;&amp;lt;/h2&amp;gt;
&amp;lt;p&amp;gt;ここは上下 * で囲った章の文章。&amp;lt;/p&amp;gt;
&amp;lt;div class=&amp;quot;section&amp;quot; id=&amp;quot;id3&amp;quot;&amp;gt;
&amp;lt;h3&amp;gt;下 - サブセクション&amp;lt;a class=&amp;quot;headerlink&amp;quot; href=&amp;quot;#id3&amp;quot; title=&amp;quot;Permalink to this headline&amp;quot;&amp;gt;¶&amp;lt;/a&amp;gt;&amp;lt;/h3&amp;gt;
&amp;lt;p&amp;gt;ここは下 - で囲ったサブセクションの文章。&amp;lt;/p&amp;gt;
&amp;lt;div class=&amp;quot;section&amp;quot; id=&amp;quot;id4&amp;quot;&amp;gt;
&amp;lt;h4&amp;gt;新しく作った&amp;lt;a class=&amp;quot;headerlink&amp;quot; href=&amp;quot;#id4&amp;quot; title=&amp;quot;Permalink to this headline&amp;quot;&amp;gt;¶&amp;lt;/a&amp;gt;&amp;lt;/h4&amp;gt;
&amp;lt;p&amp;gt;&amp;amp;lt;&amp;amp;lt;&amp;amp;lt;&amp;amp;lt;&amp;amp;lt;で新しくセクションを作ってみた。&amp;lt;/p&amp;gt;&lt;/pre&gt;
&lt;p&gt;うーんなるほど。&lt;/p&gt;
&lt;p&gt;ちゃんとドキュメント読まず、他の記法と同じノリでこれはこの見出しって決めつけてしまっていた！&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Windows版Redmineをサービスに登録してブート時に起動させる(宿題あり)</title>
   <link href="http://gosyujin.github.io/2012/07/17/1342535044"/>
   <updated>2012-07-17T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2012/07/17/1342535044</id>
   <content type="html">&lt;h1&gt;あらすじ&lt;/h1&gt;
&lt;p&gt;タイトル通り、サービスに登録してよろしく起動してほしい。mongrelを使えばサービスから起動できる……らしいが、名前は聞いたことあるけど、mongrelが何かは知らない……。&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Ruby + C(拡張ライブラリ) で書かれた httpd。&lt;/p&gt;&lt;cite&gt;&lt;a href=&quot;http://d.hatena.ne.jp/keyword/mongrel&quot;&gt;http://d.hatena.ne.jp/keyword/mongrel&lt;/a&gt;&lt;/cite&gt;&lt;/blockquote&gt;
&lt;p&gt;なるほど。&lt;/p&gt;
&lt;h1&gt;環境&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;Windows XP&lt;/li&gt;&lt;li&gt;Ruby 1.9.3&lt;ul&gt;&lt;li&gt;Bundler 1.0.21&lt;/li&gt;&lt;li&gt;Mongrel 1.2.0.pre2&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Redmine 1.4&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;手順&lt;/h1&gt;
&lt;h2&gt;前提&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;Redmineの環境構築が完了している事&lt;ul&gt;&lt;li&gt;bundle exec ruby script/server -e production で起動できる事&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;インストールから起動まで&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;まずはRedmineデフォルトのGemfileにmongrelを追加し、bundle install&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;gem &amp;quot;mongrel&amp;quot;&lt;/pre&gt;
&lt;pre class=&quot;&quot;&gt;$ bundle install
Fetching source index for http://rubygems.org/
Using rake (0.9.2.2)
Using activesupport (2.3.14)
Using rack (1.1.3)
Using actionpack (2.3.14)
Using actionmailer (2.3.14)
Using activerecord (2.3.14)
Using activeresource (2.3.14)
Installing cgi_multipart_eof_fix (2.5.0)
Using coderay (1.0.6)
Installing gem_plugin (0.2.3)
Using i18n (0.4.2)
Installing mongrel (1.1.5)
Using mysql2 (0.2.18)
Using net-ldap (0.3.1)
Using pg (0.13.2)
Using rails (2.3.14)
Using ruby-openid (2.1.8)
Using sqlite3 (1.3.6)
Using tzinfo (0.3.33)
Using bundler (1.0.21)
Your bundle is complete! It was installed into ./vendor/bundle&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;bundle exec ruby ...で起動…しようとするとエラー&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;msvcrt-ruby18.dll が見つからなかったため、このアプリケーションを開始できませんでした。アプリケーションをインストールし直すとこの問題は解決される場合があります。&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://gururan.com/20100820/002808&quot;&gt;【Ruby1.9】msvcrt-ruby18.dll が見つからなかったため、このアプリケーションを開始できませんでした。・・・とエラーが。。。 | ぐるらん&lt;/a&gt; という事らしいので、jsonを消してみることに……ただ、バージョンが違うんだよなあ。&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;$ gem list
...
json (1.5.4)
...&lt;/pre&gt;
&lt;pre class=&quot;&quot;&gt;$ gem uninstall json
Successfully uninstalled json-1.5.4&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;で、再起動……だめだった！！&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://simultechnology.blendmix.jp/blog/archives/1248&quot;&gt;Windowsでrails3.0をMongrelで動かす | simultechnology.blog&lt;/a&gt; によると、さっきいれてた&lt;span class=&quot;deco&quot; style=&quot;color:#FF0000;&quot;&gt;mongrel 1.1.5 はRuby 1.8のモジュールを使っている&lt;/span&gt;という事らしい&lt;/li&gt;&lt;li&gt;&lt;span class=&quot;deco&quot; style=&quot;color:#FF0000;&quot;&gt;新しいバージョン(今はプレリリース版)を入れることで解決できる。&lt;/span&gt;Gemfileを修正しbundle install&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;-gem &amp;quot;mongrel&amp;quot;
+gem &amp;quot;mongrel&amp;quot;, &amp;quot;&amp;gt;= 1.2.0.pre2&amp;quot;&lt;/pre&gt;
&lt;pre class=&quot;&quot;&gt;$ bundle install
...
Installing mongrel (1.2.0.pre2)&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;起動！　起動した！　WEBrickで起動していたのがMongrelに変わった！&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;=&amp;gt; Booting WEBrick&lt;/pre&gt;
&lt;pre class=&quot;&quot;&gt;=&amp;gt; Booting Mongrel&lt;/pre&gt;
&lt;p&gt;に変わった！&lt;/p&gt;
&lt;h1&gt;サービスに登録&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;mongrel_serviceをGemfileに登録&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;gem &amp;quot;mongrel_service&amp;quot;&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;インストールできたらmongrel_railsというコマンドが追加される(今回はbundlerでインストールしたので、Redmineのrootまで行ってbundle exec mongrel_rails)&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;[C:\redmine-1.4.0]
$ be mongrel_rails
Usage: mongrel_rails &amp;lt;command&amp;gt; [options]
Available commands are:

 - restart
 - start
 - stop
 - service::install
 - service::remove&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;Serviceに追加&lt;/li&gt;&lt;/ul&gt;
&lt;table&gt;&lt;tr&gt;&lt;th&gt;オプション&lt;/th&gt;&lt;th&gt;意味&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;-N&lt;/td&gt;&lt;td&gt;サービス名&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;-c&lt;/td&gt;&lt;td&gt;Redmineのルート&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;-p&lt;/td&gt;&lt;td&gt;起動ポート&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;-e&lt;/td&gt;&lt;td&gt;Railsの起動モード&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;pre class=&quot;&quot;&gt;$ be mongrel_rails service::install -N &amp;quot;Redmine&amp;quot; -c C:\redmine-1.4.0 -p 3000 -e production
** Copying native mongrel_service executable...
Redmine service created.&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;登録に成功したのでWin+rからservices.mscを呼び出して確認……&lt;/li&gt;&lt;li&gt;あった！&lt;ul&gt;&lt;li&gt;スタートアップの種類が手動になっていたので自動に変更&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;マシン再起動！&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;&lt;span class=&quot;deco&quot; style=&quot;color:#FF0000;&quot;&gt;起動しない……だと……？&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;サービスから起動できなかった&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;Redmineフォルダ内のlogにmongrel.logがあるので見てみると&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;C:\RUBY_ROOT\bin\ruby.exe: No such file or directory -- C:/RUBY_ROOT/bin/mongrel_rails (LoadError)&lt;/pre&gt;
&lt;p&gt;うーん。RUBY_ROOTのbin下にmongrel_railsを探しに行ってる？　……でも今回はbundlerで入れたからREDMINE_ROOT/vendor/bundle下を見に行ってほしいんだけどなぁ。&lt;/p&gt;
&lt;p&gt;ちょっと試しにbundlerからmongrel, mongrel_serviceをはずして、gemで直接Mongrelをインストールしてみる。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ gem install mongrel --pre
$ gem install mongrel_service&lt;/pre&gt;
&lt;p&gt;これで&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;REDMINE_ROOTのvendor/bundleにMongrelはなくなった&lt;ul&gt;&lt;li&gt;つまり、REDMINE_ROOTでbundle exec ruby ...したらWEBRickで起動するようになった&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;RUBY_ROOTにmongrelが入った&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;ということになり、RUBY_ROOTにMongrelがあるので、再起動すればサービスから起動してくれるはず……。&lt;/p&gt;
&lt;p&gt;再々起動…&lt;span class=&quot;deco&quot; style=&quot;color:#FF0000;&quot;&gt;起動した！&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;まとめ&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;一応、サービスから起動させる事はできた&lt;/li&gt;&lt;li&gt;ただし、直接gem installしたものに限る。サービスから起動させるとRUBY_ROOTを見にいってしまうようなのでbundlerで入れるとLoadErrorになってしまう&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;宿題&lt;/h2&gt;
&lt;p&gt;mongrel_railsコマンドのオプションとかでbundlerから起動するように変えられないかな？&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Fluentdというログ収集ツールを使ってApacheのログを取得するまで</title>
   <link href="http://gosyujin.github.io/2012/07/12/1342098141"/>
   <updated>2012-07-12T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2012/07/12/1342098141</id>
   <content type="html">&lt;h1&gt;あらすじ&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;Twitterで@&lt;a href=&quot;https://twitter.com/tosikawa&quot;&gt;tosikawa&lt;/a&gt;さんにこんなツールあるよ、と教えてもらった&lt;/li&gt;&lt;li&gt;…が、未見だったためすぐググる&lt;/li&gt;&lt;li&gt;とりあえずどんなものか動かしてみる事に&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;Fluentdとは&lt;/h2&gt;
&lt;blockquote&gt;&lt;p&gt;Log everything in JSON&lt;/p&gt;&lt;cite&gt;&lt;a href=&quot;http://fluentd.org/&quot;&gt;http://fluentd.org/&lt;/a&gt;&lt;/cite&gt;&lt;/blockquote&gt;
&lt;p&gt;Oh...シンプルイズベスト…。&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Fluentd is a log collector daemon written in Ruby. Fluentd receives logs as JSON streams, buffers them, and sends them to other systems like MySQL, MongoDB, or even other instances of Fluentd.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Rubyで作られたログ収集ツール。ただし、JSONで……？&lt;/p&gt;
&lt;h1&gt;参考サイト&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://fluentd.org/&quot;&gt;Fluentd: Log Everything in JSON&lt;/a&gt;&lt;ul&gt;&lt;li&gt;公式のDocumentationがSphinx&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://d.hatena.ne.jp/viver/20110929&quot;&gt;2011-09-29 - 古橋貞之の日記&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://d.hatena.ne.jp/wyukawa/20120207/1328625443&quot;&gt;fluentdを試してみた - wyukawa’s blog&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://d.hatena.ne.jp/zakihaya/20120616/1339856226&quot;&gt;fluentdを使ってnginxのログを溜めてみるメモ - zakihayaの日記&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://d.hatena.ne.jp/fat47/20120426/1335428063&quot;&gt;【作業メモ】Apacheログをfluentd+MongoDBで収集しRubyで集計してみたが… - FAT47の底辺インフラ議事録&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://shinobra.com/2012/02/sawanoboly/gluent_getting_start&quot;&gt;fluentことはじめ、起動からmongodbにログを突っ込むまで | しのぶら!!!&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;環境&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;CentOS 6.2&lt;/li&gt;&lt;li&gt;Ruby 1.9.3&lt;/li&gt;&lt;li&gt;RubyGems 1.8.21&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;手順&lt;/h1&gt;
&lt;p&gt;とりあえずbundlerで動かしてみるためにGemfileを作成。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ cat Gemfile
source :rubygems
source &amp;quot;http://rubygems.org&amp;quot;

gem &#39;fluentd&#39;&lt;/pre&gt;
&lt;p&gt;インストール。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ bundle install --path ./vendor/bundle
Fetching gem metadata from http://rubygems.org/....
Fetching gem metadata from http://rubygems.org/....
Installing iobuffer (1.1.2) with native extensions
Installing cool.io (1.1.0) with native extensions
Installing http_parser.rb (0.5.3) with native extensions
Installing json (1.7.3) with native extensions
Installing msgpack (0.4.7) with native extensions
Installing yajl-ruby (1.1.0) with native extensions
Installing fluentd (0.10.24)
Using bundler (1.1.3)
Your bundle is complete! It was installed into ./vendor/bundle&lt;/pre&gt;
&lt;p&gt;OK。&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f1&quot; title=&quot;CentOSはこれでよかったんだけど、はじめにWindowsで挑戦したらエラッタ。。&quot; name=&quot;fn1&quot;&gt;*1&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h1&gt;実行&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;http://fluentd.org/doc/install.html#confirm-installation&quot;&gt;Installation — fluentd v0.10 documentation&lt;/a&gt; を参考に。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;設定ファイルなどのテンプレートを指定先に作ってくれる。&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;$ bundle exec fluentd --setup ./fluent
Installed ./fluent/fluent.conf.&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;コンフィグファイル指定+traceモードで起動&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;$ bundle exec fluentd -c ./fluent/fluent.conf -vv &amp;amp;
[1] 12973
2012-07-10 21:37:47 +0900: fluent/supervisor.rb:153:supervise: starting fluentd-0.10.24
2012-07-10 21:37:47 +0900: fluent/supervisor.rb:235:read_config: reading config file path=&amp;quot;./fluent/fluent.conf&amp;quot;
2012-07-10 21:37:47 +0900: fluent/plugin.rb:85:register_impl: registered buffer plugin &#39;file&#39;
2012-07-10 21:37:47 +0900: fluent/plugin.rb:85:register_impl: registered buffer plugin &#39;memory&#39;
2012-07-10 21:37:47 +0900: fluent/plugin.rb:85:register_impl: registered input plugin &#39;exec&#39;
2012-07-10 21:37:47 +0900: fluent/plugin.rb:85:register_impl: registered input plugin &#39;forward&#39;
2012-07-10 21:37:47 +0900: fluent/plugin.rb:85:register_impl: registered input plugin &#39;gc_stat&#39;
2012-07-10 21:37:47 +0900: fluent/plugin.rb:85:register_impl: registered input plugin &#39;http&#39;
2012-07-10 21:37:47 +0900: fluent/plugin.rb:85:register_impl: registered input plugin &#39;object_space&#39;
2012-07-10 21:37:47 +0900: fluent/plugin.rb:85:register_impl: registered input plugin &#39;status&#39;
2012-07-10 21:37:47 +0900: fluent/plugin.rb:85:register_impl: registered input plugin &#39;tcp&#39;
2012-07-10 21:37:47 +0900: fluent/plugin.rb:85:register_impl: registered input plugin &#39;unix&#39;
2012-07-10 21:37:47 +0900: fluent/plugin.rb:85:register_impl: registered input plugin &#39;syslog&#39;
2012-07-10 21:37:47 +0900: fluent/plugin.rb:85:register_impl: registered input plugin &#39;tail&#39;
2012-07-10 21:37:47 +0900: fluent/plugin.rb:85:register_impl: registered output plugin &#39;copy&#39;
2012-07-10 21:37:47 +0900: fluent/plugin.rb:85:register_impl: registered output plugin &#39;exec&#39;
2012-07-10 21:37:47 +0900: fluent/plugin.rb:85:register_impl: registered output plugin &#39;exec_filter&#39;
2012-07-10 21:37:47 +0900: fluent/plugin.rb:85:register_impl: registered output plugin &#39;file&#39;
2012-07-10 21:37:47 +0900: fluent/plugin.rb:85:register_impl: registered output plugin &#39;forward&#39;
2012-07-10 21:37:47 +0900: fluent/plugin.rb:85:register_impl: registered output plugin &#39;null&#39;
2012-07-10 21:37:47 +0900: fluent/plugin.rb:85:register_impl: registered output plugin &#39;roundrobin&#39;
2012-07-10 21:37:47 +0900: fluent/plugin.rb:85:register_impl: registered output plugin &#39;stdout&#39;
2012-07-10 21:37:47 +0900: fluent/plugin.rb:85:register_impl: registered output plugin &#39;tcp&#39;
2012-07-10 21:37:47 +0900: fluent/plugin.rb:85:register_impl: registered output plugin &#39;unix&#39;
2012-07-10 21:37:47 +0900: fluent/plugin.rb:85:register_impl: registered output plugin &#39;test&#39;
2012-07-10 21:37:47 +0900: fluent/engine.rb:63:block in configure: adding source type=&amp;quot;forward&amp;quot;
2012-07-10 21:37:47 +0900: fluent/engine.rb:63:block in configure: adding source type=&amp;quot;http&amp;quot;
2012-07-10 21:37:47 +0900: fluent/engine.rb:79:block in configure: adding match pattern=&amp;quot;debug.**&amp;quot; type=&amp;quot;stdout&amp;quot;
2012-07-10 21:37:47 +0900: plugin/in_forward.rb:60:listen: listening fluent socket on 0.0.0.0:24224
2012-07-10 21:37:47 +0900: plugin/in_http.rb:74:start: listening http on 0.0.0.0:8888&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;ログを送ってみる&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;$ echo &#39;{&amp;quot;json&amp;quot;:&amp;quot;message&amp;quot;}&#39; | bundle exec fluent-cat debug.test
2012-07-10 21:40:02 +0900: plugin/in_forward.rb:139:initialize: accepted fluent socket object_id=14145560
2012-07-10 21:40:02 +0900 debug.test: {&amp;quot;json&amp;quot;:&amp;quot;message&amp;quot;}
2012-07-10 21:40:02 +0900: plugin/in_forward.rb:180:on_close: closed fluent socket object_id=14145560&lt;/pre&gt;
&lt;br /&gt;
&lt;h1&gt;Apacheのログを集めてみる&lt;/h1&gt;
&lt;p&gt;集めるログ……自鯖のApacheのログをfluentdで集めてみよう。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;コンフィグファイルにはじめからコメントアウトされている設定があったので、これを利用&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;## File input                                                                                                                                 
## read apache logs with tag=apache.access                                                                                                    
&amp;lt;source&amp;gt;
  type tail
  format apache
  path /var/log/httpd-access.log
  tag apache.access
&amp;lt;/source&amp;gt;&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;typeにはInput Pluginを指定するらしい。種類はhttp, tail, forward, execなど&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://fluentd.org/doc/plugin.html#input-plugins&quot;&gt;Plugins — fluentd v0.10 documentation&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;format(必須)はLogのフォーマットを指定。今回はApacheのログなのでapache&lt;/li&gt;&lt;li&gt;path(必須)はLogのパスかな&lt;/li&gt;&lt;li&gt;tag(必須)はfluentd内で使うタグ？ myapp.accessみたいにドットで分けるらしい&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;上記の条件にマッチしたものを、今度はmatchタグに従ってoutputしている……のかな？&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;## match tag=apache.access and write to file                                                                                                  
&amp;lt;match apache.access&amp;gt;
  type file
  path /home/kk_Ataka/log
&amp;lt;/match&amp;gt;&lt;/pre&gt;
&lt;p&gt;では動かしてみよう。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ sudo bundle exec fluentd -c fluent/fluent.conf&lt;/pre&gt;
&lt;p&gt;Apacheへアクセス。(Redmineがいるので、Redmineホームにアクセスしてみる)&lt;/p&gt;
&lt;p&gt;…。&lt;/p&gt;
&lt;p&gt;…。&lt;/p&gt;
&lt;h1&gt;結果&lt;/h1&gt;
&lt;h2&gt;Apacheの方でいつもどおり作られたログ&lt;/h2&gt;
&lt;pre class=&quot;&quot;&gt;xxx.xxx.xxx.xxx - - [10/Jul/2012:22:20:30 +0900] &amp;quot;GET / HTTP/1.1&amp;quot; 200 4371
xxx.xxx.xxx.xxx - - [10/Jul/2012:22:20:30 +0900] &amp;quot;GET /themes/alternate/stylesheets/application.css?1339785657 HTTP/1.1&amp;quot; 304 -
xxx.xxx.xxx.xxx - - [10/Jul/2012:22:20:30 +0900] &amp;quot;GET /javascripts/controls.js?1339785657 HTTP/1.1&amp;quot; 304 -
xxx.xxx.xxx.xxx - - [10/Jul/2012:22:20:30 +0900] &amp;quot;GET /javascripts/effects.js?1339785657 HTTP/1.1&amp;quot; 304 -
xxx.xxx.xxx.xxx - - [10/Jul/2012:22:20:30 +0900] &amp;quot;GET /javascripts/prototype.js?1339785657 HTTP/1.1&amp;quot; 304 -
xxx.xxx.xxx.xxx - - [10/Jul/2012:22:20:30 +0900] &amp;quot;GET /javascripts/dragdrop.js?1339785657 HTTP/1.1&amp;quot; 304 -
xxx.xxx.xxx.xxx - - [10/Jul/2012:22:20:30 +0900] &amp;quot;GET /javascripts/application.js?1339785657 HTTP/1.1&amp;quot; 304 -
xxx.xxx.xxx.xxx - - [10/Jul/2012:22:20:30 +0900] &amp;quot;GET /stylesheets/scm.css?1339785657 HTTP/1.1&amp;quot; 304 -
::1 - - [10/Jul/2012:22:20:36 +0900] &amp;quot;OPTIONS * HTTP/1.0&amp;quot; 200 -&lt;/pre&gt;
&lt;p&gt;見慣れたもんが出ました。&lt;/p&gt;
&lt;h2&gt;fluentdで作られたログ&lt;/h2&gt;
&lt;pre class=&quot;&quot;&gt;2012-07-10T22:20:30+09:00       apache.access   {&amp;quot;host&amp;quot;:&amp;quot;xxx.xxx.xxx.xxx&amp;quot;,&amp;quot;user&amp;quot;:&amp;quot;-&amp;quot;,&amp;quot;method&amp;quot;:&amp;quot;GET&amp;quot;,&amp;quot;path&amp;quot;:&amp;quot;/&amp;quot;,&amp;quot;code&amp;quot;:&amp;quot;200&amp;quot;,&amp;quot;size&amp;quot;:&amp;quot;4371&amp;quot;}
2012-07-10T22:20:30+09:00       apache.access   {&amp;quot;host&amp;quot;:&amp;quot;xxx.xxx.xxx.xxx&amp;quot;,&amp;quot;user&amp;quot;:&amp;quot;-&amp;quot;,&amp;quot;method&amp;quot;:&amp;quot;GET&amp;quot;,&amp;quot;path&amp;quot;:&amp;quot;/themes/alternate/stylesheets/application.css?1339785657&amp;quot;,&amp;quot;code&amp;quot;:&amp;quot;304&amp;quot;,&amp;quot;size&amp;quot;:&amp;quot;-&amp;quot;}
2012-07-10T22:20:30+09:00       apache.access   {&amp;quot;host&amp;quot;:&amp;quot;xxx.xxx.xxx.xxx&amp;quot;,&amp;quot;user&amp;quot;:&amp;quot;-&amp;quot;,&amp;quot;method&amp;quot;:&amp;quot;GET&amp;quot;,&amp;quot;path&amp;quot;:&amp;quot;/javascripts/controls.js?1339785657&amp;quot;,&amp;quot;code&amp;quot;:&amp;quot;304&amp;quot;,&amp;quot;size&amp;quot;:&amp;quot;-&amp;quot;}
2012-07-10T22:20:30+09:00       apache.access   {&amp;quot;host&amp;quot;:&amp;quot;xxx.xxx.xxx.xxx&amp;quot;,&amp;quot;user&amp;quot;:&amp;quot;-&amp;quot;,&amp;quot;method&amp;quot;:&amp;quot;GET&amp;quot;,&amp;quot;path&amp;quot;:&amp;quot;/javascripts/effects.js?1339785657&amp;quot;,&amp;quot;code&amp;quot;:&amp;quot;304&amp;quot;,&amp;quot;size&amp;quot;:&amp;quot;-&amp;quot;}
2012-07-10T22:20:30+09:00       apache.access   {&amp;quot;host&amp;quot;:&amp;quot;xxx.xxx.xxx.xxx&amp;quot;,&amp;quot;user&amp;quot;:&amp;quot;-&amp;quot;,&amp;quot;method&amp;quot;:&amp;quot;GET&amp;quot;,&amp;quot;path&amp;quot;:&amp;quot;/javascripts/prototype.js?1339785657&amp;quot;,&amp;quot;code&amp;quot;:&amp;quot;304&amp;quot;,&amp;quot;size&amp;quot;:&amp;quot;-&amp;quot;}
2012-07-10T22:20:30+09:00       apache.access   {&amp;quot;host&amp;quot;:&amp;quot;xxx.xxx.xxx.xxx&amp;quot;,&amp;quot;user&amp;quot;:&amp;quot;-&amp;quot;,&amp;quot;method&amp;quot;:&amp;quot;GET&amp;quot;,&amp;quot;path&amp;quot;:&amp;quot;/javascripts/dragdrop.js?1339785657&amp;quot;,&amp;quot;code&amp;quot;:&amp;quot;304&amp;quot;,&amp;quot;size&amp;quot;:&amp;quot;-&amp;quot;}
2012-07-10T22:20:30+09:00       apache.access   {&amp;quot;host&amp;quot;:&amp;quot;xxx.xxx.xxx.xxx&amp;quot;,&amp;quot;user&amp;quot;:&amp;quot;-&amp;quot;,&amp;quot;method&amp;quot;:&amp;quot;GET&amp;quot;,&amp;quot;path&amp;quot;:&amp;quot;/javascripts/application.js?1339785657&amp;quot;,&amp;quot;code&amp;quot;:&amp;quot;304&amp;quot;,&amp;quot;size&amp;quot;:&amp;quot;-&amp;quot;}
2012-07-10T22:20:30+09:00       apache.access   {&amp;quot;host&amp;quot;:&amp;quot;xxx.xxx.xxx.xxx&amp;quot;,&amp;quot;user&amp;quot;:&amp;quot;-&amp;quot;,&amp;quot;method&amp;quot;:&amp;quot;GET&amp;quot;,&amp;quot;path&amp;quot;:&amp;quot;/stylesheets/scm.css?1339785657&amp;quot;,&amp;quot;code&amp;quot;:&amp;quot;304&amp;quot;,&amp;quot;size&amp;quot;:&amp;quot;-&amp;quot;}
2012-07-10T22:20:36+09:00       apache.access   {&amp;quot;host&amp;quot;:&amp;quot;::1&amp;quot;,&amp;quot;user&amp;quot;:&amp;quot;-&amp;quot;,&amp;quot;method&amp;quot;:&amp;quot;OPTIONS&amp;quot;,&amp;quot;path&amp;quot;:&amp;quot;*&amp;quot;,&amp;quot;code&amp;quot;:&amp;quot;200&amp;quot;,&amp;quot;size&amp;quot;:&amp;quot;-&amp;quot;}&lt;/pre&gt;
&lt;p&gt;自動で全部jsonにparseされている！　さすがLog everything in JSONと公式に書いているだけの事はある！&lt;/p&gt;
&lt;p&gt;こうなってくると、MongoDBとかの知識も必要になってくるな。&lt;/p&gt;
&lt;div class=&quot;footnote&quot;&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn1&quot; name=&quot;f1&quot;&gt;*1&lt;/a&gt;: CentOSはこれでよかったんだけど、はじめにWindowsで挑戦したらエラッタ。。&lt;/p&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>JenkinsでAdmin権限を持つユーザのパスワードを全て忘れた時の復旧方法</title>
   <link href="http://gosyujin.github.io/2012/06/19/1340106125"/>
   <updated>2012-06-19T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2012/06/19/1340106125</id>
   <content type="html">&lt;h1&gt;あらすじ&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;ローカルで動かしているJenkinsでAdministrator権限を持っているユーザ、およびそのパスワードを忘れたので、色々な事ができなくなった&lt;/li&gt;&lt;li&gt;また、Administrator権限を持つユーザがいない = Jenkinsの管理画面が開けなくなった事で権限復旧もできなくなった&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;環境&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;Windows XP&lt;/li&gt;&lt;li&gt;Jenkins 1.470&lt;ul&gt;&lt;li&gt;ユーザ情報: Jenkinsのユーザデータベース&lt;/li&gt;&lt;li&gt;権限管理: 行列による権限設定&lt;/li&gt;&lt;li&gt;ローカルで運用している&lt;/li&gt;&lt;li&gt;JenkinsはWindowsサービスに登録している&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;原因と解決手順&lt;/h1&gt;
&lt;h2&gt;気づき&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;プラグインを入れようと思ったら、なんでかJenkinsの管理リンクが見当たらなくなった&lt;/li&gt;&lt;li&gt;管理画面のアドレスは /manage なので直にアクセスしてみる&lt;/li&gt;&lt;li&gt;Firefoxだとこんなエラーが出た&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f1&quot; title=&quot;なので、はじめは格納しているデータが壊れちゃったのかと思った&quot; name=&quot;fn1&quot;&gt;*1&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;！　内容符号化 (Content-Encoding) に問題があります
　　不正または不明な形式で圧縮されているため、ページを表示できません。

　・この問題を Web サイトの管理者に報告してください。
　[再試行]&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;試しにChromeでもやってみたがこう&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;このウェブページにアクセスできません

http://localhost:8080/manage のウェブページは一時的に停止しているか、
新しい http://localhost:8080/manage に移動した可能性があります。

エラー 330 (net::ERR_CONTENT_DECODING_FAILED): 不明なエラーです。&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;まさかのIE6。ログイン画面からレイアウト崩れてて(さすがにサポートしてないよなぁ)とか思いつつアクセスすると…&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;アクセスできません
kk_Ataka には、Administer パーミッションがありません。&lt;/pre&gt;
&lt;p&gt;&lt;span class=&quot;deco&quot; style=&quot;font-weight:bold;&quot;&gt;なんだと！？&lt;/span&gt;　…でも管理画面にいけないんだから、権限も振れないよ。どうしよう。&lt;/p&gt;
&lt;h2&gt;解決策&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;とりあえず、Jenkinsのディレクトリをユーザ名(kk_Atakaなど)で検索してみた…&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f2&quot; title=&quot;権限設定などを記載しているファイルがある可能性を願って。&quot; name=&quot;fn2&quot;&gt;*2&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;すると引っかかったのはJenkinsのルートにある &lt;span class=&quot;deco&quot; style=&quot;color:#FF0000;&quot;&gt;config.xml&lt;/span&gt; と大量の build.xml&lt;ul&gt;&lt;li&gt;build.xml は実行したユーザを情報として持っているらしい。が、今回は関係ない&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;config.xml を見てみる&lt;ul&gt;&lt;li&gt;&lt;span class=&quot;deco&quot; style=&quot;color:#FF0000;&quot;&gt;authorizationStrategy&lt;/span&gt; タグの中に permission タグがあり、ここに &lt;span class=&quot;deco&quot; style=&quot;color:#FF0000;&quot;&gt;hudson.model.Computer.Configure:kk_Ataka&lt;/span&gt; みたいに権限を設定してそうな箇所を発見！&lt;/li&gt;&lt;li&gt;同じ設定(ユーザ情報、権限管理など)で安定稼動している他のJenkinsのconfig.xmlと目grepをかけてみる&lt;/li&gt;&lt;li&gt;いかにもAdministrator権限を司っていそうな設定を発見！　そして、これが書かれていなかった！&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;&amp;lt;permission&amp;gt;hudson.model.Hudson.Administer:USER&amp;lt;/permission&amp;gt;&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;念のため、サービスからJenkinsをいったん停止し、上記タグを追加後、起動&lt;/li&gt;&lt;li&gt;アクセスできた！&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;最後に&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;上述の権限管理の所、全体のAdministratorを全てチェック空にすると今回の状況が再現できるらしい(イメージはプロジェクト単位の権限設定)&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;f:&lt;a href=&quot;http://d.hatena.ne.jp/kk_Ataka/&quot;&gt;id:kk_Ataka&lt;/a&gt;:20120619203011j:image&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Administrator権限を持つユーザが0のJenkinsって運用的には有りなんだろうか&lt;ul&gt;&lt;li&gt;プラグイン増やさない、アップグレードしない場合とかなら有り？&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;今回の復旧手段はかなり荒業っぽいなぁ&lt;ul&gt;&lt;li&gt;第三者がひょいひょい己にAdministrator権限付加できて良い？&lt;ul&gt;&lt;li&gt;Unixとかならファイルのパーミッションとかきちんと設定できるから大丈夫？&lt;/li&gt;&lt;li&gt;ローカルならでは？&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;div class=&quot;footnote&quot;&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn1&quot; name=&quot;f1&quot;&gt;*1&lt;/a&gt;: なので、はじめは格納しているデータが壊れちゃったのかと思った&lt;/p&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn2&quot; name=&quot;f2&quot;&gt;*2&lt;/a&gt;: 権限設定などを記載しているファイルがある可能性を願って。&lt;/p&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>TDD Boot Camp 大阪 1.0( #tddbc ) に参加しました</title>
   <link href="http://gosyujin.github.io/2012/06/03/1338724924"/>
   <updated>2012-06-03T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2012/06/03/1338724924</id>
   <content type="html">&lt;h1&gt;概要&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://atnd.org/events/28762&quot;&gt;TDD Boot Camp 大阪 1.0( #tddbc ) : ATND&lt;/a&gt;&lt;/li&gt;&lt;li&gt;なかなかスケジュールの都合がつかず、近場で開催されても参加できないことが多かったので、「次こそは！」と思った矢先の大阪開催だったので参加しました&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;まとめ&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;楽天カフェテリア＠大阪、非常に素晴らしい会場でした。&lt;span class=&quot;deco&quot; style=&quot;font-weight:bold;&quot;&gt;素晴らしい会場でした！&lt;/span&gt;&lt;ul&gt;&lt;li&gt;カフェテリアは木製の椅子のため、半日近いイベントの場合腰が悪い人は座布団を持って行ったほうがいいですね&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;TDDとペアプロに関しての経験をつむことができた&lt;ul&gt;&lt;li&gt;よしおかさん、関さん、和田さんを独占していたRubyのテーブル…&lt;ul&gt;&lt;li&gt;その中でも恐れ多くも関さんと和田さんを独占してしまった。会場撮影されていた様子^^; &lt;a href=&quot;http://via.me/-1nhb1te&quot;&gt;goyo (goyoki)on Via.Me&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;成果物はStep3のはじめまで&lt;a href=&quot;https://github.com/gosyujin/tddbc&quot;&gt;GitHub&lt;/a&gt;にあげました&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;他の言語でどう書くか、書き方などを見て、自分のメイン言語のテスティングフレームワークでも出来るかな？　と調べる事が大事&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://twitpic.com/9rz6w1&quot;&gt;ねんがんのグリーンバンドを手に入れたぞ！&lt;/a&gt;&lt;/li&gt;&lt;li&gt;TDDは一人でも出来るので、どんどん書いて量を質に転化させていく！&lt;/li&gt;&lt;li&gt;主催の@&lt;a href=&quot;https://twitter.com//bufferings&quot;&gt;Mitsuyuki Shiiba (bufferings)さんはTwitterを使っています&lt;/a&gt; さん、TAの皆さん、スピーカーである@&lt;a href=&quot;https://twitter.com/t_wada&quot;&gt;Takuto Wada (t_wada)さんはTwitterを使っています&lt;/a&gt; さん、@&lt;a href=&quot;https://twitter.com//hyoshiok&quot;&gt;Hiro Yoshioka (hyoshiok)さんはTwitterを使っています&lt;/a&gt; さん、@&lt;a href=&quot;https://twitter.com//m_seki&quot;&gt;seki at druby.org (m_seki)さんはTwitterを使っています&lt;/a&gt; さん、Ruby島の皆さんお疲れ様でした！&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;以下、時系列にそったまとめ&lt;/p&gt;
&lt;br /&gt;
&lt;h1&gt;TDDのこころ @&lt;a href=&quot;https://twitter.com//t_wada&quot;&gt;Takuto Wada (t_wada)さんはTwitterを使っています&lt;/a&gt; さん&lt;/h1&gt;
&lt;h2&gt;BootCampとは&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;新兵に教官が優しく教える&lt;/li&gt;&lt;li&gt;しかしスライドの画像&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f1&quot; title=&quot;ビリーズブートキャンプ&quot; name=&quot;fn1&quot;&gt;*1&lt;/a&gt;&lt;/span&gt;は2012年現在もはや厳しい…&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;今日やること&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;ペアプログラミングを体験してみる&lt;/li&gt;&lt;li&gt;コードレビュー大会&lt;ul&gt;&lt;li&gt;同じコードを同僚と解くという機会はほぼない&lt;/li&gt;&lt;li&gt;同じお題を他の人はどう考えるのか、他の言語ではどうなるのか&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;ふりかえり&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;KPT形式でフィードバック&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;ソフトウェア開発の三本柱&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;バージョン管理、テスティング、自動化&lt;ul&gt;&lt;li&gt;&lt;span class=&quot;deco&quot; style=&quot;color:#FF0000;&quot;&gt;RPGのノーセーブクリア＝バージョン管理なしの開発&lt;/span&gt;&lt;/li&gt;&lt;li&gt;今コードが動いているのか動いていないのか＝テスティング&lt;/li&gt;&lt;li&gt;人間が手作業でやっているものをシェル化、Jenkinsで回したりで機械に任せる＝自働化、自動化&lt;ul&gt;&lt;li&gt;機械がうまくいってない時だけ教えてくれる&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;「テスト」とは&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;誰が、なんのためにテストをするのかで簡単に分類&lt;ul&gt;&lt;li&gt;Developer Testing&lt;ul&gt;&lt;li&gt;開発者が開発促進のため&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Customer Testing&lt;ul&gt;&lt;li&gt;顧客が進捗管理のため(受入テストとか)&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;QA Testing&lt;ul&gt;&lt;li&gt;品質保証担当者が品質保証のため&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;「TDD」とは&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;テスト駆動開発入門 ケント・ベック&lt;/li&gt;&lt;li&gt;動く、きれいなコードへ&lt;ul&gt;&lt;li&gt;そこに至るための道へは？&lt;ul&gt;&lt;li&gt;きれいな設計をして、それを実装して、それが動作する…きれいな設計とは？&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&quot;deco&quot; style=&quot;color:#FF0000;&quot;&gt;動かすことで初めてわかることがソフトウェア開発にはとても多い&lt;/span&gt;&lt;ul&gt;&lt;li&gt;なら早く超えよう(ただしここで止まると技術的負債になる)&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;TDDのサイクル&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;テストを書き&lt;/li&gt;&lt;li&gt;テストを実行して失敗させ(Red)&lt;/li&gt;&lt;li&gt;目的のコードを書き&lt;/li&gt;&lt;li&gt;テストを成功させ(Green)&lt;/li&gt;&lt;li&gt;そのテスト通るまま中を綺麗にしていく(Refactor)&lt;/li&gt;&lt;li&gt;これを繰り返す&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;TDDのやり方&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;大きな問題は切り分けて1つずつ&lt;/li&gt;&lt;li&gt;たくさんの問題も1つずつ&lt;/li&gt;&lt;li&gt;何をテストすればよいのか&lt;ul&gt;&lt;li&gt;開発を進めにくくする要因→何かわからないもの、不安&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;TDDをすることにより&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;即座にフィードバックを得る&lt;/li&gt;&lt;li&gt;書いたコードへの自信持つ&lt;/li&gt;&lt;li&gt;これから書くコードに自信を持つ&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;TDDの真の目的&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;不安の克服&lt;/li&gt;&lt;li&gt;&lt;span class=&quot;deco&quot; style=&quot;color:#FF0000;&quot;&gt;健康&lt;/span&gt;&lt;ul&gt;&lt;li&gt;コードの健康=仕様変更に対応できる&lt;/li&gt;&lt;li&gt;チームの健康=仕様変更に備える事ができる&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;ペアプロ デモ(FizzBuzz)&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;ゴールから書く！&lt;ul&gt;&lt;li&gt;Fizzの場合&lt;ul&gt;&lt;li&gt;何がゴール？&lt;/li&gt;&lt;li&gt;Fizzが返る&lt;/li&gt;&lt;li&gt;どうなった時Fizz？&lt;/li&gt;&lt;li&gt;…としていく&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;テストコードのテストってどうするの？&lt;ul&gt;&lt;li&gt;テストコードと実装コードを互いにテストしあう！&lt;ul&gt;&lt;li&gt;そのタイミングは実装する前にやってしまう、仮実装してしまう&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;実際にペアプロのデモを第三者視点で見て、以下のようなことを思った&lt;ul&gt;&lt;li&gt;文化の違いをどう解決していくか&lt;ul&gt;&lt;li&gt;エディタ、キーバインド、などなど&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;細かなTipsが共有されていく&lt;ul&gt;&lt;li&gt;「xxはyyっていうショートカットで出せますよ」「知らんかった…」&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;ナビゲータって一人で仕事をしているときはやる事がないので結構難しそう…&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;ペアプロ&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;Ruby島は4人でした&lt;ul&gt;&lt;li&gt;@&lt;a href=&quot;https://twitter.com//urimaro&quot;&gt;urimaro (urimaro)さんはTwitterを使っています&lt;/a&gt; さん、@&lt;a href=&quot;https://twitter.com//gnnk&quot;&gt;gnnk (gnnk)さんはTwitterを使っています&lt;/a&gt; さん、@&lt;a href=&quot;https://twitter.com//koko_u&quot;&gt;KOZAKI Tsuneaki (koko_u)さんはTwitterを使っています&lt;/a&gt; さんと&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;お題はこれ。結構複雑 &lt;a href=&quot;http://devtesting.jp/tddbc/?TDDBC%E5%A4%A7%E9%98%AA&quot;&gt;TDD Boot Camp(TDDBC) - TDDBC大阪1.0&lt;/a&gt;&lt;/li&gt;&lt;li&gt;テーブルにバリバリ使ってるぜ！　という人がいなかったのでどう組もうかー相談していたら、なんとよしおかさんと関さんが「Ruby席に混ぜて」という状況に&lt;ul&gt;&lt;li&gt;恐れ多くも関さんとペアプロさせて頂く事態に&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f2&quot; title=&quot;((;゜Д゜&quot; name=&quot;fn2&quot;&gt;*2&lt;/a&gt;&lt;/span&gt;)&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;RSpecでどうテスト書こうかというところで、どういう単位でテストを作るかのような話になり、色んな書き方があるのだなと感じました。&lt;ul&gt;&lt;li&gt;僕は「小さい自前のスクリプトに対してのテスト」くらいの使い方しかしていなかったから一個一個の振る舞いに対して1つずつit &quot;～できる、it &quot;～する&quot;と実装していこうと考えていた&lt;/li&gt;&lt;li&gt;対して、関さんは一つのテストをシナリオで考えていたので、はじめにこうしてこうやって最後にこうという感じ&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;昼休み&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;楽天デリバリによるお弁当サービス&lt;ul&gt;&lt;li&gt;結構種類が豊富だった&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;昼休み2 実際の事例(和田さんの午前セッションの続き)&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;TDDを採用したときのTDDを採用していない類似プロジェクトと比較&lt;ul&gt;&lt;li&gt;例えばIBM、15%~20%くらいテストコードのための実装時間が増えたが、4割くらい欠陥が減った&lt;/li&gt;&lt;li&gt;Visual Studioがすごい！欠陥密度0.09&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&quot;deco&quot; style=&quot;color:#FF0000;&quot;&gt;テストコードを書く時間は増えるが、軽微なミスが減るため、デバッグの工数は減る→トータルで開発工数を減らす事ができると考えられる&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;昼休み3 LT&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;@&lt;a href=&quot;https://twitter.com//gab_km&quot;&gt;let ガブ = Some(エンジニア) (gab_km)さんはTwitterを使っています&lt;/a&gt;さん、@&lt;a href=&quot;https://twitter.com//irof&quot;&gt;irof origin (irof)さんはTwitterを使っています&lt;/a&gt;さん のLT&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;午後の部開始 QA&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;テストメソッドの名前はどうやって考えているか&lt;ul&gt;&lt;li&gt;日本語で書いている、英語の場合はxx is … when …&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;テスト名のテストの中身が重複していたらDRY的にはどう？&lt;ul&gt;&lt;li&gt;&lt;span class=&quot;deco&quot; style=&quot;color:#FF0000;&quot;&gt;RSpecの場合構造だけでテストの意味がわかるようにしている&lt;/span&gt;&lt;/li&gt;&lt;li&gt;入れ子構造で意味がわかるようにするのが最近のテストのトレンド&lt;/li&gt;&lt;li&gt;状況は詳しく書くけど何をの部分はサッパリと書く&lt;/li&gt;&lt;li&gt;enclosed&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;プライベートメソッドのテストをしたい…&lt;ul&gt;&lt;li&gt;プライベートメソッドはパブリックメソッド経由でテストできるはずなので、プライベートメソッドをテストしたいといっている時点で設計がおかしい&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;開発者の皆さん、テストを書こう よしおかさん&lt;/h1&gt;
&lt;h2&gt;事例 Oracle8の開発現場&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;95年~2000年&lt;/li&gt;&lt;li&gt;Sun Workstation～&lt;/li&gt;&lt;li&gt;ファイルの仮想化、一人で複数のブランチを持てる&lt;/li&gt;&lt;li&gt;開発プロセス&lt;ul&gt;&lt;li&gt;開発者は要求を自分で定義する&lt;ul&gt;&lt;li&gt;リファレンスマニュアルのベース&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;設計する&lt;/li&gt;&lt;li&gt;実装する&lt;/li&gt;&lt;li&gt;デイリービルド、リグレッションテスト&lt;/li&gt;&lt;li&gt;安定化プロセス&lt;/li&gt;&lt;li&gt;コードフリーズ(重大なバグ以外変更しない)&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;プログラマ&lt;ul&gt;&lt;li&gt;設計者が実装者でテスタ&lt;ul&gt;&lt;li&gt;一つの機能に関して世界で一番知ってる&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;デイリービルド&lt;/li&gt;&lt;li&gt;リグレッションテスト&lt;/li&gt;&lt;li&gt;安定化プロセス&lt;ul&gt;&lt;li&gt;バグ修正だけ&lt;/li&gt;&lt;li&gt;バグや不具合はリリースノートに&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;学んだこと&lt;ul&gt;&lt;li&gt;デイリービルドによって常に動作が確認できる&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;事例2 DEC Rdb&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;米国で開発されたソフトウェアを日本語へ&lt;/li&gt;&lt;li&gt;ソフトウェア国際化のあるべき姿の議論&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;事例3 日本語COBOL&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;チェックインの数やバグの数、修正済みバグの数を手書きで書いていた&lt;/li&gt;&lt;li&gt;新人(よしおかさん)のしつけ&lt;ul&gt;&lt;li&gt;「プログラム書きました」「チェックインした？」「あ、してません」「」など&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&quot;deco&quot; style=&quot;color:#FF0000;&quot;&gt;デバッグの仕方、質問の仕方も教わった&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;Samba3.0国際対応&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;2.xから3.0での日本語の問題&lt;/li&gt;&lt;li&gt;&lt;span class=&quot;deco&quot; style=&quot;color:#FF0000;&quot;&gt;テストをどんどん作ってバグを登録しまくり、コミュニティに入り込んでいった&lt;/span&gt;&lt;/li&gt;&lt;li&gt;小さいパッチをちょこちょこと&lt;/li&gt;&lt;li&gt;OSSでもテストファーストで出来た&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;ペアプロ午後の部&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;後ほど発表があるということで関さん離脱。ありがとうございました&lt;ul&gt;&lt;li&gt;なんとバトンタッチは和田さん&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f3&quot; title=&quot;((;゜Д゜&quot; name=&quot;fn3&quot;&gt;*3&lt;/a&gt;&lt;/span&gt;)&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;和田さんが午前中に書いていたテストをガンガン洗練させていく！&lt;ul&gt;&lt;li&gt;黄金の回転で一番難しいと思っているRefactorの部分を間近で見ているのでマジでためになる！&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;今回教えて頂いたのは&lt;span class=&quot;deco&quot; style=&quot;color:#FF0000;&quot;&gt;itの中は簡潔になるように心がける&lt;/span&gt;というもの&lt;ul&gt;&lt;li&gt;テストのための準備をbeforeで書く！&lt;/li&gt;&lt;li&gt;contextでは「この時、これを確認、これを確認」レベルで済ませるように書く。&lt;ul&gt;&lt;li&gt;contextの中身はlet, its, itsで！&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;という事らしい。確かに見やすい&lt;/li&gt;&lt;li&gt;これで、他の状態の時にこうあるべきというのも一行追加でいける&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;ruby&quot;&gt;describe &amp;quot;投入金額に注目&amp;quot; do
    before do
      @vending = Vending.new
      @change = @vending.enter(input)
    end
    subject { @vending }

    context &amp;quot;だめな硬貨だけのとき&amp;quot; do
      let(:input) { [1,5,2000] }
      it { @change.should == [1,5,2000] }
      its(:show) { should == 0 }
    end

    context &amp;quot;1000円札を入れたとき&amp;quot; do
      let(:input) { [1000] }
      it { @change.should == [] }
+     its(:show) { should == 1000 } ＃この状態の時にも
    end&lt;/pre&gt;
&lt;h1&gt;レビュー&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;C++, C#, Groovyのチーム&lt;ul&gt;&lt;li&gt;他の言語でこうやってますとあったものがRSpecで出来るか&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;TDDとは 関さん@&lt;a href=&quot;https://twitter.com//m_seki&quot;&gt;seki at druby.org (m_seki)さんはTwitterを使っています&lt;/a&gt;&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;XP10年&lt;/li&gt;&lt;li&gt;The dRuby Book&lt;/li&gt;&lt;li&gt;Legendary Japanese Ruby hacker&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;TDDのおさらい&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;今日楽しかった？&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;TDDのサイクル&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;次の目標を考える&lt;/li&gt;&lt;li&gt;その目標を示す&lt;/li&gt;&lt;li&gt;黄金の回転…&lt;ul&gt;&lt;li&gt;これを繰り返す&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;TDDはなんだっけ&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;テストによって導かれた開発の事&lt;/li&gt;&lt;li&gt;今日のは実装例の一つかも&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;TDDの変形&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;何かを引く&lt;ul&gt;&lt;li&gt;xUnitを引いてみる、どうなるか&lt;ul&gt;&lt;li&gt;すぐに準備出来ない複雑なUIなど&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;顧客テストをxUnitなしで&lt;ul&gt;&lt;li&gt;JaSST&#39;04&lt;/li&gt;&lt;li&gt;毎日増えるテストを毎日飛び越える(忍者の修行)&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;何かをたす&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;&lt;span class=&quot;deco&quot; style=&quot;color:#FF0000;&quot;&gt;もうひとつのテスト&lt;/span&gt;&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;Checking&lt;ul&gt;&lt;li&gt;既知の情報の確認&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Testing&lt;ul&gt;&lt;li&gt;新しい情報、未知の情報を探す&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;ご提案&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;Red Green Refactor&lt;ul&gt;&lt;li&gt;ちょっとずつ仮設の上に仮設を重ねる&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&quot;deco&quot; style=&quot;color:#FF0000;&quot;&gt;Destroy&lt;/span&gt;&lt;ul&gt;&lt;li&gt;この実装ならバグが出るだろみたいなのを&lt;/li&gt;&lt;li&gt;たまに破壊的な思考を持ち込む&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;QA&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;assertなんとかの効率的な探し方&lt;ul&gt;&lt;li&gt;Javadoc見れ&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;レガシーコードに対するTDD&lt;ul&gt;&lt;li&gt;レガシーコード改善ガイドおすすめ&lt;/li&gt;&lt;li&gt;外側から攻める。Sambaの時はそうやった(よしおかさん)&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;荒い粒度のテストとは&lt;ul&gt;&lt;li&gt;画面に近いところ、とか入出力とか&lt;/li&gt;&lt;li&gt;単体テストやりにくいテスト(レガシーコード)にたいしてやりやすい表面から攻めていく&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;テストの期待値を作るのに困ったこと&lt;ul&gt;&lt;li&gt;input, outputのリストを書く&lt;/li&gt;&lt;li&gt;ソフトウェアテスト技法ドリル読む&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;TDDの文化がないところでどう根付かせるか&lt;ul&gt;&lt;li&gt;毎日テストが僕らを守ってくれると提唱した&lt;/li&gt;&lt;li&gt;まずは自分から、自信をつけてから広めよう&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;KPT&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;会場よかった&lt;/li&gt;&lt;li&gt;会場盛り上がってた&lt;/li&gt;&lt;li&gt;TDD体験できてよかった&lt;/li&gt;&lt;li&gt;ペアプロも体験できてよかった&lt;/li&gt;&lt;li&gt;TAがたくさんいて聞きやすかった&lt;/li&gt;&lt;li&gt;Groovy&lt;/li&gt;&lt;li&gt;知らない言語のテストコード、フレームワークを見れてよかった&lt;/li&gt;&lt;li&gt;社内に広める自信がついた＞Groovy？&lt;/li&gt;&lt;li&gt;Groovy楽しかった&lt;/li&gt;&lt;li&gt;Vimに詳しくなった&lt;/li&gt;&lt;li&gt;Groovyいいよ&lt;ul&gt;&lt;li&gt;などなど&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;Groovy人気がすごい。&lt;/p&gt;
&lt;h1&gt;終わりに 和田さん&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;ペアプログラミングをやってテストのサイクルを回す&lt;/li&gt;&lt;li&gt;コードレビュー大会&lt;ul&gt;&lt;li&gt;「あの言語でこんな事出来るんだ」発見→「俺の言語でもできんじゃん！」&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;黄金の回転&lt;ul&gt;&lt;li&gt;&lt;span class=&quot;deco&quot; style=&quot;color:#FF0000;&quot;&gt;各象限を越えるときの心持ち&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;本をたどる&lt;/li&gt;&lt;li&gt;2人目がいないので広めるのに心が折れちゃう&lt;ul&gt;&lt;li&gt;まず一人でやって見せて背中を見せる&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;量は質に転化する&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;そして懇親会へ…&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;ピザが一瞬でとけた&lt;/li&gt;&lt;/ul&gt;
&lt;div class=&quot;footnote&quot;&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn1&quot; name=&quot;f1&quot;&gt;*1&lt;/a&gt;: ビリーズブートキャンプ&lt;/p&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn2&quot; name=&quot;f2&quot;&gt;*2&lt;/a&gt;: ((;゜Д゜&lt;/p&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn3&quot; name=&quot;f3&quot;&gt;*3&lt;/a&gt;: ((;゜Д゜&lt;/p&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>Jenkins,Redmine使いこなし勉強会に参加しました と、ちょっとプラグイン作ってみた #jen_red</title>
   <link href="http://gosyujin.github.io/2012/05/28/1338209339"/>
   <updated>2012-05-28T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2012/05/28/1338209339</id>
   <content type="html">&lt;h1&gt;概要&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://connpass.com/event/500/&quot;&gt;Jenkins,Redmine使いこなし勉強会 - connpass&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;前半は発表のメモ。後半は実際にプラグイン作ったりインストールしたりのメモ。&lt;/p&gt;
&lt;h1&gt;Redmineプラグイン活用入門 - @&lt;a href=&quot;http://twitter.com/Kokawa_Takashi&quot;&gt;Kokawa Takashi (Kokawa_Takashi)さんはTwitterを使っています&lt;/a&gt;さん&lt;/h1&gt;
&lt;p&gt;&lt;span class=&quot;deco&quot; style=&quot;color:#FF0000;&quot;&gt;注意:Redmine開発環境が安定していないので、すぐ陳腐化してしまう事がある！&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;Redmineにおける問題&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;Redmineの設定で解決&lt;/li&gt;&lt;li&gt;運用で解決&lt;/li&gt;&lt;li&gt;ツール自体を拡張して解決&lt;ul&gt;&lt;li&gt;プラグインの探し方・おすすめ&lt;/li&gt;&lt;li&gt;REST APIを使って外部から&lt;/li&gt;&lt;li&gt;プラグインを作る&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;プラグインの探し方・おすすめ&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://www.r-labs.org/projects/r-labs/wiki/Redmine%E3%83%97%E3%83%A9%E3%82%B0%E3%82%A4%E3%83%B3%E9%9B%86&quot;&gt;r-labs&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://www.redmine.org/plugins&quot;&gt;Plugins - Redmine&lt;/a&gt;&lt;/li&gt;&lt;li&gt;一つだけおすすめを… Wiki Extensions Plugin&lt;ul&gt;&lt;li&gt;オートプレビュー&lt;/li&gt;&lt;li&gt;任意のページをメニューに&lt;/li&gt;&lt;li&gt;任意のページを埋め込み 等々…&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;他のおすすめ&lt;ul&gt;&lt;li&gt;CodeRevirew&lt;/li&gt;&lt;li&gt;Backlogs&lt;/li&gt;&lt;li&gt;TimeTracker&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;REST API&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;自動でチケットを作ったりできる&lt;/li&gt;&lt;li&gt;チケット一覧を取得できたり&lt;/li&gt;&lt;li&gt;この一連の流れができたらJenkinsに任せる事ができる&lt;ul&gt;&lt;li&gt;期日が間近のチケットのメール通知などもできる&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;プラグインを作る&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;Redmine1.4 or 2.0が対象(Ruby1.9,Bundler対応している/これ以前はしていない)&lt;/li&gt;&lt;li&gt;プラグイン開発環境構築がつらいので&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;Ruby環境&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;WindowsならRubyInstaller + DevKit&lt;/li&gt;&lt;li&gt;MacならRVM&lt;ul&gt;&lt;li&gt;自分でも少しまとめている &lt;a href=&quot;2011-12-04-1323009249&quot;&gt;2011-12-04-1323009249&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;Redmineインストール&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;公式を参考に&lt;ul&gt;&lt;li&gt;自分でも少しまとめている &lt;a href=&quot;2011-05-01-1304204171&quot;&gt;2011-05-01-1304204171&lt;/a&gt;&lt;/li&gt;&lt;li&gt;同じく &lt;a href=&quot;2011-09-07-1315401886&quot;&gt;2011-09-07-1315401886&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;rmagickを除外する&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;bundle install -without development test rmagick -path vendor/bundle&lt;/pre&gt;
&lt;h2&gt;Rubyデバッグ環境&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;ruby-debug-ide…だがこの環境ではうまく動かなくなってしまった&lt;/li&gt;&lt;li&gt;ruby-debug-base19が必要らしいが、そのまま落としてきても動かない&lt;ul&gt;&lt;li&gt;preオプションを入れる&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;&gt;|?|&lt;/p&gt;
&lt;p&gt;gem install ruby-debug-base19 --pre&lt;/p&gt;
&lt;p&gt;gem install ruby-debug-ide --pre&lt;/p&gt;
&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;h2&gt;NetBeans&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;ただし、公式サポートは6.9.1が最終&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;一つだけシンプルなプラグインを&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;Redmineのメニューからヘルプを消す&lt;/li&gt;&lt;li&gt;スケルトンを作ってinit.rbに一文足すだけ&lt;ul&gt;&lt;li&gt;最後に試してみるよ&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;Jenkinsプラグイン活用入門- @&lt;a href=&quot;http://twitter.com/cactusman&quot;&gt;さぼてん（さぼ福）しんざき 佐藤太一  (cactusman)さんはTwitterを使っています&lt;/a&gt;さん&lt;/h1&gt;
&lt;h2&gt;Jenkinsとは&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;高性能Cron&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;プラグインの探し方&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;探す前に…&lt;/li&gt;&lt;li&gt;shやbatなどをうまく組み合わせられないかなどをまず考える&lt;/li&gt;&lt;li&gt;Jenkins自体の昨日もうまく使う&lt;/li&gt;&lt;li&gt;プラグイン自体は本家に登録されている&lt;/li&gt;&lt;li&gt;Jenkins Plugin Hub&lt;ul&gt;&lt;li&gt;ソフト、ツール名などでとりあえず引っ掛けてみる&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;プラグインの使い方&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;すごくメンテされているものとほったらかされているものでまちまち&lt;/li&gt;&lt;li&gt;コミットやDL数を見てみる&lt;/li&gt;&lt;li&gt;TackScanerPlugin&lt;ul&gt;&lt;li&gt;キーワードを拾う(TODOなど)&lt;/li&gt;&lt;li&gt;最後に入れてみる&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;DickUsagePlugin&lt;ul&gt;&lt;li&gt;Jenkinsのディスク使用量を見る&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;JobConfigHistoryPlugin&lt;ul&gt;&lt;li&gt;設定ファイルのバックアップ、差分表示&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;プラグインのハック&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;エクステンションポイントを継承する&lt;ul&gt;&lt;li&gt;Notifierを継承すれば通知系の事ができる&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;mvnにおまじないを追加する&lt;/li&gt;&lt;li&gt;Jenkinsの公式Pluginが参考になる&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;実際にやってみる(Redmine)&lt;/h1&gt;
&lt;p&gt;メニューの一部を消してみる。&lt;/p&gt;
&lt;h2&gt;環境&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;Windows XP&lt;/li&gt;&lt;li&gt;Ruby 1.8.7&lt;/li&gt;&lt;li&gt;Redmine 1.0.0.stable (SQLite)&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;手順&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;はじめにRedmine Pluginのスケルトンを作成する。名前はdelete_menuとした&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;$ cd REDMINE_ROOT
$ ruby script\generate redmine_plugin delete_menu
./script/../config/../vendor/rails/railties/lib/rails/gem_dependency.rb:119:Warning: Gem::Dependency#version_requirements is deprecated and will be removed on or after August 2010.  Use #requirement
      create  vendor/plugins/redmine_delete_menu/app/controllers
      create  vendor/plugins/redmine_delete_menu/app/helpers
      create  vendor/plugins/redmine_delete_menu/app/models
      create  vendor/plugins/redmine_delete_menu/app/views
      create  vendor/plugins/redmine_delete_menu/db/migrate
      create  vendor/plugins/redmine_delete_menu/lib/tasks
      create  vendor/plugins/redmine_delete_menu/assets/images
      create  vendor/plugins/redmine_delete_menu/assets/javascripts
      create  vendor/plugins/redmine_delete_menu/assets/stylesheets
      create  vendor/plugins/redmine_delete_menu/lang
      create  vendor/plugins/redmine_delete_menu/config/locales
      create  vendor/plugins/redmine_delete_menu/test
      create  vendor/plugins/redmine_delete_menu/README.rdoc
      create  vendor/plugins/redmine_delete_menu/init.rb
      create  vendor/plugins/redmine_delete_menu/lang/en.yml
      create  vendor/plugins/redmine_delete_menu/config/locales/en.yml
      create  vendor/plugins/redmine_delete_menu/test/test_helper.rb&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;vendor/pluginにredmine_delete_menuというフォルダができている&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;$ ls
...
redmine_delete_menu/
...
$ cd redmine_delete_menu
$ ls
README.rdoc assets/     db/         lang/       test/
app/        config/     init.rb*    lib/&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;init.rbに例の一文を挿入&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;ruby&quot;&gt; Redmine::Plugin.register :redmine_delete_menu do
   ...
   
+  delete_menu_item :top_menu, :help
 end&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;そして起動&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;$ cd REDMINE_ROOT
$ ruby script\server -e production
=&amp;gt; Booting WEBrick
=&amp;gt; Rails 2.3.5 application starting on http://0.0.0.0:3000
./script/../config/../vendor/rails/railties/lib/rails/gem_dependency.rb:119:Warning: Gem::Dependency#version_requirements is deprecated and will be removed on or after August 2010.  Use #requirement
=&amp;gt; Call with -d to detach
=&amp;gt; Ctrl-C to shutdown server
[2012-05-28 19:15:50] INFO  WEBrick 1.3.1
[2012-05-28 19:15:50] INFO  ruby 1.8.7 (2010-12-23) [i386-mswin32]
[2012-05-28 19:15:50] INFO  WEBrick::HTTPServer#start: pid=4640 port=3000&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://localhost:3000&quot;&gt;http://localhost:3000&lt;/a&gt; にアクセスすると…おお！　消えてる！&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;環境その2&lt;/h2&gt;
&lt;p&gt;Ruby1.9、Redmine1.4でもやってみるかー。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Windows XP&lt;/li&gt;&lt;li&gt;Ruby 1.9.3&lt;/li&gt;&lt;li&gt;Redmine 1.4.0.stable (SQLite)&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;手順その2&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;いきなりgenerateしようとしたらbundle installしろと言われた&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;$ ruby script\generate redmine_plugin delete_menu
Some gems may need to be installed or updated.
Please run `bundle install --without development test`.&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;なのでbundle install&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;$ bundle install --without development test --path ./vendor/bundle
Fetching source index for http://rubygems.org/
Installing rake (0.9.2.2)
Installing activesupport (2.3.14)
Installing rack (1.1.3)
Installing actionpack (2.3.14)
Installing actionmailer (2.3.14)
Installing activerecord (2.3.14)
Installing activeresource (2.3.14)
Installing coderay (1.0.6)
Installing i18n (0.4.2)
Installing mysql2 (0.2.18)
Installing net-ldap (0.3.1)
Installing pg (0.13.2)
Installing rails (2.3.14)
Installing rmagick (2.13.1) with native extensions&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;rmagickが入らず止まりっぱなし……そういえば、rmagickは使わなければwithoutしてしまってもいいです的な事を言われていた気がするのでそれをプラス&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;$ bundle install --without development test rmagick --path ./vendor/bundle
Fetching source index for http://rubygems.org/
Using rake (0.9.2.2)
Using activesupport (2.3.14)
Using rack (1.1.3)
Using actionpack (2.3.14)
Using actionmailer (2.3.14)
Using activerecord (2.3.14)
Using activeresource (2.3.14)
Using coderay (1.0.6)
Using i18n (0.4.2)
Using mysql2 (0.2.18)
Using net-ldap (0.3.1)
Using pg (0.13.2)
Using rails (2.3.14)
Installing ruby-openid (2.1.8)
Installing sqlite3 (1.3.6)
Installing tzinfo (0.3.33)
Using bundler (1.0.21)
Your bundle is complete! It was installed into ./vendor/bundle&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;再度。先ほどbundlerを使ったのでbundle exec&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;$ bundle exec ruby script\generate redmine_plugin delete_menu
C:/redmine-1.4.0/vendor/bundle/ruby/1.9.1/gems/activesupport-2.3.14/lib/active_support/inflector.rb:3:in `&amp;lt;top (required)&amp;gt;&#39;: iconv will be deprecated in the future, use String#encode instead.
NOTE: Gem.source_index is deprecated, use Specification. It will be removed on or after 2011-11-01.
Gem.source_index called from C:/redmine-1.4.0/vendor/bundle/ruby/1.9.1/gems/rails-2.3.14/lib/rails/gem_dependency.rb:21.
NOTE: Dependency.new w/ a regexp is deprecated.
Dependency.new called from C:/redmine-1.4.0/vendor/bundle/ruby/1.9.1/gems/rails-2.3.14/lib/rails_generator/lookup.rb:211
NOTE: Gem.cache is deprecated, use Gem::source_index. It will be removed on or after 2011-08-01.
Gem.cache called from C:/redmine-1.4.0/vendor/bundle/ruby/1.9.1/gems/rails-2.3.14/lib/rails_generator/lookup.rb:212.
NOTE: Gem.source_index is deprecated, use Specification. It will be removed on or after 2011-11-01.
Gem.source_index called from C:/rubies/Ruby-193-p0/lib/ruby/1.9.1/rubygems.rb:1154.
NOTE: Gem::SourceIndex#search is deprecated with no replacement. It will be removed on or after 2011-11-01.
Gem::SourceIndex#search called from C:/redmine-1.4.0/vendor/bundle/ruby/1.9.1/gems/rails-2.3.14/lib/rails/vendor_gem_source_index.rb:119.
NOTE: Gem::SourceIndex#search is deprecated with no replacement. It will be removed on or after 2011-11-01.
Gem::SourceIndex#search called from C:/redmine-1.4.0/vendor/bundle/ruby/1.9.1/gems/rails-2.3.14/lib/rails/vendor_gem_source_index.rb:119.
NOTE: Gem.cache is deprecated, use Gem::source_index. It will be removed on or after 2011-08-01.
Gem.cache called from C:/redmine-1.4.0/vendor/bundle/ruby/1.9.1/gems/rails-2.3.14/lib/rails_generator/lookup.rb:234.
NOTE: Gem.source_index is deprecated, use Specification. It will be removed on or after 2011-11-01.
Gem.source_index called from C:/rubies/Ruby-193-p0/lib/ruby/1.9.1/rubygems.rb:1154.
NOTE: Gem::SourceIndex#each is deprecated with no replacement. It will be removed on or after 2011-11-01.
Gem::SourceIndex#each called from C:/redmine-1.4.0/vendor/bundle/ruby/1.9.1/gems/rails-2.3.14/lib/rails/vendor_gem_source_index.rb:123.
NOTE: Gem::SourceIndex#each is deprecated with no replacement. It will be removed on or after 2011-11-01.
Gem::SourceIndex#each called from C:/redmine-1.4.0/vendor/bundle/ruby/1.9.1/gems/rails-2.3.14/lib/rails/vendor_gem_source_index.rb:124.
      create  vendor/plugins/redmine_delete_menu/app/controllers
      create  vendor/plugins/redmine_delete_menu/app/helpers
      create  vendor/plugins/redmine_delete_menu/app/models
      create  vendor/plugins/redmine_delete_menu/app/views
      create  vendor/plugins/redmine_delete_menu/db/migrate
      create  vendor/plugins/redmine_delete_menu/lib/tasks
      create  vendor/plugins/redmine_delete_menu/assets/images
      create  vendor/plugins/redmine_delete_menu/assets/javascripts
      create  vendor/plugins/redmine_delete_menu/assets/stylesheets
      create  vendor/plugins/redmine_delete_menu/lang
      create  vendor/plugins/redmine_delete_menu/config/locales
      create  vendor/plugins/redmine_delete_menu/test
      create  vendor/plugins/redmine_delete_menu/README.rdoc
      create  vendor/plugins/redmine_delete_menu/init.rb
      create  vendor/plugins/redmine_delete_menu/config/locales/en.yml
      create  vendor/plugins/redmine_delete_menu/test/test_helper.rb&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;deprecateがやまほど出たけど、一応スケルトンは作れたみたい。で、init.rbを編集。ここは同じ&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;ruby&quot;&gt; Redmine::Plugin.register :redmine_delete_menu do
   ...
   
+  delete_menu_item :top_menu, :help
 end&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;で、起動。ここでもbundle exec&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;$ bundle exec ruby script\server -e production
C:/redmine-1.4.0/vendor/bundle/ruby/1.9.1/gems/activesupport-2.3.14/lib/active_support/inflector.rb:3:in `&amp;lt;top (required)&amp;gt;&#39;: iconv will be deprecated in the future, use String#encode instead.
=&amp;gt; Booting WEBrick
=&amp;gt; Rails 2.3.14 application starting on http://0.0.0.0:3000
NOTE: Gem.source_index is deprecated, use Specification. It will be removed on or after 2011-11-01.
Gem.source_index called from C:/redmine-1.4.0/vendor/bundle/ruby/1.9.1/gems/rails-2.3.14/lib/rails/gem_dependency.rb:21.
=&amp;gt; Call with -d to detach
=&amp;gt; Ctrl-C to shutdown server
[2012-05-28 20:03:32] INFO  WEBrick 1.3.1
[2012-05-28 20:03:32] INFO  ruby 1.9.3 (2011-10-30) [i386-mingw32]
[2012-05-28 20:03:32] INFO  WEBrick::HTTPServer#start: pid=3248 port=3000&lt;/pre&gt;
&lt;p&gt;1.4台でもいけた！&lt;/p&gt;
&lt;h1&gt;実際にプラグインを入れてみる(Jenkins)&lt;/h1&gt;
&lt;p&gt;Task Scanner Pluginを入れてみよう。&lt;/p&gt;
&lt;h2&gt;環境&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;Windows XP&lt;/li&gt;&lt;li&gt;Jenkins 1.450&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;手順&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;Jenkinsの管理 =&gt; プラグインの管理 =&gt; 利用可能タブ =&gt; Task Scanner Pluginをチェックしインストール&lt;ul&gt;&lt;li&gt;Static Code Analysis Plug-insも同時にDLされるみたい&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;再起動&lt;/li&gt;&lt;li&gt;Jenkinsプロジェクト =&gt; 設定 =&gt; ビルド後の処理 =&gt; 未解決タスクの集計&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f1&quot; title=&quot;ローカライズされてた&quot; name=&quot;fn1&quot;&gt;*1&lt;/a&gt;&lt;/span&gt;にチェック&lt;ul&gt;&lt;li&gt;集計対象: source/*.rst&lt;ul&gt;&lt;li&gt;今回はSphinxのドキュメントソース内のTODOを拾うので&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;集計対象外: source/*.py&lt;ul&gt;&lt;li&gt;conf.pyなどは除外する&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;タスクタグ 優先度 Normal: //TODO&lt;ul&gt;&lt;li&gt;ドキュメント内の//TODOを探してもらう。優先度は適当&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;高度な設定を開きデフォルトのエンコーディング: UTF-8&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;保存してビルド&lt;/li&gt;&lt;li&gt;一度ビルドするとJenkinsプロジェクトのメニューに【未解決タスク】のリンクが表示される&lt;ul&gt;&lt;li&gt;今回設定した//TODOがまとめられてる！&lt;/li&gt;&lt;li&gt;後、//TODO hogehogeとキーワードの後ろに何か書いておくとメッセージとしてどんなTODOなのかも表示される！&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;div class=&quot;footnote&quot;&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn1&quot; name=&quot;f1&quot;&gt;*1&lt;/a&gt;: ローカライズされてた&lt;/p&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>SlideShareのAPIを叩いてスライドをDLするRubyスクリプトをHerokuにデプロイした</title>
   <link href="http://gosyujin.github.io/2012/05/21/1337605575"/>
   <updated>2012-05-21T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2012/05/21/1337605575</id>
   <content type="html">&lt;h1&gt;あらすじ&lt;/h1&gt;
&lt;p&gt;slideshareを社内から閲覧する事を禁じられているので、ワンクッションおいてスライドのpptを落とせるようにしたい&lt;/p&gt;
&lt;h1&gt;参考サイト&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://www.slideshare.net/developers/documentation#get_slideshow&quot;&gt;SlideShare » Developer Documentation&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;とりあえず公式サイトを抑えておけばいけそう。&lt;/p&gt;
&lt;h1&gt;流れ&lt;/h1&gt;
&lt;h2&gt;API申請&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;slideshare -&gt; Developer &amp; APIのページからApply for API keyに移動&lt;/li&gt;&lt;li&gt;ログイン or 新規アカウント作成&lt;/li&gt;&lt;li&gt;Name、E-Mail、How do you want to use the API?を入力し送信。頑張って英文書く。&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;I want to get slideshare&#39;s slide from API.&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;送信されたメールに貼られている&lt;span class=&quot;deco&quot; style=&quot;font-weight:bold;&quot;&gt;API Key&lt;/span&gt;と&lt;span class=&quot;deco&quot; style=&quot;font-weight:bold;&quot;&gt;Shared Secret&lt;/span&gt;を控える&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;パラメータ&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;slideshare -&gt; Documentationを見ながら必要なパラメータを調べる&lt;/li&gt;&lt;/ul&gt;
&lt;table&gt;&lt;tr&gt;&lt;th&gt;api_key&lt;/th&gt;&lt;td&gt;さっきのAPI Key&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;ts&lt;/th&gt;&lt;td&gt;タイムスタンプ&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f1&quot; title=&quot;Set this to the current time in Unix TimeStamp format, to the nearest second(?).&quot; name=&quot;fn1&quot;&gt;*1&lt;/a&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;hash&lt;/th&gt;&lt;td&gt;さっきのShared Secretとこれから取得するtsでハッシュを作る&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f2&quot; title=&quot;Set this to the SHA1 hash of the concatenation of the shared secret and the timestamp (ts). i.e. SHA1 (sharedsecret + timestamp). The order of the terms in the concatenation is important.&quot; name=&quot;fn2&quot;&gt;*2&lt;/a&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;(username)&lt;/th&gt;&lt;td&gt;登録ID&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;(password)&lt;/th&gt;&lt;td&gt;パスワード&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;全然関係ないけど、Documentationのページ内にあるi.e.って単語を初めて見たのでググってみた。&lt;a href=&quot;http://www.masahiko.info/life/archives/000799.html&quot;&gt;論文中の「e.g.」「i.e.」の意味は何？ － Diary@一色政彦WebSite&lt;/a&gt; that is ... すなわちとかそういう意味らしい。e.g.で例えば、for example的な。&lt;/p&gt;
&lt;h1&gt;ソース&lt;/h1&gt;
&lt;p&gt;ソースはこんな感じ。&lt;/p&gt;
&lt;pre class=&quot;ruby&quot;&gt;require &#39;openssl&#39;
require &#39;uri&#39;
require &#39;net/http&#39;

url = &#39;http://www.slideshare.net/api/2/get_slideshow&#39;
param = Hash.new
param[&amp;quot;slideshow_url&amp;quot;] = &#39;http://www.slideshare.net/gishi/wicket-presentation&#39;
param[&amp;quot;api_key&amp;quot;] = &#39;XXXXXXXX&#39;
param[&amp;quot;sharedsecret&amp;quot;] = &#39;XXXXXXXX&#39;
# ts
param[&amp;quot;ts&amp;quot;] = Time.now.to_i.to_s
# hash
param[&amp;quot;hash&amp;quot;] = Digest::SHA1.hexdigest(param[&amp;quot;sharedsecret&amp;quot;]+param[&amp;quot;ts&amp;quot;])

uri = URI.parse(url)
Net::HTTP.new(uri.host).start do |http|
#Net::HTTP.new(uri.host, 80, ENV[&amp;quot;PROXY&amp;quot;], 8080).start do |http|
  uri_param = param.sort.map {|i|i.join(&#39;=&#39;)}.join(&#39;&amp;amp;&#39;)
  
  res = http.get(uri.path + &#39;?&#39; + uri_param)
  puts res.body
end&lt;/pre&gt;
&lt;p&gt;成功するとこんな感じの内容が返ってくる。&lt;/p&gt;
&lt;pre class=&quot;xml&quot;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
&amp;lt;Slideshow&amp;gt;
  &amp;lt;ID&amp;gt;579496&amp;lt;/ID&amp;gt;
  &amp;lt;Title&amp;gt;Wicket&amp;amp;#20307;&amp;amp;#39443;&amp;amp;#35527;&amp;lt;/Title&amp;gt;
  &amp;lt;Description&amp;gt;&amp;amp;#31532;1&amp;amp;#22238;Wicket&amp;amp;#21193;&amp;amp;#24375;&amp;amp;#20250;&amp;amp;#12398;&amp;amp;#12521;&amp;amp;#12452;&amp;amp;#12488;&amp;amp;#12491;&amp;amp;#12531;&amp;amp;#12464;&amp;amp;#12488;&amp;amp;#12540;&amp;amp;#12463;&amp;amp;#30330;&amp;amp;#34920;&amp;amp;#36039;&amp;amp;#26009;&amp;lt;/Description&amp;gt;
  &amp;lt;Status&amp;gt;2&amp;lt;/Status&amp;gt;
  &amp;lt;Username&amp;gt;gishi&amp;lt;/Username&amp;gt;
  &amp;lt;URL&amp;gt;http://www.slideshare.net/gishi/wicket-presentation&amp;lt;/URL&amp;gt;
  &amp;lt;ThumbnailURL&amp;gt;http://cdn.slidesharecdn.com/wicket-1220375587470160-8-thumbnail&amp;lt;/ThumbnailURL&amp;gt;
  &amp;lt;ThumbnailSmallURL&amp;gt;http://cdn.slidesharecdn.com/wicket-1220375587470160-8-thumbnail-2&amp;lt;/ThumbnailSmallURL&amp;gt;
  &amp;lt;Embed&amp;gt;&amp;amp;lt;div style=&amp;amp;quot;width:425px&amp;amp;quot; id=&amp;amp;quot;__ss_579496&amp;amp;quot;&amp;amp;gt;&amp;amp;lt;strong style=&amp;amp;quot;display:block;margin:12px 0 4px&amp;amp;quot;&amp;amp;gt;&amp;amp;lt;a href=&amp;amp;quot;http://www.slideshare.net/gishi/wicket-presentation&amp;amp;quot; title=&amp;amp;quot;Wicket&amp;amp;#20307;&amp;amp;#39443;&amp;amp;#35527;&amp;amp;quot;&amp;amp;gt;Wicket&amp;amp;#20307;&amp;amp;#39443;&amp;amp;#35527;&amp;amp;lt;/a&amp;amp;gt;&amp;amp;lt;/strong&amp;amp;gt;&amp;amp;lt;object id=&amp;amp;quot;__sse579496&amp;amp;quot; width=&amp;amp;quot;425&amp;amp;quot; height=&amp;amp;quot;355&amp;amp;quot;&amp;amp;gt;&amp;amp;lt;param name=&amp;amp;quot;movie&amp;amp;quot; value=&amp;amp;quot;http://static.slidesharecdn.com/swf/ssplayer2.swf?doc=wicket-1220375587470160-8&amp;amp;amp;stripped_title=wicket-presentation&amp;amp;amp;userName=gishi&amp;amp;quot; /&amp;amp;gt;&amp;amp;lt;param name=&amp;amp;quot;allowFullScreen&amp;amp;quot; value=&amp;amp;quot;true&amp;amp;quot;/&amp;amp;gt;&amp;amp;lt;param name=&amp;amp;quot;allowScriptAccess&amp;amp;quot; value=&amp;amp;quot;always&amp;amp;quot;/&amp;amp;gt;&amp;amp;lt;param name=&amp;amp;quot;wmode&amp;amp;quot; value=&amp;amp;quot;transparent&amp;amp;quot;/&amp;amp;gt;&amp;amp;lt;embed name=&amp;amp;quot;__sse579496&amp;amp;quot; src=&amp;amp;quot;http://static.slidesharecdn.com/swf/ssplayer2.swf?doc=wicket-1220375587470160-8&amp;amp;amp;stripped_title=wicket-presentation&amp;amp;amp;userName=gishi&amp;amp;quot; type=&amp;amp;quot;application/x-shockwave-flash&amp;amp;quot; allowscriptaccess=&amp;amp;quot;always&amp;amp;quot; allowfullscreen=&amp;amp;quot;true&amp;amp;quot; wmode=&amp;amp;quot;transparent&amp;amp;quot; width=&amp;amp;quot;425&amp;amp;quot; height=&amp;amp;quot;355&amp;amp;quot;&amp;amp;gt;&amp;amp;lt;/embed&amp;amp;gt;&amp;amp;lt;/object&amp;amp;gt;&amp;amp;lt;div style=&amp;amp;quot;padding:5px 0 12px&amp;amp;quot;&amp;amp;gt;View more &amp;amp;lt;a href=&amp;amp;quot;http://www.slideshare.net/&amp;amp;quot;&amp;amp;gt;presentations&amp;amp;lt;/a&amp;amp;gt; from &amp;amp;lt;a href=&amp;amp;quot;http://www.slideshare.net/gishi&amp;amp;quot;&amp;amp;gt;Hiroto Yamakawa&amp;amp;lt;/a&amp;amp;gt;.&amp;amp;lt;/div&amp;amp;gt;&amp;amp;lt;/div&amp;amp;gt;&amp;lt;/Embed&amp;gt;
  &amp;lt;Created&amp;gt;Tue Sep 02 10:14:12 -0500 2008&amp;lt;/Created&amp;gt;
  &amp;lt;Updated&amp;gt;Tue Sep 02 10:16:15 -0500 2008&amp;lt;/Updated&amp;gt;
  &amp;lt;Language&amp;gt;ja&amp;lt;/Language&amp;gt;
  &amp;lt;Format&amp;gt;ppt&amp;lt;/Format&amp;gt;
  &amp;lt;Download&amp;gt;1&amp;lt;/Download&amp;gt;
  &amp;lt;DownloadUrl&amp;gt;http://s3.amazonaws.com/ppt-download/wicket-1220375587470160-8.ppt?response-content-disposition=attachment&amp;amp;amp;Signature=ABs151smgWZ9213%2FyFq81fnMc6A%3D&amp;amp;amp;Expires=1328606581&amp;amp;amp;AWSAccessKeyId=AKIAJLJT267DEGKZDHEQ&amp;lt;/DownloadUrl&amp;gt;
  &amp;lt;SlideshowType&amp;gt;0&amp;lt;/SlideshowType&amp;gt;
  &amp;lt;InContest&amp;gt;0&amp;lt;/InContest&amp;gt;
&amp;lt;/Slideshow&amp;gt;&lt;/pre&gt;
&lt;p&gt;おー取れた。んで、xmlの中のDownloadUrlからpptをゲットできた！　これをSinatraでWebアプリケーションにしてHerokuにデプロイすれば職場から行けるかな！？&lt;/p&gt;
&lt;p&gt;→いけた！　自分の中ではお役立ち。&lt;a href=&quot;http://tycoon-slidedown.heroku.com/&quot;&gt;http://tycoon-slidedown.heroku.com/&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;footnote&quot;&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn1&quot; name=&quot;f1&quot;&gt;*1&lt;/a&gt;: Set this to the current time in Unix TimeStamp format, to the nearest second(?).&lt;/p&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn2&quot; name=&quot;f2&quot;&gt;*2&lt;/a&gt;: Set this to the SHA1 hash of the concatenation of the shared secret and the timestamp (ts). i.e. SHA1 (sharedsecret + timestamp). The order of the terms in the concatenation is important.&lt;/p&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>BPStudy#57に参加しました #bpstudy</title>
   <link href="http://gosyujin.github.io/2012/04/28/1335575351"/>
   <updated>2012-04-28T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2012/04/28/1335575351</id>
   <content type="html">&lt;h1&gt;詳細: &lt;a href=&quot;http://connpass.com/event/365/&quot;&gt;BPStudy#57 - connpass&lt;/a&gt;&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;例の特許庁最適化計画プロジェクトを通してITビジネスの仕方を変えよう&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;というなかなかに興味深い内容だったので参加。&lt;/p&gt;
&lt;h1&gt;第一部 新たな価値観へのITビジネス視点での転換 萩本順三さん&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;政治的な話は無し&lt;/li&gt;&lt;li&gt;私が技術顧問として最適化計画を見た時、「古いな～」と思った&lt;ul&gt;&lt;li&gt;問題があるプロジェクトに入り込んで、どうするかというのが仕事&lt;ul&gt;&lt;li&gt;火を吹いた時に入り込んでいく =&gt; はじめにオフィスへ入り込んで資料を見た時「これやめないんですか？」と聞いたほど&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;かなりはじめの段階からダメと周りの人にも言っていたが……&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;何が問題か？&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;技術を特許庁の業務にどう活かすかの具体性がない&lt;ul&gt;&lt;li&gt;xml使ったからどうなんの？&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;業務モデルを1000名で書いてどうすんの？&lt;/li&gt;&lt;li&gt;むしろ主役は特許庁なのでは？ =&gt; 放り投げ主義&lt;/li&gt;&lt;li&gt;業務モデルは発注者の理解と覚悟の元作成するはずなのに！&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;根底の問題は？&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;IT業界の負のビジネス慣習&lt;ul&gt;&lt;li&gt;ユーザ、開発両者のスキル不足&lt;ul&gt;&lt;li&gt;お客さんに教えながらモデル化をしていくものなのに&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;コスト配分が開発者寄りになり、たとえいいものを作ったとしてもユーザさんが使いこなせない&lt;/li&gt;&lt;li&gt;うまく要件を引き出せないと、正しくないシステムができてしまう&lt;/li&gt;&lt;li&gt;是正しなければ&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;意識改革 コタツモデル&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;ユーザから話を聞いてシステム開発に入るが、ユーザは必ず正しいのか&lt;/li&gt;&lt;li&gt;以下の3つから&quot;将来&quot;の価値を取りに行く視点を持つ&lt;ul&gt;&lt;li&gt;戦略的視点(偉い人)&lt;/li&gt;&lt;li&gt;業務問題解決の視点(業務担当の偉い人)&lt;/li&gt;&lt;li&gt;IT活用の視点(開発の出来る人)&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;しかし、偉い人は現在の価値を取りに行きがちだし、業務担当の偉い人は業務問題解決の視点しか持っていないことが多い&lt;/li&gt;&lt;li&gt;戦略的視点から業務解決、IT活用をしていくと、偉い人も「あ、俺業務知らなかったな」と感じで同じコタツに入ってくれる =&gt; 要求が収束する&lt;/li&gt;&lt;li&gt;Howの手探り&lt;ul&gt;&lt;li&gt;ビジネス戦略から&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Howの突き上げ&lt;ul&gt;&lt;li&gt;テクノロジーを使うともしかしたら業務がいらなくなるかもしれない =&gt; 戦略に結びつける&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;最適化&lt;ul&gt;&lt;li&gt;切ってつなげて並行でスピーディに走らせる&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;常に価値で問う&lt;ul&gt;&lt;li&gt;設計ドキュメントなどは誰に対して価値があるのかを問う。説明できなければいらないじゃない？(ただし、技術的に説明できない場合もある)&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;自分が持っている知識をお客さんに魅力的に見えるものとする&lt;/li&gt;&lt;li&gt;自分のやりたいこと(How)を実現していこう(What)&lt;ul&gt;&lt;li&gt;自動車メーカ、ファッション業界ではできているのになぜソフトウェア業界でできない&lt;/li&gt;&lt;li&gt;システム要求の牢屋に閉じ込められていたらできっこない&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;5年後のIT業界&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;巨大システムの開発(一枚岩)からアクセサリ化に&lt;ul&gt;&lt;li&gt;コーディネート化する必要がある&lt;/li&gt;&lt;li&gt;開発者が一番強い。なぜならHowを握っているから&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;ピラミッド型組織から分散自立型組織に&lt;ul&gt;&lt;li&gt;優秀な人は残して優秀じゃない人は返す、返された人は価値に敏感になれるように&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;学び、勇気を持って行動してください&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;第二部 執筆プロジェクトの継続的ビルド &lt;a href=&quot;https://twitter.com/#!/shimizukawa&quot;&gt;@shimizukawa&lt;/a&gt;さん、&lt;a href=&quot;https://twitter.com/#!/cactusman&quot;&gt;@cactusman&lt;/a&gt;さん&lt;/h1&gt;
&lt;h2&gt;この本はSphinxで書きました&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;執筆はreST&lt;/li&gt;&lt;li&gt;社内レビューはhtml&lt;/li&gt;&lt;li&gt;社外レビューはpdf&lt;ul&gt;&lt;li&gt;見た目を自由に変えられる&lt;/li&gt;&lt;li&gt;見た目を変えると誤記などに気づける&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;編集さんに提出&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;執筆者から編集さん(秀和システム)に渡すときに、秀和システムさんのフォーマットに合わせる必要がある&lt;ul&gt;&lt;li&gt;Sphinxで要求されたフォーマットでビルドする(作るのに2日かかったが使いまわせるかなと思ったのでまあいいかな？)&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;が、結局お蔵入りに&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;まとめ&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;提出現行の明確な仕様を決めておけばよかった&lt;/li&gt;&lt;li&gt;編集と差分管理しやすいテキストで&lt;/li&gt;&lt;li&gt;レビュは別のビューで&lt;/li&gt;&lt;li&gt;環境は自動化で&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;Jenkins&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;Jenkinsのプラグインで文中のTODOを拾える&lt;ul&gt;&lt;li&gt;TODOの状態がグラフでわかる！&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;■■のススメ &lt;a href=&quot;https://twitter.com/#!/urasoko&quot;&gt;@urasoko&lt;/a&gt;さん&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;以前高橋メソッドを使いLTで10分、今回は5分を切る&lt;/li&gt;&lt;li&gt;SIer(大規模)につとめ、普段は調整等のお仕事をしていた……が、4/末日に「選職」しました&lt;ul&gt;&lt;li&gt;「小さなチーム、大きな仕事」に感銘を受けた&lt;/li&gt;&lt;li&gt;社会に何を求めるか、どうありたいか、何を成したいか&lt;/li&gt;&lt;li&gt;会社の上でではなく、社会の上で選び続ける&lt;/li&gt;&lt;li&gt;作りたいのは技術集団なのか、役人集団なのか&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;結局LTは10分近く……&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;懇親会で萩本さんから、「御社の偉い人にも今回と同じような話する機会があったよ、結構感銘を受けてた(意訳)」と聞き衝撃を受けた。多分ホントにエライ人しかしらないんじゃないかなぁ。&lt;/p&gt;
&lt;p&gt;ともあれ、萩本さんがFacebookで要求開発アライアンスの資料も公開(&lt;a href=&quot;http://www.slideshare.net/kent4989/ss-12710218&quot;&gt;要求開発の発展と展開、そして課題&lt;/a&gt;)されています。BPStudyの資料もアップされるとの事だった。これ読んで下から突き上げてみようかなぁ。&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Pro Gitと入門Gitと入門gitと実用GitでGitの復習 無名ブランチ(detached HEAD)からの復活編</title>
   <link href="http://gosyujin.github.io/2012/04/24/1335270486"/>
   <updated>2012-04-24T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2012/04/24/1335270486</id>
   <content type="html">&lt;h1&gt;前回までのあらすじ&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;2012-03-05-1330951640&quot;&gt;2012-03-05-1330951640&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;2012-03-11-1331472478&quot;&gt;2012-03-11-1331472478&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;2012-03-15-1331816663&quot;&gt;2012-03-15-1331816663&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;2012-04-10-1334058674&quot;&gt;2012-04-10-1334058674&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;2012-04-23-1335185906&quot;&gt;2012-04-23-1335185906&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;参考&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://progit.org/&quot;&gt;Git - Book&lt;/a&gt;&lt;/li&gt;&lt;li&gt;入門Git&lt;/li&gt;&lt;li&gt;入門git&lt;/li&gt;&lt;li&gt;実用Git&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;無名ブランチ(detached HEAD)とは&lt;/h1&gt;
&lt;p&gt;要約すると&lt;span class=&quot;deco&quot; style=&quot;font-weight:bold;&quot;&gt;「過去のコミットの状態を眺めるための&quot;便利機能&quot;なのでここに永続的な変更をするなんてとんでもない！」&lt;/span&gt;という事らしい。&lt;/p&gt;
&lt;h2&gt;無名ブランチ状態で作業するとどうなるか&lt;/h2&gt;
&lt;p&gt;ちょっと「ブランチにいると思いこんだまま無名ブランチで作業し、さーてmasterブランチに戻ってmergeするかぁ……はぁ！？」な状況を作り出してみる。&lt;/p&gt;
&lt;p&gt;まずは無名ブランチの準備としてnobraブランチを作る。(これ以降の作業は、本当はnobraブランチでやっていきたいと思っている)&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git checkout -b nobra
Switched to a new branch &#39;nobra&#39;

$ touch nobra
$ git add nobra
$ git commit -m &amp;quot;Add nobra&amp;quot;
[nobra d62e4cb] Add nobra
 0 files changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 nobra

$ git g
 * d62e4cb  (HEAD, nobra, master) Add nobra
 * 7ab5db8  (topic) Add message line 3
 * cf6c3d6  Add message line 2
 * 38f8aff  Add message line 1
 * 93b8e52  Add message line 4
 * 0b91a9f  Add message line 5
 * 15f636f  Add line number
 * fa9eabc  first commit

$ git br
   master d62e4cb Add nobra
 * nobra  d62e4cb Add nobra
   topic  7ab5db8 Add message line 3&lt;/pre&gt;
&lt;p&gt;次に、このnobraブランチのSHA1を指定してcheckoutする。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git ch d62e4cb
Note: checking out &#39;d62e4cb&#39;.

You are in &#39;detached HEAD&#39; state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at d62e4cb... Add nobra&lt;/pre&gt;
&lt;p&gt;detached HEAD状態だよと教えてくれているようだ。このリビジョンのファイル一覧？　を見渡したり、実験的な変更やコミットができる。チェックアウトすれば他のブランチに影響を与えすにこの状態を作れる。変更を保持するために新しいブランチを作りたいなら、checkoutコマンドに-bつけて実行すればいいよ……って感じなのかな。ブランチはno branchと表示される。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git br
 * (no branch) d62e4cb Add nobra
   master      d62e4cb Add nobra
   nobra       d62e4cb Add nobra
   topic       7ab5db8 Add message line 3&lt;/pre&gt;
&lt;p&gt;この無名ブランチに対し変更をコミット。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ echo &amp;quot;no branch&amp;quot; &amp;gt;&amp;gt; nobra
$ git add nobra
$ git com &amp;quot;Add message nobra&amp;quot;
[detached HEAD e45c786] Add message nobra
 1 files changed, 1 insertions(+), 0 deletions(-)
 
$ echo &amp;quot;detached HEAD&amp;quot; &amp;gt;&amp;gt; nobra
$ git add nobra
$ git com &amp;quot;Add message nobra&amp;quot;
[detached HEAD 3aec83c] Add message nobra
 1 files changed, 1 insertions(+), 0 deletions(-)&lt;/pre&gt;
&lt;p&gt;グラフで見るとe45c786, 3aec83cがもくもくと作られている。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git g
 * 3aec83c  (HEAD) Add message nobra
 * e45c786  Add message nobra
 * d62e4cb  (nobra, master) Add nobra
 * 7ab5db8  (topic) Add message line 3
 * cf6c3d6  Add message line 2
 * 38f8aff  Add message line 1
 * 93b8e52  Add message line 4
 * 0b91a9f  Add message line 5
 * 15f636f  Add line number
 * fa9eabc  first commit&lt;/pre&gt;
&lt;p&gt;さーて、masterにもどって変更をmergeするかー。&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f1&quot; title=&quot;このPrevious HEAD position was ...というメッセージは無名ブランチからチェックアウトしないと表示されないようだ&quot; name=&quot;fn1&quot;&gt;*1&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git checkout master
Previous HEAD position was 3aec83c... Add message nobra
Switched to branch &#39;master&#39;&lt;/pre&gt;
&lt;p&gt;グラフを確認するとd62e4cb(masterブランチ)が先頭になっている……だと……。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git g
 * d62e4cb  (HEAD, nobra, master) Add nobra
 * 7ab5db8  (topic) Add message line 3
 * cf6c3d6  Add message line 2
 * 38f8aff  Add message line 1
 * 93b8e52  Add message line 4
 * 0b91a9f  Add message line 5
 * 15f636f  Add line number
 * fa9eabc  first commit&lt;/pre&gt;
&lt;p&gt;さっきの変更どこいったんだ！　&lt;/p&gt;
&lt;h2&gt;無名ブランチの救出&lt;/h2&gt;
&lt;p&gt;コンソールを上へ上へ辿って行けばもしかしたら作業ログが残っていて、そこから無名ブランチになってしまったコミットを特定できるかもしれないけど、ここではgit reflogを使って救済してみる。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git reflog
...
d62e4cb HEAD@{6}: checkout: moving from 3aec83cdbfea0b1e96cf3c48937ab84eae1f4ec0 to nobra
3aec83c HEAD@{7}: commit: Add message nobra
e45c786 HEAD@{8}: commit: Add message nobra
...&lt;/pre&gt;
&lt;p&gt;見えなくなってしまったコミットは(今は)HEAD@{7}にあった！(checkoutしたりcommitすれば1ずつログがずれるから)　という事で、この変更が必要だった場合は、ここからトピックブランチでも作成して救出してやればよい。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git g
 * d62e4cb  (HEAD, nobra, master) Add nobra
 * 7ab5db8  (topic) Add message line 3
 * cf6c3d6  Add message line 2
 * 38f8aff  Add message line 1
 * 93b8e52  Add message line 4
 * 0b91a9f  Add message line 5
 * 15f636f  Add line number
 * fa9eabc  first commit&lt;/pre&gt;
&lt;p&gt;reflogで消えたコミットを確認する。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git reflog
...
d62e4cb HEAD@{8}: checkout: moving from 3aec83cdbfea0b1e96cf3c48937ab84eae1f4ec0 to nobra
3aec83c HEAD@{9}: commit: Add message nobra
e45c786 HEAD@{10}: commit: Add message nobra
d62e4cb HEAD@{11}: checkout: moving from nobra to d62e4cb&lt;/pre&gt;
&lt;p&gt;今はHEAD@{9}になっている。nobraブランチをうつしちゃおう。(新しいブランチを作成してもよい)&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git branch --f nobra HEAD@{9}

$ git g
 * 3aec83c  (nobra) Add message nobra
 * e45c786  Add message nobra
 * d62e4cb  (HEAD, master) Add nobra
 * 7ab5db8  (topic) Add message line 3
 * cf6c3d6  Add message line 2
 * 38f8aff  Add message line 1
 * 93b8e52  Add message line 4
 * 0b91a9f  Add message line 5
 * 15f636f  Add line number
 * fa9eabc  first commit&lt;/pre&gt;
&lt;p&gt;3aec..が見えるようになった！　で、merge。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git merge nobra
Updating d62e4cb..3aec83c
Fast-forward
 nobra |    2 ++
 1 files changed, 2 insertions(+), 0 deletions(-)

$ git g
 * 3aec83c  (HEAD, nobra, master) Add message nobra
 * e45c786  Add message nobra
 * d62e4cb  Add nobra
 * 7ab5db8  (topic) Add message line 3
 * cf6c3d6  Add message line 2
 * 38f8aff  Add message line 1
 * 93b8e52  Add message line 4
 * 0b91a9f  Add message line 5
 * 15f636f  Add line number
 * fa9eabc  first commit&lt;/pre&gt;
&lt;p&gt;救出完了！&lt;/p&gt;
&lt;div class=&quot;footnote&quot;&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn1&quot; name=&quot;f1&quot;&gt;*1&lt;/a&gt;: このPrevious HEAD position was ...というメッセージは無名ブランチからチェックアウトしないと表示されないようだ&lt;/p&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>Pro Gitと入門Gitと入門gitと実用GitとGit道場#1でGitの復習 rebase編</title>
   <link href="http://gosyujin.github.io/2012/04/23/1335185906"/>
   <updated>2012-04-23T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2012/04/23/1335185906</id>
   <content type="html">&lt;h1&gt;前回までのあらすじ&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;2012-03-05-1330951640&quot;&gt;2012-03-05-1330951640&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;2012-03-11-1331472478&quot;&gt;2012-03-11-1331472478&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;2012-03-15-1331816663&quot;&gt;2012-03-15-1331816663&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;2012-04-10-1334058674&quot;&gt;2012-04-10-1334058674&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;2012-04-22-1335108555&quot;&gt;2012-04-22-1335108555&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;参考&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://progit.org/&quot;&gt;Git - Book&lt;/a&gt;&lt;/li&gt;&lt;li&gt;入門Git&lt;/li&gt;&lt;li&gt;入門git&lt;/li&gt;&lt;li&gt;実用Git &lt;span class=&quot;deco&quot; style=&quot;color:#FF0000;&quot;&gt;New !!&lt;/span&gt;&lt;/li&gt;&lt;li&gt;Git道場#1 講義 &lt;a href=&quot;http://speakerdeck.com/u/ogawa/p/git&quot;&gt;http://speakerdeck.com/u/ogawa/p/git&lt;/a&gt; &lt;span class=&quot;deco&quot; style=&quot;color:#FF0000;&quot;&gt;New !!&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;rebaseとは&lt;/h1&gt;
&lt;blockquote&gt;&lt;p&gt;入門git P126&lt;/p&gt;&lt;p&gt;土台の置き換え(リベース)にはgit rebaseコマンドを使う。&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;実用Git P176&lt;/p&gt;&lt;p&gt;一連のコミットのもととなるもの(基点)を変更する際に使います。&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Git道場 講義&lt;/p&gt;&lt;p&gt;コミットをかぶせる事&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f1&quot; title=&quot;Git道場で実施したのはpull --rebaseだけど基本は同じはず&quot; name=&quot;fn1&quot;&gt;*1&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;コミットの基を変更すると。&lt;/p&gt;
&lt;h2&gt;パターン1 一般的な？場合(前方移植(forward-port))&lt;/h2&gt;
&lt;p&gt;Git道場で繰り返したパターンに近いかな。こういうブランチを作る。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;       1---2---3(topic)
      /
A---B---C---D(master)&lt;/pre&gt;
&lt;p&gt;まずは1-5行目にそれぞれ1-5と入力したファイルを用意。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ touch num
$ git add num
$ git commit -am&amp;quot;first commit&amp;quot;
[master (root-commit) fa9eabc] first commit
 0 files changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 num

$ vi num
$ cat num
$ git commit -am &amp;quot;Add line number&amp;quot;
[master 15f636f] Add line number
 1 files changed, 5 insertions(+), 0 deletions(-)

$ git g
 * 15f636f  (HEAD, master) Add line number
 * fa9eabc  first commit&lt;/pre&gt;
&lt;p&gt;次にtopicブランチを作成しを育てる。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ vi num
$ cat num
1 git add
2
3
4
5
$ git commit -am &amp;quot;Add message line 1&amp;quot;
[topic 29d901e] Add message line 1
 1 files changed, 1 insertions(+), 1 deletions(-)

$ vi num
$ cat num
1 git add
2 git commit
3
4
5
$ git commit -am &amp;quot;Add message line 2&amp;quot;
[topic 0b89cc2] Add message line 2
 1 files changed, 1 insertions(+), 1 deletions(-)

$ vi num
$ cat num
1 git add
2 git commit
3 git rebase
4
5
$ git commit -am &amp;quot;Add message line 3&amp;quot;
[topic 2588a24] Add message line 3
 1 files changed, 1 insertions(+), 1 deletions(-)


$ git g
 * 2588a24  (HEAD, topic) Add message line 3
 * 0b89cc2  Add message line 2
 * 29d901e  Add message line 1
 * 15f636f  (master) Add line number
 * fa9eabc  first commit&lt;/pre&gt;
&lt;p&gt;masterに戻り、同じくファイルを編集。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git chm
Switched to branch &#39;master&#39;

$ vi num
$ cat num
1
2
3
4
5 git add from_master
$ git commit -am &amp;quot;Add message line 5&amp;quot;
[master 0b91a9f] Add message line 5
 1 files changed, 1 insertions(+), 1 deletions(-)

$ vi num
$ cat num
1
2
3
4 git commit from_master
5 git add from_master
$ git commit -am &amp;quot;Add message line 4&amp;quot;
[master 93b8e52] Add message line 4
 1 files changed, 1 insertions(+), 1 deletions(-)

$ git g
D  * 93b8e52  (HEAD, master) Add message line 4
C  * 0b91a9f  Add message line 5
 3 | * 2588a24  (topic) Add message line 3
 2 | * 0b89cc2  Add message line 2
 1 | * 29d901e  Add message line 1
   |/
B  * 15f636f  Add line number
A  * fa9eabc  first commit&lt;/pre&gt;
&lt;p&gt;各コミットをABCD123とすると、こう。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;       1---2---3(topic)
      /
A---B---C---D(master)&lt;/pre&gt;
&lt;p&gt;そして、topicブランチの変更をmasterブランチへ&quot;かぶせる&quot;&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git ch topic
Switched to branch &#39;topic&#39;

$ git rebase master
First, rewinding head to replay your work on top of it...
Applying: Add message line 1
Using index info to reconstruct a base tree...
&amp;lt;stdin&amp;gt;:11: trailing whitespace.
1 git add
warning: 1 line adds whitespace errors.
Falling back to patching base and 3-way merge...
Auto-merging num
Applying: Add message line 2
Using index info to reconstruct a base tree...
&amp;lt;stdin&amp;gt;:12: trailing whitespace.
2 git commit
warning: 1 line adds whitespace errors.
Falling back to patching base and 3-way merge...
Auto-merging num
Applying: Add message line 3
Using index info to reconstruct a base tree...
&amp;lt;stdin&amp;gt;:13: trailing whitespace.
3 git rebase
warning: 1 line adds whitespace errors.
Falling back to patching base and 3-way merge...
Auto-merging num
CONFLICT (content): Merge conflict in num
Failed to merge in the changes.
Patch failed at 0003 Add message line 3

When you have resolved this problem run &amp;quot;git rebase --continue&amp;quot;.
If you would prefer to skip this patch, instead run &amp;quot;git rebase --skip&amp;quot;.
To restore the original branch and stop rebasing run &amp;quot;git rebase --abort&amp;quot;.&lt;/pre&gt;
&lt;p&gt;途中でコンフリクトしたけど、内部ではこうなっている。HEADは今ここ。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;topicブランチの一つ目の変更をmasterブランチに適用&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;       1---2---3(topic)
      /
A---B---C---D(master)---1&#39;(HEAD)&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;topicブランチの二つ目の変更をmasterブランチに適用&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;       1---2---3(topic)
      /
A---B---C---D(master)---1&#39;---2&#39;(HEAD)&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;topicブランチの三つ目の変更をmasterブランチに適用しようとしてコンフリクト&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;       1---2---3(topic)
      /
A---B---C---D(master)---1&#39;---2&#39;---3&#39;(HEAD)&lt;/pre&gt;
&lt;p&gt;コンフリクト発生時、グラフはこうなっている。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git g
 * cf6c3d6  (HEAD) Add message line 2
 * 38f8aff  Add message line 1
 * 93b8e52  (master) Add message line 4
 * 0b91a9f  Add message line 5
 | * 2588a24  (topic) Add message line 3
 | * 0b89cc2  Add message line 2
 | * 29d901e  Add message line 1
 |/
 * 15f636f  Add line number
 * fa9eabc  first commit&lt;/pre&gt;
&lt;p&gt;Add message line 1と2がmasterブランチから生えてる、イコールmasterブランチにtopicブランチの変更(二つ)がコミットされている。一個ずつ変更を適用してコミットとしているので、もとのtopicブランチとSHA1値が変わっている。&lt;/p&gt;
&lt;p&gt;最後の変更をコミットしようとしたらコンフリクトしたので、直す。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ vi num
$ git add num
$ git rebase --continue
Applying: Add message line 3&lt;/pre&gt;
&lt;p&gt;rebaseが無事終了。グラフを見てみると…。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git g
 * 7ab5db8  (HEAD, topic) Add message line 3
 * cf6c3d6  Add message line 2
 * 38f8aff  Add message line 1
 * 93b8e52  (master) Add message line 4
 * 0b91a9f  Add message line 5
 * 15f636f  Add line number
 * fa9eabc  first commit&lt;/pre&gt;
&lt;p&gt;masterブランチとtopicブランチが一直線になった。旧topicブランチは変更が適用されたという事で削除されている。最終的にはこうなる。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;A---B---C---D(master)---1&#39;---2&#39;---3&#39;(HEAD, topic)&lt;/pre&gt;
&lt;p&gt;一連の流れのreflogはこんな感じ。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;7ab5db8 HEAD@{0}: rebase: Add message line 3           # 一つずつ変更を適用
cf6c3d6 HEAD@{1}: rebase: Add message line 2           # 一つずつ変更を適用
38f8aff HEAD@{2}: rebase: Add message line 1           # 一つずつ変更を適用
93b8e52 HEAD@{3}: checkout: moving from topic to 93b8e52... # rebaseが勝手に無名ブランチ(masterの所)へcheckout
2588a24 HEAD@{4}: checkout: moving from master to topic     # rebaseのため自力でcheckoutした&lt;/pre&gt;
&lt;h2&gt;パターン2 rebaseしたいブランチに依存しているブランチがある場合&lt;/h2&gt;
&lt;p&gt;これを見てまたrebase怖いと思ってしまった。内容を見てみる。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;           x---y(subdev)
          /
   1---2---3(dev)
  /
A---B---C(master)&lt;/pre&gt;
&lt;p&gt;こういうブランチがあった時に、devをrebaseするとどうなるかという事。なるかどうかは別にして、git rebase master devで下記のようになってくれるとうれしい。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;                             x&#39;---y&#39;(subdev)
                            /
A---B---C(master)---1&#39;---2&#39;---3&#39;(dev)&lt;/pre&gt;
&lt;p&gt;だが、実態はそうではない。以下で試してみる。まず準備。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;#devブランチを作成
$ git chb dev
$ touch newfeature
$ git add newfeature
$ git commit -am&amp;quot;Add newfeature&amp;quot;
$ echo &amp;quot;feature is ...&amp;quot; &amp;gt;&amp;gt; newfeature
$ git commit -am &amp;quot;Add message line 1&amp;quot;
#devブランチにサブのブランチを作成し育てる
$ git chb subdev
$ echo &amp;quot;sub module now&amp;quot; &amp;gt;&amp;gt; newfeature
$ git commit -am &amp;quot;Add message line 2(sub module)&amp;quot;
$ echo &amp;quot;sub module now 2&amp;quot; &amp;gt;&amp;gt; newfeature
$ git commit -am &amp;quot;Add message line 3(sub module)&amp;quot;
#devブランチに戻り育てる
$ git ch dev
$ echo &amp;quot;new feature end&amp;quot; &amp;gt;&amp;gt; newfeature
$ git commit -am &amp;quot;Add message line 2&amp;quot;
#masterブランチに戻り育てる
$ git chm
$ echo &amp;quot;feature add&amp;quot; &amp;gt;&amp;gt; num
$ git commit -am &amp;quot;Modify num&amp;quot;
$ echo &amp;quot;feature add 2&amp;quot; &amp;gt;&amp;gt; num
$ git commit -am &amp;quot;Modify num 2&amp;quot;&lt;/pre&gt;
&lt;p&gt;で、今のグラフ。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git g
  y * ebdc7e7  (subdev) Add message line 3(sub module)
C   | * 18ac45f  (HEAD, master) Modify num 2
B   | * a43a699  Modify num
 3  | | * a3f65de  (dev) Add message line 2
  x * | | f473f19  Add message line 2(sub module)
    | |/
    |/|
 2  * | cf36abe  Add message line 1
 1  * | 43b3504  Add newfeature
    |/
A   * 3aec83c  (nobra) Add message nobra&lt;/pre&gt;
&lt;p&gt;rebase開始。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git rebase master dev
First, rewinding head to replay your work on top of it...
Applying: Add newfeature
Applying: Add message line 1
Applying: Add message line 2&lt;/pre&gt;
&lt;p&gt;グラフはこうなる。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git g
 3&#39;  * 948e1a4  (HEAD, dev) Add message line 2
 2&#39;  * 0bc3e36  Add message line 1
 1&#39;  * ae15a29  Add newfeature
   y | * ebdc7e7  (subdev) Add message line 3(sub module)
C    * | 18ac45f  (master) Modify num 2
B    * | a43a699  Modify num
   x | * f473f19  Add message line 2(sub module)
 2   | * cf36abe  Add message line 1
 1   | * 43b3504  Add newfeature
     |/
A    * 3aec83c  (nobra) Add message nobra&lt;/pre&gt;
&lt;p&gt;(ブランチが)すごく…多いです。こうなった。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;           x---y(subdev)
          /
   1---2--
  /
A---B---C(master)---1&#39;---2&#39;---3&#39;(dev)&lt;/pre&gt;
&lt;p&gt;dev(1,2,3)はきちんと適用された。が、subdev(x,y)は適用されていない。ので1,2,x,yは残っている。(3はdevをrebaseし、subdevから到達できないのでいつもどおり削除されている)&lt;/p&gt;
&lt;p&gt;むむむ。しかし、修正内容さえ分かっていればコンフリクトしても冷静に直せばきちんとrebaseできるか。dev(3&#39;)にsubdev(y)をrebaseする。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git rebase dev subdev
First, rewinding head to replay your work on top of it...
Applying: Add message line 2(sub module)
Using index info to reconstruct a base tree...
Falling back to patching base and 3-way merge...
Auto-merging newfeature
CONFLICT (content): Merge conflict in newfeature
Failed to merge in the changes.
Patch failed at 0001 Add message line 2(sub module)

When you have resolved this problem run &amp;quot;git rebase --continue&amp;quot;.
If you would prefer to skip this patch, instead run &amp;quot;git rebase --skip&amp;quot;.
To restore the original branch and stop rebasing run &amp;quot;git rebase --abort&amp;quot;.

$ vi newfeature
$ git add newfeature
$ git rebase --continue
Applying: Add message line 2(sub module)
Applying: Add message line 3(sub module)
Using index info to reconstruct a base tree...
Falling back to patching base and 3-way merge...
Auto-merging newfeature

$ git g
 * 0fe8a57  (HEAD, subdev) Add message line 3(sub module)
 * 71f976a  Add message line 2(sub module)
 * 948e1a4  (dev) Add message line 2
 * 0bc3e36  Add message line 1
 * ae15a29  Add newfeature
 * 18ac45f  (master) Modify num 2
 * a43a699  Modify num
 * 3aec83c  (nobra) Add message nobra&lt;/pre&gt;
&lt;h1&gt;rebase対merge&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;1人1リポジトリとかで作業している場合は、あまり意識せずに自由にやってもいい&lt;ul&gt;&lt;li&gt;mergeの方が何をしていたかの履歴が残るので良いかもしれない&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;rebaseを使う時の問題は、複数人複数リポジトリで作業している場合&lt;ul&gt;&lt;li&gt;rebaseすると新しいコミットになる(SHA1も変わる)&lt;/li&gt;&lt;li&gt;公開した(pushした)後にrebaseするのはまずい&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;上記のようにrebaseしたいブランチに依存しているブランチがある場合も注意かもしれない&lt;ul&gt;&lt;li&gt;うまくrebaseしていかないとグラフがどうなっているのかわからなくなりそう…&lt;/li&gt;&lt;li&gt;マージを含むブランチがある場合のrebaseも同様&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;div class=&quot;footnote&quot;&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn1&quot; name=&quot;f1&quot;&gt;*1&lt;/a&gt;: Git道場で実施したのはpull --rebaseだけど基本は同じはず&lt;/p&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title> Git道場#1に参加しました と、pullとpull --rebase備忘録 #gitdojo</title>
   <link href="http://gosyujin.github.io/2012/04/22/1335108555"/>
   <updated>2012-04-22T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2012/04/22/1335108555</id>
   <content type="html">&lt;h1&gt;概要&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://git-dojo.doorkeeper.jp/events/979-git%E9%81%93%E5%A0%B4&quot;&gt;Git道場 - Git道場 (Git Dojo)&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;対象者が&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;merge / rebaseにちょっと自信がない&lt;/p&gt;&lt;p&gt;conflictが怖い&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;まさにそんな状況だったので、打破するために参加しました。&lt;/p&gt;
&lt;h1&gt;心「Git総論、心構え」&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;@&lt;a href=&quot;https://twitter.com/#!/iwamatsu&quot;&gt;iwamatsu&lt;/a&gt;さんの講義&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;Gitにはリモートリポジトリ、ローカルリポジトリがある&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;集中型のリポジトリにはリモートリポジトリとローカルリポジトリの区別がない&lt;ul&gt;&lt;li&gt;皆のリポジトリなので履歴参照などはすべてリポジトリを見にいかなければならない&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;分散型では、主な作業はローカルで行い、データを管理できる&lt;/li&gt;&lt;li&gt;ローカルリポジトリからリモートリポジトリに反映(プッシュ)する事で他人と共有&lt;/li&gt;&lt;li&gt;ローカルリポジトリは俺のもの、リモートリポジトリは皆のもの&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;Gitは頑健である&lt;/h2&gt;
&lt;h2&gt;Gitは時間的な変遷を管理する&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;昨日のこの時間何してたかな？&lt;/li&gt;&lt;li&gt;testブランチを消してもコミットは残っている&lt;/li&gt;&lt;li&gt;作業履歴が残っているのでreflogで参照できる&lt;ul&gt;&lt;li&gt;reflogで救済できる期間は90日以内、またはgit gc が実行されるまで&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;他(質疑応答の回答など)&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;ブランチを削除してもコミットは残っている。git branch -D&lt;/li&gt;&lt;li&gt;GitHub重い……&lt;ul&gt;&lt;li&gt;イントラにbareリポジトリ用意して毎朝GitHubから持ってくるなど&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;技「本日の課題、テクニックの解説」&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;@&lt;a href=&quot;https://twitter.com/#!/conceal_rs&quot;&gt;conceal_rs&lt;/a&gt;さんの講義&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;課題&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;今日はチームで一つのファイルを編集&lt;/li&gt;&lt;li&gt;pull, rebaseを怖がらずに&lt;ul&gt;&lt;li&gt;コンフリクトが起こった時の対処法を学ぶ&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;pullとの違いを理解する&lt;ul&gt;&lt;li&gt;≒mergeとrebaseの違いでいいのかな？&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;ルール&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;1-10までのNumbersファイルの後ろに記号を追加削除していく&lt;/li&gt;&lt;li&gt;コミットメッセージだけで語る&lt;/li&gt;&lt;li&gt;チーム間ではコミットメッセージのみを介して会話する&lt;/li&gt;&lt;li&gt;「好きにやっていいので、ぐちゃぐちゃを楽しんでください」&lt;/li&gt;&lt;li&gt;今回は@&lt;a href=&quot;https://twitter.com/#!/myfinder&quot;&gt;myfinder&lt;/a&gt;さん、@&lt;a href=&quot;https://twitter.com/#!/umiyosh&quot;&gt;umiyosh&lt;/a&gt;さん、@&lt;a href=&quot;https://twitter.com/#!/nysalor&quot;&gt;nysalor&lt;/a&gt;さんと黙々と。&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;...みっちり数時間。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;(グラフが)とても…カオスです&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;実習後&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;再び講義。その後、同じNumbersファイルを(まっさらにしてから)やり直し&lt;/li&gt;&lt;li&gt;さっきはpullでリポジトリから取得していたと思うけど、今回は必ずpull --rebaseする事&lt;ul&gt;&lt;li&gt;コミットを直列にならべる事が目的&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;git pull --rebase
git add 
git rebase --continue&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;rebaseとは&lt;ul&gt;&lt;li&gt;(ざっくりと)コミットをかぶせる&lt;ul&gt;&lt;li&gt;リモートの最新コミットにローカルの共通コミットから先のコミットが被せられる(onto)&lt;/li&gt;&lt;li&gt;まっすぐになるので誰が何コミットしたかわかりやすい&lt;/li&gt;&lt;li&gt;コンフリクトした場合、無名ブランチがチェックアウトされた状態になる&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;一方でmergeは&lt;ul&gt;&lt;li&gt;コミットを統合する(基本的にマージコミットが生まれる=見た感じ複雑)&lt;ul&gt;&lt;li&gt;リモートに新しいコミットがあると失敗する&lt;/li&gt;&lt;li&gt;変更履歴が残るので、後で調査がしやすい&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;どちらがいいかは状況次第&lt;ul&gt;&lt;li&gt;他人がコミットしている事を意識する&lt;/li&gt;&lt;li&gt;ローカルブランチでは作業履歴を残すためmergeの方がいいかも&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;アンチパターン？&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;git add .&lt;ul&gt;&lt;li&gt;全部追加するとかありえない&lt;/li&gt;&lt;li&gt;statusで確認してね&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;無名ブランチでコミット&lt;ul&gt;&lt;li&gt;困った場合は --abortで中断する&lt;/li&gt;&lt;li&gt;git rebase --skipでスキップする事ができる&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;git config user.nameとか設定して&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;という感じで13:00から18:00までadd,commit,push,pull(pull --rebase), コンフリクト解消を繰り返していました。個人的にはチューターの方にも丁寧に説明していただき、rebaseもかなり腹に落ちた感じで参加してよかった。後はこの感覚があるうちに本で復習してみる。&lt;/p&gt;
&lt;p&gt;会場を提供して下さったフューチャーアーキテクトさんとGit道場師範の皆さんありがとうございました。門下生の皆さんお疲れ様でした。(終わった時にはほぼ全員ぐったりしていた)&lt;/p&gt;
&lt;h1&gt;pull、pull --rebaseまとめ&lt;/h1&gt;
&lt;p&gt;糞長いので先にまとめ。&lt;/p&gt;
&lt;h2&gt;pull&lt;/h2&gt;
&lt;p&gt;以下のふたつのリポジトリがあったとき&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;A
(FIRST)---(NUMBERADD)
          origin/master&lt;/pre&gt;
&lt;pre class=&quot;&quot;&gt;B
(FIRST)---(hello world)---(hello git)---(bye svn)
origin/master&lt;/pre&gt;
&lt;p&gt;Bがpullするとこういう歴史が出来る。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;          (NUMBERADD)----------------------------(merge)
         /                                       /
(FIRST)---(hello world)---(hello git)---(bye svn)&lt;/pre&gt;
&lt;h2&gt;pull --rebase&lt;/h2&gt;
&lt;p&gt;同じく。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;A
(FIRST)---(NUMBERADD)
          origin/master&lt;/pre&gt;
&lt;pre class=&quot;&quot;&gt;B
(FIRST)---(hello world)---(hello git)---(bye svn)
origin/master&lt;/pre&gt;
&lt;p&gt;Bがpull --rebaseするとこういう歴史ができる。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;          (NUMBERADD)---(hello world merge)
         /              no branch
(FIRST)---(hello world)---(hello git)---(bye svn)&lt;/pre&gt;
&lt;pre class=&quot;&quot;&gt;          (NUMBERADD)---(hello world merge)---(hello git merge)
         /                                    no branch
(FIRST)---(hello world)---(hello git)---(bye svn)&lt;/pre&gt;
&lt;pre class=&quot;&quot;&gt;          (NUMBERADD)---(hello world merge)---(hello git merge)---(bye svn merge)
         /                                                        no branch
(FIRST)---(hello world)---(hello git)---(bye svn)&lt;/pre&gt;
&lt;pre class=&quot;&quot;&gt;          (NUMBERADD)---(hello world merge)---(hello git merge)---(bye svn merge)
         /                                                        master
(FIRST)--&lt;/pre&gt;
&lt;p&gt;整形して、&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;(FIRST)---(NUMBERADD)---(hello world merge)---(hello git merge)---(bye svn merge)
                                                                  master&lt;/pre&gt;
&lt;p&gt;以下に実際にやってみたログ。&lt;/p&gt;
&lt;h1&gt;pull&lt;/h1&gt;
&lt;p&gt;dojo1さんとdojo2さんでdojo.gitリポジトリに書き込んでいく。空のnumファイルをfirst commit後……。&lt;/p&gt;
&lt;h2&gt;dojo1&lt;/h2&gt;
&lt;p&gt;dojo1さんが準備。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ cat num
 1
 2
 3
 4
 5
$ git coa -m &amp;quot;1から5までnumberふり&amp;quot;
[master 27734d8] 1から5までnumberふり
 1 files changed, 5 insertions(+), 0 deletions(-)&lt;/pre&gt;
&lt;p&gt;グラフはこんな感じ。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git g
 * 27734d8 2012-04-22 kk_Ataka  (HEAD, master) 1から5までnumberふり
 * 9f20959 2012-04-22 kk_Ataka  (origin/master) first commit&lt;/pre&gt;
&lt;h2&gt;dojo2&lt;/h2&gt;
&lt;p&gt;dojo2さん。cloneしたときはこんなグラフ。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git g
 * 9f20959 2012-04-22 kk_Ataka  (HEAD, origin/master, origin/HEAD) first commit&lt;/pre&gt;
&lt;p&gt;ここに27734d8をプルする前にローカルで色々育てる。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ vim num
$ git coa -m &amp;quot;hello world追加&amp;quot;
$ vim num
$ git coa -m &amp;quot;hello git追加&amp;quot;
$ vim num
$ git coa -m &amp;quot;bye svn追加&amp;quot;&lt;/pre&gt;
&lt;p&gt;グラフはこう。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git g
 * 817be9c 2012-04-22 kk_Ataka  (HEAD, master) bye svn追加
 * 66d89ab 2012-04-22 kk_Ataka  hello git追加
 * cb71f84 2012-04-22 kk_Ataka  hello world追加
 * 9f20959 2012-04-22 kk_Ataka  (origin/master, origin/HEAD) first commit&lt;/pre&gt;
&lt;p&gt;この状態でプルすると…&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git pull
remote: Counting objects: 5, done.
remote: Total 3 (delta 0), reused 0 (delta 0)
Unpacking objects: 100% (3/3), done.
From /home/kk_Ataka/github/dojo
   9f20959..27734d8  master     -&amp;gt; origin/master
Auto-merging num
CONFLICT (content): Merge conflict in num
Automatic merge failed; fix conflicts and then commit the result.
[22:54:45 kk_Ataka@www15203u (master *+|MERGING&amp;lt;&amp;gt;)~/github/dojo2]
$ git g
 * 817be9c 2012-04-22 kk_Ataka  (HEAD, dojo2/master, master) bye svn追加
 * 66d89ab 2012-04-22 kk_Ataka  hello git追加
 * cb71f84 2012-04-22 kk_Ataka  hello world追加
 | * 27734d8 2012-04-22 kk_Ataka  (origin/master, origin/HEAD) 1から5までnumberふり
 |/
 * 9f20959 2012-04-22 kk_Ataka  first commit&lt;/pre&gt;
&lt;p&gt;first commit以降のブランチがdojo1さんが編集したものと自分が育てたものに分岐。これを解消してやり、コミット。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt; git coa -m &amp;quot;コンフリクトを解消し、メッセージにnumberをふった&amp;quot;
[master d21349d] コンフリクトを解消し、メッセージにnumberをふった
[22:57:18 kk_Ataka@www15203u (master&amp;gt;)~/github/dojo2]
$ git g
 *   d21349d 2012-04-22 kk_Ataka  (HEAD, master) コンフリクトを解消し、メッセージにnumberをふ
 |\
 * | 817be9c 2012-04-22 kk_Ataka  (dojo2/master) bye svn追加
 * | 66d89ab 2012-04-22 kk_Ataka  hello git追加
 * | cb71f84 2012-04-22 kk_Ataka  hello world追加
 | * 27734d8 2012-04-22 kk_Ataka  (origin/master, origin/HEAD) 1から5までnumberふり
 |/
 * 9f20959 2012-04-22 kk_Ataka  first commit&lt;/pre&gt;
&lt;h2&gt;dojo1に戻り&lt;/h2&gt;
&lt;p&gt;dojo1に戻りプルして一行追加しコミット&amp;プッシュ。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git pull
remote: Counting objects: 16, done.
remote: Compressing objects: 100% (4/4), done.
remote: Total 12 (delta 0), reused 0 (delta 0)
Unpacking objects: 100% (12/12), done.
From /home/kk_Ataka/github/./dojo
   27734d8..d21349d  master     -&amp;gt; origin/master
Updating 27734d8..d21349d
Fast-forward
 num |    6 +++---
 1 files changed, 3 insertions(+), 3 deletions(-)
$ git g
 *   d21349d 2012-04-22 kk_Ataka  (HEAD, origin/master, master) コンフリクトを解消し、メッセ
 |\
 * | 817be9c 2012-04-22 kk_Ataka  bye svn追加
 * | 66d89ab 2012-04-22 kk_Ataka  hello git追加
 * | cb71f84 2012-04-22 kk_Ataka  hello world追加
 | * 27734d8 2012-04-22 kk_Ataka  (dojo1/master) 1から5までnumberふり
 |/
 * 9f20959 2012-04-22 kk_Ataka  first commit
$ vim num
$ git coa -m &amp;quot;number6を追加&amp;quot;
[master eeeab6f] number6を追加
 1 files changed, 1 insertions(+), 0 deletions(-)
$ git push
Counting objects: 5, done.
Writing objects: 100% (3/3), 294 bytes, done.
Total 3 (delta 0), reused 0 (delta 0)
Unpacking objects: 100% (3/3), done.
To /home/kk_Ataka/github/./dojo.git/
   d21349d..eeeab6f  master -&amp;gt; master&lt;/pre&gt;
&lt;h2&gt;同じ頃dojo2では&lt;/h2&gt;
&lt;p&gt;その隙にdojo2は少しローカルで育て中。(ただし、今度はコンフリクトさせないように)&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ vi num
$ git coa -m &amp;quot;bye svnは削除&amp;quot;&lt;/pre&gt;
&lt;p&gt;そしてさっきのdojo1の更新をプル。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git pull
remote: Counting objects: 5, done.
remote: Total 3 (delta 0), reused 0 (delta 0)
Unpacking objects: 100% (3/3), done.
From /home/kk_Ataka/github/dojo
   d21349d..eeeab6f  master     -&amp;gt; origin/master
Auto-merging num
Merge made by recursive.
 num |    1 +
 1 files changed, 1 insertions(+), 0 deletions(-)
[23:06:42 kk_Ataka@www15203u (master&amp;gt;)~/github/dojo2]
$ git g
 *   5ba127c 2012-04-22 kk_Ataka  (HEAD, master) Merge branch &#39;master&#39; of /home/kk_Ataka/gith
 |\
 * | 252d4b5 2012-04-22 kk_Ataka  bye svnは削除
 | * eeeab6f 2012-04-22 kk_Ataka  (origin/master, origin/HEAD) number6を追加
 |/
 *   d21349d 2012-04-22 kk_Ataka  コンフリクトを解消し、メッセージにnumberをふった
 |\
 * | 817be9c 2012-04-22 kk_Ataka  (dojo2/master) bye svn追加
 * | 66d89ab 2012-04-22 kk_Ataka  hello git追加
 * | cb71f84 2012-04-22 kk_Ataka  hello world追加
 | * 27734d8 2012-04-22 kk_Ataka  1から5までnumberふり
 |/
 * 9f20959 2012-04-22 kk_Ataka  first commit&lt;/pre&gt;
&lt;p&gt;こうなる。なので基本的にプルはマージの履歴が残る。&lt;/p&gt;
&lt;h1&gt;pull --rebase&lt;/h1&gt;
&lt;p&gt;pull --rebaseではどうか。下記の状態まで戻る。&lt;/p&gt;
&lt;h2&gt;dojo1&lt;/h2&gt;
&lt;pre class=&quot;&quot;&gt;$ git g
 * 49622c6 2012-04-22 kk_Ataka  (HEAD, origin/master, master) 1から5までnumberふり
 * ec12cb5 2012-04-22 kk_Ataka  first commit&lt;/pre&gt;
&lt;h2&gt;dojo2&lt;/h2&gt;
&lt;pre class=&quot;&quot;&gt;$ git  g
 * 3a940bc 2012-04-22 kk_Ataka  (HEAD, master) bye svn追加
 * 763cbaa 2012-04-22 kk_Ataka  hello git追加
 * d6c6c98 2012-04-22 kk_Ataka  hello world追加
 * ec12cb5 2012-04-22 kk_Ataka  (origin/master, origin/HEAD) first commit&lt;/pre&gt;
&lt;p&gt;ここでpull --rebaseを使う。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git pull --rebase
remote: Counting objects: 5, done.
remote: Total 3 (delta 0), reused 0 (delta 0)
Unpacking objects: 100% (3/3), done.
From /home/kk_Ataka/github/dojo
   ec12cb5..49622c6  master     -&amp;gt; origin/master
First, rewinding head to replay your work on top of it...
Applying: hello world追加
Using index info to reconstruct a base tree...
Falling back to patching base and 3-way merge...
Auto-merging num
CONFLICT (content): Merge conflict in num
Failed to merge in the changes.
Patch failed at 0001 hello world追加

When you have resolved this problem run &amp;quot;git rebase --continue&amp;quot;.
If you would prefer to skip this patch, instead run &amp;quot;git rebase --skip&amp;quot;.
To restore the original branch and stop rebasing run &amp;quot;git rebase --abort&amp;quot;.
&lt;/pre&gt;
&lt;p&gt;盛大にコンフリクトする。改めて見るとrebase --continue, --skip, --abortを使いなさいって書いてあるな。&lt;/p&gt;
&lt;p&gt;で、今のrebaseが始まったとき、ブランチはどこにいるのかというと……。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git br
 * (no branch) 49622c6 1から5までnumberふり
   master      3a940bc [ahead 3, behind 1] bye svn追加&lt;/pre&gt;
&lt;p&gt;ここ。無名ブランチ。この496...はどこかというと……。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git g
 * 3a940bc 2012-04-22 kk_Ataka  (master) bye svn追加
 * 763cbaa 2012-04-22 kk_Ataka  hello git追加
 * d6c6c98 2012-04-22 kk_Ataka  hello world追加
 | * 49622c6 2012-04-22 kk_Ataka  (HEAD, origin/master, origin/HEAD) 1から5までnumberふり
 |/
 * ec12cb5 2012-04-22 kk_Ataka  first commit&lt;/pre&gt;
&lt;p&gt;dojo1さんがプッシュしていた所。なにはともあれまず、リポジトリにプッシュされていたものを優先する。このdojo1さんの変更に対して、d6c6c98、763cbaa、3a940bcとひとつずつrebaseしていく。問題を解決したらrebase --continue。無名ブランチにいるのでコミットしちゃダメ。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ vim num
競合解消…
$ git add num
$ git rebase --continue
Applying: hello world追加
Applying: hello git追加
Using index info to reconstruct a base tree...
Falling back to patching base and 3-way merge...
Auto-merging num
CONFLICT (content): Merge conflict in num
Failed to merge in the changes.
Patch failed at 0002 hello git追加&lt;/pre&gt;
&lt;p&gt;ひとつ解消したらふたつ目でまたコンフリクトした。今どこにいるかというと……。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git br
 * (no branch) 781c723 hello world追加
   master      3a940bc [ahead 3, behind 1] bye svn追加
$ git g
 * 781c723 2012-04-22 kk_Ataka  (HEAD) hello world追加
 | * 3a940bc 2012-04-22 kk_Ataka  (master) bye svn追加
 | * 763cbaa 2012-04-22 kk_Ataka  hello git追加
 | * d6c6c98 2012-04-22 kk_Ataka  hello world追加
 * | 49622c6 2012-04-22 kk_Ataka  (origin/master, origin/HEAD) 1から5までnumberふり
 |/
 * ec12cb5 2012-04-22 kk_Ataka  first commit&lt;/pre&gt;
&lt;p&gt;コンフリクトを解消しつつ無名ブランチで突き進んでいる。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ vim num
競合解消…
$ git add num
$ git rebase --continue
Applying: hello git追加
Applying: bye svn追加
Using index info to reconstruct a base tree...
Falling back to patching base and 3-way merge...
Auto-merging num
CONFLICT (content): Merge conflict in num
Failed to merge in the changes.
Patch failed at 0003 bye svn追加&lt;/pre&gt;
&lt;p&gt;どんどん無名ブランチを進めていく。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git br
 * (no branch) 8fb0d5e hello git追加
   master      3a940bc [ahead 3, behind 1] bye svn追加
$ git g
 * 8fb0d5e 2012-04-22 kk_Ataka  (HEAD) hello git追加
 * 781c723 2012-04-22 kk_Ataka  hello world追加
 | * 3a940bc 2012-04-22 kk_Ataka  (master) bye svn追加
 | * 763cbaa 2012-04-22 kk_Ataka  hello git追加
 | * d6c6c98 2012-04-22 kk_Ataka  hello world追加
 * | 49622c6 2012-04-22 kk_Ataka  (origin/master, origin/HEAD) 1から5までnumberふり
 |/
 * ec12cb5 2012-04-22 kk_Ataka  first commit&lt;/pre&gt;
&lt;p&gt;解消。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ vim num
競合解消…
$ git add num
$ git rebase --continue
Applying: bye svn追加&lt;/pre&gt;
&lt;p&gt;これで全てのコミットの変更がdojo1さんの変更の上に適用された。で、今どこにいるかというと。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git br
 * master 96897da [ahead 3] bye svn追加
$ git g
 * 96897da 2012-04-22 kk_Ataka  (HEAD, master) bye svn追加
 * 8fb0d5e 2012-04-22 kk_Ataka  hello git追加
 * 781c723 2012-04-22 kk_Ataka  hello world追加
 * 49622c6 2012-04-22 kk_Ataka  (origin/master, origin/HEAD) 1から5までnumberふり
 * ec12cb5 2012-04-22 kk_Ataka  first commit&lt;/pre&gt;
&lt;p&gt;無名ブランチからmasterブランチに。自分で作っていたコミットはなくなりあたらしくdojo1さんが作ったコミットの先に移動している。(SHA1が違う)&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>ZenTestで実行したRSpecの結果をGrowlで通知してくれるようにした</title>
   <link href="http://gosyujin.github.io/2012/04/20/1334933158"/>
   <updated>2012-04-20T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2012/04/20/1334933158</id>
   <content type="html">&lt;h1&gt;前回までのあらすじ&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;2011-12-07-1323291938&quot;&gt;2011-12-07-1323291938&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;前回は、ファイル編集する -&gt; alt+tabでウィンドウ切り替える -&gt; プロンプトでrspecコマンドうつ…の繰り返しを改善することができた。&lt;/p&gt;
&lt;p&gt;今回は、コード修正、保存 -&gt; 違うターミナル切り替え -&gt; ZenTestで自動実行された結果を見る…の繰り返しを改善する。テスト結果通知にGrowlを使用する事でいけそう。&lt;/p&gt;
&lt;h1&gt;参考サイト&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://d.hatena.ne.jp/gan2/20080413/1208081539&quot;&gt;RSpec を autotest で使う - gan2 の Ruby 勉強日記&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://www.edit.ne.jp/~koic/?date=20070731&quot;&gt;Railsのテスト環境を改めて- Windows / RSpec / ZenTest / Snarl - Day by day(2007-07-31)&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://d.hatena.ne.jp/amacou/20090606/1244260607&quot;&gt;ZenTest(autotest)のバージョン上げたらautotestが動かないので設定を変更する - AorBorF&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/rspec/rspec/wiki/autotest&quot;&gt;autotest · rspec/rspec Wiki · GitHub&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://blog.masashi-fujiwara.net/2010/11/script-test.html&quot;&gt;メタフィジクスとフィジクスの間で: テスト駆動開発の環境を整える(rspec + autotest + growl) (2010/11/07に大幅修正あり）&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/karl/autotest-growl&quot;&gt;karl/autotest-growl · GitHub&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://rubyist.g.hatena.ne.jp/rochefort/20100414/p1&quot;&gt;autospecの結果をgrowlで通知〜windows編 - うんたらかんたらRuby - Rubyist&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://d.hatena.ne.jp/zariganitosh/20080312/1205305079&quot;&gt;autotestのGrowl通知をカスタマイズする - ザリガニが見ていた...。&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://blog.champierre.com/774&quot;&gt;autotest + growl で楽々テスト - 僕は発展途上技術者&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;環境&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;Windows XP&lt;/li&gt;&lt;li&gt;Ruby 1.9.3&lt;ul&gt;&lt;li&gt;Rubygems 1.8.11&lt;/li&gt;&lt;li&gt;Bundler 1.0.21&lt;/li&gt;&lt;li&gt;ZenTest 4.6.2&lt;/li&gt;&lt;li&gt;autotest-growl 0.2.16(だったか？)&lt;/li&gt;&lt;li&gt;rspec 2.8.0&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Growl for Windows 2.0.9&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;Macに置き換えてもいけるかは後で確認。&lt;/p&gt;
&lt;h1&gt;手順&lt;/h1&gt;
&lt;h2&gt;Growls for Windowsインストール&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://www.growlforwindows.com/gfw/displays.aspx&quot;&gt;Growl for Windows&lt;/a&gt; ここから落とす。&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;Gem入手&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;Gemfileファイルを作って以下のgemファイルを記載&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;gem &#39;ZenTest&#39;
gem &#39;autotest-growl&#39;&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;bundle install&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;.autotest&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;前回何も記載しなかった.autotestファイルに以下を追記。&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;require &#39;autotest/growl&#39;&lt;/pre&gt;
&lt;h2&gt;実行&lt;/h2&gt;
&lt;pre class=&quot;&quot;&gt;$ bubdle exec autotest
loading autotest/rspec2


--------------------------------------------------------------------------------

[2J[fC:\rubies\Ruby-193-p0\bin\ruby -rrubygems -S C:/WINDOWS/my/project/sha1/vendor/bundle/ruby/1.9.1/gems/rspec-core-2.8.0/exe/rspec --tty &#39;C:/WINDOWS/my/project/sha1/spec/sha1_spec.rb&#39;
.......

Finished in 0.03125 seconds
7 examples, 0 failures&lt;/pre&gt;
&lt;p&gt;と同時にGrowlポップアップきたこれ！　意外とすぐだった！&lt;/p&gt;
&lt;h1&gt;以下いろいろと失敗の試行錯誤Log&lt;/h1&gt;
&lt;a name=&quot;seeall&quot;&gt;&lt;/a&gt;
&lt;h2&gt;Windows用でないとダメみたい？&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://rubyist.g.hatena.ne.jp/rochefort/20100414/p1&quot;&gt;autospecの結果をgrowlで通知〜windows編 - うんたらかんたらRuby - Rubyist&lt;/a&gt; autotest-growlをWindows用に修正したgemが。Gemfileのautotest-growlは削除してkarl-autotest-growlとDL先のsourceを追加。&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;+ 3 source &amp;quot;http://gems.github.com&amp;quot;
  8 gem &#39;ZenTest&#39;
- 9 gem &#39;autotest-growl&#39;
+ 9 gem &#39;karl-autotest-growl&#39;&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;bundle install&lt;/li&gt;&lt;li&gt;bubdle exec autotest&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;ZenTest実行されなくなった…&lt;/h2&gt;
&lt;pre class=&quot;&quot;&gt;- 8 gem &#39;ZenTest&#39;
+ 9 gem &#39;autotest&#39;
+10 gem &#39;autotest-growl&#39;
+11 gem &#39;autotest-fsevent&#39;&lt;/pre&gt;
&lt;p&gt;fseventをインストールするにはDevelopment kitが必要らしい。&lt;a href=&quot;2012-02-28-1330436604&quot;&gt;2012-02-28-1330436604&lt;/a&gt; インストール方法。&lt;/p&gt;
&lt;p&gt;で、.autotestに追加。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;+ require &#39;autotest/fsevent&#39;&lt;/pre&gt;</content>
 </entry>
 
 <entry>
   <title>Subversionで2ヶ所のリポジトリの同期を取るメモ</title>
   <link href="http://gosyujin.github.io/2012/04/17/1334669770"/>
   <updated>2012-04-17T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2012/04/17/1334669770</id>
   <content type="html">&lt;h1&gt;前回のあらすじ&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;2012-01-15-1326624864&quot;&gt;2012-01-15-1326624864&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;参考サイト&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://www.asahi-net.or.jp/~iu9m-tcym/svndoc/svn_backup.html&quot;&gt;Subversionリポジトリのバックアップ [概略&lt;/a&gt;]&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://www.ilovex.co.jp/blog/system/other/subversion.html&quot;&gt;Subversionの履歴を保持したままリポジトリを移動するには - システム開発ブログ （システム開発のアイロベックス｜東京都新宿区の業務システム開発会社）&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://www.02.246.ne.jp/~torutk/subversion/intro.html&quot;&gt;Subversionでバージョン管理&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://d.hatena.ne.jp/pasela/20090206/svn_backup&quot;&gt;Subversionリポジトリのバックアップ方法いろいろ - ぱせらんメモ&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://terai.xrea.jp/Subversion.html&quot;&gt;Subversion - てんぷらメモ&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;前提&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;以下の二つのサーバがある&lt;ul&gt;&lt;li&gt;Aサーバ:開発を進んでいるリポジトリがある(r222)&lt;/li&gt;&lt;li&gt;Bサーバ:これからAサーバのリポジトリと同期をとりたいリポジトリがある(r111)&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;差分のdumpとってload(失敗)&lt;/h1&gt;
&lt;h2&gt;Aサーバ&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;進んでいる分のダンプを取る。&lt;ul&gt;&lt;li&gt;rオプションでダンプを取るリビジョンを指定できる。一つだけだとそのリビジョンだけ。(222ならリビジョン222)範囲指定する場合はAAA:BBBとする&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;$ svnadmin dump リポジトリパス(/home/xxx/yyyなど) -r 111:222 --incremental &amp;gt; repo.dump&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;これをなんらかの方法でBサーバへ移動する(ftpでもUSBでも)&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;Bサーバ&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;svnadmin loadコマンドで差分ダンプファイルを流しこむ。&lt;ul&gt;&lt;li&gt;リビジョンがかぶっているとエラー(リビジョン111未満のもの)&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;$ svnadmin load リポジトリパス(/home/xxx/yyyなど) &amp;lt; repo.dump
&amp;lt;&amp;lt;&amp;lt; オリジナルのリビジョン 111 に基づき、新しいトランザクションを開始しました
     * パスを追加しています : trunk/xxx ...svnadmin: ファイルが既に存在します: ファイルシステム &#39;リポジトリパス&#39;, トランザクション xxx-xx, パス &#39;trunk/xxx&#39;&lt;/pre&gt;
&lt;ol&gt;&lt;ul&gt;&lt;li&gt;112からダンプしたファイルをloadする…とうまくいく予定だったのだが、なんかファイルのチェックサムが違うといわれた……。&lt;/li&gt;&lt;/ul&gt;&lt;/ol&gt;
&lt;pre class=&quot;&quot;&gt;$ svnadmin load リポジトリパス(/home/xxx/yyyなど) &amp;lt; repo.dump
&amp;lt;&amp;lt;&amp;lt; オリジナルのリビジョン 112 に基づき、新しいトランザクションを開始しました
     * パスを編集しています : trunk/xxx/a.sh ... 完了しました。

------- 新しいリビジョン xxx を (オリジナルのリビジョン xxx からロードして) コミットしました &amp;gt;&amp;gt;&amp;gt;

&amp;lt;&amp;lt;&amp;lt; オリジナルのリビジョン 113 に基づき、新しいトランザクションを開始しました
     * パスを編集しています : trunk/xxx/b.sh ... 完了しました。
     * パスを編集しています : trunk/xxx/c.sh ...
     svnadmin: ファイル &#39;/trunk/xxx/c.sh&#39; のチェックサムが一致しませんでした:
   期待:  f566e489511cea2fd1e6 ...
   実際:  0f76ab4f5d0625e9de9c ...&lt;/pre&gt;
&lt;p&gt;フルダンプをとる =&gt; 新しくリポジトリを作成 =&gt; loadでも同じファイル(リビジョンは違った)でコケたので別の方法を考える……。&lt;/p&gt;
&lt;h1&gt;hotcopy(成功)&lt;/h1&gt;
&lt;blockquote&gt;&lt;p&gt;このサブコマンドは、すべてのフック、設定ファイル、そしてもちろんデータベースファイルを含む、リポジトリの完全な「ホット」バックアップを作成します。&lt;/p&gt;&lt;cite&gt;&lt;a href=&quot;http://www.caldron.jp/~nabetaro/svn/svnbook-1.4-final/svn.ref.svnadmin.c.hotcopy.html&quot;&gt;http://www.caldron.jp/~nabetaro/svn/svnbook-1.4-final/svn.ref.svnadmin.c.hotcopy.html&lt;/a&gt;&lt;/cite&gt;&lt;/blockquote&gt;
&lt;p&gt;ただし可搬性に乏しいとの事。今回は同マシン、OS、Subversionバージョンなので大丈夫だと思う。まずAサーバでコピー。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ svnadmin hotcopy リポジトリパス(/home/xxx/yyyなど) コピー先のリポジトリパス
a /home/xxx/yyy OK
a /home/xxx/yyy/hooks OK
a /home/xxx/yyy/hooks/start-commit.tmpl 3K
...
a /home/xxx/yyy/format 1K&lt;/pre&gt;
&lt;p&gt;これをBサーバへ持ってくるだけ。フルバックアップしかできないのでこれしか方法はない？&lt;/p&gt;
&lt;p&gt;とりあえず一時しのぎはできたけど、チェックサム解消法も考えないといけないな。 &lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://d.hatena.ne.jp/replication/20120405/1333548839&quot;&gt;TortoiseSVNでchecksum mismatchというエラーでコミットできない場合の対処方法 - 大人になったら肺呼吸&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://rack990.sakura.ne.jp/archives/entry-184.html&quot;&gt;Subversionでチェックサムがおかしいとき  - 日々是雑記&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://d.hatena.ne.jp/espresso3389/20090208&quot;&gt;espresso3389の日記&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://web.archive.org/web/20101221154224/http://nonn-et-twk.net/twk/svn-checksum-mismatch&quot;&gt;subversion checksum mismatchから簡単に復活する方法 | twk @ ふらっと&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://glob.bushi.net.nz/glob/2007/02/14/subversion-checksum-mismatch-easy-workaround/&quot;&gt;subversion checksum mismatch - easy workaround | bur.gs&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://weekbuild.blog39.fc2.com/?mode=m&amp;no=30&quot;&gt;WeekBuildのHACK日記  ディスククラッシュ&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://www.caldron.jp/~nabetaro/svn/svnbook-1.4-final/svn.ref.svnadmin.c.hotcopy.html&quot;&gt;svnadmin hotcopy&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</content>
 </entry>
 
 <entry>
   <title>Pro Gitと入門Gitと入門gitでGitの復習 HEADのキャレットとかチルダとか補講編</title>
   <link href="http://gosyujin.github.io/2012/04/10/1334058674"/>
   <updated>2012-04-10T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2012/04/10/1334058674</id>
   <content type="html">&lt;h1&gt;前回までのあらすじ&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;2012-03-05-1330951640&quot;&gt;2012-03-05-1330951640&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;2012-03-11-1331472478&quot;&gt;2012-03-11-1331472478&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;2012-03-15-1331816663&quot;&gt;2012-03-15-1331816663&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;GitHubで他の人の.gitconfigとかを見たりすると、HEAD^とかHEAD~~とかにエイリアスが貼ってあるけど、これってなんなの？&lt;/p&gt;
&lt;p&gt;今の認識: 書いた分だけリビジョンが戻ってくれる程度&lt;/p&gt;
&lt;h1&gt;参考&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://progit.org/&quot;&gt;Git - Book&lt;/a&gt;&lt;/li&gt;&lt;li&gt;入門Git &lt;span class=&quot;deco&quot; style=&quot;color:#FF0000;&quot;&gt;New !!&lt;/span&gt;&lt;/li&gt;&lt;li&gt;入門git&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;調査&lt;/h1&gt;
&lt;p&gt;入門Git P87 コミットの祖先の指定によると、&lt;/p&gt;
&lt;table&gt;&lt;tr&gt;&lt;th&gt;記法&lt;/th&gt;&lt;th&gt;意味&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;^&lt;/td&gt;&lt;td&gt;指定したコミットの1番目の親&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;^番号&lt;/td&gt;&lt;td&gt;指定したコミットのN番目の親&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;~&lt;/td&gt;&lt;td&gt;指定したコミットの1世代前の親&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;~世代&lt;/td&gt;&lt;td&gt;指定したコミットのN世代前の親&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;という事らしい……が、番目と世代は何が違うんだろう？　とりあえずこんな歴史があるとして、masterから戻ってみる。&lt;/p&gt;
&lt;h2&gt;確認&lt;/h2&gt;
&lt;pre class=&quot;&quot;&gt; * b467307 2012-04-05 kk_Ataka  (HEAD, origin/master, master) Add get_sheetname.rb(convert exe file b
 | * b025b6b 2012-04-05 kk_Ataka  (1.0stable, fileignore) Ignore docx files
 * |   90aaa1c 2012-04-04 kk_Ataka  Merge branch &#39;studyissue&#39;
 |\ \
 * | | 2d387ba 2012-04-04 kk_Ataka  (concat) Add concat function (test pending...)
 * | | 68ac3d9 2012-04-04 kk_Ataka  Add csv concat
 * | | 9a4ed9b 2012-04-04 kk_Ataka  Move input cell(ex:B2) downcase(b2) in cell_reg_check and cell_to
 | * | 670d891 2012-04-04 kk_Ataka  (studyissue) Move comment, source to readme
 |/ /
 * | d0f2b58 2012-04-04 kk_Ataka  Refactoring now
 |/
 * 0563594 2012-04-04 kk_Ataka  1.0stable
 * 3d2f6bb 2012-04-04 kk_Ataka  First commit&lt;/pre&gt;
&lt;p&gt;まず一番目の親を指定……。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git checkout HEAD^
...
HEAD is now at 90aaa1c... Merge branch &#39;studyissue&#39;&lt;/pre&gt;
&lt;p&gt;うん、指定できてる。んじゃ一旦masterに戻って、次はキャレット連発で。二つ前を指定できるはず。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git checkout HEAD^^
...
HEAD is now at 2d387ba... Add concat function (test pending...)&lt;/pre&gt;
&lt;p&gt;読み通り。じゃあ次は^NでN番目の親を指定してみる。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git checkout HEAD^2
error: pathspec &#39;HEAD^2&#39; did not match any file(s) known to git.&lt;/pre&gt;
&lt;p&gt;あ、あれ？&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git checkout HEAD^3
error: pathspec &#39;HEAD^3&#39; did not match any file(s) known to git.&lt;/pre&gt;
&lt;p&gt;ん？&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git checkout HEAD^1
...
HEAD is now at 90aaa1c... Merge branch &#39;studyissue&#39;&lt;/pre&gt;
&lt;p&gt;これはできるの？　ふーむ。&lt;/p&gt;
&lt;br /&gt;
&lt;p&gt;(以下略)&lt;/p&gt;
&lt;br /&gt;
&lt;p&gt;結局こうなった。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt; * b467307       master(HEAD)
 | * b025b6b   
 * |   90aaa1c   HEAD^     HEAD^1 HEAD~     HEAD~1
 |\ \  
 * | | 2d387ba   HEAD^^           HEAD~~    HEAD~2
 * | | 68ac3d9   HEAD^^^          HEAD~~~   HEAD~3
 * | | 9a4ed9b   HEAD^^^^         HEAD~~~~  HEAD~4
 | * | 670d891          
 |/ /                   
 * | d0f2b58     HEAD^^^^^        HEAD~~~~~ HEAD~5
 |/
 * 0563594 
 * 3d2f6bb &lt;/pre&gt;
&lt;p&gt;うーむ。戻れるのはわかったけど、2つわからんとこが残る。。。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;番目と世代前の違い&lt;/li&gt;&lt;li&gt;^^と^2の違い&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;本に戻ってみる&lt;/h2&gt;
&lt;p&gt;入門Gitを少し読み進める。&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;大多数のコミットには親が1つしかありませんが、マージコミットには&lt;/p&gt;&lt;p&gt;親が複数あります。&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;マージする以前のホームマシンの作業リポジトリの先頭のコミットがHEAD^、&lt;/p&gt;&lt;p&gt;一方、マージしたコミットはHEAD^2ということになります。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;……入門gitでは&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;^:キャレットはマイナス1の意味だ。18f822e^は18f822eに&lt;/p&gt;&lt;p&gt;マッチするリビジョンの前にあるリビジョンとして解釈される。&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;~N:チルダと数字Nは、そのコミット名からNだけ前に戻る。前の例だと&lt;/p&gt;&lt;p&gt;18f822e~1は18f822eの前のリビジョン、18f822e~2は18f822eの2つ前の&lt;/p&gt;&lt;p&gt;リビジョンだ。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;親が複数ある状況を作らないといけないという事かな。&lt;/p&gt;
&lt;h2&gt;再度チャレンジ&lt;/h2&gt;
&lt;p&gt;少し適当にコミットしてマージして親が2つある状況を作った。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt; *   8dc8247 2012-04-10 kk_Ataka  (HEAD, master) Merge branch &#39;mergedbranch&#39;
 |\
 * | ca6b93d 2012-04-10 kk_Ataka  (mergedbranch2) temp
 * | 7819449 2012-04-10 kk_Ataka  temp
 | * 074c658 2012-04-10 kk_Ataka  (mergedbranch) temp
 * | b467307 2012-04-05 kk_Ataka  (origin/master) Add get_sheetname.rb(convert exe file by ocra
 |/
 | * b025b6b 2012-04-05 kk_Ataka  (1.0stable, fileignore) Ignore docx files
 * |   90aaa1c 2012-04-04 kk_Ataka  Merge branch &#39;studyissue&#39;&lt;/pre&gt;
&lt;pre class=&quot;&quot;&gt;$ git ch HEAD^
...
HEAD is now at ca6b93d... temp&lt;/pre&gt;
&lt;p&gt;これはできると。んで、問題の^2は……&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git ch HEAD^2
...
HEAD is now at 074c658... temp&lt;/pre&gt;
&lt;p&gt;できた！　ってことは、二つのブランチしかマージしていないから、^3はエラーになるはず……。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git ch HEAD^3
error: pathspec &#39;HEAD^3&#39; did not match any file(s) known to git.&lt;/pre&gt;
&lt;p&gt;おー。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt; *   8dc8247     master(HEAD)
 |\
 * | ca6b93d     HEAD^    HEAD^1  HEAD~    HEAD~1
 * | 7819449     HEAD^^           HEAD~~   HEAD~2
 | * 074c658              HEAD^2
 * | b467307     HEAD^^^          HEAD~~~  HEAD~3
 |/            
 | * b025b6b   
 * |   90aaa1c   HEAD^^^^ HEAD^2^ HEAD~~~~ HEAD~4
 
                   (ERROR:HEAD^3)&lt;/pre&gt;
&lt;p&gt;んん？　^Nはわかったけど、^^と^2の違いが余計わからなくなった……。&lt;/p&gt;
&lt;p&gt;あ！　HEAD^2^という合わせ技ができたって事はもしかして……。&lt;/p&gt;
&lt;h1&gt;まとめ&lt;/h1&gt;
&lt;table&gt;&lt;tr&gt;&lt;th&gt;コマンド&lt;/th&gt;&lt;th&gt;意味&lt;/th&gt;&lt;th&gt;備考&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;HEAD^&lt;/td&gt;&lt;td&gt;指定したコミットの1番目の親&lt;/td&gt;&lt;td&gt;※1&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;HEAD^^&lt;/td&gt;&lt;td&gt;指定したコミットの1番目の親…&lt;span class=&quot;deco&quot; style=&quot;font-weight:bold;&quot;&gt;の1番目の親&lt;/span&gt;&lt;/td&gt;&lt;td&gt;※2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;HEAD^^^&lt;/td&gt;&lt;td&gt;指定したコミットの1番目の親…&lt;span class=&quot;deco&quot; style=&quot;font-weight:bold;&quot;&gt;の1番目の親&lt;/span&gt;…&lt;span class=&quot;deco&quot; style=&quot;font-weight:bold;&quot;&gt;の1番目の親&lt;/span&gt;&lt;/td&gt;&lt;td&gt;※3&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;HEAD^2&lt;/td&gt;&lt;td&gt;指定したコミットの2番目の親&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;HEAD^2^&lt;/td&gt;&lt;td&gt;指定したコミットの2番目の親…の1番目の親&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;HEAD~&lt;/td&gt;&lt;td&gt;指定したコミットの1世代前の親&lt;/td&gt;&lt;td&gt;※1&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;HEAD~~&lt;/td&gt;&lt;td&gt;指定したコミットの1世代前の親…の1世代前の親&lt;/td&gt;&lt;td&gt;※2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;HEAD~~~&lt;/td&gt;&lt;td&gt;指定したコミットの1世代前の親…の1世代前の親…の1世代前の親&lt;/td&gt;&lt;td&gt;※3&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;HEAD~1&lt;/td&gt;&lt;td&gt;指定したコミットの1世代前の親&lt;/td&gt;&lt;td&gt;※1&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;HEAD~2&lt;/td&gt;&lt;td&gt;指定したコミットの2世代前の親&lt;/td&gt;&lt;td&gt;※2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;HEAD~3&lt;/td&gt;&lt;td&gt;指定したコミットの3世代前の親&lt;/td&gt;&lt;td&gt;※3&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;※1 ※2 ※3 は同じリビジョン&lt;/p&gt;
&lt;p&gt;こういう事かな。あっているならチェックアウトの挙動と一致するのだけど！&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>VimでBundler(プラグイン管理)するvundleインストール手順</title>
   <link href="http://gosyujin.github.io/2012/04/05/1333553936"/>
   <updated>2012-04-05T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2012/04/05/1333553936</id>
   <content type="html">&lt;h1&gt;前回までのあらすじ&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;2011-12-18-1324219740&quot;&gt;2011-12-18-1324219740&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;普通に使っているだけだった。プラグインとかも使ってみたい、入れ方メモる。&lt;/p&gt;
&lt;h1&gt;参考サイト&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://vim-users.jp/2011/04/hack215/&quot;&gt;Vim-users.jp - Hack #215: Vundle で plugin をモダンに管理する&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/vim-jp/vimdoc-ja/&quot;&gt;vim-jp/vimdoc-ja · GitHub&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;環境&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;WindowsXP&lt;/li&gt;&lt;li&gt;Vim 7.3 香り屋版&lt;/li&gt;&lt;li&gt;msysGit&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;プラグイン管理&lt;/h1&gt;
&lt;p&gt;プラグインを入れようと思った矢先、どうもプラグイン管理をするプラグイン？　がある模様。名前がvundleといって、RubyのGem管理に使われているBundlerに影響を受けたものみたい。Bundlerなら使ったことあるし、それなら入れやすいかも。&lt;/p&gt;
&lt;h2&gt;vundleインストール&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;http://github.com/gmarik/vundle.git&quot;&gt;Github&lt;/a&gt;にリポジトリがあるのでgitでホームの.vimディレクトリにcloneする。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git clone http://github.com/gmarik/vundle.git ~/.vim/vundle.git
Cloning into %USERPROFILE%/.vim/vundle.git...
remote: Counting objects: 2239, done.
remote: Compressing objects: 100% (1464/1464), done.
remote: Total 2239 (delta 736), reused 2183 (delta 685)
Receiving objects: 100% (2239/2239), 269.48 KiB | 66 KiB/s, done.
Resolving deltas: 100% (736/736), done.&lt;/pre&gt;
&lt;h2&gt;設定&lt;/h2&gt;
&lt;p&gt;_vimrcまたは.vimrcを開き、まず以下の設定を記載。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;&amp;quot; vundle
set nocompatible
filetype off
set rtp+=~/.vim/vundle.git
call vundle#rc()

filetype plugin indent on&lt;/pre&gt;
&lt;p&gt;一行目のnocompatible……。&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;NOTE: Viコンパチブルとは全てのオプションがグローバルであることを意味するので、&lt;/p&gt;&lt;p&gt;ファイル形式識別と&#39;compatible&#39;は同時に使うことはできない。既に&#39;compatible&#39;を設&lt;/p&gt;&lt;p&gt;定している場合には、それを解除する必要がある。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;という事でファイル形式の検出と競合するので無効にされている模様。で、ファイル形式の検出はfiletypeコマンドで設定される。vimはファイル編集の際に必ずファイルタイプを検出し、いい感じのタイプを選んでくれるらしい。大きく分けて下記の3つの設定がある。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;検出自体をするかどうか&lt;ul&gt;&lt;li&gt;プラグインを検出するかどうか&lt;/li&gt;&lt;li&gt;インデントファイルを検出するかどうか&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;検出自体するかどうかが一番強く、これが無効になると残りも自動的に無効になるようだ。&lt;/p&gt;
&lt;p&gt;上記の.vimrcではこのように変化している。&lt;/p&gt;
&lt;table&gt;&lt;tr&gt;&lt;th&gt;コマンド&lt;/th&gt;&lt;th&gt;検出&lt;/th&gt;&lt;th&gt;プラグイン&lt;/th&gt;&lt;th&gt;インデント&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;:filetype off&lt;/td&gt;&lt;td&gt;無効&lt;/td&gt;&lt;td&gt;変化なし&lt;/td&gt;&lt;td&gt;変化なし&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;:filetype plugin indent on&lt;/td&gt;&lt;td&gt;有効&lt;/td&gt;&lt;td&gt;有効&lt;/td&gt;&lt;td&gt;有効&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;また、:filetypeコマンドで現在の状態を確認する事ができる。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;filetype detection:ON  plugin:ON  indent:OFF&lt;/pre&gt;
&lt;p&gt;rtpがなんなのかわからないけど、とりあえずこれにvundle.gitのパスを追加？　した後vundle#rcを呼んでる。vundle#rcメソッドはvundle.git/autoload/vundle.vimにあった。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;func! vundle#rc(...) abort
  let g:bundle_dir = len(a:000) &amp;gt; 0 ? expand(a:1    , 1) : expand(&#39;$HOME/.vim/bundle&#39;, 1)
  let g:vundle_log = []
  call vundle#config#init()
endf&lt;/pre&gt;
&lt;p&gt;vundleの初期化を行っているようだ。&lt;/p&gt;
&lt;h2&gt;プラグインの指定&lt;/h2&gt;
&lt;p&gt;実際にインストールするプラグインはvundle#rc()とfiletypeの間に記載していく。プラグインの指定方法は三つあり、書き方で自動判別してくれる？&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;GitHubのリポジトリを指定する場合…ユーザIDとリポジトリ名&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;Bundle &#39;user_name/repository_name&#39;&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;それ以外のGitリポジトリを指定…URLをフルパスで&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;Bundle &#39;git://repository_url&#39;&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://vim-scripts.org/vim/tools.html&quot;&gt;vim-scripts&lt;/a&gt;のリポジトリを指定…plugin名&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;Bundle &#39;plugin_name&#39;&lt;/pre&gt;
&lt;p&gt;今回は補完を行うneocomplecacheというプラグインをインストールしてみる。&lt;a href=&quot;https://github.com/Shougo/neocomplcache&quot;&gt;Shougo/neocomplcache · GitHub&lt;/a&gt; GitHubにあるので……。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;&amp;quot; vundle
set nocompatible
filetype off
set rtp+=~/.vim/vundle.git
call vundle#rc()

Bundle &#39;Shougo/neocomplcache&#39;

filetype plugin indent on&lt;/pre&gt;
&lt;p&gt;こうなる。これで:BundleInstallをすればいいんだけどその前に！&lt;/p&gt;
&lt;h2&gt;Windows環境で必須なもの&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/gmarik/vundle/wiki/Vundle-for-Windows&quot;&gt;Vundle for Windows · gmarik/vundle Wiki · GitHub&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Gitとcurlが必要だったようで。Gitは入っていたがcurlが入っていなかったので入れる。&lt;/p&gt;
&lt;p&gt;……というか、msysGitの中にcurlコマンドがあるのでそれを使えた。もしくは上記のページにあるcmdファイルを作成する。&lt;/p&gt;
&lt;h2&gt;httpで落としたい&lt;/h2&gt;
&lt;p&gt;Git://とかhttps;//が使えない場合、http://で落としたいんだけど、GitHub指定方法だとhttps://でgit cloneしようとしてうまくいかない。&lt;/p&gt;
&lt;p&gt;じゃあフルパス指定したらいけるかなと思ってこうしてみた。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;Bundle &#39;http://github.com/Shougo/neocomplcache&#39;&lt;/pre&gt;
&lt;p&gt;これでもhttps://でcloneされてしまう。困ったのでソースを見てみたら案外早く解決方法見つかった。.vim/vundle.git/autoload/vundle/config.vimの44行目くらいにプロトコルを指定しているところが。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt; let git_proto = exists(&#39;g:vundle_default_git_proto&#39;) ? g:vundle_default_gi
 t_proto : &#39;https&#39;&lt;/pre&gt;
&lt;p&gt;これをhttpにしてみたらDone!になった！　.vim/bundle/の下にプラグインが！&lt;/p&gt;
&lt;h1&gt;neocomplcache&lt;/h1&gt;
&lt;p&gt;.vim\bundle\neocomplcache\doc\neocomplcache.txtのEXAMPLES *neocomplcache-examples*より下を.vimrcにコピー。で、viを再起動したら補完が！&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Subversionでファイルを分けてコミットする</title>
   <link href="http://gosyujin.github.io/2012/04/02/1333369857"/>
   <updated>2012-04-02T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2012/04/02/1333369857</id>
   <content type="html">&lt;h1&gt;あらすじ&lt;/h1&gt;
&lt;p&gt;コマンドラインからファイルをたくさんコミットしたいんだけど、コミットログを分けたいので分割してコミットしたい。&lt;/p&gt;
&lt;h1&gt;参考サイト&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://www.caldron.jp/~nabetaro/svn/svnbook-1.5-final/html-chunk/svn.ref.svn.c.changelist.html&quot;&gt;svn changelist&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://d.hatena.ne.jp/namutaka/20110125/1295964889&quot;&gt;SVNでchangelistに所属していないファイルを扱う方法  - namutakaの日記&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://www-aos.eps.s.u-tokyo.ac.jp/~takagi/subversion.html#sec16&quot;&gt;http://www-aos.eps.s.u-tokyo.ac.jp/~takagi/subversion.html#sec16&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://blog.cgfm.jp/garyu/archives/83&quot;&gt;svnで間違ったコミットをmergeで戻すコマンドのメモ | 我流天性 がらくた屋&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;方法&lt;/h1&gt;
&lt;p&gt;なんかいっぱいファイルがあるとする。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$  ls
a001.html            a019.html            a037.html            a055.html            a073.html            a091.html
a002.html            a020.html            a038.html            a056.html            a074.html            a092.html
a003.html            a021.html            a039.html            a057.html            a075.html            a093.html
a004.html            a022.html            a040.html            a058.html            a076.html            a094.html
a005.html            a023.html            a041.html            a059.html            a077.html            a095.html
a006.html            a024.html            a042.html            a060.html            a078.html            a096.html
a007.html            a025.html            a043.html            a061.html            a079.html            a097.html
a008.html            a026.html            a044.html            a062.html            a080.html            a098.html
a009.html            a027.html            a045.html            a063.html            a081.html            a099.html
a010.html            a028.html            a046.html            a064.html            a082.html            index.html
a011.html            a029.html            a047.html            a065.html            a083.html            link.html
a012.html            a030.html            a048.html            a066.html            a084.html            menu.html
a013.html            a031.html            a049.html            a067.html            a085.html            product.html
a014.html            a032.html            a050.html            a068.html            a086.html
a015.html            a033.html            a051.html            a069.html            a087.html
a016.html            a034.html            a052.html            a070.html            a088.html
a017.html            a035.html            a053.html            a071.html            a089.html
a018.html            a036.html            a054.html            a072.html            a090.html&lt;/pre&gt;
&lt;p&gt;で、全部管理下。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$  svn  st
A              .
A              a048.html
A              a084.html
A              a076.html
A              a068.html
A              a096.html
A              product.html
A              a088.html
略&lt;/pre&gt;
&lt;p&gt;順番としては、index,  link,  menu,  productを一回目にコミット、その後はaxxx.htmlファイルを20個ずつコミットしていく全6回のコミット作業をしたい。&lt;/p&gt;
&lt;p&gt;毎回&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$  svn  commit  a001.html  a002.html  a003.html  ...  &lt;/pre&gt;
&lt;p&gt;とするのはめんどうくさいしミスもしそうなのでこれを上手くコミットしたい。いろいろありそうだけど、とりあえずいけそうだと思ったのはchangelist(cl)コマンドを使ってコミット毎にグループを作り、グループ単位で作業していくという戦法。&lt;/p&gt;
&lt;h2&gt;Changelist作成&lt;/h2&gt;
&lt;p&gt;changelist(cl)コマンドで特定のファイルをグループにできる。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$  svn  cl  CHANGE_LIST_NAME  FILE1  FILE2  ...  &lt;/pre&gt;
&lt;pre class=&quot;&quot;&gt;$  svn  cl  mainpage  index.html  link.html  menu.html  product.html
パス  &#39;index.html&#39;  は変更リスト  &#39;mainpage&#39;  に属しています。
パス  &#39;link.html&#39;  は変更リスト  &#39;mainpage&#39;  に属しています。
パス  &#39;menu.html&#39;  は変更リスト  &#39;mainpage&#39;  に属しています。
パス  &#39;product.html&#39;  は変更リスト  &#39;mainpage&#39;  に属しています。&lt;/pre&gt;
&lt;p&gt;これでindex,  link,  menu,  productはmainpageというグループに所属した。うーん。ここのファイル指定が手作業になっちゃうとあまり意味がないような気もするが……。ステータスを見るとちゃんと他のファイルｔ区別されている。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$  svn  st
A              .
A              a048.html
略
A              a092.html

---  変更リスト  &#39;mainpage&#39;:
A              product.html
A              menu.html
A              link.html
A              index.html&lt;/pre&gt;
&lt;p&gt;以後、index.htmlたちはchangelist  mainpageとして指定する事ができる。今回は連番なので一括で指定もできるがファイル名に統一性がない場合は一個ずつ指定するしかないかな。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$  svn  cl  a021-40  a0{21..40}.html
パス  &#39;a021.html&#39;  は変更リスト  &#39;a021-40&#39;  に属しています。
パス  &#39;a022.html&#39;  は変更リスト  &#39;a021-40&#39;  に属しています。
パス  &#39;a023.html&#39;  は変更リスト  &#39;a021-40&#39;  に属しています。
略&lt;/pre&gt;
&lt;p&gt;略。でchangelistが6つできた。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$  svn  st
---  変更リスト  &#39;a001-20&#39;:
A              a001.html
略
---  変更リスト  &#39;mainpage&#39;:
A              product.html
略
---  変更リスト  &#39;a021-40&#39;:
A              a021.html
略
---  変更リスト  &#39;a081-100&#39;:
A              a084.html
略
---  変更リスト  &#39;a041-60&#39;:
A              a048.html
略
---  変更リスト  &#39;a061-80&#39;:
A              a076.html
略&lt;/pre&gt;
&lt;h2&gt;Commit&lt;/h2&gt;
&lt;p&gt;commitコマンドに--changelistオプションを指定。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$  svn  commit  --changelist  CHECK_LIST_NAME&lt;/pre&gt;
&lt;p&gt;changelistを指定すると……&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$  svn  commit  --changelist  mainpage
          1
          2    --  この行以下は無視されます  --
          3
          4    A        checklistdir/product.html
          5    A        checklistdir/menu.html
          6    A        checklistdir/link.html
          7    A        checklistdir/index.html&lt;/pre&gt;
&lt;p&gt;そのグループのファイルだけが選択される。一回コミットするとchangelistはなくなるが、--keep-changelistsオプションを使えば残したままにできる。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$  svn  commit  --cl  mainpage  --keep-changelists&lt;/pre&gt;
&lt;p&gt;ステータスを見ると残っている！　ただし、ファイルの変更はないのでAとかMとかはついていない。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$  svn  st
略
---  変更リスト  &#39;mainpage&#39;:
                product.html
                menu.html
                link.html
                index.html&lt;/pre&gt;
&lt;p&gt;とりあえずこんな感じか。&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>BPStudy#55に参加しました</title>
   <link href="http://gosyujin.github.io/2012/04/01/1333220954"/>
   <updated>2012-04-01T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2012/04/01/1333220954</id>
   <content type="html">&lt;h1&gt;詳細: &lt;a href=&quot;http://connpass.com/event/354/&quot;&gt;BPStudy#55 - connpass&lt;/a&gt;&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;Heroku大好き&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;ということで参加しました。&lt;/p&gt;
&lt;h1&gt;第1部 Heroku @&lt;a href=&quot;http://twitter.com/herokujp&quot;&gt;heroku JP (herokujp)さんはTwitterを使っています&lt;/a&gt;さん(相澤歩さん、Heroku Inc., Developer Marketing Advocate)&lt;/h1&gt;
&lt;h2&gt;Herokuとは&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;元々Rubyアプリケーションをデプロイするサービスだった。&lt;/li&gt;&lt;li&gt;今はJavaとかScalaとか&lt;ul&gt;&lt;li&gt;最近はFacebookアプリの影響でPHPが多い！&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;Heroku=Rubyと思っていたので、(実際それで使っていたのもある)最近はjsやJava使えたというのが個人的に驚き。さらに最近はPHPも多いという事らしい。ただしBPStudyの会場で聞いたところ。&lt;/p&gt;
&lt;p&gt;&lt;blockquote class=&quot;twitter-tweet&quot; lang=&quot;ja&quot;&gt;&lt;p&gt;&lt;a href=&quot;https://twitter.com/search/%2523bpstudy&quot;&gt;#bpstudy&lt;/a&gt; Herokuを何で使ってますか→Python、Rubyそこそこ、Java、Scalaもある程度、PHPなどがほぼいない&lt;/p&gt;&amp;mdash; ごしゅじんさん (@kk_Ataka) &lt;a href=&quot;https://twitter.com/kk_Ataka/status/185678418275336193&quot; data-datetime=&quot;2012-03-30T10:42:39+00:00&quot;&gt;3月 30, 2012&lt;/a&gt;&lt;/blockquote&gt;&lt;/p&gt;
&lt;p&gt;懇親会での話によると「あの空気では手を挙げられない」ということだったらしい。&lt;/p&gt;
&lt;h2&gt;Herokuって何？　改めて再定義&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;単なるホスティングサービス？&lt;ul&gt;&lt;li&gt;いいえ、PaaSです&lt;/li&gt;&lt;li&gt;ホスティングサービスと何が違うの？&lt;/li&gt;&lt;li&gt;開発者がサーバの管理とかスケーラビリティを意識せずに製品を作れるように&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;生産性の低いプログラマを底上げするものではない&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;できるプログラマをさらに引き上げてくれるサービス&lt;/li&gt;&lt;li&gt;Rubyの思想と似ているかも(＝ある程度できる人向けのもの)&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;今後Herokuを使う人へ&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;Herokuで色々やってTwitter, GitHubなどで情報発信してみてください&lt;/li&gt;&lt;li&gt;Add onを作ってマーケットプレイスに登録もできるよ、売れるよ！&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;第2部 SonicGardenでのherokuの実践活用 Sonic Garden 松村さん(@&lt;a href=&quot;http://twitter.com/mat_aki&quot;&gt;Akihiro Matsumura (mat_aki)さんはTwitterを使っています&lt;/a&gt;さん)&lt;/h1&gt;
&lt;h2&gt;Sonic Gardenとは&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;受託一括納品についての問題点を解決する&lt;ul&gt;&lt;li&gt;&quot;納品しない&quot;受託開発&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;「Heroku」でググると4番目に出る&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;Sonic Gardenのソフトウェア開発について&lt;/h2&gt;
&lt;p&gt;Sonic Gardenでは6~7人で人数以上のプロジェクトを走らせている=一人が複数のプロジェクトを掛け持ちしている。以下のようなツールを使っている。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://www.pivotaltracker.com/&quot;&gt;Pivotal Tracker - Simple, Agile Project Management Software &amp;amp; Team Collaboration&lt;/a&gt;(ITS)&lt;ul&gt;&lt;li&gt;RedmineやTracのようなチケット管理システム&lt;/li&gt;&lt;li&gt;何がいいの？　→優先度がない&lt;ul&gt;&lt;li&gt;チケットに関しては結局は上から順番にやっていくしかない&lt;/li&gt;&lt;li&gt;昔は優先度をつけていたが、「高」が複数できて一体どれが高なんだ状態に&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://youroom.in/&quot;&gt;youRoom - Task management is communication&lt;/a&gt;(社内Twitter的)&lt;ul&gt;&lt;li&gt;プロダクトオーナーとプログラマーが密にコミュニケーションを取れる&lt;/li&gt;&lt;li&gt;これどうしよっかな？　的なチケットに落とす前の案はまずここに&lt;/li&gt;&lt;li&gt;文字数制限があるので「お世話になっております」とかない&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;GitHub&lt;ul&gt;&lt;li&gt;おなじみ&lt;/li&gt;&lt;li&gt;ソース管理&lt;/li&gt;&lt;li&gt;システムが動かない状態ではpushしない&lt;/li&gt;&lt;li&gt;ソースコードレビューもGitHubで&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Skype(週一でのMTG)&lt;ul&gt;&lt;li&gt;youRoomなどで密にコミュニケーションしてたら週一の報告いらないんじゃない？&lt;ul&gt;&lt;li&gt;期限を作るため必要&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;ホワイトボードとMVP&lt;ul&gt;&lt;li&gt;設計書は本当に必要最小限なものだけ作成&lt;/li&gt;&lt;li&gt;設計書はホワイトボード、動くコードが大事&lt;/li&gt;&lt;li&gt;一番キモとなる機能(MVP)をユーザと決定し、まずはその機能を作りこみリリースする&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;お客にもこの手法に倣ってもらう。メールのやり取りはありません！&lt;/p&gt;
&lt;h2&gt;Sonic GardenではどのようにHerokuを使っているのか&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;Herokuの課題&lt;ul&gt;&lt;li&gt;ログを数年レベルでサポートしたい&lt;ul&gt;&lt;li&gt;logglyというアドオンでログを保存&lt;/li&gt;&lt;li&gt;そのログをさらにAmazon S3へ退避&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Heroku自体が死んだ時どうする？&lt;ul&gt;&lt;li&gt;サービスレベルを下げない&lt;/li&gt;&lt;li&gt;DBをS3にバックアップしておいてどうしても復活しないときはS3でサービスを起動させる&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;最後はライブコーディング。なんとライブコーディングなのにコーディング一切せず動くところまでいった。その他Git道場というイベントのCMも。&lt;/p&gt;
&lt;p&gt;&lt;blockquote class=&quot;twitter-tweet&quot; lang=&quot;ja&quot;&gt;&lt;p&gt;&lt;a href=&quot;https://twitter.com/search/%2523bpstudy&quot;&gt;#bpstudy&lt;/a&gt; 4/22 大崎 Git道場 rebase, mergeを恐れずにできるようになる&lt;/p&gt;&amp;mdash; ごしゅじんさん (@kk_Ataka) &lt;a href=&quot;https://twitter.com/kk_Ataka/status/185690782274039809&quot; data-datetime=&quot;2012-03-30T11:31:47+00:00&quot;&gt;3月 30, 2012&lt;/a&gt;&lt;/blockquote&gt;&lt;/p&gt;
&lt;p&gt;&lt;blockquote class=&quot;twitter-tweet&quot; lang=&quot;ja&quot;&gt;&lt;p&gt;&lt;a href=&quot;https://twitter.com/search/%2523bpstudy&quot;&gt;#bpstudy&lt;/a&gt; 心:なぜGitを使うのか、技:コマンドを学ぶ、体:ひたすら練習をし、終わったら帰るイベント、懇親会はない&lt;/p&gt;&amp;mdash; ごしゅじんさん (@kk_Ataka) &lt;a href=&quot;https://twitter.com/kk_Ataka/status/185691196423798784&quot; data-datetime=&quot;2012-03-30T11:33:25+00:00&quot;&gt;3月 30, 2012&lt;/a&gt;&lt;/blockquote&gt;&lt;/p&gt;
&lt;p&gt;よし！　もっとHeroku使う！&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>simplecovとsimplecov-rcovを使ってJenkinsでカバレッジを確認</title>
   <link href="http://gosyujin.github.io/2012/03/27/1332856400"/>
   <updated>2012-03-27T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2012/03/27/1332856400</id>
   <content type="html">&lt;h1&gt;あらすじ&lt;/h1&gt;
&lt;p&gt;rcovインストールに思いの他てこずったので他のツールを検討してみる。&lt;/p&gt;
&lt;p&gt;調べるとsimplecov,simplecov-rcovというツールでもいける様子。Ruby1.9系のカバレッジツールらしいが1.8でも使えるだろうか。あとRailsじゃなくても使えるのかな。&lt;/p&gt;
&lt;h1&gt;参考サイト&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/colszowka/simplecov&quot;&gt;colszowka/simplecov · GitHub&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/fguillen/simplecov-rcov&quot;&gt;fguillen/simplecov-rcov · GitHub&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;手順(Getting Startedをかなりはしょりながら)&lt;/h1&gt;
&lt;h2&gt;Simplecov&lt;/h2&gt;
&lt;p&gt;Gemfileに以下を追加。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;gem &#39;simplecov&#39;&lt;/pre&gt;
&lt;p&gt;次にspecファイルに以下のrequireを追加。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;require &#39;simplecov&#39;
SimpleCov.start&lt;/pre&gt;
&lt;p&gt;そしてrspecを実行。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ bundle exec rspec -fs spec\convert_spec.rb
WARNING: SimpleCov is activated, but you&#39;re not running Ruby 1.9+ - no coverage analysis will happen
WARNING: SimpleCov is activated, but you&#39;re not running Ruby 1.9+ - no coverage analysis will happen&lt;/pre&gt;
&lt;p&gt;やっぱ1.8じゃだめかー。ちょっとRuby1.9系で試してみる。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ bundle exec rspec -fs spec\convert_spec.rb

(略)

Coverage report generated for RSpec to C:/project/excel_for_ruby/coverage. 87
/ 93 LOC (93.55%) covered.&lt;/pre&gt;
&lt;p&gt;テストは失敗したけど、coverageディレクトリが作成された！　中のindex.htmlを開くと……。&lt;/p&gt;
&lt;p&gt;おおー！&lt;/p&gt;
&lt;h2&gt;Simplecov-rcov&lt;/h2&gt;
&lt;p&gt;JenkinsのRuby metrics plugin用にSimpleCovで出力したカバレッジをrcovフォーマットになおしてくれる？&lt;/p&gt;
&lt;p&gt;Gemfileに以下を追加。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;gem &#39;simplecov-rcov&#39;&lt;/pre&gt;
&lt;p&gt;次にspecファイルに以下のrequireを追加。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;require &#39;simplecov-rcov&#39;
SimpleCov.formatter = SimpleCov::Formatter::RcovFormatter&lt;/pre&gt;
&lt;p&gt;そしてrspecを実行。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ bundle exec rspec -fs spec\convert_spec.rb

(略)

Coverage report Rcov style generated for RSpec to C:/project/excel_for_ruby/coverage/rcov&lt;/pre&gt;
&lt;p&gt;ちょっと表記が変わった。coverageの下にrcovという新しいディレクトリが出来ている。その下にindex.html。&lt;/p&gt;
&lt;h2&gt;Jenkins&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;Jenkinsの管理 -&gt; プラグインの管理からRuby metrics pluginをインストール&lt;/li&gt;&lt;li&gt;プロジェクトの設定 -&gt; ビルド後の処理 -&gt; Publish Rcov reportにチェック&lt;/li&gt;&lt;/ul&gt;</content>
 </entry>
 
 <entry>
   <title>Windows環境用にrcovをビルドしなおす手順</title>
   <link href="http://gosyujin.github.io/2012/03/20/1332240122"/>
   <updated>2012-03-20T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2012/03/20/1332240122</id>
   <content type="html">&lt;h1&gt;あらすじ&lt;/h1&gt;
&lt;p&gt;Jenkinsでビルドしていくとともにカバレッジの調査もしたい。rcovというツールでカバレッジを出す事ができるらしい。&lt;/p&gt;
&lt;h1&gt;参考サイト&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/relevance/rcov&quot;&gt;relevance/rcov · GitHub&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://rubygems.org/gems/rcov&quot;&gt;rcov | RubyGems.org | your community gem host&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://www.freia.jp/taka/blog/762/&quot;&gt;2011/09/06 Rubyのrcov-0.9.8 for Windows のビルド - 清水川Web&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;先に結論&lt;/h1&gt;
&lt;p&gt;Windows環境ではWindows用に自力でビルドしなければならない！&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://rubygems.org/gems/rcov&quot;&gt;rcov | RubyGems.org | your community gem host&lt;/a&gt;よりgemをDL&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://www.microsoft.com/japan/msdn/vstudio/express/&quot;&gt;Microsoft Visual Studio Express&lt;/a&gt;からVisual C++ 2010 Express Editionを入手しインストール&lt;/li&gt;&lt;li&gt;全てのプログラム -&gt; Microsoft Visual Studio 2010 Express -&gt; Visual Studio コマンド プロンプト (2010)を起動。以後ビルドはこのプロンプトで実施する&lt;/li&gt;&lt;li&gt;%RUBY_HOME%\lib\ruby\1.8\i386-mswin32\のconfig.hのMSC_VERの記述を一旦消す&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;#if _MSC_VER != 1200
#error MSC version unmatch: _MSC_VER: 1200 is expected.
#endif&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;env.hのFRAMEを以下のように編集&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;extern struct FRAME {&lt;/pre&gt;
&lt;pre class=&quot;&quot;&gt;extern __declspec(dllimport) struct FRAME {&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;gem install！！&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;以下は四苦八苦した記録の残骸。&lt;/p&gt;
&lt;h1&gt;手順(本当に順番をメモっているのでいらない操作が多い)&lt;/h1&gt;
&lt;h2&gt;rcovインストール&lt;/h2&gt;
&lt;p&gt;BundlerでGemを管理するのでGemfileにrcovを追加。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;gem &#39;rcov&#39;&lt;/pre&gt;
&lt;p&gt;追加後、インストール……&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ bundle install&lt;/pre&gt;
&lt;p&gt;するとエラーが。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;C:/rubies/Ruby/bin/ruby.exe extconf.rb
creating Makefile

nmake
&#39;nmake&#39; は、内部コマンドまたは外部コマンド、
操作可能なプログラムまたはバッチ ファイルとして認識されていません。


Gem files will remain installed in C:/project/excel_for_ruby/vendor/bundle/ruby/1.8/gemsResults logged to C:/project/excel_for_ruby/vendor/bundle/ruby/1.8/gems/rcov-1.0.0/ext/rAn error occured while installing rcov (1.0.0), and Bundler cannot continue.
Make sure that `gem install rcov -v &#39;1.0.0&#39;` succeeds before bundling.&lt;/pre&gt;
&lt;p&gt;bundlingする前にgem install rcov -v &#39;1.0.0&#39;してくれと？　Bundler管理下にはおけないのだろうか。&lt;/p&gt;
&lt;p&gt;じゃあGemfileから記述を消して、ターミナルからgem installするか。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ gem install rcov -v &#39;1.0.0&#39;

nmake
&#39;nmake&#39; は、内部コマンドまたは外部コマンド、
操作可能なプログラムまたはバッチ ファイルとして認識されていません。&lt;/pre&gt;
&lt;p&gt;結局nmakeがないといわれているので、まずnmakeを落とすか。&lt;/p&gt;
&lt;h2&gt;nmakeインストール&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;http://johnbokma.com/perl/make-for-windows.html&quot;&gt;Make for Microsoft Windows: NMake&lt;/a&gt; のページにyou have to download NMake 1.5 from the Microsoft Knowledge Base, article 132084 page.と記載されているのでリンクをたどりnmakeをDLし、パスが通っているフォルダへ突っ込む。(デフォルトだとnmake15.exeのようにバージョンがファイル名にくっついているっぽいのでnmake.exeにリネームしておく)&lt;/p&gt;
&lt;p&gt;再度。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ gem install rcov -v &#39;1.0.0&#39;
Building native extensions.  This could take a while...
ERROR:  Error installing rcov:
        ERROR: Failed to build gem native extension.

C:/rubies/Ruby/bin/ruby.exe extconf.rb
creating Makefile

nmake

Microsoft (R) Program Maintenance Utility   Version 1.50
Copyright (c) Microsoft Corp 1988-94. All rights reserved.

        cl -nologo -I. -IC:/rubies/Ruby/lib/ruby/1.8/i386-mswin32 -IC:/rubies/Ru
by/lib/ruby/1.8/i386-mswin32 -I1.8/ -MD -Zi  -O2b2xg- -G6  -c -Tc1.8//callsite.c

&#39;cl&#39; は、内部コマンドまたは外部コマンド、
操作可能なプログラムまたはバッチ ファイルとして認識されていません。
NMAKE : fatal error U1077: &#39;C:\WINDOWS\system32\cmd.exe&#39; : return code &#39;0x1&#39;
Stop.


Gem files will remain installed in C:/rubies/Ruby/lib/ruby/gems/1.8/gems/rcov-1.
0.0 for inspection.
Results logged to C:/rubies/Ruby/lib/ruby/gems/1.8/gems/rcov-1.0.0/ext/rcovrt/ge
m_make.out
&lt;/pre&gt;
&lt;p&gt;まだ駄目？　clとはC Compilerの事らしい。手に入れるには&lt;a href=&quot;http://www.microsoft.com/japan/msdn/vstudio/express/&quot;&gt;Microsoft Visual Studio Express&lt;/a&gt;からVisual C++ 2010 Express Editionをインストールするくらいしか方法がないみたい。&lt;/p&gt;
&lt;p&gt;......インストール中.......3時間くらいかかった&lt;/p&gt;
&lt;p&gt;で、インストールフォルダにcl.exeが作成されるので、これを実行！&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ cd C:\Program Files\Microsoft Visual Studio 10.0\VC\bin
$ cl

mspdb100.dllが見つからなかったため、このアプリケーションを開始できませんでした。&lt;/pre&gt;
&lt;p&gt;なん……だと……やはりコマンドラインから実行するのは無理？&lt;/p&gt;
&lt;p&gt;とりあえずmspdb100.dllを探してみる…と、C:\Program Files\Microsoft Visual Studio 10.0\Common7\IDEにあった。これをclと同じフォルダに持ってくると……。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ cl
Microsoft(R) 32-bit C/C++ Optimizing Compiler Version 16.00.30319.01 for 80x86
Copyright (C) Microsoft Corporation.  All rights reserved.

使い方: cl [ オプション... ] ファイル名... [ /link リンク オプション... ]&lt;/pre&gt;
&lt;p&gt;きたー！　じゃあこのcl.exeとmspdb100.dllをパスの通ってる場所にコピーして……再度gem！&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ gem install rcov -v &#39;1.0.0&#39;
Building native extensions.  This could take a while...
ERROR:  Error installing rcov:
        ERROR: Failed to build gem native extension.

C:/rubies/Ruby/bin/ruby.exe extconf.rb
creating Makefile

nmake

Microsoft (R) Program Maintenance Utility   Version 1.50
Copyright (c) Microsoft Corp 1988-94. All rights reserved.

        cl -nologo -I. -IC:/rubies/Ruby/lib/ruby/1.8/i386-mswin32 -IC:/rubies/Ruby/lib/ruby/1.8/i386-mswin32 -I1.8/ -MD -Zi  -O2b2xg- -G6c -Tc1.8//callsite.c
fatal error C1510: Cannot load language resource clui.dll.
NMAKE : fatal error U1077: &#39;C:\WINDOWS\system32\cmd.exe&#39; : return code &#39;0x4&#39;
Stop.


Gem files will remain installed in C:/rubies/Ruby/lib/ruby/gems/1.8/gems/rcov-1.0.0 for inspection.
Results logged to C:/rubies/Ruby/lib/ruby/gems/1.8/gems/rcov-1.0.0/ext/rcovrt/gem_make.ou&lt;/pre&gt;
&lt;p&gt;エラった！　っけど一歩進んだ？clui.dllがないと。うーん。&lt;/p&gt;
&lt;p&gt;ここで全てのプログラムにMicrosoft Visual Studio 2010 Express -&gt; Visual Studio コマンド プロンプト (2010)というメニューが増えている事に気づく。きちんとVisual Studio用の設定がなされていなかったから失敗したんだ多分！　再度挑戦。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;C:\rubies\Ruby\lib\ruby\gems\1.8\cache&amp;gt;gem install --local rcov-1.0.0.gem
Building native extensions.  This could take a while...
ERROR:  Error installing rcov-1.0.0.gem:
        ERROR: Failed to build gem native extension.

C:/rubies/Ruby/bin/ruby.exe extconf.rb
creating Makefile

nmake

Microsoft (R) Program Maintenance Utility   Version 1.50
Copyright (c) Microsoft Corp 1988-94. All rights reserved.

        cl -nologo -I. -IC:/rubies/Ruby/lib/ruby/1.8/i386-mswin32 -IC:/rubies/Ruby/lib/ruby/1.8/i386-mswin32 -I1.8/ -MD -Zi  -O2b2xg- -G6  -c -Tc1.8//callsite.c

cl : コマンド ライン warning D9035 : オプション &#39;Og-&#39; の使用は現在推奨されていません。今後のバージョンからは削除されます。
cl : コマンド ライン warning D9002 : 不明なオプション &#39;-G6&#39; を無視します
callsite.c
c:\rubies\ruby\lib\ruby\1.8\i386-mswin32\config.h(2) : fatal error C1189: #error :  MSC version unmatch: _MSC_VER: 1200 is expected.
NMAKE : fatal error U1077: &#39;C:\WINDOWS\system32\cmd.exe&#39; : return code &#39;0x2&#39;
Stop.


Gem files will remain installed in C:/rubies/Ruby/lib/ruby/gems/1.8/gems/rcov-1.0.0 for inspection.
Results logged to C:/rubies/Ruby/lib/ruby/gems/1.8/gems/rcov-1.0.0/ext/rcovrt/gem_make.out&lt;/pre&gt;
&lt;p&gt;お！　ちょっと進んだ。MSC_VERがアンマッチになっているようなので、これをなおす。c:\rubies\ruby\lib\ruby\1.8\i386-mswin32\のconfig.hを開き編集。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;#if _MSC_VER != 1200
#error MSC version unmatch: _MSC_VER: 1200 is expected.
#endif&lt;/pre&gt;
&lt;p&gt;これを一時的に退避させる。んで、再度。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;        cl -nologo -LD -Fercovrt.so callsite.obj rcovrt.obj msvcrt-ruby18.lib  oldnames.lib user32.lib advapi32.lib shell32.lib ws2_32.lib   -link -incremental:no -debug -opt:ref -opt:icf -dll -libpath:&amp;quot;.&amp;quot; -libpath:&amp;quot;C:/rubies/Ruby/lib&amp;quot;  -implib:rcovrt-i386-mswin32.lib -pdb:rcovrt-i386-mswin32.pdb -def:rcovrt-i386-mswin32.def
   ライブラリ rcovrt-i386-mswin32.lib とオブジェクト rcovrt-i386-mswin32.exp を作成中
callsite.obj : error LNK2001: 外部シンボル &amp;quot;_ruby_frame&amp;quot; は未解決です。
rcovrt.obj : error LNK2019: 未解決の外部シンボル _ruby_frame が関数 _coverage_in
crease_counter_uncached で参照されました。
rcovrt.so : fatal error LNK1120: 外部参照 1 が未解決です。
NMAKE : fatal error U1077: &#39;C:\WINDOWS\system32\cmd.exe&#39; : return code &#39;0x2&#39;
Stop.


Gem files will remain installed in C:/rubies/Ruby/lib/ruby/gems/1.8/gems/rcov-1.0.0 for inspection.
Results logged to C:/rubies/Ruby/lib/ruby/gems/1.8/gems/rcov-1.0.0/ext/rcovrt/gem_make.out&lt;/pre&gt;
&lt;p&gt;おおおなんか見つからないって出てきた……。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.freia.jp/taka/blog/762/&quot;&gt;2011/09/06 Rubyのrcov-0.9.8 for Windows のビルド - 清水川Web&lt;/a&gt;という事らしいので、env.hを編集。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;extern struct FRAME {&lt;/pre&gt;
&lt;pre class=&quot;&quot;&gt;extern __declspec(dllimport) struct FRAME {&lt;/pre&gt;
&lt;p&gt;に。いざ！&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;C:\rubies\Ruby\lib\ruby\gems\1.8\cache&amp;gt;gem install --local rcov-1.0.0.gem
Building native extensions.  This could take a while...
Successfully installed rcov-1.0.0
1 gem installed
Installing ri documentation for rcov-1.0.0...
Installing RDoc documentation for rcov-1.0.0...&lt;/pre&gt;
&lt;p&gt;きたーーー！&lt;/p&gt;
&lt;p&gt;が、なんかカバレッジの表示のされかたがおかしい？　メソッドの一行目しかグリーンにならないから網羅率が超低くなる。。オプションとかなのかなー。これは早々にRuby1.9でSimplecov使えという事なのだろうか。&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Pro Gitと入門gitでGitの復習 マージ編</title>
   <link href="http://gosyujin.github.io/2012/03/15/1331816663"/>
   <updated>2012-03-15T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2012/03/15/1331816663</id>
   <content type="html">&lt;h1&gt;前回までのあらすじ&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;2012-03-05-1330951640&quot;&gt;2012-03-05-1330951640&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://d.hatena.ne.jp/kk_Ataka/&quot;&gt;kk_Atakaの日記&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;今回はマージから。&lt;/p&gt;
&lt;h1&gt;参考&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://progit.org/&quot;&gt;Git - Book&lt;/a&gt;&lt;/li&gt;&lt;li&gt;入門git&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;マージ&lt;/h1&gt;
&lt;h2&gt;前準備&lt;/h2&gt;
&lt;p&gt;ここでブランチ用にリポジトリを作りなおした。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ cat field.html
&amp;lt;h1&amp;gt;僕にその手を汚せというのか&amp;lt;/h1&amp;gt;&lt;/pre&gt;
&lt;p&gt;というファイルを作成し、chapter1というブランチを切る。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git branch chapter1

$ git branch
   chapter1
 * master&lt;/pre&gt;
&lt;p&gt;ブランチはこうなるはず。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt; *master/chapter1/HEAD
 ↓
 ↓
 ○
　&lt;/pre&gt;
&lt;p&gt;次にchapter2を作成し、ブランチ切り替え。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git checkout -b chapter2law chapter1
Switched to a new branch &#39;chapter2law&#39;
&lt;/pre&gt;
&lt;p&gt;文言を追加し、コミット。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ cat field.html
&amp;lt;h1&amp;gt;僕にその手を汚せというのか&amp;lt;/h1&amp;gt;
&amp;lt;h2&amp;gt;誰も僕を責めることはできない&amp;lt;/h2&amp;gt;

$ git commit -a -m &amp;quot;Add chapter2 law route&amp;quot;&lt;/pre&gt;
&lt;p&gt;ブランチはこうなるはず。chapter2lawに切り替えているのでHEADもこちらへ。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;master/chapter1
↓　*chapter2law/HEAD
↓　↓
↓┌○
○┘
　&lt;/pre&gt;
&lt;p&gt;同様にchapter3lawも作る。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git checkout -b chapter3law chapter2law
Switched to a new branch &#39;chapter3law&#39;

$ cat field.html
&amp;lt;h1&amp;gt;僕にその手を汚せというのか&amp;lt;/h1&amp;gt;
&amp;lt;h2&amp;gt;誰も僕を責めることはできない&amp;lt;/h2&amp;gt;
&amp;lt;h3&amp;gt;欺き欺かれて&amp;lt;/h3&amp;gt;

$ git commit -a -m &amp;quot;Add chapter3 law route&amp;quot;&lt;/pre&gt;
&lt;pre class=&quot;&quot;&gt;master/chapter1
↓　chapter2law
↓　↓　*chapter3law/HEAD
↓　↓　↓
↓┌○─○
○┘
　&lt;/pre&gt;
&lt;p&gt;ここでchapter1から派生させて、馬鹿な事はやめるんだッ！　と新しいブランチを作成。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git checkout -b chapter2chaos chapter1
Switched to a new branch &#39;chapter2chaos&#39;&lt;/pre&gt;
&lt;p&gt;chapter1を元にcheckout -bしたのでファイルの中身を見るとh1タグしかない状態に戻っている。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ cat field.html
&amp;lt;h1&amp;gt;僕にその手を汚せというのか&amp;lt;/h1&amp;gt;&lt;/pre&gt;
&lt;p&gt;また文言を追加しコミット。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ cat field.html
&amp;lt;h1&amp;gt;僕にその手を汚せというのか&amp;lt;/h1&amp;gt;
&amp;lt;h2&amp;gt;思いどおりにいかないのが世の中なんて割り切りたくないから&amp;lt;/h2&amp;gt;

$ git commit -a -m &amp;quot;Add chapter2 chaos route&amp;quot;&lt;/pre&gt;
&lt;pre class=&quot;&quot;&gt;master/chapter1
↓　chapter2law
↓　↓　chapter3law
↓　↓　↓
↓┌○─○
↓│
○┴○
　　↑
　　*chapter2chaos/HEAD&lt;/pre&gt;
&lt;p&gt;この調子でchapter3neutralとchapter3chaosブランチを作る。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git checkout -b chapter3neutral chapter2chaos
Switched to a new branch &#39;chapter3neutral&#39;

$ cat field.html
&amp;lt;h1&amp;gt;僕にその手を汚せというのか&amp;lt;/h1&amp;gt;
&amp;lt;h2&amp;gt;思いどおりにいかないのが世の中なんて割り切りたくないから&amp;lt;/h2&amp;gt;
&amp;lt;h3&amp;gt;すくいきれないもの&amp;lt;/h3&amp;gt;

$ git commit -a -m &amp;quot;Add chapter3 neutral route&amp;quot;

$ git checkout -b chapter3chaos chapter2chaos
Switched to a new branch &#39;chapter3chaos&#39;

$ cat field.html
&amp;lt;h1&amp;gt;僕にその手を汚せというのか&amp;lt;/h1&amp;gt;
&amp;lt;h2&amp;gt;思いどおりにいかないのが世の中なんて割り切りたくないから&amp;lt;/h2&amp;gt;
&amp;lt;h3&amp;gt;駆り立てるのは野心と欲望、横たわるのは犬と豚&amp;lt;/h3&amp;gt;

$ git commit -a -m &amp;quot;Add chapter3 chaos route&amp;quot;&lt;/pre&gt;
&lt;pre class=&quot;&quot;&gt;master/chapter1
↓　chapter2law
↓　↓　chapter3law
↓　↓　↓
↓┌○─○
↓│
○┴○┬○
　　↑│↑
　　↑│chapter3neutral
　　↑└○
　　↑　↑
　　↑　*chapter3chaos/HEAD
　　chapter2chaos&lt;/pre&gt;
&lt;p&gt;logコマンドで見てみる。あってるかな。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git log --graph --date-order --all --date=short -C -M --pretty=format:&amp;quot;%h&amp;quot;\ %ad\ %cn\ %Cgreen%d%Cre
set\ %s
 * 2078f0a 2012-03-07 kk_Ataka  (HEAD, chapter3chaos) Add chapter3 chaos route
 | * 427a08c 2012-03-07 kk_Ataka  (chapter3neutral) Add chapter3 neutral route
 |/
 * 416daca 2012-03-07 kk_Ataka  (chapter2chaos) Add chapter2 chaos route
 | * 3dc258a 2012-03-07 kk_Ataka  (chapter3law) Add chapter3 law route
 | * cae3956 2012-03-07 kk_Ataka  (chapter2law) Add chapter2 law route
 |/
 * 9d2e5d1 2012-03-07 kk_Ataka  (master, chapter1) typo
 * 4e0ebaa 2012-03-07 kk_Ataka  Add chapter 1
 * 338a929 2012-03-07 kk_Ataka  First commit&lt;/pre&gt;
&lt;h2&gt;いよいよマージ&lt;/h2&gt;
&lt;p&gt;最後に今わかれているlaw,chaos,neutralのブランチをchapter4にマージする。まずは久々にmasterブランチに戻る。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git checkout master
Switched to branch &#39;master&#39;

$ cat field.html
&amp;lt;h1&amp;gt;僕にその手を汚せというのか&amp;lt;/h1&amp;gt;&lt;/pre&gt;
&lt;p&gt;merge [branch]コマンドでまずchapter3lawをマージ。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git merge chapter3law
Updating 9d2e5d1..3dc258a
Fast-forward
 field.html |    2 ++
 1 files changed, 2 insertions(+), 0 deletions(-)
 
$ cat field.html
&amp;lt;h1&amp;gt;僕にその手を汚せというのか&amp;lt;/h1&amp;gt;
&amp;lt;h2&amp;gt;誰も僕を責めることはできない&amp;lt;/h2&amp;gt;
&amp;lt;h3&amp;gt;欺き欺かれて&amp;lt;/h3&amp;gt;&lt;/pre&gt;
&lt;p&gt;マージ元のブランチ(master)がマージ先のブランチ(chapter3law)の親である場合、&quot;直接到達できる&quot;という事なので、masterブランチをそのままchapter3lawまですすめられた。&lt;/p&gt;
&lt;p&gt;本来は、ここでchapter3lawブランチは削除するらしい(masterにすべてマージされたからもう必要ないであろうということ？)が、記念に残しておく。&lt;/p&gt;
&lt;p&gt;次にchaosルートも取り込む。コマンドは同じだが、出力が少し違う。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git merge chapter3chaos
Auto-merging field.html
CONFLICT (content): Merge conflict in field.html
Automatic merge failed; fix conflicts and then commit the result.&lt;/pre&gt;
&lt;p&gt;コンフリクトが起きたようだ。競合を解決してくださいとファイルが編集されるのでステータスも変わる。しかもメッセージもいつもと違う。Unmerged pathとか出る。&lt;/p&gt;
&lt;p&gt;いつもの。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git status
# On branch master
# Untracked files:
#   (use &amp;quot;git add &amp;lt;file&amp;gt;...&amp;quot; to include in what will be committed)
#
#       README
nothing added to commit but untracked files present (use &amp;quot;git add&amp;quot; to track)&lt;/pre&gt;
&lt;p&gt;今回の。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git status
# On branch master
# Unmerged paths:
#   (use &amp;quot;git add/rm &amp;lt;file&amp;gt;...&amp;quot; as appropriate to mark resolution)
#
#       both modified:      field.html
#
no changes added to commit (use &amp;quot;git add&amp;quot; and/or &amp;quot;git commit -a&amp;quot;)&lt;/pre&gt;
&lt;p&gt;ファイルを見てみる。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ cat field.html
&amp;lt;h1&amp;gt;僕にその手を汚せというのか&amp;lt;/h1&amp;gt;
&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt; HEAD
&amp;lt;h2&amp;gt;誰も僕を責めることはできない&amp;lt;/h2&amp;gt;
&amp;lt;h3&amp;gt;欺き欺かれて&amp;lt;/h3&amp;gt;
=======
&amp;lt;h2&amp;gt;思いどおりにいかないのが世の中なんて割り切りたくないから&amp;lt;/h2&amp;gt;
&amp;lt;h3&amp;gt;駆り立てるのは野心と欲望、横たわるのは犬と豚&amp;lt;/h3&amp;gt;
&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; chapter3chaos&lt;/pre&gt;
&lt;p&gt;今マージしたchapter3law=master=HEADとchapter3chaosで競合。とりあえずそのまま追記追記するように。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ cat field.html
&amp;lt;h1&amp;gt;僕にその手を汚せというのか&amp;lt;/h1&amp;gt;
&amp;lt;h2&amp;gt;誰も僕を責めることはできない&amp;lt;/h2&amp;gt;
&amp;lt;h3&amp;gt;欺き欺かれて&amp;lt;/h3&amp;gt;
&amp;lt;h2&amp;gt;思いどおりにいかないのが世の中なんて割り切りたくないから&amp;lt;/h2&amp;gt;
&amp;lt;h3&amp;gt;駆り立てるのは野心と欲望、横たわるのは犬と豚&amp;lt;/h3&amp;gt;&lt;/pre&gt;
&lt;p&gt;最後にニュートラルなんだけど、また競合しそう……。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git merge chapter3neutral
Auto-merging field.html
CONFLICT (content): Merge conflict in field.html
Automatic merge failed; fix conflicts and then commit the result.&lt;/pre&gt;
&lt;p&gt;ああやっぱり。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ cat field.html
&amp;lt;h1&amp;gt;僕にその手を汚せというのか&amp;lt;/h1&amp;gt;
&amp;lt;h2&amp;gt;誰も僕を責めることはできない&amp;lt;/h2&amp;gt;
&amp;lt;h3&amp;gt;欺き欺かれて&amp;lt;/h3&amp;gt;
&amp;lt;h2&amp;gt;思いどおりにいかないのが世の中なんて割り切りたくないから&amp;lt;/h2&amp;gt;
&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt; HEAD
&amp;lt;h3&amp;gt;駆り立てるのは野心と欲望、横たわるのは犬と豚&amp;lt;/h3&amp;gt;
=======
&amp;lt;h3&amp;gt;すくいきれないもの&amp;lt;/h3&amp;gt;
&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; chapter3neutral&lt;/pre&gt;
&lt;p&gt;とりあえず競合を消して最後の文言を。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ cat field.html
&amp;lt;h1&amp;gt;僕にその手を汚せというのか&amp;lt;/h1&amp;gt;
&amp;lt;h2&amp;gt;誰も僕を責めることはできない&amp;lt;/h2&amp;gt;
&amp;lt;h3&amp;gt;欺き欺かれて&amp;lt;/h3&amp;gt;
&amp;lt;h2&amp;gt;思いどおりにいかないのが世の中なんて割り切りたくないから&amp;lt;/h2&amp;gt;
&amp;lt;h3&amp;gt;駆り立てるのは野心と欲望、横たわるのは犬と豚&amp;lt;/h3&amp;gt;
&amp;lt;h3&amp;gt;すくいきれないもの&amp;lt;/h3&amp;gt;

$ git commit -a -m &amp;quot;Merge conflict&amp;quot;
[master 134d7a8] Merge conflict

$ cat field.html
&amp;lt;h1&amp;gt;僕にその手を汚せというのか&amp;lt;/h1&amp;gt;
&amp;lt;h2&amp;gt;誰も僕を責めることはできない&amp;lt;/h2&amp;gt;
&amp;lt;h3&amp;gt;欺き欺かれて&amp;lt;/h3&amp;gt;
&amp;lt;h2&amp;gt;思いどおりにいかないのが世の中なんて割り切りたくないから&amp;lt;/h2&amp;gt;
&amp;lt;h3&amp;gt;駆り立てるのは野心と欲望、横たわるのは犬と豚&amp;lt;/h3&amp;gt;
&amp;lt;h3&amp;gt;すくいきれないもの&amp;lt;/h3&amp;gt;
&amp;lt;h4&amp;gt;手を取り合って&amp;lt;/h4&amp;gt;

$ git commit -a -m &amp;quot;Add chapter4 title&amp;quot;
[master f83bfdb] Add chapter4 title
 1 files changed, 1 insertions(+), 0 deletions(-)&lt;/pre&gt;
&lt;p&gt;最後にグラフを見てみる。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git log --graph --date-order --all --date=short -C -M --pretty=format:&amp;quot;%h&amp;quot;\ %ad\ %cn\ %Cgreen%d%Cre
set\ %s
 * f83bfdb 2012-03-07 kk_Ataka  (HEAD, master, chapter4) Add chapter4 title
 *   134d7a8 2012-03-07 kk_Ataka  Merge conflict
 |\
 * | a8e9a29 2012-03-07 kk_Ataka  Merge conflict
 * | a1d3f55 2012-03-07 kk_Ataka  Delete conflict
 * |   9040fa9 2012-03-07 kk_Ataka  Merge chapter3law in master
 |\ \
 | * | 2078f0a 2012-03-07 kk_Ataka  (chapter3chaos) Add chapter3 chaos route
 | | * 427a08c 2012-03-07 kk_Ataka  (chapter3neutral) Add chapter3 neutral route
 | |/
 | * 416daca 2012-03-07 kk_Ataka  (chapter2chaos) Add chapter2 chaos route
 * | 3dc258a 2012-03-07 kk_Ataka  (chapter3law) Add chapter3 law route
 * | cae3956 2012-03-07 kk_Ataka  (chapter2law) Add chapter2 law route
 |/
 * 9d2e5d1 2012-03-07 kk_Ataka  (chapter1) typo
 * 4e0ebaa 2012-03-07 kk_Ataka  Add chapter 1
 * 338a929 2012-03-07 kk_Ataka  First commit&lt;/pre&gt;
&lt;p&gt;こうなってるか。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;chapter1
↓　chapter2law
↓　↓　chapter3law　　　 master/chapter4/HEAD
↓　↓　↓　　　　　　　　↓
↓┌○─○───────┐↓
↓│　　　　　　　　　　│↓
○┴○┬○───────┼○
　　↑│↑　　　　　　　│
　　↑│chapter3neutral │
　　↑└○───────┘
　　↑　↑
　　↑　chapter3chaos
　　chapter2chaos&lt;/pre&gt;
&lt;p&gt;本当は、これをやってみたかったんだけど例が悪すぎて両方コンフリクトしてしまった&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;# 図 3-16. Git が共通の先祖を自動的に見つけ、ブランチのマージに使用する&lt;/p&gt;&lt;p&gt;$ git checkout master&lt;/p&gt;&lt;p&gt;$ git merge iss53&lt;/p&gt;&lt;p&gt;Merge made by recursive.&lt;/p&gt;&lt;p&gt; README |    1 +&lt;/p&gt;&lt;p&gt; 1 files changed, 1 insertions(+), 0 deletions(-)&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;次はリモートブランチとかリベース。&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Pro Gitと入門gitでGitの復習 ブランチ編</title>
   <link href="http://gosyujin.github.io/2012/03/11/1331472478"/>
   <updated>2012-03-11T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2012/03/11/1331472478</id>
   <content type="html">&lt;h1&gt;前回までのあらすじ&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;2012-03-05-1330951640&quot;&gt;2012-03-05-1330951640&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;今回はローカルブランチから。&lt;/p&gt;
&lt;h1&gt;参考&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://progit.org/&quot;&gt;Git - Book&lt;/a&gt;&lt;/li&gt;&lt;li&gt;入門git&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;他のVCSとの違い&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;Subversionなどは各ファイルに対しての差分を時間軸で持っていた&lt;/li&gt;&lt;li&gt;Gitではコミットのたびにその時のリポジトリ全体のスナップショットをとる&lt;ul&gt;&lt;li&gt;ただし、変更がなかったファイルは以前のスナップショットで格納したファイルへのリンクを貼っている&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;Gitのオブジェクト&lt;/h1&gt;
&lt;p&gt;Gitには大きく分けて4つのオブジェクトが存在する。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Commitオブジェクト&lt;/li&gt;&lt;li&gt;Treeオブジェクト&lt;/li&gt;&lt;li&gt;Blobオブジェクト&lt;/li&gt;&lt;li&gt;Tagオブジェクト&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;Commitオブジェクト&lt;/h2&gt;
&lt;p&gt;リポジトリのルート。ファイル情報(ツリー)やメタデータを格納している。以下のコミットのCommitオブジェクトを見てみる。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git log --pretty=oneline
5f431a8cf6023e7398102dfef8b88baf1c581023 Typo 4&lt;/pre&gt;
&lt;p&gt;log --pretty=rawコマンドを実行するとハッシュタグがいろいろと。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git log --pretty=raw 5f431a8cf6023e7398102dfef8b88baf1c581023
commit 5f431a8cf6023e7398102dfef8b88baf1c581023
tree de445cf5b526c554dea465d09cea6d65059d1f80
parent a59ff99de68cbf359c814f25cda9c926ef9cdad9
author kk_Ataka &amp;lt;test@example.com&amp;gt; 1329818747 +0900
committer kk_Ataka &amp;lt;test@example.com&amp;gt; 1329819044 +0900

    Typo 4&lt;/pre&gt;
&lt;table&gt;&lt;tr&gt;&lt;th&gt;commit&lt;/th&gt;&lt;td&gt;このコミットに対するSHA1名&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;tree&lt;/th&gt;&lt;td&gt;このコミットの中身を記載しているSHA1名&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;parent&lt;/th&gt;&lt;td&gt;一つ前のコミットのSHA1名。存在しない場合はそれが一発目(Rootコミット)、マージされた場合は1つ以上になる場合もある&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;author&lt;/th&gt;&lt;td&gt;作成者&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;committer&lt;/th&gt;&lt;td&gt;コミッター&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;author, committerあたりがメタデータになるのかな。&lt;/p&gt;
&lt;h2&gt;Treeオブジェクト&lt;/h2&gt;
&lt;p&gt;あるコミット時点の中身を格納している。ls-treeコマンドかshowコマンドで確認が出来る。ls-treeコマンドの方が詳しい。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git ls-tree 5f431a8cf6023e7398102dfef8b88baf1c581023
100644 blob 27f338f5bd0c368f96e063127705bd1bb81e992a    README # ファイル
100644 blob 0dc64072619bf0734c878d90e9150b6978898083    index.html # ファイル
100644 blob 543200914423ddc0cb2249c322f262e31ee11c55    menu.html # ファイル&lt;/pre&gt;
&lt;pre class=&quot;&quot;&gt;100644 blob c447b5cfd585f44aafef7d513c5efea5471e2848    convert.rb # ファイル
040000 tree a1117a81580de591d292b9e6d80deee3e1cabd85    testdata # ディレクトリ

#testdataディレクトリを調査
$ git ls-tree a1117a81580de591d292b9e6d80deee3e1cabd85
040000 tree a9da0b188817cc119eff96f4c8db5306d0be009d    init # ディレクトリ

#initディレクトリを調査
$ git ls-tree a9da0b188817cc119eff96f4c8db5306d0be009d
100644 blob 2918a6642d19aadf2b11213978ae6044166a87e0    read_cell # ファイル&lt;/pre&gt;
&lt;p&gt;showで調査する場合はこんな感じ。ファイル名だけ？&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;#initディレクトリを調査
$ git show a9da0b188817cc119eff96f4c8db5306d0be009d
tree a9da0b188817cc119eff96f4c8db5306d0be009d

read_cell&lt;/pre&gt;
&lt;p&gt;実行権、ファイルタイプ、SHA1名、ファイル名が出力される。ファイルタイプは超ざっくりこんな感じみたい。&lt;/p&gt;
&lt;table&gt;&lt;tr&gt;&lt;th&gt;blob&lt;/th&gt;&lt;td&gt;普通のファイル&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;tree&lt;/th&gt;&lt;td&gt;ディレクトリ&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;h2&gt;Blobオブジェクト&lt;/h2&gt;
&lt;p&gt;ファイルそのもの。showコマンドで見る事が出来るのはファイルの中身。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;#READMEを調査
$ git show 27f338f5bd0c368f96e063127705bd1bb81e992a
Hello Wrld&lt;/pre&gt;
&lt;pre class=&quot;&quot;&gt;#index.htmlを調査
$ git show 0dc64072619bf0734c878d90e9150b6978898083
&amp;lt;html&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;title&amp;gt;Welcome&amp;lt;/title&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;
    &amp;lt;h1&amp;gt;Hello&amp;lt;/h1&amp;gt;
    &amp;lt;p&amp;gt;Hello world !!&amp;lt;/p&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/pre&gt;
&lt;pre class=&quot;&quot;&gt;#menu.htmlを調査
$ git show 543200914423ddc0cb2249c322f262e31ee11c55
&amp;lt;html&amp;gt;
  &amp;lt;head&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;
    &amp;lt;h1&amp;gt;menu&amp;lt;/h1&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/pre&gt;
&lt;h1&gt;で、ブランチ&lt;/h1&gt;
&lt;p&gt;ブランチはこの一つのCommitオブジェクトをさすポインタとなる。今は最新がこれ。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git log --pretty=raw 5f431a8cf6023e7398102dfef8b88baf1c581023
commit 5f431a8cf6023e7398102dfef8b88baf1c581023
tree de445cf5b526c554dea465d09cea6d65059d1f80
parent a59ff99de68cbf359c814f25cda9c926ef9cdad9
author kk_Ataka &amp;lt;test@example.com&amp;gt; 1329818747 +0900
committer kk_Ataka &amp;lt;test@example.com&amp;gt; 1329819044 +0900

    Typo 4&lt;/pre&gt;
&lt;p&gt;で、branchコマンドでブランチを確認すると……。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git branch
 * master&lt;/pre&gt;
&lt;p&gt;masterというブランチがある。これは最初にコミットした時点で作られるブランチ。次にまたコミットをするとmasterブランチはそれを追いかけていく。&lt;/p&gt;
&lt;h1&gt;ブランチの作成&lt;/h1&gt;
&lt;p&gt;branch [newbranch]で作成。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git branch checkpoint1&lt;/pre&gt;
&lt;p&gt;branchコマンドで確認ができる。アスタリスクがついているのブランチが今のブランチ。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git branch
   checkpoint1
 * master&lt;/pre&gt;
&lt;h1&gt;ブランチの確認&lt;/h1&gt;
&lt;p&gt;基本はbranchコマンドで確認できる。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git branch
   checkpoint1
 * master&lt;/pre&gt;
&lt;p&gt;vオプションでCommitオブジェクトのSHA1とログなどを冗長に確認できる。今は全部同じだが……。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git branch -v
   checkpoint1 5f431a8 Typo 4
 * master      5f431a8 Typo 4&lt;/pre&gt;
&lt;p&gt;rオプションでリモートのブランチも確認できる。(まだよくわかってない)&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git remote -v
rem1    c:/project/testRemote/remote1.git (fetch)
rem1    c:/project/testRemote/remote1.git (push)
rem2    c:\project\testRemote\remote2.git (fetch)
rem2    c:\project\testRemote\remote2.git (push)

$ git branch -rv
  rem1/master 5f431a8 Typo 4
  rem2/master 5f431a8 Typo 4&lt;/pre&gt;
&lt;h1&gt;ブランチの削除&lt;/h1&gt;
&lt;p&gt;branch d [branch]、またはbranch D [branch]で削除する事ができる。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git branch -d checkpoint1
Deleted branch checkpoint1 (was 5f431a8).

$ git branch
 * master&lt;/pre&gt;
&lt;p&gt;ちなみになうなブランチは削除できない。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git branch -d master
error: Cannot delete the branch &#39;master&#39; which you are currently on.&lt;/pre&gt;
&lt;p&gt;dオプションとDオプションの違いは&quot;今のブランチから到達不可能なブランチの削除を試みた場合&quot;、警告を出す(d)か強制削除(D)か、らしい。どういうことだろう？&lt;/p&gt;
&lt;p&gt;→parent,parentで過去へ遡及はできそうだけど、そこから未来には進めなさそう？&lt;/p&gt;
&lt;h1&gt;ブランチを切り替える&lt;/h1&gt;
&lt;p&gt;checkoutコマンドを使う。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git branch checkpoint1

$ git checkout checkpoint1
Switched to branch &#39;checkpoint1&#39;

$ git branch
 * checkpoint1
   master&lt;/pre&gt;
&lt;p&gt;ブランチを作りつつcheckoutも同時に行う事もできるcheckout -b [newbranch] [branch]&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git checkout -b check-b master
Switched to a new branch &#39;check-b&#39;

$ git branch
 * check-b
   checkpoint1
   master&lt;/pre&gt;
&lt;p&gt;ただし、作業ディレクトリにファイル作りっぱなしとかステージングしっぱなしの状態だと原則としてブランチの切り替えはできない。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git checkout master
error: Your local changes to the following files would be overwritten by checkout:
        index.html
Please, commit your changes or stash them before you can switch branches.
Aborting&lt;/pre&gt;
&lt;h1&gt;HEAD？？&lt;/h1&gt;
&lt;p&gt;Git系のBlogエントリとか読んでるとちょいちょい出てくるHEAD。これは.gitディレクトリの中のHEADファイルに定義されていて、常に今作業中のブランチを指す、という事になっている。よく見たら&lt;a href=&quot;http://d.hatena.ne.jp/kk_Ataka/20120305/1330951640&quot;&gt;前のエントリ&lt;/a&gt;でgit reset HEAD [resetfile]というコマンドをうっていた！&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git branch
   check-b
   checkpoint1
 * master

$ cat .git/HEAD
ref: refs/heads/master&lt;/pre&gt;
&lt;p&gt;masterの時はHEADもmasterだ。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git checkout checkpoint1
Switched to branch &#39;checkpoint1&#39;

$ git branch
   check-b
 * checkpoint1
   master

$ cat .git/HEAD
ref: refs/heads/checkpoint1&lt;/pre&gt;
&lt;p&gt;別のブランチに切り替えるとHEADも変わる。logコマンドでCommitオブジェクト(SHA1)の代わりにHEADを指定すると見れる！&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git log --pretty=raw HEAD
commit 5f431a8cf6023e7398102dfef8b88baf1c581023
tree de445cf5b526c554dea465d09cea6d65059d1f80
parent a59ff99de68cbf359c814f25cda9c926ef9cdad9
author kk_Ataka &amp;lt;test@example.com&amp;gt; 1329818747 +0900
committer kk_Ataka &amp;lt;test@example.com&amp;gt; 1329819044 +0900

    Typo 4

commit a59ff99de68cbf359c814f25cda9c926ef9cdad9
(略)&lt;/pre&gt;
&lt;p&gt;この辺は各々のブランチの歴史を進めた上で比較しないと全部同じだからわかりづらいな。次はマージから。&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Pro Gitと入門gitでGitの復習 基本操作編</title>
   <link href="http://gosyujin.github.io/2012/03/05/1330951640"/>
   <updated>2012-03-05T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2012/03/05/1330951640</id>
   <content type="html">&lt;h1&gt;あらすじ&lt;/h1&gt;
&lt;p&gt;めっきりadd, commitくらいしか使っていないGitをもう一回さわってみて学びなおす。Pro Gitのページもブクマしただけで真剣に読んでいなかったので読み進める。&lt;/p&gt;
&lt;p&gt;続き。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;2012-03-11-1331472478&quot;&gt;2012-03-11-1331472478&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;参考&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://progit.org/&quot;&gt;Git - Book&lt;/a&gt;&lt;/li&gt;&lt;li&gt;入門git&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;リポジトリの作成&lt;/h1&gt;
&lt;p&gt;リポジトリにしたいディレクトリの中でinitコマンドで作成 or init ディレクトリ で生成。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git init
Initialized empty Git repository in c:/project/testRemote/test/.git/&lt;/pre&gt;
&lt;p&gt;以後は基本的にリポジトリの中で作業。&lt;/p&gt;
&lt;h1&gt;コンフィグ&lt;/h1&gt;
&lt;h2&gt;コンフィグファイルの適用範囲と優先度&lt;/h2&gt;
&lt;p&gt;下に行くほど適用範囲は狭くなり、優先度が上がる。(同じオプションがあったら下のものが適用される)&lt;/p&gt;
&lt;table&gt;&lt;tr&gt;&lt;th&gt;ファイル&lt;/th&gt;&lt;th&gt;Windows(msysGit)では&lt;/th&gt;&lt;th&gt;範囲&lt;/th&gt;&lt;th&gt;優先度&lt;/th&gt;&lt;th&gt;configコマンドでの設定方法&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;/etc/gitconfig&lt;/td&gt;&lt;td&gt;(msysのルート)/etc/gitconfig&lt;/td&gt;&lt;td&gt;システム全体&lt;/td&gt;&lt;td&gt;低&lt;/td&gt;&lt;td&gt;--system&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;~/.gitconfig&lt;/td&gt;&lt;td&gt;%USERPROFILE%\.gitconfig&lt;/td&gt;&lt;td&gt;あるユーザ&lt;/td&gt;&lt;td&gt;中&lt;/td&gt;&lt;td&gt;--global&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;(リポジトリ内).git/config&lt;/td&gt;&lt;td&gt;(リポジトリ内).git/config&lt;/td&gt;&lt;td&gt;そのリポジトリ&lt;/td&gt;&lt;td&gt;高&lt;/td&gt;&lt;td&gt;(指定なし)&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;h2&gt;コンフィグの一覧を見る&lt;/h2&gt;
&lt;p&gt;そのリポジトリのコンフィグを見る。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git config --list
user.name=kk_Ataka
...&lt;/pre&gt;
&lt;p&gt;あるユーザのコンフィグを見る。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git config --list --global&lt;/pre&gt;
&lt;p&gt;システム全体のコンフィグを見る。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git config --list --system&lt;/pre&gt;
&lt;h2&gt;コンフィグの確認(特定の)&lt;/h2&gt;
&lt;pre class=&quot;&quot;&gt;$ git config user.name
kk_Ataka&lt;/pre&gt;
&lt;h2&gt;コンフィグの編集&lt;/h2&gt;
&lt;pre class=&quot;&quot;&gt;$ git config --global user.name &amp;quot;kk_Ataka&amp;quot;
$ git config --global user.email &amp;quot;test@example.com&amp;quot;&lt;/pre&gt;
&lt;h1&gt;リポジトリ作成&lt;/h1&gt;
&lt;p&gt;.git ファイルを作成し、その中にGitリポジトリのスケルトンが格納される。→スケルトン？&lt;/p&gt;
&lt;h2&gt;リポジトリを作成する&lt;/h2&gt;
&lt;pre class=&quot;&quot;&gt;$ git init testdir
Initialized empty Git repository in c:/project/testdir/.git/&lt;/pre&gt;
&lt;h1&gt;リポジトリのクローン&lt;/h1&gt;
&lt;p&gt;既存のリポジトリを歴史毎ごっそり持ってくる。プロトコルにはhttp,https,git等がある。&lt;/p&gt;
&lt;h2&gt;既存リポジトリのクローン&lt;/h2&gt;
&lt;pre class=&quot;&quot;&gt;$ git clone http://github.com/gosyujin/excel_for_ruby.git
Cloning into excel_for_ruby...
remote: Counting objects: 22, done.
remote: Compressing objects: 100% (13/13), done.
remote: Total 22 (delta 2), reused 21 (delta 1)
Unpacking objects: 100% (22/22), done.&lt;/pre&gt;
&lt;pre class=&quot;&quot;&gt;$ cd excel_for_ruby\
$ git log
commit b6cd9964b1e586d8be280acd40c9719f6cc045c0
Author: kk_Ataka &amp;lt;kk_ataka@---.---.jp&amp;gt;
Date:   Sun Dec 25 17:36:53 2011 +0900

    .gitignore追加&lt;/pre&gt;
&lt;h1&gt;状態確認&lt;/h1&gt;
&lt;h2&gt;作業ツリーの状態確認&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;変更なし&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;$ git status
# On branch master
nothing to commit (working directory clean)&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;変更あり&lt;/li&gt;&lt;li&gt;Untracked files&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;まだGitに追跡されていないファイル。(＝前回コミット時になかったファイル)これからaddする必要がある。赤く表示される。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git status
# On branch master
# Untracked files:
#   (use &amp;quot;git add &amp;lt;file&amp;gt;...&amp;quot; to include in what will be committed)
#
#       README
nothing added to commit but untracked files present (use &amp;quot;git add&amp;quot; to track)&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;new file&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;addで新しく追跡開始されたファイルmenu.htmlがステージされている。緑で表示される。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;# On branch master
# Changes to be committed:
#   (use &amp;quot;git reset HEAD &amp;lt;file&amp;gt;...&amp;quot; to unstage)
#
#       new file:   menu.html&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;modified&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;既に追跡されているファイルが変更された。赤で表示される。これからaddでステージする。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git status
# On branch master
# Changed but not updated:
#   (use &amp;quot;git add &amp;lt;file&amp;gt;...&amp;quot; to update what will be committed)
#   (use &amp;quot;git checkout -- &amp;lt;file&amp;gt;...&amp;quot; to discard changes in working directory)
#
#       modified:   index.html
#
no changes added to commit (use &amp;quot;git add&amp;quot; and/or &amp;quot;git commit -a&amp;quot;)&lt;/pre&gt;
&lt;h1&gt;ファイル追加(追跡)&lt;/h1&gt;
&lt;h2&gt;リポジトリに追加(追跡の開始)&lt;/h2&gt;
&lt;h2&gt;ステージング&lt;/h2&gt;
&lt;p&gt;追跡の開始ともいうらしい。ディレクトリを指定すると、その下を再帰的に追跡する。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git add index.html&lt;/pre&gt;
&lt;h1&gt;ファイル比較&lt;/h1&gt;
&lt;h2&gt;ファイルの比較&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;作業ツリーの内容とステージングエリアの比較&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;$ git status
# On branch master
# Changed but not updated:
#   (use &amp;quot;git add &amp;lt;file&amp;gt;...&amp;quot; to update what will be committed)
#   (use &amp;quot;git checkout -- &amp;lt;file&amp;gt;...&amp;quot; to discard changes in working directory)
#
#       modified:   index.html
#
no changes added to commit (use &amp;quot;git add&amp;quot; and/or &amp;quot;git commit -a&amp;quot;)&lt;/pre&gt;
&lt;pre class=&quot;&quot;&gt;$ git diff
diff --git a/index.html b/index.html
index a633da3..bc2a94f 100644
--- a/index.html
+++ b/index.html
@@ -1,8 +1,9 @@
 &amp;lt;html&amp;gt;
   &amp;lt;head&amp;gt;
-    &amp;lt;title&amp;gt;Welcome !!&amp;lt;/title&amp;gt;
+    &amp;lt;title&amp;gt;Welcome&amp;lt;/title&amp;gt;
   &amp;lt;/head&amp;gt;
   &amp;lt;body&amp;gt;
     &amp;lt;h1&amp;gt;Hello&amp;lt;/h1&amp;gt;
+    &amp;lt;p&amp;gt;Hello world&amp;lt;/p&amp;gt;
   &amp;lt;/body&amp;gt;
 &amp;lt;/html&amp;gt;&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;ステージされた内容と直近のコミットの比較&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;$ git add index.html
$ git status
# On branch master
# Changes to be committed:
#   (use &amp;quot;git reset HEAD &amp;lt;file&amp;gt;...&amp;quot; to unstage)
#
#       modified:   index.html
#
$ git diff&lt;/pre&gt;
&lt;p&gt;add してdiff すると出力はなし。--cached, --stagedオプションをつけるとステージされた内容との比較を取る。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git diff --cached
diff --git a/index.html b/index.html
index a633da3..bc2a94f 100644
--- a/index.html
+++ b/index.html
@@ -1,8 +1,9 @@
 &amp;lt;html&amp;gt;
   &amp;lt;head&amp;gt;
-    &amp;lt;title&amp;gt;Welcome !!&amp;lt;/title&amp;gt;
+    &amp;lt;title&amp;gt;Welcome&amp;lt;/title&amp;gt;
   &amp;lt;/head&amp;gt;
   &amp;lt;body&amp;gt;
     &amp;lt;h1&amp;gt;Hello&amp;lt;/h1&amp;gt;
+    &amp;lt;p&amp;gt;Hello world&amp;lt;/p&amp;gt;
   &amp;lt;/body&amp;gt;
 &amp;lt;/html&amp;gt;
$ git diff --staged
diff --git a/index.html b/index.html
index a633da3..bc2a94f 100644
--- a/index.html
+++ b/index.html
@@ -1,8 +1,9 @@
 &amp;lt;html&amp;gt;
   &amp;lt;head&amp;gt;
-    &amp;lt;title&amp;gt;Welcome !!&amp;lt;/title&amp;gt;
+    &amp;lt;title&amp;gt;Welcome&amp;lt;/title&amp;gt;
   &amp;lt;/head&amp;gt;
   &amp;lt;body&amp;gt;
     &amp;lt;h1&amp;gt;Hello&amp;lt;/h1&amp;gt;
+    &amp;lt;p&amp;gt;Hello world&amp;lt;/p&amp;gt;
   &amp;lt;/body&amp;gt;
 &amp;lt;/html&amp;gt;&lt;/pre&gt;
&lt;p&gt;ステージした後に編集。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git status
# On branch master
# Changes to be committed:
#   (use &amp;quot;git reset HEAD &amp;lt;file&amp;gt;...&amp;quot; to unstage)
#
#       modified:   index.html
#
# Changed but not updated:
#   (use &amp;quot;git add &amp;lt;file&amp;gt;...&amp;quot; to update what will be committed)
#   (use &amp;quot;git checkout -- &amp;lt;file&amp;gt;...&amp;quot; to discard changes in working directory)
#
#       modified:   index.html&lt;/pre&gt;
&lt;p&gt;これをdiff, diff --stagedで比較すると……。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git diff
diff --git a/index.html b/index.html
index bc2a94f..341bb47 100644
--- a/index.html
+++ b/index.html
@@ -4,6 +4,7 @@
   &amp;lt;/head&amp;gt;
   &amp;lt;body&amp;gt;
     &amp;lt;h1&amp;gt;Hello&amp;lt;/h1&amp;gt;
-    &amp;lt;p&amp;gt;Hello world&amp;lt;/p&amp;gt;
+    &amp;lt;p&amp;gt;Hello world !!&amp;lt;/p&amp;gt;
+    &amp;lt;span&amp;gt;I am typo&amp;lt;/span&amp;gt;
   &amp;lt;/body&amp;gt;
 &amp;lt;/html&amp;gt;
$ git diff --staged
diff --git a/index.html b/index.html
index a633da3..bc2a94f 100644
--- a/index.html
+++ b/index.html
@@ -1,8 +1,9 @@
 &amp;lt;html&amp;gt;
   &amp;lt;head&amp;gt;
-    &amp;lt;title&amp;gt;Welcome !!&amp;lt;/title&amp;gt;
+    &amp;lt;title&amp;gt;Welcome&amp;lt;/title&amp;gt;
   &amp;lt;/head&amp;gt;
   &amp;lt;body&amp;gt;
     &amp;lt;h1&amp;gt;Hello&amp;lt;/h1&amp;gt;
+    &amp;lt;p&amp;gt;Hello world&amp;lt;/p&amp;gt;
   &amp;lt;/body&amp;gt;
 &amp;lt;/html&amp;gt;&lt;/pre&gt;
&lt;p&gt;diffが作業ツリーの内容とステージングエリアの比較でdiff --stagedがステージされた内容と直近のコミットの比較だから歴史としてはa633da3 -&gt; bc2a94f -&gt; 341bb47こうか。&lt;/p&gt;
&lt;h1&gt;ファイル削除(追跡除外)&lt;/h1&gt;
&lt;h2&gt;ファイルの削除(追跡の除外)&lt;/h2&gt;
&lt;p&gt;通常のrmだと作業ツリーからファイルを消しただけ。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ rm VERSION

$ git status
# On branch master
# Changed but not updated:
#   (use &amp;quot;git add/rm &amp;lt;file&amp;gt;...&amp;quot; to update what will be committed)
#   (use &amp;quot;git checkout -- &amp;lt;file&amp;gt;...&amp;quot; to discard changes in working directory)
#
#       deleted:    VERSION
#
no changes added to commit (use &amp;quot;git add&amp;quot; and/or &amp;quot;git commit -a&amp;quot;)&lt;/pre&gt;
&lt;p&gt;git rm 後にcommitする事で追跡対象から除外する。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git rm VERSION
rm &#39;VERSION&#39;

$ git status
# On branch master
# Changes to be committed:
#   (use &amp;quot;git reset HEAD &amp;lt;file&amp;gt;...&amp;quot; to unstage)
#
#       deleted:    VERSION
#
$ git commit -m &amp;quot;Deleted VERSION file&amp;quot;
[master 5981baf] Deleted VERSION file
 0 files changed, 0 insertions(+), 0 deletions(-)
 delete mode 100644 VERSION

$ git status
# On branch master
nothing to commit (working directory clean)&lt;/pre&gt;
&lt;h1&gt;コミット&lt;/h1&gt;
&lt;h2&gt;コミットを行う&lt;/h2&gt;
&lt;p&gt;ログ記述のためにgit config core.editorや環境変数EDITORに適切なエディタが設定されている必要がある。VIなど&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git commit index.html&lt;/pre&gt;
&lt;pre class=&quot;&quot;&gt; 1
 2 # Please enter the commit message for your changes. Lines starting
 3 # with &#39;#&#39; will be ignored, and an empty message aborts the commit.
 4 # On branch master
 5 # Changes to be committed:
 6 #   (use &amp;quot;git reset HEAD &amp;lt;file&amp;gt;...&amp;quot; to unstage)
 7 #
 8 #       modified:   index.html
 9 #&lt;/pre&gt;
&lt;p&gt;commit -v でdiffを確認する事も出来る。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt; 1
 2 # Please enter the commit message for your changes. Lines starting
 3 # with &#39;#&#39; will be ignored, and an empty message aborts the commit.
 4 # Explicit paths specified without -i nor -o; assuming --only paths...
 5 # On branch master
 6 # Changes to be committed:
 7 #   (use &amp;quot;git reset HEAD &amp;lt;file&amp;gt;...&amp;quot; to unstage)
 8 #
 9 #       modified:   index.html
10 #
11 diff --git a/index.html b/index.html
12 index a633da3..341bb47 100644
13 --- a/index.html
14 +++ b/index.html
15 @@ -1,8 +1,10 @@
16  &amp;lt;html&amp;gt;
17    &amp;lt;head&amp;gt;
18 -    &amp;lt;title&amp;gt;Welcome !!&amp;lt;/title&amp;gt;
19 +    &amp;lt;title&amp;gt;Welcome&amp;lt;/title&amp;gt;
20    &amp;lt;/head&amp;gt;
21    &amp;lt;body&amp;gt;
22      &amp;lt;h1&amp;gt;Hello&amp;lt;/h1&amp;gt;
23 +    &amp;lt;p&amp;gt;Hello world !!&amp;lt;/p&amp;gt;&lt;/pre&gt;
&lt;pre class=&quot;&quot;&gt;[master (root-commit) 4b5c302] First commit.
 1 files changed, 8 insertions(+), 0 deletions(-)
 create mode 100644 index.html&lt;/pre&gt;
&lt;h2&gt;コミットを行う(コミットログまでワンライナー)&lt;/h2&gt;
&lt;p&gt;commit -mでコミットログを指定できる。-mを打つ毎に改行される&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git commit -m &amp;quot;Modified index.html title&amp;quot; -m &amp;quot;Added menu.html&amp;quot;
[master eaa9ebc] Modified index.html title
 2 files changed, 6 insertions(+), 1 deletions(-)
 create mode 100644 menu.html&lt;/pre&gt;
&lt;h2&gt;追跡ファイルのステージを省略&lt;/h2&gt;
&lt;p&gt;addを省く。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git status
# On branch master
# Changed but not updated:
#   (use &amp;quot;git add &amp;lt;file&amp;gt;...&amp;quot; to update what will be committed)
#   (use &amp;quot;git checkout -- &amp;lt;file&amp;gt;...&amp;quot; to discard changes in working directory)
#
#       modified:   menu.html
#
no changes added to commit (use &amp;quot;git add&amp;quot; and/or &amp;quot;git commit -a&amp;quot;)&lt;/pre&gt;
&lt;pre class=&quot;&quot;&gt;$ git commit -a -m &amp;quot;Added head tag&amp;quot;
[master 1d4d741] Added head tag
 1 files changed, 2 insertions(+), 0 deletions(-)&lt;/pre&gt;
&lt;pre class=&quot;&quot;&gt;$ git status
# On branch master
nothing to commit (working directory clean)&lt;/pre&gt;
&lt;p&gt;追跡可能じゃないとできない？&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ touch VERSION

$ git commit -a -m &amp;quot;Added VERSION file&amp;quot;
# On branch master
# Untracked files:
#   (use &amp;quot;git add &amp;lt;file&amp;gt;...&amp;quot; to include in what will be committed)
#
#       VERSION
nothing added to commit but untracked files present (use &amp;quot;git add&amp;quot; to track)&lt;/pre&gt;
&lt;h1&gt;コミットのやり直し&lt;/h1&gt;
&lt;p&gt;誤ってtypoしたままコミットしてしまった。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ cat README
Haloo Wold

$ git commit -a -m &amp;quot;Typo commit&amp;quot;
[master 663daa6] Typo commit
 1 files changed, 1 insertions(+), 0 deletions(-)

$ git log
commit 663daa64c7fab6a23e17a7e544dd81df85d88dc6
Author: kk_Ataka &amp;lt;test@example.com&amp;gt;
Date:   Tue Feb 21 18:50:59 2012 +0900

    Typo commit

commit 5981baf9b3a9bd4a1d5a9cf5f26738391fbb9fff
Author: kk_Ataka &amp;lt;test@example.com&amp;gt;
Date:   Tue Feb 21 13:10:02 2012 +0900

    Deleted VERSION file&lt;/pre&gt;
&lt;p&gt;コミットした後commit --amendで前回のコミット直前からやり直せる？&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ vi README
$ git add README
$ git commit --amend

$ git log
commit a59ff99de68cbf359c814f25cda9c926ef9cdad9
Author: kk_Ataka &amp;lt;test@example.com&amp;gt;
Date:   Tue Feb 21 18:50:59 2012 +0900

    Modified typo
commit 5981baf9b3a9bd4a1d5a9cf5f26738391fbb9fff
Author: kk_Ataka &amp;lt;test@example.com&amp;gt;
Date:   Tue Feb 21 13:10:02 2012 +0900

    Deleted VERSION file&lt;/pre&gt;
&lt;h1&gt;ステージのやり直し&lt;/h1&gt;
&lt;p&gt;ステージングエリアに入れたファイルを取り消したいときはresetコマンドを使う。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git status
# On branch master
# Changed but not updated:
#   (use &amp;quot;git add &amp;lt;file&amp;gt;...&amp;quot; to update what will be committed)
#   (use &amp;quot;git checkout -- &amp;lt;file&amp;gt;...&amp;quot; to discard changes in working directory)
#
#       modified:   README
#
no changes added to commit (use &amp;quot;git add&amp;quot; and/or &amp;quot;git commit -a&amp;quot;)

$ git add README

$ git status
# On branch master
# Changes to be committed:
#   (use &amp;quot;git reset HEAD &amp;lt;file&amp;gt;...&amp;quot; to unstage)
#
#       modified:   README
#&lt;/pre&gt;
&lt;p&gt;ここでステージングエリアに入れたREADMEファイルをreset。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git reset HEAD README
Unstaged changes after reset:
M       README&lt;/pre&gt;
&lt;pre class=&quot;&quot;&gt;$ git status
# On branch master
# Changed but not updated:
#   (use &amp;quot;git add &amp;lt;file&amp;gt;...&amp;quot; to update what will be committed)
#   (use &amp;quot;git checkout -- &amp;lt;file&amp;gt;...&amp;quot; to discard changes in working directory)
#
#       modified:   README
#
no changes added to commit (use &amp;quot;git add&amp;quot; and/or &amp;quot;git commit -a&amp;quot;)&lt;/pre&gt;
&lt;p&gt;HEADってなんじゃらほい？　今自分が作業じているローカルブランチへのポインタ。上から見ていくと今はmasterから動いていないので作業しているブランチはmasterのまま=HEADもmaster。&lt;/p&gt;
&lt;h1&gt;変更の取り消し&lt;/h1&gt;
&lt;p&gt;SubversionでいうところのRevertであっている？　編集したファイルを直前のコミットの状態まで戻す。実はずっとgit statusコマンド打っていたときに出ていた。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git diff README
diff --git a/README b/README
index 27f338f..557db03 100644
--- a/README
+++ b/README
@@ -1 +1 @@
-Hello Wrld
+Hello World

$ git status
# On branch master
# Changed but not updated:
#   (use &amp;quot;git add &amp;lt;file&amp;gt;...&amp;quot; to update what will be committed)
#   (use &amp;quot;git checkout -- &amp;lt;file&amp;gt;...&amp;quot; to discard changes in working directory)
#
#       modified:   README
#
no changes added to commit (use &amp;quot;git add&amp;quot; and/or &amp;quot;git commit -a&amp;quot;)&lt;/pre&gt;
&lt;p&gt;checkout -- &lt;file&gt;で戻せるようだ。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git checkout -- README

$ git diff README

$ cat README
Hello Wrld&lt;/pre&gt;
&lt;h1&gt;リモート関連&lt;/h1&gt;
&lt;h2&gt;(リモート)リポジトリの作成&lt;/h2&gt;
&lt;p&gt;作業ディレクトリがいらない場合はinit --bareオプションをつける。ディレクトリ名に.gitをつけるのは慣例……だったかな？　何かに書いてあった気がする。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git init --bare remote1.git
Initialized empty Git repository in c:/project/testRemote/remote1.git/&lt;/pre&gt;
&lt;h2&gt;リモートリポジトリの追加&lt;/h2&gt;
&lt;p&gt;追加はremote add [shortname] [url]で行う。以後、gitコマンドからはshortnameで指定できるようになる。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git remote add rem1 c:/project/testRemote/remote1&lt;/pre&gt;
&lt;p&gt;ここでURLを間違えていた事に気づく。(.git忘れた)が、同じshortnameにaddしても既にあるよって言われてしまうので削除しないといけない。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git remote add rem1 c:/project/testRemote/remote1.git
fatal: remote rem1 already exists.&lt;/pre&gt;
&lt;p&gt;また、Windows？msysGit？を使っている場合は、Windows感覚でパスを打ちこむとエスケープされる。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git remote add rem1 c:\project\testRemote\remote1.git

$ git remote -v
rem1    c:projecttestRemoteremote1.git (fetch)
rem1    c:projecttestRemoteremote1.git (push)&lt;/pre&gt;
&lt;p&gt;円マークを重ねるのとスラッシュとでは表記は変わるけど違いはないようだ。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git remote add rem1 c:/project/testRemote/remote1.git

$ git remote add rem2 c:\\project\\testRemote\\remote2.git

$ git remote -v
rem1    c:/project/testRemote/remote1.git (fetch)
rem1    c:/project/testRemote/remote1.git (push)
rem2    c:\project\testRemote\remote2.git (fetch)
rem2    c:\project\testRemote\remote2.git (push)&lt;/pre&gt;
&lt;h2&gt;リモートリポジトリのリネーム&lt;/h2&gt;
&lt;p&gt;remote rename [shortname_now] [shortname_after]でいける。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git remote rename rem1 remo

$ git remote
rem2
remo&lt;/pre&gt;
&lt;h2&gt;リモートリポジトリの削除&lt;/h2&gt;
&lt;p&gt;remote rm [shortname]&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git remote rm rem1&lt;/pre&gt;
&lt;h2&gt;リモートリポジトリの確認&lt;/h2&gt;
&lt;p&gt;リポジトリからcloneしてきた場合はoriginという名前が付けられる。Gitがデフォルトでつけるshortname。よくgit push origin masterとかで出てくるorigin。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git remote -v
origin  http://github.com/gosyujin/evernote_for_ruby.git (fetch)
origin  http://github.com/gosyujin/evernote_for_ruby.git (push)&lt;/pre&gt;
&lt;p&gt;git initでローカルに作成したリポジトリだとoriginもないので何も表示されない。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git remote
&lt;/pre&gt;
&lt;p&gt;addした後はそのリポジトリのshortnameが列挙される。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git remote
rem1
rem2&lt;/pre&gt;
&lt;p&gt;remote -vでURLも。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git remote -v
rem1    c:/project/testRemote/remote1.git (fetch)
rem1    c:/project/testRemote/remote1.git (push)
rem2    c:\project\testRemote\remote2.git (fetch)
rem2    c:\project\testRemote\remote2.git (push)&lt;/pre&gt;
&lt;p&gt;remote show [shortname]でより詳しく。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git remote show rem1
 * remote rem1
   Fetch URL: c:/project/testRemote/remote1.git
   Push  URL: c:/project/testRemote/remote1.git
   HEAD branch: master
   Remote branch:
     master tracked
   Local ref configured for &#39;git push&#39;:
     master pushes to master (up to date)&lt;/pre&gt;
&lt;h2&gt;リモートリポジトリからデータ取得(フェッチ、プル)&lt;/h2&gt;
&lt;p&gt;リモートにあるデータの内、まだ持っていないものを取得できる。fetchコマンドを使う。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git fetch rem1

$ git fetch rem2&lt;/pre&gt;
&lt;p&gt;空のリポジトリからfetchしているので特に何も起こらなかった……。cloneした後(最近fetchした後)からの変更を取得できる。ただし、これだと取得しただけなのでfetch後マージをしてやる必要がある。フェッチ、マージを一気にやってくれるgit pullというコマンドもある。&lt;/p&gt;
&lt;h2&gt;リモートリポジトリへのデータ登録(プッシュ)&lt;/h2&gt;
&lt;p&gt;ローカルにコミットしたデータをプッシュ。という事でpushコマンドを使用。push [shortname] [branch]でプッシュ先とプッシュするブランチを指定。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git push rem1 master
Counting objects: 26, done.
Delta compression using up to 2 threads.
Compressing objects: 100% (22/22), done.
Writing objects: 100% (26/26), 2.33 KiB, done.
Total 26 (delta 5), reused 0 (delta 0)
Unpacking objects: 100% (26/26), done.
To c:/project/testRemote/remote1.git
 * [new branch]      master -&amp;gt; master&lt;/pre&gt;
&lt;p&gt;次はブランチから。&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Rails3レシピブックを読みながらRailsを学ぶ モデル、コントローラ、ビュー、Railsの規約など</title>
   <link href="http://gosyujin.github.io/2012/02/29/1330528564"/>
   <updated>2012-02-29T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2012/02/29/1330528564</id>
   <content type="html">&lt;h1&gt;前回までのあらすじ&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;2012-02-28-1330436604&quot;&gt;2012-02-28-1330436604&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;Railsをインストールして起動する所まではできた。&lt;/p&gt;
&lt;h1&gt;参考&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;Rail3レシピブック 190の技&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;環境&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;WindowsXP&lt;/li&gt;&lt;li&gt;Ruby1.8.7&lt;/li&gt;&lt;li&gt;Rails3.2.1&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;MVCを自動生成する&lt;/h1&gt;
&lt;h2&gt;アプリケーションのscaffold(足場)の作成&lt;/h2&gt;
&lt;p&gt;scaffoldジェネレータを実行する事でCRUD操作が可能な簡単なアプリケーションの足場が生成できる。コマンドはrails generate ジェネレータ モデル名 カラム名:型 カラム名:型 (以下繰り返せる)...&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ bundle exec rails generate scaffold Blog name:string user_id:integer
      invoke  active_record
      create    db/migrate/20120229022816_create_blogs.rb
      create    app/models/blog.rb
      invoke    test_unit
      create      test/unit/blog_test.rb
      create      test/fixtures/blogs.yml
       route  resources :blogs
      invoke  scaffold_controller
      create    app/controllers/blogs_controller.rb
      invoke    erb
      create      app/views/blogs
      create      app/views/blogs/index.html.erb
      create      app/views/blogs/edit.html.erb
      create      app/views/blogs/show.html.erb
      create      app/views/blogs/new.html.erb
      create      app/views/blogs/_form.html.erb
      invoke    test_unit
      create      test/functional/blogs_controller_test.rb
      invoke    helper
      create      app/helpers/blogs_helper.rb
      invoke      test_unit
      create        test/unit/helpers/blogs_helper_test.rb
      invoke  assets
      invoke    coffee
      create      app/assets/javascripts/blogs.js.coffee
      invoke    scss
      create      app/assets/stylesheets/blogs.css.scss
      invoke  scss
      create    app/assets/stylesheets/scaffolds.css.scss&lt;/pre&gt;
&lt;p&gt;いろいろ生成された！　確かに&lt;a href=&quot;http://d.hatena.ne.jp/kk_Ataka/20120228/1330436604&quot;&gt;前回&lt;/a&gt;のまとめたファイルとディレクトリの役割通りにファイルが生成されてるっぽい。&lt;/p&gt;
&lt;h2&gt;テーブルの作成&lt;/h2&gt;
&lt;p&gt;テーブルをDBに定義。rake db:migrateコマンドを実行する。足場を作った際にdb/migrate/20120229022816_create_blogs.rbというマイグレーションファイルができたので、これを使っている？&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ bundle exec rake db:migrate
==  CreateBlogs: migrating ====================================================
-- create_table(:blogs)
   -&amp;gt; 0.0000s
==  CreateBlogs: migrated (0.0000s) ===========================================&lt;/pre&gt;
&lt;p&gt;作られたようだ。&lt;/p&gt;
&lt;h2&gt;マイグレーションとは&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;DBのスキーマを変更する機能&lt;/li&gt;&lt;li&gt;一気に作らずちょっとずつ変更もできる&lt;/li&gt;&lt;li&gt;rails generate migration マイグレーション名で作成可能&lt;ul&gt;&lt;li&gt;ファイル名はタイムスタンプ_マイグレーション名.rbでdb/migrate/に格納&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;上記の場合はscaffoldジェネレータで全部一括で作成している様子&lt;ul&gt;&lt;li&gt;db/migrate/20120229022816_create_blogs.rb&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;また起動&lt;/h2&gt;
&lt;p&gt;で、わくわくしながら起動。アドレスは&lt;a href=&quot;http://localhost:3000/blogs&quot;&gt;http://localhost:3000/blogs&lt;/a&gt;。Listing blogsというページとCRUDできるフォームが用意されたページが！&lt;/p&gt;
&lt;p&gt;Blogモデルを作成して、blogsになったのは規約ってやつだろうか……といったところで次のレシピが規約だった。&lt;/p&gt;
&lt;h1&gt;Railsの規約&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;設定ファイルはあまり作らない&lt;/li&gt;&lt;li&gt;ファイル名、クラス名、ディレクトリの場所に規則&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;規則を知る事でどこでなにやってるのかわかりそう。&lt;/p&gt;
&lt;h2&gt;コントローラ&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;app/controllers/に格納&lt;/li&gt;&lt;li&gt;クラス名は単語区切りキャメルケースで「(先頭大文字)コントローラController」 =&gt; BlogsController&lt;/li&gt;&lt;li&gt;ファイル名はクラス名をスネークケースに変換 =&gt; blogs_controller.rb&lt;/li&gt;&lt;li&gt;名称は対応するモデルの複数系 =&gt; BlogモデルのコントローラなのでBlogs&lt;ul&gt;&lt;li&gt;scaffoldで生成されたモデルとコントローラもこの規則に従っている&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;なるほどね。だからBlogモデルでコントローラはBlogsだったのか。&lt;/p&gt;
&lt;h2&gt;モデル&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;app/models/に格納&lt;/li&gt;&lt;li&gt;クラス名は単語区切りキャメルケースで名詞の単数形 =&gt; Blog&lt;/li&gt;&lt;li&gt;ファイル名はクラス名をスネークケースに変換 =&gt; blog.rb&lt;/li&gt;&lt;li&gt;モデルとDBテーブルは1:1で対応 =&gt; モデルBlog : blogsテーブル&lt;/li&gt;&lt;li&gt;変換ルールはActiveSupportで定義されている&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;ビュー&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;app/views/コントローラ名/にテンプレート&lt;ul&gt;&lt;li&gt;上で作ってたblogの場合app/views/blogsの下&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;ビューファイル名はindex.html.erb, show.html.erb 等&lt;ul&gt;&lt;li&gt;アクション名.フォーマット名.レンダリングエンジン名の規則で命名&lt;/li&gt;&lt;li&gt;レンダリングエンジンerbは任意のテキストファイルにRubyコードを埋められるもの。Javaのjspみたいなもん？&lt;/li&gt;&lt;li&gt;hamlとかでもいい？&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;show.html.erb の場合はshowアクションを実行する場合show.html.erbをerbでレンダリングしてhtmlフォーマットで出力とかそういう感じかな&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;……ここまではなんとか。どこで何してるかとかは少しずつわかってきた。&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Rails3レシピブックを読みながらRailsを学ぶ</title>
   <link href="http://gosyujin.github.io/2012/02/28/1330436604"/>
   <updated>2012-02-28T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2012/02/28/1330436604</id>
   <content type="html">&lt;h1&gt;あらすじ&lt;/h1&gt;
&lt;p&gt;Redmineプラグインの作り方を学ぶ前にRailsの基本的な事を学ばねばなりますまい。そういやあ。&lt;/p&gt;
&lt;h1&gt;参考&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;Rail3レシピブック 190の技&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;環境&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;WindowsXP&lt;/li&gt;&lt;li&gt;Ruby 1.8.7&lt;/li&gt;&lt;li&gt;Rails 3.2.1&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;準備&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;はじめにbundleでrailsをインストールする……が、なんかエラーが。&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;Gem::InstallError: The &#39;json&#39; native gem requires installed build
tools.

Please update your PATH to include build tools or download the DevKit
from &#39;http://rubyinstaller.org/downloads&#39; and follow the instructions
at &#39;http://github.com/oneclick/rubyinstaller/wiki/Development-Kit&#39;
An error occured while installing json (1.6.5), and Bundler cannot continue.
Make sure that `gem install json -v &#39;1.6.5&#39;` succeeds before bundling.&lt;/pre&gt;
&lt;p&gt;bundleするまえにjsonをインストールしてくれと言われた。ので、そのとおりにgem install……。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ gem install json -v &#39;1.6.5&#39;
ERROR:  Error installing json:
        The &#39;json&#39; native gem requires installed build tools.

Please update your PATH to include build tools or download the DevKit
from &#39;http://rubyinstaller.org/downloads&#39; and follow the instructions
at &#39;http://github.com/oneclick/rubyinstaller/wiki/Development-Kit&#39;&lt;/pre&gt;
&lt;p&gt;まだだめか。Development-Kitが必要？　&lt;a href=&quot;https://github.com/oneclick/rubyinstaller/wiki/Development-Kit&quot;&gt;Development Kit · oneclick/rubyinstaller Wiki · GitHub&lt;/a&gt;へ。&lt;/p&gt;
&lt;p&gt;どれ落とせばいいんだろうと思ったら、&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;for the legacy RubyInstaller v1.8.6 use the DevKit-3.4.5 available at our archive downloads page. For RubyInstaller versions 1.8.7, 1.9.2, and 1.9.3 use the DevKit 4.5.2 from our main downloads page.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;という事らしいので4.5.2をDLしexeを実行。さらに以下を実行。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ cd &amp;lt;DEVKIT_INSTALL_DIR&amp;gt;
$ ruby dk.rb init

Initialization complete! Please review and modify the auto-generated
&#39;config.yml&#39; file to ensure it contains the root directories to all
of the installed Rubies you want enhanced by the DevKit.&lt;/pre&gt;
&lt;p&gt;config.ymlが生成されるので例に従ってRubyのパスを記述。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;  8 # Example:
  9 #
 10 # ---
 11 # - C:/ruby19trunk
 12 # - C:/ruby192dev
 13 #
 14 ---
+15 - C:\rubies\Ruby-187-p352&lt;/pre&gt;
&lt;p&gt;で、インストール。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ ruby dk.rb review
Based upon the settings in the &#39;config.yml&#39; file generated
from running &#39;ruby dk.rb init&#39; and any of your customizations,
DevKit functionality will be injected into the following Rubies
when you run &#39;ruby dk.rb install&#39;.

C:/rubies/Ruby-187-p352

$ ruby dk.rb install
[INFO] Updating convenience notice gem override for &#39;C:/rubies/Ruby-187-p352&#39;
[INFO] Installing &#39;C:/rubies/Ruby-187-p352/lib/ruby/site_ruby/devkit.rb&#39;&lt;/pre&gt;
&lt;p&gt;満を持してbundle install再び。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;…
Installing json (1.6.5) with native extensions
…&lt;/pre&gt;
&lt;p&gt;オッケー。&lt;/p&gt;
&lt;h1&gt;アプリケーション作成&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;rails new アプリ名で作成&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;$ bundle exec rails new sampleapp
      create
      create  README.rdoc
      create  Rakefile
      create  config.ru
      create  .gitignore
      create  Gemfile
      create  app
      create  app/assets/images/rails.png&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;rails new アプリ名 -d DBでDBを指定して作成もできる。省略した場合はSQLite3&lt;/li&gt;&lt;li&gt;このアプリ名は変数Rails.rootで参照できる&lt;/li&gt;&lt;li&gt;Rails.rootでbundle install(また？)&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;Bundleで入れたRailsでRailsアプリをnewしてそのRailsアプリでまたBundleしてるのが気持ち悪いけどこんなもんなのかな。&lt;/p&gt;
&lt;h1&gt;DB設定&lt;/h1&gt;
&lt;p&gt;これはRedmineでやった事ある。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;config/database.ymlを編集……し……？&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;  6 development:
  7   adapter: sqlite3
  8   database: db/development.sqlite3
  9   pool: 5
 10   timeout: 5000&lt;/pre&gt;
&lt;p&gt;あれ？　もうよろしくされてるじゃん。&lt;/p&gt;
&lt;h1&gt;バージョン等&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;rail -vでRailsのバージョン&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;$ bundle exec rails -v
Rails 3.2.1&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;rake aboutでRailが使っているライブラリ&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;$ bundle exec rake about
About your application&#39;s environment
Ruby version              1.8.7 (i386-mingw32)
RubyGems version          1.8.12
Rack version              1.4
Rails version             3.2.1
JavaScript Runtime        Node.js (V8)
Active Record version     3.2.1
…&lt;/pre&gt;
&lt;h1&gt;とりあえず起動&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;rails sまたはrails serverで起動。rails s -p ポート番号でポート指定可能&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;$ bundle exec rails s
=&amp;gt; Booting WEBrick
=&amp;gt; Rails 3.2.1 application starting in development on http://0.0.0.0:3000
=&amp;gt; Call with -d to detach
=&amp;gt; Ctrl-C to shutdown server
[2012-02-28 19:27:58] INFO  WEBrick 1.3.1
[2012-02-28 19:27:58] INFO  ruby 1.8.7 (2011-06-30) [i386-mingw32]
[2012-02-28 19:27:58] INFO  WEBrick::HTTPServer#start: pid=5396 port=3000&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://localhost:3000&quot;&gt;http://localhost:3000&lt;/a&gt;にアクセスしてWelcome aboard You’re riding Ruby on Rails! と表示されていれば動いている&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;Railsアプリ内のファイルとディレクトリ(抜粋)&lt;/h1&gt;
&lt;p&gt;Redmineでも見たことがあるファイル等もあるが、役割を明確にわかっていなかった。&lt;/p&gt;
&lt;table&gt;&lt;tr&gt;&lt;th&gt;file/dir&lt;/th&gt;&lt;th&gt;役割&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;config.ru&lt;/td&gt;&lt;td&gt;Rackアプリケーションとして実行する際の設定ファイル&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Rakefile&lt;/td&gt;&lt;td&gt;MakefileのRuby版、MakeのRuby版であるRakeで使う&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;app/&lt;/td&gt;&lt;td&gt;アプリケーションを格納&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;app/assets/&lt;/td&gt;&lt;td&gt;CoffeeScript等を格納&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;app/controllers/&lt;/td&gt;&lt;td&gt;コントローラを格納&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;app/models/&lt;/td&gt;&lt;td&gt;モデルを格納&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;app/views/&lt;/td&gt;&lt;td&gt;ビューのテンプレート(html,js)を格納&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;app/views/layouts/&lt;/td&gt;&lt;td&gt;ビューのレイアウトとして使用するhtmlテンプレートを格納&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;app/helper/&lt;/td&gt;&lt;td&gt;ヘルパーを格納&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;config/&lt;/td&gt;&lt;td&gt;DB設定、環境設定等各種設定ファイルを格納&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;config/environments/&lt;/td&gt;&lt;td&gt;各実行環境用の設定ファイルを格納&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;config/initializers/&lt;/td&gt;&lt;td&gt;初期化時に実行されるファイルを格納&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;config/locales/&lt;/td&gt;&lt;td&gt;I18n用のファイルを格納&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;db/&lt;/td&gt;&lt;td&gt;DB操作に使用するスクリプトを格納、SQLite3の場合はDBファイルも&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;db/migrate/&lt;/td&gt;&lt;td&gt;DBスキーマの編集のためのマイグレーションファイルを格納&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;lib/&lt;/td&gt;&lt;td&gt;MVCいずれにも属さない処理をライブラリ化し格納&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;script/&lt;/td&gt;&lt;td&gt;各種スクリプトを格納&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;public&lt;/td&gt;&lt;td&gt;静的ファイル(html,js,css,画像)を格納&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;test/&lt;/td&gt;&lt;td&gt;テストコードを格納&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;vendor/&lt;/td&gt;&lt;td&gt;サードパーティ製のライブラリ、外部ライブラリを格納&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;vendor/plugins/&lt;/td&gt;&lt;td&gt;プラグインを格納&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;ほとんどになってしまった……。とりあえず役割は覚えておこう。ただし一部ピンときてない場所もあり。&lt;/p&gt;
&lt;p&gt;続く。&lt;a href=&quot;2012-02-29-1330528564&quot;&gt;2012-02-29-1330528564&lt;/a&gt;&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>GitプロジェクトをコミットしたタイミングでJenkinsにビルドをしてもらいたい！</title>
   <link href="http://gosyujin.github.io/2012/02/23/1330001338"/>
   <updated>2012-02-23T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2012/02/23/1330001338</id>
   <content type="html">&lt;h1&gt;あらすじ&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;全然CIっぽくJenkinsを使っていなかったので本格的に使ってみたい。&lt;/li&gt;&lt;li&gt;Gitを連携させたい&lt;/li&gt;&lt;li&gt;GitリポジトリにコミットしたタイミングでJenkinsにビルドさせてみたい&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;…のだが、いきなりビルド時にcloneできないという現象でハマっていた。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;ERROR: Error cloning remote repo &#39;origin&#39; : Could not clone C:/project/excel_for_ruby.git&lt;/pre&gt;
&lt;h1&gt;上記の原因&lt;/h1&gt;
&lt;p&gt;cloneできない問題はJenkins実行時にgit.exeにパスが通ってなかった、設定していなかったという非常に残念なものだった。Jenkins実践入門にも手順が書いてあった。&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f1&quot; title=&quot;環境がアレだったので、proxyの設定とかその辺も探してしまった。&quot; name=&quot;fn1&quot;&gt;*1&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h1&gt;Jenkinsの「ビルド実行」でGitリポジトリのソースのテストをする&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;Jenkinsの管理 =&gt; プラグインの管理 =&gt; Jenkins GIT plugin をインストール&lt;/li&gt;&lt;li&gt;新規ジョブ作成 =&gt; フリースタイル・プロジェクト でプロジェクト作成&lt;/li&gt;&lt;li&gt;ソースコードシステム&lt;ul&gt;&lt;li&gt;Gitを選択&lt;/li&gt;&lt;li&gt;リポジトリを入力&lt;ul&gt;&lt;li&gt;C:\project\excel_for_ruby&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;ビルド&lt;ul&gt;&lt;li&gt;Windowsバッチコマンドの実行&lt;ul&gt;&lt;li&gt;rspecを実行できるように記述する&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;cd &amp;quot;C:\project\excel_for_ruby&amp;quot;
rspec -fs spec\*&lt;/pre&gt;
&lt;p&gt;これでビルドするとはじめのcloneできないエラー。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;Error cloning remote repo &#39;origin&#39; : Could not clone C:\project\excel_for_ruby&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;Jenkinsから見たGitのパスを設定&lt;ul&gt;&lt;li&gt;Jenkinsの管理 =&gt; システムの設定&lt;ul&gt;&lt;li&gt;Gitのパスを追加するフォームがあるのでこれを追加&lt;/li&gt;&lt;li&gt;Nameもなんでもいいから入力する(Defaultにした)&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;GitでCommitしたらJenkinsがビルドをしてくれるようにする&lt;/h1&gt;
&lt;p&gt;「wget ビルド実行パス」というコマンドをGitのフックスクリプトに記述すればコミット時にビルド実行できるらしい。とりあえずWindows用のwgetを取得。&lt;a href=&quot;http://users.ugent.be/~bpuype/wget/&quot;&gt;WGET 1.11.4 for Windows (win32)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;プロジェクト内の.git/hooks/post-commitを編集。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;echo &amp;quot;Hook post-commit start&amp;quot;
wget --no-proxy http://localhost:8080/job/excel_for_ruby/build?delay=5sec || echo &amp;quot;wget failed&amp;quot;
echo &amp;quot;Hook post-commit end&amp;quot;&lt;/pre&gt;
&lt;p&gt;proxyが噛んでいたので--no-proxy指定しないと400エラーに。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;Hook post-commit start
--2012-02-09 16:40:39--  http://localhost:8080/job/excel_for_ruby/build?delay=5s
ec
Resolving proxy.xxx.jp... xxx.xxx.xxx.xxx
Connecting to proxy.xxx.jp|xxx.xxx.xxx.xxx|:8080... connected.
Proxy request sent, awaiting response... 400 Bad Request
2012-02-09 16:40:39 ERROR 400: Bad Request.&lt;/pre&gt;
&lt;p&gt;これでCommit時にビルドが走ってくれる！　これでようやくスタートラインが見えてきた！&lt;/p&gt;
&lt;div class=&quot;footnote&quot;&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn1&quot; name=&quot;f1&quot;&gt;*1&lt;/a&gt;: 環境がアレだったので、proxyの設定とかその辺も探してしまった。&lt;/p&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>Rubyの実行ファイルを作成するExerbとOcraを試してみた</title>
   <link href="http://gosyujin.github.io/2012/02/20/1329744294"/>
   <updated>2012-02-20T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2012/02/20/1329744294</id>
   <content type="html">&lt;h1&gt;あらすじ&lt;/h1&gt;
&lt;p&gt;Rubyが入っていないWindows環境でも(要は自分以外)Rubyスクリプトを実行したいのでexe化する方法を模索する。というか、昔模索した後の結果を今更まとめる。&lt;/p&gt;
&lt;h1&gt;対象プロジェクト&lt;/h1&gt;
&lt;p&gt;win32oleを使ってExcelファイルを読み込みシートを取得し連番で吐くというRubyスクリプトをexe化。ソースはこんな感じ。&lt;/p&gt;
&lt;p&gt;&lt;script src=&quot;https://gist.github.com/1869221.js?file=getXlsSheetname.rb&quot;&gt;&lt;/script&gt;&lt;/p&gt;
&lt;p&gt;出力結果はこう。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ ruby getSheetname.rb Book1.xlsx
Book1.xlsx
---
Sheet1
Sheet2
Sheet3
Sheet4
Sheet5
---
end.&lt;/pre&gt;
&lt;p&gt;ExerbとOcraをためしてみた。&lt;/p&gt;
&lt;h1&gt;Exerb(ダメだった)&lt;/h1&gt;
&lt;p&gt;最新は5.4.0らしいが、今回はなんでか4.3.0を入れていた。(理由不明)&lt;/p&gt;
&lt;h2&gt;手順(失念)&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://exerb.sourceforge.jp/&quot;&gt;Exerb Project&lt;/a&gt;よりExerbをダウンロード後、setup.rbを実行？だけでいいんだっけ？&lt;/li&gt;&lt;li&gt;mkexy.batとexerb.batがRubyのbinに入るはず&lt;/li&gt;&lt;li&gt;exyファイルを作成する&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;$ mkexy.bat getSheetname.rb
---
end.&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;成功するとgetSheetname.exyというファイルが作成される(GemfileにおけるGemfile.lockのようなもん？)&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;# Generated by mkexy
# on 2012-02-15 22:05

general:
  startup: getSheetname.rb
  core: cui
  kcode: none

file:
  getSheetname.rb:
  win32ole.so:
    file: C:/rubies/Ruby/lib/ruby/1.8/i386-mswin32/win32ole.so
    type: extension-library
  nkf.so:
    file: C:/rubies/Ruby/lib/ruby/1.8/i386-mswin32/nkf.so
    type: extension-library
  kconv.rb:
    file: C:/rubies/Ruby/lib/ruby/1.8/kconv.rb
  rational.rb:
    file: C:/rubies/Ruby/lib/ruby/1.8/rational.rb
  date/format.rb:
    file: C:/rubies/Ruby/lib/ruby/1.8/date/format.rb
  date.rb:
    file: C:/rubies/Ruby/lib/ruby/1.8/date.rb
  prettyprint.rb:
    file: C:/rubies/Ruby/lib/ruby/1.8/prettyprint.rb
  pp.rb:
    file: C:/rubies/Ruby/lib/ruby/1.8/pp.rb&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;exyファイルをもとにexeファイルを作成する&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;$ exerb.bat getSheetname.exy&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;特にエラーも出ず、exeファイルも生成されたが…実行時にエラー&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;プロシージャ エントリ ポイント rb_during_gc がダイナミックリンクライブラリ getSheetname.exe から見つかりませんでした。&lt;/pre&gt;
&lt;p&gt;&lt;a href=&quot;http://ruby.11.n6.nabble.com/ruby-dev-35318-rb-during-gc-td3526996.html&quot;&gt;ruby-dev jp - [ruby-dev:35318&lt;/a&gt; rb_during_gc]&lt;/p&gt;
&lt;p&gt;これ？　んー何かコマンドが足りない？　手がかりが少なそうなので、もう一つのツールを当たってみる事に…。&lt;/p&gt;
&lt;h1&gt;Ocra&lt;/h1&gt;
&lt;p&gt;バージョンは1.3.0&lt;/p&gt;
&lt;h2&gt;手順&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;gemでインストール&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;$ gem install ocra&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;ocraコマンドでexe化&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;$ ocra.bat getSheetname.rb
=== Loading script to check dependencies
---
end.

=== Building getSheetname.exe
=== Adding user-supplied source files
=== Adding ruby executable ruby.exe
=== Adding library files
=== Compressing 2113827 bytes
=== Finished building getSheetname.exe (615866 bytes)&lt;/pre&gt;
&lt;p&gt;これで終わり。ワンコマンドでいける分、手順的にはOcraの方が早いか。(他のメリット・デメリットはおいといて……)&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>BASE64エンコーディングをRubyで自力実装した</title>
   <link href="http://gosyujin.github.io/2012/01/30/1327931393"/>
   <updated>2012-01-30T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2012/01/30/1327931393</id>
   <content type="html">&lt;h1&gt;あらすじ&lt;/h1&gt;
&lt;p&gt;BASE64エンコーディングをおまじないのように使っていたので車輪の再発明で原理を学ぶ。&lt;/p&gt;
&lt;h1&gt;参考サイト&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://www5d.biglobe.ne.jp/~stssk/rfc/rfc3548j.html&quot;&gt;RFC3548 ベース６４とベース３２とベース１６コード化&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://program.station.ez-net.jp/mini/encode/base64.asp&quot;&gt;EZ-NET ： Base64 の仕組み&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://blog.livedoor.jp/maru_tak/archives/50438057.html&quot;&gt;アルファベットとAsciiコードの相互変換:お題目うぉっち&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://d.hatena.ne.jp/gan2/20070603/1180888302&quot;&gt;10進数を2進数と16進数に変換する - gan2 の Ruby 勉強日記&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://wind-master.dip.jp/soft-info/item/7/catid/3&quot;&gt;気まぐれソフトハウス » Base64エンコード&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://www.sea-bird.org/doc/Cygwin/BASE64enc.html&quot;&gt;BASE64 について&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://yakinikunotare.boo.jp/orebase/index.php?Ruby%2F%CA%B8%BB%FA%CE%F3%A4%AB%A4%E91%CA%B8%BB%FA%CC%DC%A4%F2%BC%E8%A4%EA%BD%D0%A4%B9&quot;&gt;Ruby/文字列から1文字目を取り出す - 俺の基地&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://www.syuhitu.org/other/b64.html&quot;&gt;Base64エンコード&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;BASE64&lt;/h1&gt;
&lt;blockquote&gt;&lt;p&gt;Base64は、データを64種類の印字可能な英数字のみを用いて、それ以外の文字を扱うことの出来ない通信環境にてマルチバイト文字やバイナリデータを扱うためのエンコード方式である。&lt;/p&gt;&lt;cite&gt;&lt;a href=&quot;http://ja.wikipedia.org/wiki/Base64&quot;&gt;http://ja.wikipedia.org/wiki/Base64&lt;/a&gt;&lt;/cite&gt;&lt;/blockquote&gt;
&lt;ul&gt;&lt;li&gt;データ変換形式&lt;/li&gt;&lt;li&gt;メール等でも使われている&lt;/li&gt;&lt;li&gt;やりかた&lt;ul&gt;&lt;li&gt;元データを6bitに分割&lt;ul&gt;&lt;li&gt;ちょうど6bitにならない場合は0を足す&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;6bitデータを対応する文字に4文字ずつ変換(A-Za-z0-9+/)&lt;ul&gt;&lt;li&gt;4文字にならない場合は=を足す&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;全部くっつける&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;ふむう。。何か書けそう？　ちょっとやってみるか。&lt;/p&gt;
&lt;h1&gt;ソース&lt;/h1&gt;
&lt;p&gt;&lt;script src=&quot;https://gist.github.com/1869205.js?file=base64enc.rb&quot;&gt;&lt;/script&gt;&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;まず、変換したい文字のASCII値を取得&lt;/li&gt;&lt;li&gt;次にそれを2進数に変換(1と2はまとめてもいいかも)&lt;/li&gt;&lt;li&gt;6bit毎に分けて割り切れない分は0を足す&lt;/li&gt;&lt;li&gt;6bitのデータを変換テーブルと照らしあわせて対応する1文字と変換&lt;/li&gt;&lt;li&gt;4文字になるまで=を足す&lt;/li&gt;&lt;/ol&gt;
&lt;h1&gt;検証&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;テスト文字列: kk_Ataka&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;己&lt;/h2&gt;
&lt;pre class=&quot;&quot;&gt;$ ruby base64.rb kk_Ataka
BYTE16:6b6b5f4174616b61
BYTE2 :0110101101101011010111110100000101110100011000010110101101100001
ADD 0 :011010110110101101011111010000010111010001100001011010110110000100
TRANS :a2tfQXRha2E
ADD = :a2tfQXRha2E=
a2tfQXRha2E=&lt;/pre&gt;
&lt;h2&gt;&lt;a href=&quot;http://hogehoge.tk/tool/&quot;&gt;データ変換ツール（BASE64, URLエンコード(URLデコード), HEX(16進ダンプ), MD5, SHA-1変換フォーム）&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;プレーンTEXT, 変換不要, 未指定, BASE64&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;a2tfQXRha2E=&lt;/pre&gt;
&lt;h2&gt;&lt;a href=&quot;http://tociyuki.flop.jp/archive/base64.html&quot;&gt;JavaScriptによるBASE64変換−ちゃよて・ちゃよて&lt;/a&gt;&lt;/h2&gt;
&lt;pre class=&quot;&quot;&gt;a2tfQXRha2E=&lt;/pre&gt;
&lt;h2&gt;&lt;a href=&quot;http://base64.taroz.jp/&quot;&gt;ｂａｓｅ６４エンコード・デコード&lt;/a&gt;&lt;/h2&gt;
&lt;pre class=&quot;&quot;&gt;a2tfQXRha2E=&lt;/pre&gt;
&lt;p&gt;おお、同じようだ。&lt;/p&gt;
&lt;p&gt;とりあえず原理は何となくわかったぞ。&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Rubyで固定長の値を扱う方法sprintfとパーセント演算子</title>
   <link href="http://gosyujin.github.io/2012/01/23/1327323360"/>
   <updated>2012-01-23T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2012/01/23/1327323360</id>
   <content type="html">&lt;h1&gt;あらすじ&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;Rubyで固定長の値を扱うときはどうしたらいいんだろう&lt;ul&gt;&lt;li&gt;必ず5ケタにしたい！　255の場合は00255になってほしい&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;参考サイト&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;http://www.ruby-lang.org/ja/old-man/html/sprintf_A5D5A5A9A1BCA5DEA5C3A5C8.html&quot;&gt;sprintfフォーマット - Rubyリファレンスマニュアル&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.oki-osk.jp/esc/ruby/tut-04.html&quot;&gt;Ruby チュートリアル - 4. 主なクラス&lt;/a&gt; の4.2&lt;/p&gt;
&lt;h1&gt;方法&lt;/h1&gt;
&lt;p&gt;調べてみるとsprintfメソッドというものがあった。&lt;/p&gt;
&lt;pre class=&quot;ruby&quot;&gt;irb(main):020:0&amp;gt; sprintf(&amp;quot;Number:%10d&amp;quot;, 255)
=&amp;gt; &amp;quot;Number:       255&amp;quot;
irb(main):021:0&amp;gt; sprintf(&amp;quot;Number:%010d&amp;quot;, 255)
=&amp;gt; &amp;quot;Number:0000000255&amp;quot;&lt;/pre&gt;
&lt;p&gt;なるほど、これを使えば良いのかと思っていたら、次にStringクラスに%(パーセント演算子)というものが存在している事を発見。どんな事をしてくれるのかというと…&lt;/p&gt;
&lt;pre class=&quot;ruby&quot;&gt;irb(main):022:0&amp;gt; &amp;quot;Number:%010d&amp;quot; % 255
=&amp;gt; &amp;quot;Number:0000000255&amp;quot;&lt;/pre&gt;
&lt;p&gt;とりあえず、使ってないと見慣れない物体に見えるなぁ。&lt;/p&gt;
&lt;p&gt;という事で、方法を二種類見つけたんだけど、これどっち使うのがいいんだろう。個人的にはsprintfの方が何やっているかはわかりやすいけど、これは慣れの問題っぽいしな。 &lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Subversionのリポジトリをサーバ間でまるごと移動する</title>
   <link href="http://gosyujin.github.io/2012/01/15/1326624864"/>
   <updated>2012-01-15T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2012/01/15/1326624864</id>
   <content type="html">&lt;h1&gt;あらすじ&lt;/h1&gt;
&lt;p&gt;AサーバからBサーバにリポジトリを引っ越しする。&lt;/p&gt;
&lt;h1&gt;参考サイト&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;http://hain.jp/index.php/tech-j/2008/03/24/p199&quot;&gt;SVN(Subversion)サーバを移転する方法 - ぎじゅっやさん&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;手順&lt;/h1&gt;
&lt;h2&gt;引っ越し元のサーバ&lt;/h2&gt;
&lt;p&gt;まずはリポジトリのダンプファイルを作成。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ svnadmin dump リポジトリパス(/home/xxx/yyyなど) &amp;gt; repo.dump

 * リビジョン 0 をダンプしました。
 * リビジョン 1 をダンプしました。
 * リビジョン 2 をダンプしました。
 * リビジョン 3 をダンプしました。
 * リビジョン 4 をダンプしました。
 * リビジョン 5 をダンプしました。&lt;/pre&gt;
&lt;h2&gt;引っ越し先のサーバ&lt;/h2&gt;
&lt;p&gt;まずリポジトリを作る。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ svnadmin create repos&lt;/pre&gt;
&lt;p&gt;次に引っ越し元で作ったdumpファイルを引っ越し先のサーバに持って来る。(FTPでもなんでも)&lt;/p&gt;
&lt;p&gt;そして、svnadmin loadコマンドでダンプファイルを流しこむ。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ svnadmin load repos &amp;lt; repo.dump
     * パスを追加しています...
     (略)
------- リビジョン xxx をコミットしました。&lt;/pre&gt;
&lt;p&gt;同期を取るため、最新のリビジョンを移動するとかもできるそうなので、必要になったらその辺も調べてみる。&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>2011年KPT</title>
   <link href="http://gosyujin.github.io/2011/12/28/1325118790"/>
   <updated>2011-12-28T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2011/12/28/1325118790</id>
   <content type="html">&lt;h1&gt;今年学んだこと&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;Ruby&lt;ul&gt;&lt;li&gt;Bundler, RVM, Pik, Pit, Sinatra, ZenTest, Lokka&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;インストールパスにProgram FilesとDocuments and Settingsは鬼門&lt;/li&gt;&lt;li&gt;Redmine&lt;/li&gt;&lt;li&gt;Heroku&lt;/li&gt;&lt;li&gt;Git&lt;/li&gt;&lt;li&gt;Sphinx&lt;ul&gt;&lt;li&gt;reST&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;各種WebAPI&lt;ul&gt;&lt;li&gt;はてな, Read it Later, Twitter, Evernote&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&quot;deco&quot; style=&quot;color:#FF0000;&quot;&gt;インストールパスにProgram FilesとDocuments and Settingsは鬼門&lt;/span&gt;(大事なので2回)&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;Keep&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;色々なスクリプトを作るようになり○○するだけの簡単なお仕事はかなり効率化できた&lt;ul&gt;&lt;li&gt;特にwin32oleには何時間分助けられたか&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Ruby Advent Calendarに参加して初めて発表？　的な事をできた&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;Problem&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;TDDやるやる詐欺&lt;ul&gt;&lt;li&gt;specファイルは毎回作るのだか毎回中途半端になってしまった&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Jenkins使う使う詐欺&lt;ul&gt;&lt;li&gt;まずテストコードが書けないといかんともしがたいということがわかったので、少し保留？&lt;/li&gt;&lt;li&gt;小さいスクリプトならZenTestだけでもよさそう？&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;スクリプト投げっぱなしジャーマン&lt;ul&gt;&lt;li&gt;自分専用とはいえ、必要最低限の機能をこしらえたら後はボロボロ&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;Try(優先度順)&lt;/h1&gt;
&lt;ol&gt;&lt;li&gt;TDDのリズムで何か作ってみたい&lt;ul&gt;&lt;li&gt;社内で一人TDDに開眼したい&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;仕事で使っているスクリプトを汎用化してGitHubに登録したい&lt;ul&gt;&lt;li&gt;Outlookから添付ファイルをぶっこ抜いてきたりExcelから必要データぶっこ抜いてcsvにしたり&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;gemを作れるようになりたい&lt;ul&gt;&lt;li&gt;特に何かしたいわけではないが、動作原理を追いたい&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;ブログを月一更新したい&lt;ul&gt;&lt;li&gt;気づいたら2011年は2月に無更新月を作ってしまい悔しい！&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Advent Calendar以外でも何か発表してみたい！&lt;/li&gt;&lt;/ol&gt;</content>
 </entry>
 
 <entry>
   <title>EvernoteのAPIをRubyから叩きたい</title>
   <link href="http://gosyujin.github.io/2011/12/27/1324911671"/>
   <updated>2011-12-27T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2011/12/27/1324911671</id>
   <content type="html">&lt;h1&gt;はじめに&lt;/h1&gt;
&lt;p&gt;この記事は&lt;a href=&quot;http://atnd.org/events/22021&quot;&gt;Ruby Advent Calendar jp: 2011 : ATND&lt;/a&gt;の27日目の記事です。&lt;/p&gt;
&lt;p&gt;26日目は&lt;a href=&quot;http://d.hatena.ne.jp/tackun/&quot;&gt;id:tackun&lt;/a&gt;さんの&lt;a href=&quot;http://d.hatena.ne.jp/tackun/20111226/1324908770&quot;&gt;Sinatraを使って、RESTFulなWeb-APIを作ってみたい - tackun note&lt;/a&gt;でした。&lt;/p&gt;
&lt;p&gt;28日目はr7kamuraさんの&lt;a href=&quot;http://r7kamura.hatenablog.com/entry/2011/12/28/234717&quot;&gt;RubyでGPUを使おう - &amp;amp;#10008;&amp;amp;#9593;&amp;amp;#9697;&amp;amp;#9593;&amp;amp;#10008;&lt;/a&gt;です。&lt;/p&gt;
&lt;br /&gt;
&lt;p&gt;今日はターミナル(or コマンドプロンプト)経由でEvernoteのAPIを叩き、自分のノートブックを取得してみようとしてみます。ソースを書く前にAPIの申請からやっていきます。&lt;/p&gt;
&lt;h1&gt;APIの申請…の前に&lt;/h1&gt;
&lt;p&gt;developer用サイトからAPI SDKを入手。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://www.evernote.com/about/developer/api/&quot;&gt;Cloud API - Evernote Developers&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20111226235624&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20111226/20111226235624.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;上記のリンクを叩くとzipがDLできるので、これを解凍しruby/lib以下のファイルを用意しておく。&lt;/p&gt;
&lt;h1&gt;APIの申請&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://www.evernote.com/about/developer/api/&quot;&gt;Cloud API - Evernote Developers&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;同じページを下へスクロールしていくとRequest an API Keyという箇所があるので以下の項目を入力する。&lt;/p&gt;
&lt;table&gt;&lt;tr&gt;&lt;th&gt;Evernote username&lt;/th&gt;&lt;td&gt;Evernoteのユーザ名&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;Your Name&lt;/th&gt;&lt;td&gt;氏名&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;Your Email&lt;/th&gt;&lt;td&gt;メールアドレス&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;Organization&lt;/th&gt;&lt;td&gt;組織や団体、だが、個人で使う場合は氏名でよい&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;Web or Client&lt;/th&gt;&lt;td&gt;今回は自分で使う用なのでClient Keysを選択(既に持っているので下の画像ではWebを選択している)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;Application Details&lt;/th&gt;&lt;td&gt;どうやってAPIを使いたいか&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;つたない英語でDetailsを書く。以前は審査に時間がかかったらしいが今はSUBMITすればすぐKeyが発行されるみたい。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20111218113115&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20111218/20111218113115.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;WebApplicationを選んだ場合。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20111218113113&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20111218/20111218113113.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Clientを選んだ場合。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20111218113114&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20111218/20111218113114.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;これでConsumer KeyとConsumer Secretをもらえた。ただし、この状態では砂場(sandbox.evernote.com)でしか使えない。&lt;/p&gt;
&lt;p&gt;上記画像のNext Steps 2.によると&lt;a href=&quot;https://sandbox.evernote.com/Registration.action&quot;&gt;Create an Evernote Account&lt;/a&gt;で砂場用アカウントを作成し、砂場で開発をしてくださいという事でいきなり本家(www.evernote.com)で動かせないようになっている。&lt;/p&gt;
&lt;h1&gt;Activate&lt;/h1&gt;
&lt;p&gt;今回のエントリではやらないが、本家で動かす時はActivateサイト(Next Steps 3.のlet us knowリンクから行ける)でActivateしてもらう必要がある。(ここは昔の事なので少し曖昧)&lt;/p&gt;
&lt;table&gt;&lt;tr&gt;&lt;th&gt;Email&lt;/th&gt;&lt;td&gt;メールアドレス&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;API Consumer Key&lt;/th&gt;&lt;td&gt;登録時にもらったConsumer Key&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;Additional Info&lt;/th&gt;&lt;td&gt;その他何かあれば？(何か書いたっけ…？)&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20111218115757&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20111218/20111218115757.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;ソース&lt;/h1&gt;
&lt;p&gt;iitHubに。 &lt;a href=&quot;https://github.com/gosyujin/evernote_for_ruby/blob/master/myEvernote.rb&quot;&gt;https://github.com/gosyujin/evernote_for_ruby/blob/master/myEvernote.rb&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ここから実際に取得していきます。&lt;/p&gt;
&lt;h1&gt;パス追加&lt;/h1&gt;
&lt;p&gt;プロジェクト内にあるライブラリ(さっき落としたAPI SDK)を読み込む。&lt;/p&gt;
&lt;pre class=&quot;ruby&quot;&gt;dir = File.expand_path(File.dirname(__FILE__))
$LOAD_PATH.push(&amp;quot;#{dir}/lib/ruby&amp;quot;)
$LOAD_PATH.push(&amp;quot;#{dir}/lib/ruby/Evernote/EDAM&amp;quot;)

require &#39;thrift/types&#39;
(略)
require &#39;Evernote/EDAM/user_store&#39;
(略)&lt;/pre&gt;
&lt;p&gt;File.expand_path(File.dirname(__FILE__))は出力するとそれぞれこのようになる。&lt;/p&gt;
&lt;p&gt;&gt;|?|&lt;/p&gt;
&lt;p&gt;&gt; puts __FILE__&lt;/p&gt;
&lt;p&gt;#=&gt; ./myEvernote.rb&lt;/p&gt;
&lt;p&gt;&gt; puts File.dirname(__FILE__)&lt;/p&gt;
&lt;p&gt;#=&gt; .&lt;/p&gt;
&lt;p&gt;&gt; puts File.expand_path(File.dirname(__FILE__))&lt;/p&gt;
&lt;p&gt;#=&gt; C:/project/evernotexxx&lt;/p&gt;
&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;プロジェクトディレクトリを指定できる。そして、&lt;/p&gt;
&lt;pre class=&quot;ruby&quot;&gt;$LOAD_PATH.push(&amp;quot;#{dir}/lib/ruby&amp;quot;)&lt;/pre&gt;
&lt;p&gt;で組み込み変数$LOAD_PATH&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f1&quot; title=&quot;requireがファイルを読み込むときに検索するディレクトリの名前を含む配列 - たのしいRuby 第三版 P373&quot; name=&quot;fn1&quot;&gt;*1&lt;/a&gt;&lt;/span&gt;にプロジェクト内のlib/rubyを含めている。これで読み込める。&lt;/p&gt;
&lt;h1&gt;初期化&lt;/h1&gt;
&lt;h2&gt;流れ&lt;/h2&gt;
&lt;ol&gt;&lt;li&gt;パスワードなどの情報を取得する&lt;/li&gt;&lt;li&gt;UserStoreを作成し、認証する&lt;/li&gt;&lt;li&gt;NoteStoreを作成し、Evernoteのノートをいじれるようにする&lt;/li&gt;&lt;/ol&gt;
&lt;h2&gt;パスワードなどの情報を取得する&lt;/h2&gt;
&lt;pre class=&quot;ruby&quot;&gt;  def initialize()
    @core = Pit.get(&amp;quot;evernote&amp;quot;, :require =&amp;gt; {
      &amp;quot;userName&amp;quot; =&amp;gt; &amp;quot;your evernote userName.&amp;quot;,
      &amp;quot;password&amp;quot; =&amp;gt; &amp;quot;your evernote password.&amp;quot;,
      &amp;quot;consumerKey&amp;quot; =&amp;gt; &amp;quot;your evernote consumerKey.&amp;quot;,
      &amp;quot;consumerSecret&amp;quot; =&amp;gt; &amp;quot;your evernote consumerSecret.&amp;quot;,
    })
    
    host = &amp;quot;sandbox.evernote.com&amp;quot;
    userStoreUrl = &amp;quot;https://#{host}/edam/user&amp;quot;
    userStoreTransport = Thrift::HTTPClientTransport.new(userStoreUrl)
    userStoreProtocol = Thrift::BinaryProtocol.new(userStoreTransport)
    userStore = Evernote::EDAM::UserStore::UserStore::Client.new(userStoreProtocol)&lt;/pre&gt;
&lt;p&gt;初期化時にまず&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;userName(登録時の)&lt;/li&gt;&lt;li&gt;password(登録時の)&lt;/li&gt;&lt;li&gt;consumer_key(Evernoteからもらったもの)&lt;/li&gt;&lt;li&gt;consumer_secret(Evernoteからもらったもの)&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;を取得する。ソースにべた書きしてもいいのだが、パスワードとかはGitHubにあげる時に消しておきたいのでpit&lt;/p&gt;
&lt;p&gt;を使って情報を外出しする事に。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://subtech.g.hatena.ne.jp/cho45/20080102/1199257680&quot;&gt;アカウント情報を管理するコマンド pit - 冬通りに消え行く制服ガールは✖夢物語にリアルを求めない。 - subtech&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://d.hatena.ne.jp/snaka72/20090409/1239286994&quot;&gt;WindowsでPitの落とし穴(pit)にはまった - 今日もスミマセン。&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;pitを使う事で%USERPROFILE%\.pit\下にyaml形式で情報を保存しておくことができる。&lt;/p&gt;
&lt;h2&gt;UserStore作成&lt;/h2&gt;
&lt;p&gt;次にUserStoreを作成する。UserStoreはとりあえず、ユーザの情報をほげほげするものという認識。hostはテスト環境なのでsandbox.evernote.comを指定している。&lt;/p&gt;
&lt;h2&gt;認証&lt;/h2&gt;
&lt;pre class=&quot;ruby&quot;&gt;  def auth(userStore)
    # バージョンチェック
    versionOK = userStore.checkVersion(&amp;quot;MyEvernote&amp;quot;,
      Evernote::EDAM::UserStore::EDAM_VERSION_MAJOR,
      Evernote::EDAM::UserStore::EDAM_VERSION_MINOR)
#      puts &amp;quot;Is my EDAM protocol version up to date? #{versionOK}&amp;quot;
    if (!versionOK) then
      exit(1)
    end
    begin
      auth = userStore.authenticate(
        @core[&amp;quot;userName&amp;quot;],
        @core[&amp;quot;password&amp;quot;],
        @core[&amp;quot;consumerKey&amp;quot;],
        @core[&amp;quot;consumerSecret&amp;quot;])
#        puts &amp;quot;Auth Success: #{auth.user.username}&amp;quot;
      return auth
    rescue Evernote::EDAM::Error::EDAMUserException =&amp;gt; ex
      parameter = ex.parameter
      errorCode = ex.errorCode
      errorText = Evernote::EDAM::Error::EDAMErrorCode::VALUE_MAP[errorCode]
      puts &amp;quot;Auth Error: #{errorText}(ErrorCode: #{errorCode}), Parameter: #{parameter}&amp;quot;
      exit
    end
  end&lt;/pre&gt;
&lt;p&gt;まずは、checkVersionメソッド(後述)の呼び出し。&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f2&quot; title=&quot;キャメルケースを多用してる…？　と思ったけど、xxx_yyyZzzzみたいなメソッドもあるなあ。どっちにあわせれば…&quot; name=&quot;fn2&quot;&gt;*2&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;pre class=&quot;ruby&quot;&gt;bool UserStore.checkVersion(clientname, edamVersionMajor, edamVersionMinor)&lt;/pre&gt;
&lt;p&gt;チェックが終わったら次はauthenticateでユーザの認証を行う。&lt;/p&gt;
&lt;pre class=&quot;ruby&quot;&gt;AuthenticationResult UserStore.authenticate(userName, password, consumer_key, consumer_secret)&lt;/pre&gt;
&lt;p&gt;認証が成功したらAuthenticationResultオブジェクトが返ってくる。ユーザ情報なんかも返ってくるが、この中のauthenticationTokenが、この先ノートを新規作成したり更新したりする時に必ず必要になるので控えておく。Tokenを使っている例は下記の通り。&lt;/p&gt;
&lt;pre class=&quot;ruby&quot;&gt;# ノートブック作成。第一引数がauthenticationToken。
Types.Notebook createNotebook(string authenticationToken, Types.Notebook notebook)
# ノートブック更新。第一引数が以下同文。
i32 updateNotebook(string authenticationToken, Types.Notebook notebook)
# ノートブック取得。略。
Types.Notebook getNotebook(string authenticationToken, Types.Guid guid)&lt;/pre&gt;
&lt;h2&gt;NoteStore作成&lt;/h2&gt;
&lt;pre class=&quot;ruby&quot;&gt;    noteStoreUrlBase = &amp;quot;https://#{host}/edam/note/&amp;quot;
    noteStoreUrl = noteStoreUrlBase + @authentication.user.shardId
    noteStoreTransport = Thrift::HTTPClientTransport.new(noteStoreUrl)
    noteStoreProtocol = Thrift::BinaryProtocol.new(noteStoreTransport)
    @noteStore = Evernote::EDAM::NoteStore::NoteStore::Client.new(noteStoreProtocol)&lt;/pre&gt;
&lt;p&gt;で、最後にNoteStoreを作成する。shardIdを指定する必要がある。shardIdは何かっていうと…。&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;The name of the virtual server that manages the state of this user. This value is used internally to determine which system should service requests about this user&#39;s data. It is also used to construct the appropriate URL to make requests from the NoteStore.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;ユーザ状態を管理する仮想サーバ名？&lt;/p&gt;
&lt;h1&gt;ノートブックを取得していく。&lt;/h1&gt;
&lt;p&gt;準備はできたのでノートブックを取得していく。今のEvernote(砂場)の構造はこう。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20111225163340&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20111225/20111225163340.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;それに対して全ノートを取得してくるとこんな感じ。&lt;/p&gt;
&lt;pre class=&quot;ruby&quot;&gt;@e = MyEvernote.new()
# 全ノートブックを取得
pp @e.getNotebooks()&lt;/pre&gt;
&lt;pre class=&quot;ruby&quot;&gt;  # 全ノートブックを取得する
  def getNotebooks()
    @noteStore.listNotebooks(@token)
  end&lt;/pre&gt;
&lt;p&gt;全ノートブックはNoteStore.listNotebooks(authenticationToken)で取得する事ができる。&lt;/p&gt;
&lt;pre class=&quot;ruby&quot;&gt;[&amp;lt;Evernote::EDAM::Type::Notebook guid:&amp;quot;2d8ec8b5-5706-434d-a1dc-4ea0c6ba1993&amp;quot;, name:&amp;quot;Wait&amp;quot;, updateSequenceNum:745, defaultNotebook:false, serviceCreated:1312818684000, serviceUpdated:1324051378000&amp;gt;,
 &amp;lt;Evernote::EDAM::Type::Notebook guid:&amp;quot;33880e53-4c9f-4104-a6e6-777ed1e3cef2&amp;quot;, name:&amp;quot;Sandbox&amp;quot;, updateSequenceNum:871, defaultNotebook:true, serviceCreated:1309536176000, serviceUpdated:1324051378000&amp;gt;,
 &amp;lt;Evernote::EDAM::Type::Notebook guid:&amp;quot;71cdd6f9-5070-4508-bc80-a3f835a61a55&amp;quot;, name:&amp;quot;UpDeleteNotebook&amp;quot;, updateSequenceNum:1468, defaultNotebook:false, serviceCreated:1324099155000, serviceUpdated:1324099155000&amp;gt;,
 &amp;lt;Evernote::EDAM::Type::Notebook guid:&amp;quot;450b52e6-2daa-4b04-9012-4623a8e12ef5&amp;quot;, name:&amp;quot;TestNotebook&amp;quot;, updateSequenceNum:1469, defaultNotebook:false, serviceCreated:1324099138000, serviceUpdated:1324099166000&amp;gt;]&lt;/pre&gt;
&lt;p&gt;おお、取れた！&lt;/p&gt;
&lt;p&gt;nameは文字通りノートブック名。defaultNoteBookはデフォルトの設定true|false。以下略。guid(globally unique identifier)は、ノートブック、ノート、タグなどに対して振られる一意のID。フォーマットはこんな感じ。&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f3&quot; title=&quot;Evernote::EDAM::Limits::EDAM_GUID_REGEX&quot; name=&quot;fn3&quot;&gt;*3&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$&lt;/pre&gt;
&lt;p&gt;GUIDがわかれば、特定のノートブックを引っ張ってくる事もできる。例えばGUID: 450b52e6-2daa-4b04-9012-4623a8e12ef5がTestNotebookなので…。&lt;/p&gt;
&lt;pre class=&quot;ruby&quot;&gt;    @e = MyEvernote.new()
    @NotebookGuid = &#39;450b52e6-2daa-4b04-9012-4623a8e12ef5&#39;
    # 特定のノートブックを取得
    pp @e.getNotebook(@NotebookGuid).name
    pp @e.getNotebook(@NotebookGuid)&lt;/pre&gt;
&lt;pre class=&quot;ruby&quot;&gt;  def getNotebook(key)
    if isGuid(key) then
      # GUIDから検索
      return @noteStore.getNotebook(@token, key)
    end
  end&lt;/pre&gt;
&lt;pre class=&quot;ruby&quot;&gt;&amp;quot;TestNotebook&amp;quot;
&amp;lt;Evernote::EDAM::Type::Notebook guid:&amp;quot;450b52e6-2daa-4b04-9012-4623a8e12ef5&amp;quot;, name:&amp;quot;TestNotebook&amp;quot;, updateSequenceNum:1469, defaultNotebook:false, serviceCreated:1324099138000, serviceUpdated:1324099166000&amp;gt;&lt;/pre&gt;
&lt;p&gt;TestNotebookが取れた！&lt;/p&gt;
&lt;p&gt;さらにfilterをかける事でノートブック内から特定のノートを取得できる。&lt;/p&gt;
&lt;pre class=&quot;ruby&quot;&gt;@e = MyEvernote.new()
@NotebookGuid = &#39;450b52e6-2daa-4b04-9012-4623a8e12ef5&#39;
# ノートブック内のノートを取得
pp @e.getNote(@NotebookGuid)&lt;/pre&gt;
&lt;pre class=&quot;ruby&quot;&gt;  def getNote(notebookGuid, count=100)
    filter = Evernote::EDAM::NoteStore::NoteFilter.new
    filter.notebookGuid = notebookGuid
    @noteStore.findNotes(@token, filter, 0, count)
  end&lt;/pre&gt;
&lt;pre class=&quot;ruby&quot;&gt;&amp;lt;Evernote::EDAM::NoteStore::NoteList startIndex:0, totalNotes:2, 
  notes:[
    &amp;lt;Evernote::EDAM::Type::Note guid:&amp;quot;fa05f909-97d3-4504-8015-125fb026c8be&amp;quot;, 
      title:&amp;quot;Images&amp;quot;, contentHash:6dd62d0a9b187cbea4350b1ada8fda74, contentLength:1200,
      created:1324099541000, updated:1324099550000, active:true, updateSequenceNum:1473,
      notebookGuid:&amp;quot;450b52e6-2daa-4b04-9012-4623a8e12ef5&amp;quot;,
      resources:[&amp;lt;Evernote::EDAM::Type::Resource guid:&amp;quot;536abe91-3ad3-48f6-8add-9fbcad7b95ab&amp;quot;, 
      noteGuid:&amp;quot;fa05f909-97d3-4504-8015-125fb026c8be&amp;quot;, 
      data:&amp;lt;Evernote::EDAM::Type::Data bodyHash:203b77ab9cb177e5406340445b64e78c, size:2044&amp;gt;, 
      mime:&amp;quot;image/jpeg&amp;quot;, width:64, height:64, active:true, 
      recognition:&amp;lt;Evernote::EDAM::Type::Data bodyHash:68b3bd35f22b01ac57e55e7a7974ed8d, size:533&amp;gt;, 
      attributes:&amp;lt;Evernote::EDAM::Type::ResourceAttributes &amp;gt;, updateSequenceNum:1476&amp;gt;, 
      &amp;lt;Evernote::EDAM::Type::Resource guid:&amp;quot;8c329667-4c20-4e0a-a291-e437baf99f2d&amp;quot;, 
      noteGuid:&amp;quot;fa05f909-97d3-4504-8015-125fb026c8be&amp;quot;, 
      data:&amp;lt;Evernote::EDAM::Type::Data bodyHash:b1bdcdc515d937fb3e16a1e654abfffb, size:453&amp;gt;,
      mime:&amp;quot;image/png&amp;quot;, width:14, height:13, active:true, 
      attributes:&amp;lt;Evernote::EDAM::Type::ResourceAttributes &amp;gt;, updateSequenceNum:1474&amp;gt;], 
      attributes:&amp;lt;Evernote::EDAM::Type::NoteAttributes sourceURL:&amp;quot;http://google.com&amp;quot;&amp;gt;&amp;gt;,
    &amp;lt;Evernote::EDAM::Type::Note guid:&amp;quot;19c20dac-6d90-4e8c-bbf9-f11450416c48&amp;quot;, title:&amp;quot;TestNote&amp;quot;, 
      contentHash:401df83bfdb6fd1f152c4d226fa1d0b6, contentLength:189, created:1324099587000, 
      updated:1324099587000, active:true, updateSequenceNum:1477, 
      notebookGuid:&amp;quot;450b52e6-2daa-4b04-9012-4623a8e12ef5&amp;quot;, 
      attributes:&amp;lt;Evernote::EDAM::Type::NoteAttributes &amp;gt;&amp;gt;], updateCount:1477&amp;gt;&lt;/pre&gt;
&lt;h1&gt;終わりに&lt;/h1&gt;
&lt;p&gt;という事で、EvernoteAPI登録からノート取得までをする事ができました。もっと画像をアップしたりタグ埋め込んだりもできるのですが、それはこれから学んでいくという事で。&lt;/p&gt;
&lt;h1&gt;参考サイト、兼自分で調べる用&lt;/h1&gt;
&lt;h2&gt;Thrift&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://blog.broomie.net/index.cgi?id=36&quot;&gt;BLOG::broomie.net: Thriftが便利すぎる&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://www.atmarkit.co.jp/news/200704/03/thrift.html&quot;&gt;巨大SNSを支える多言語混在RPC開発フレームワーク“Thrift” − ＠IT&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;EDAM(Evernote Data Access and Management)&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://d.hatena.ne.jp/soutaro/20110910/1315645433&quot;&gt;Evernote Synchronization via EDAMを読みました - soutaroにっき&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;UserStoreとは&lt;/h2&gt;
&lt;blockquote&gt;&lt;p&gt;The UserStore service is primarily used by EDAM clients to establish authentication via username and password over a trusted connection (e.g. SSL). A client&#39;s first call to this interface should be checkVersion() to ensure that the client&#39;s software is up to date. &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;ユーザ名やパスワードを信頼された接続上で認証するためEDAMクライアントで利用される。はじめにcheckVersion()メソッドを呼び、クライアントのソフトのバージョンが最新である事を保障すべき。&lt;/p&gt;
&lt;h2&gt;NoteStoreとは&lt;/h2&gt;
&lt;blockquote&gt;&lt;p&gt;The NoteStore service is used by EDAM clients to exchange information about the collection of notes in an account. This is primarily used for synchronization, but could also be used by a &quot;thin&quot; client without a full local cache.&lt;/p&gt;&lt;p&gt;All functions take an &quot;authenticationToken&quot; parameter, which is the value returned by the UserStore which permits access to the account. This parameter is mandatory for all functions. &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;アカウントのノート収集情報を交換、同期するためEDAMクライアントで利用される。(ローカルキャッシュのない新クライアントでも使われた)全ての機能はauthenticationTokenのパラメータを使用する。これはアクセス認証が通ったアカウントのUserStoreの値を使用する。&lt;/p&gt;
&lt;div class=&quot;footnote&quot;&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn1&quot; name=&quot;f1&quot;&gt;*1&lt;/a&gt;: requireがファイルを読み込むときに検索するディレクトリの名前を含む配列 - たのしいRuby 第三版 P373&lt;/p&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn2&quot; name=&quot;f2&quot;&gt;*2&lt;/a&gt;: キャメルケースを多用してる…？　と思ったけど、xxx_yyyZzzzみたいなメソッドもあるなあ。どっちにあわせれば…&lt;/p&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn3&quot; name=&quot;f3&quot;&gt;*3&lt;/a&gt;: Evernote::EDAM::Limits::EDAM_GUID_REGEX&lt;/p&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>SinatraでHaml入門</title>
   <link href="http://gosyujin.github.io/2011/12/26/1324910284"/>
   <updated>2011-12-26T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2011/12/26/1324910284</id>
   <content type="html">&lt;h1&gt;あらすじ&lt;/h1&gt;
&lt;p&gt;Sinatraとか使っていてもHtmlべた書きばかりなのでHamlに入門してみる。&lt;/p&gt;
&lt;h1&gt;参考サイト&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://haml.ursm.jp/getting-started&quot;&gt;Getting Started - 日本Hamlの会&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;日本ハム！&lt;/p&gt;
&lt;h1&gt;Hamlとは&lt;/h1&gt;
&lt;blockquote&gt;&lt;p&gt;HamlはHTML/XHTMLを生成するためのマークアップ言語です。インデントや簡略構文によって簡潔な記述が行えます。&lt;/p&gt;&lt;cite&gt;&lt;a href=&quot;http://haml.ursm.jp/&quot;&gt;http://haml.ursm.jp/&lt;/a&gt;&lt;/cite&gt;&lt;/blockquote&gt;
&lt;h1&gt;今まで&lt;/h1&gt;
&lt;pre class=&quot;ruby&quot;&gt;require &#39;rubygems&#39;
require &#39;sinatra&#39;

get &#39;/&#39; do
  &amp;quot;&amp;lt;style type=&#39;text/css&#39;&amp;gt;.head {border-bottom: 1px solid #CCCCCC;border-left: 5px solid #CCCCCC;}.time {color: #CCCCCC;}.tweet {}&amp;lt;/style&amp;gt;&amp;lt;h1&amp;gt;Hello Tycoon-Timeline powerd by Heroku!!&amp;lt;/h1&amp;gt;&amp;lt;a href=&#39;&#39;&amp;gt;Reload&amp;lt;/a&amp;gt;&amp;lt;dl&amp;gt;&amp;lt;dt class=&#39;head&#39;&amp;gt;User &amp;lt;span class=&#39;time&#39;&amp;gt;2011/12/26 02:25:00&amp;lt;/span&amp;gt;&amp;lt;/dt&amp;gt;&amp;lt;dd class=&#39;tweet&#39;&amp;gt;ついーと&amp;lt;/dd ...&amp;quot;
end&lt;/pre&gt;
&lt;p&gt;全部こんな感じ。なのでページがでかくなっていくことを考えると非常につらい。&lt;/p&gt;
&lt;h1&gt;準備&lt;/h1&gt;
&lt;h2&gt;構成&lt;/h2&gt;
&lt;pre class=&quot;&quot;&gt;Gemfile
app.rb
views
┗index.haml&lt;/pre&gt;
&lt;h2&gt;Gemfile&lt;/h2&gt;
&lt;p&gt;Bundlerを使うのでGemfileを作成。&lt;/p&gt;
&lt;pre class=&quot;ruby&quot;&gt;source :rubygems
source &amp;quot;http://rubygems.org&amp;quot;

gem &#39;sinatra&#39;
gem &#39;haml&#39;&lt;/pre&gt;
&lt;p&gt;SinatraとHamlをインストール。&lt;/p&gt;
&lt;h2&gt;gemインストール&lt;/h2&gt;
&lt;pre class=&quot;&quot;&gt;$ bundle install ./vendor/bundle&lt;/pre&gt;
&lt;h2&gt;app.rb&lt;/h2&gt;
&lt;pre class=&quot;ruby&quot;&gt;require &#39;rubygems&#39;
require &#39;sinatra&#39;
require &#39;haml&#39;

get &#39;/&#39; do
  haml :index
end&lt;/pre&gt;
&lt;p&gt;今までhtmlタグを書いていた返り値をhtml :indexとする。するとここではviews/index.hamlを見に行ってくれる。&lt;/p&gt;
&lt;h2&gt;views/index.haml&lt;/h2&gt;
&lt;p&gt;&gt;|?|&lt;/p&gt;
&lt;p&gt;!!!&lt;/p&gt;
&lt;p&gt;%html&lt;/p&gt;
&lt;p&gt;  %head&lt;/p&gt;
&lt;p&gt;    %title Hello.&lt;/p&gt;
&lt;p&gt;  %body&lt;/p&gt;
&lt;p&gt;    %div#main&lt;/p&gt;
&lt;p&gt;      %h1 Hello!!&lt;/p&gt;
&lt;p&gt;      %a{:href =&gt;  &#39;&lt;a href=&quot;http://google.com&#39;&quot;&gt;http://google.com&amp;#39;&lt;/a&gt;} Google&lt;/p&gt;
&lt;p&gt;      %div.comment&lt;/p&gt;
&lt;p&gt;        / Html comment&lt;/p&gt;
&lt;p&gt;        This is html comment.&lt;/p&gt;
&lt;p&gt;      %div.comment&lt;/p&gt;
&lt;p&gt;        -# Haml comment&lt;/p&gt;
&lt;p&gt;        This is haml comment.&lt;/p&gt;
&lt;p&gt;      %div.ruby= Time.now&lt;/p&gt;
&lt;p&gt;      %div.fizbuz&lt;/p&gt;
&lt;p&gt;        - (1..15).each do |i|&lt;/p&gt;
&lt;p&gt;          - if i % 15 == 0&lt;/p&gt;
&lt;p&gt;            %p FizzBuzz&lt;/p&gt;
&lt;p&gt;          - elsif i % 3 == 0&lt;/p&gt;
&lt;p&gt;            %p Fizz&lt;/p&gt;
&lt;p&gt;          - elsif i % 5 == 0&lt;/p&gt;
&lt;p&gt;            %p Buzz&lt;/p&gt;
&lt;p&gt;          - else &lt;/p&gt;
&lt;p&gt;            %p #{i} &lt;/p&gt;
&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;ものすごく基本的な構文しか使っていないが、&lt;/p&gt;
&lt;table&gt;&lt;tr&gt;&lt;th&gt;記述&lt;/th&gt;&lt;th&gt;解説&lt;/th&gt;&lt;th&gt;例&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;!!!&lt;/td&gt;&lt;td&gt;DOCTYPE宣言&lt;/td&gt;&lt;td&gt;XMLとかも設定できる&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;%hoge&lt;/td&gt;&lt;td&gt;要素名&lt;/td&gt;&lt;td&gt;%head で ＜head＞＜/head＞&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;%hoge value&lt;/td&gt;&lt;td&gt;値にvalue&lt;/td&gt;&lt;td&gt;%title Hello. で ＜title＞Hello.＜/title＞&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;%hoge{:属性 =&gt; &#39;value&#39;}&lt;/td&gt;&lt;td&gt;属性セット&lt;/td&gt;&lt;td&gt;%a{:href =&gt;  &#39;&lt;a href=&quot;http://google.com&#39;&quot;&gt;http://google.com&amp;#39;&lt;/a&gt;} Google で &lt;br /&gt;＜a href=&#39;http:google.com&#39;＞Google＜/a＞&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;%hoge#id&lt;/td&gt;&lt;td&gt;ID指定&lt;/td&gt;&lt;td&gt;%div#main で ＜div id=&#39;main&#39;＞＜/div＞&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;%hoge.class&lt;/td&gt;&lt;td&gt;class指定&lt;/td&gt;&lt;td&gt;%div.test で ＜div class=&#39;test&#39;＞＜/div＞&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;/ Html comment&lt;/td&gt;&lt;td&gt;コメント(Html)&lt;/td&gt;&lt;td&gt;/ Html comment で ＜!-- Html comment --＞&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;-# Haml comment&lt;/td&gt;&lt;td&gt;コメント(Haml)&lt;/td&gt;&lt;td&gt;生成されたHtmlには表示されない&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;%hoge= Rubyの構文&lt;/td&gt;&lt;td&gt;Rubyのコード実行&lt;/td&gt;&lt;td&gt;%div= Time.now で ＜div＞Mon Dec 26 ....＜/div＞&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;Rubyの構文はもう少し本格的に書く事もできるようで、条件分岐なんかも書ける。とりあえずFizzBuzzも書ける。&lt;/p&gt;
&lt;h1&gt;出力結果&lt;/h1&gt;
&lt;h2&gt;実行&lt;/h2&gt;
&lt;pre class=&quot;&quot;&gt;$ bundle exec ruby app.rb&lt;/pre&gt;
&lt;h2&gt;Htmlにで描画された画面&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20111226233342&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20111226/20111226233342.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;生成されたソース&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20111226233343&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20111226/20111226233343.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;まださわりしか触っていないのでこれから触ってみる。 &lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>VB6からVB.NETにソース移行すると特定のIf文でInvalidCastException</title>
   <link href="http://gosyujin.github.io/2011/12/25/1324852724"/>
   <updated>2011-12-25T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2011/12/25/1324852724</id>
   <content type="html">&lt;h1&gt;あらすじ&lt;/h1&gt;
&lt;p&gt;VB6の時、If (value = 1)のような条件式でvalueに数値・文字どちらが入ってきてもエラーになっていなかった。&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f1&quot; title=&quot;結果は覚えていないけど、1以外は全てfalseになったような。&quot; name=&quot;fn1&quot;&gt;*1&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;しかし、VB.NETになりvalueに文字が入ってきた場合、InvalidCastExceptionが発生するようになった。どうも、VB6のときと評価の方法が変わっている模様…。&lt;/p&gt;
&lt;h1&gt;参考サイト&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;[&lt;a href=&quot;http://msdn.microsoft.com/ja-jp/library/cey92b0t&quot;&gt;http://msdn.microsoft.com/ja-jp/library/cey92b0t&lt;/a&gt;(v=VS.80).aspx:title=比較演算子 (Visual Basic)]&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;検証&lt;/h1&gt;
&lt;p&gt;Option Strict が Off の場合の比較は、実行時の型で比較方法が変わる。&lt;/p&gt;
&lt;table&gt;&lt;tr&gt;&lt;th&gt;比較対象&lt;/th&gt;&lt;th&gt;例&lt;/th&gt;&lt;th&gt;結果&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;どちらもString&lt;/td&gt;&lt;td&gt;If (“a” = “b”)&lt;/td&gt;&lt;td&gt;文字列比較を行う&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;どちらも数値&lt;/td&gt;&lt;td&gt;If (1 = 3)&lt;/td&gt;&lt;td&gt;Doubleに変換され数値比較を行う&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;数値とString&lt;/td&gt;&lt;td&gt;If (1 = “1”)&lt;br /&gt;If (1 = “a”)&lt;/td&gt;&lt;td&gt;文字列がDoubleに変換(※)され数値比較を行う。&lt;br /&gt;文字列をDoubleに変換できない場合 InvalidCastException&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;(※)どうも、この部分がVB6のときと変わっている？&lt;/p&gt;
&lt;p&gt;数値と文字(数値以外)の比較がダメなようなので、不本意ながらIf (value = &quot;1&quot;)にしてその場を凌いだが…。&lt;/p&gt;
&lt;p&gt;なお、Nothingは比較対象が数値なら0,文字列なら”“となる。&lt;/p&gt;
&lt;div class=&quot;footnote&quot;&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn1&quot; name=&quot;f1&quot;&gt;*1&lt;/a&gt;: 結果は覚えていないけど、1以外は全てfalseになったような。&lt;/p&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>特定のファイルを探したり除外したり(メモ)</title>
   <link href="http://gosyujin.github.io/2011/12/24/1324741031"/>
   <updated>2011-12-24T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2011/12/24/1324741031</id>
   <content type="html">&lt;h1&gt;特定のファイル群を一括で何かする&lt;/h1&gt;
&lt;h2&gt;状況&lt;/h2&gt;
&lt;p&gt;.cblファイルをコンパイルした後、同一ディレクトリにできる拡張子なしのファイルを別のディレクトリにコピーしたい…という。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;/tmp
┣file01.cbl
┣file02.cbl
┣file01
┗file02&lt;/pre&gt;
&lt;p&gt;file01とfile02を/usr/local/userに移動したい。&lt;/p&gt;
&lt;h2&gt;コマンド&lt;/h2&gt;
&lt;pre class=&quot;&quot;&gt;find /tmp/* ! -name &amp;quot;*.cbl&amp;quot; | xargs -i mv {} /usr/local/user&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;nameの前に!で条件の否定ができる(知らなかった)&lt;/li&gt;&lt;li&gt;findコマンドでfile01, file02を引っかけたあと、xargsでmvコマンド実行する&lt;/li&gt;&lt;li&gt;iオプションを使用する事でfindの結果を{}にもってこれる&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;特定のファイル群を一括で何かする その2&lt;/h1&gt;
&lt;h2&gt;状況&lt;/h2&gt;
&lt;p&gt;ファイル検索でリポジトリ内の .svn ファイルを除外したいなーと思った。&lt;/p&gt;
&lt;h2&gt;コマンド&lt;/h2&gt;
&lt;pre class=&quot;&quot;&gt;find ./ -name &amp;quot;.svn&amp;quot; -prune -o -print&lt;/pre&gt;
&lt;p&gt;この結果に xargs をつけると除外はできたの……だが、どうも&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;! -name &amp;quot;XXX&amp;quot;&lt;/pre&gt;
&lt;pre class=&quot;&quot;&gt;-name &amp;quot;XXX&amp;quot; -prune&lt;/pre&gt;
&lt;p&gt;は挙動が違う模様……以下メモ。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;pruneオプションは引数より下のディレクトリやファイルを捜査しない&lt;/li&gt;&lt;li&gt;oオプション はor演算子と同じ&lt;/li&gt;&lt;li&gt;ワイルドカード指定で隠しファイルは検索できない&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;とりあえずここまで。&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Vimコマンドよく使うものと覚えたいコマンドまとめ</title>
   <link href="http://gosyujin.github.io/2011/12/23/1324651460"/>
   <updated>2011-12-23T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2011/12/23/1324651460</id>
   <content type="html">&lt;h1&gt;コマンドモード&lt;/h1&gt;
&lt;table&gt;&lt;tr&gt;&lt;th&gt;コマンド&lt;/th&gt;&lt;th&gt;解説&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;:w&lt;/td&gt;&lt;td&gt;保存&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;:q&lt;/td&gt;&lt;td&gt;終了&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;:wq&lt;/td&gt;&lt;td&gt;保存して終了&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;:w!&lt;/td&gt;&lt;td&gt;強制的な保存&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;:q!&lt;/td&gt;&lt;td&gt;強制的な終了&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;:w&lt;/td&gt;&lt;td&gt;ファイル名 任意のファイル名で保存&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;:e ファイル名&lt;/td&gt;&lt;td&gt;複数ファイルを開く&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;:br&lt;/td&gt;&lt;td&gt;前のバッファへ&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;:bn&lt;/td&gt;&lt;td&gt;次のバッファへ&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;:ls&lt;/td&gt;&lt;td&gt;バッファの一覧を表示&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;:!コマンド&lt;/td&gt;&lt;td&gt;コマンドを実行し標準出力に出力&lt;br /&gt;(:!ls でファイル一覧を表示)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;:r ファイル&lt;/td&gt;&lt;td&gt;指定したファイルの内容を現在のファイルに流しこみ&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;:r !コマンド&lt;/td&gt;&lt;td&gt;コマンド実行結果を現在のファイルに流しこみ&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;:set number&lt;/td&gt;&lt;td&gt;行に番号を割り振る&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;:set nonumber&lt;/td&gt;&lt;td&gt;:set numberで割り振った番号を消す&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;:任意の数字&lt;/td&gt;&lt;td&gt;任意の数字の行へカーソルを移動する&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;:s/置換前/置換後&lt;/td&gt;&lt;td&gt;行の一番最初にヒットした文字を置き換える&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;:s/置換前/置換後/g&lt;/td&gt;&lt;td&gt;行全体の文字を置き換える&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;:数字,数字s/置換前/置換後/g&lt;/td&gt;&lt;td&gt;数字の行から数字の行までに&lt;br /&gt;存在する全て文字を置き換える&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;:%s/置換前/置換後/g&lt;/td&gt;&lt;td&gt;存在する全ての文字を置き換える&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;:%s/置換前/置換後/gc&lt;/td&gt;&lt;td&gt;存在する全ての文字を置き換える&lt;br /&gt;(置換するかしないかを選択)&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;h1&gt;カーソル移動系&lt;/h1&gt;
&lt;table&gt;&lt;tr&gt;&lt;th&gt;コマンド&lt;/th&gt;&lt;th&gt;解説&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;h&lt;/td&gt;&lt;td&gt;カーソルを左に移動する&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;j&lt;/td&gt;&lt;td&gt;カーソルを下に移動する&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;k&lt;/td&gt;&lt;td&gt;カーソルを上に移動する&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;l&lt;/td&gt;&lt;td&gt;カーソルを右に移動する&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;数字 =&gt; hjkl&lt;/td&gt;&lt;td&gt;カーソルを数字分移動する(10j =&gt; 10行下)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;0 or ^&lt;/td&gt;&lt;td&gt;カーソルを行頭に移動する&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;$&lt;/td&gt;&lt;td&gt;カーソルを行末に移動する&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;H&lt;/td&gt;&lt;td&gt;カーソルを画面内の一行目に移動する&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;M&lt;/td&gt;&lt;td&gt;カーソルを画面内の中段行に移動する&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;L&lt;/td&gt;&lt;td&gt;カーソルを画面内の最終行に移動する&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Ctrl + e&lt;/td&gt;&lt;td&gt;カーソルを一行次に移動する&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Ctrl + y&lt;/td&gt;&lt;td&gt;カーソルを一行前に移動する&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Ctrl + d&lt;/td&gt;&lt;td&gt;カーソルを半画面次に移動する&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Ctrl + u&lt;/td&gt;&lt;td&gt;カーソルを半画面前に移動する&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Ctrl + f&lt;/td&gt;&lt;td&gt;カーソルを一画面次に移動する&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Ctrl + b&lt;/td&gt;&lt;td&gt;カーソルを一画面前に移動する&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;G&lt;/td&gt;&lt;td&gt;カーソルの位置をファイルの最後に移動する&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;G =&gt; G&lt;/td&gt;&lt;td&gt;カーソルの位置をファイルの先頭に移動する&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;数字 =&gt; G =&gt; G&lt;/td&gt;&lt;td&gt;カーソルの位置を数字行目に移動する&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;z =&gt; Enter&lt;/td&gt;&lt;td&gt;現在のカーソル位置を画面内の一行目とするように移動&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Ctrl + j&lt;/td&gt;&lt;td&gt;改行する&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;w&lt;/td&gt;&lt;td&gt;次の単語へカーソル位置を移動&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;h1&gt;削除系&lt;/h1&gt;
&lt;table&gt;&lt;tr&gt;&lt;th&gt;コマンド&lt;/th&gt;&lt;th&gt;解説&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;x&lt;/td&gt;&lt;td&gt;文字を一つ削除する&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;d =&gt; w&lt;/td&gt;&lt;td&gt;カーソルの位置の単語を一つ削除する&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;d =&gt; $&lt;/td&gt;&lt;td&gt;カーソルの位置から行末まで削除する&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;d =&gt; d&lt;/td&gt;&lt;td&gt;行全体を削除する&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;数 =&gt; d =&gt; d&lt;/td&gt;&lt;td&gt;カーソル位置から数字行を削除する&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;h1&gt;モード切替系&lt;/h1&gt;
&lt;table&gt;&lt;tr&gt;&lt;th&gt;コマンド&lt;/th&gt;&lt;th&gt;解説&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;i&lt;/td&gt;&lt;td&gt;モード切替、カーソルの位置から文字を入力する&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;a&lt;/td&gt;&lt;td&gt;モード切替、カーソルの位置の一つ後から文字を入力する&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;A&lt;/td&gt;&lt;td&gt;モード切替、行末から文字を入力する&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;o&lt;/td&gt;&lt;td&gt;モード切替、一つ下に新しい行を作り、そこから文字を入力する&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;O&lt;/td&gt;&lt;td&gt;モード切替、一つ上に新しい行を作り、そこから文字を入力する&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;h1&gt;コピーペースト系&lt;/h1&gt;
&lt;table&gt;&lt;tr&gt;&lt;th&gt;コマンド&lt;/th&gt;&lt;th&gt;解説&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;v&lt;/td&gt;&lt;td&gt;範囲指定可能に&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;y =&gt; w&lt;/td&gt;&lt;td&gt;カーソルの位置の単語をコピーする&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;y =&gt; $&lt;/td&gt;&lt;td&gt;カーソルの位置から行末までをコピーする&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;y =&gt; y&lt;/td&gt;&lt;td&gt;行全体をコピーする&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;数 =&gt; y =&gt; y&lt;/td&gt;&lt;td&gt;カーソル位置から数字行をコピーする&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;p&lt;/td&gt;&lt;td&gt;ddキー、またはyyキー等でバッファに格納された行の貼り付け&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Shift + p&lt;/td&gt;&lt;td&gt;pは今のカーソルの下に貼り付け、これは上に貼り付け&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;h1&gt;操作取り消し系&lt;/h1&gt;
&lt;table&gt;&lt;tr&gt;&lt;th&gt;コマンド&lt;/th&gt;&lt;th&gt;解説&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;u&lt;/td&gt;&lt;td&gt;最後に実行したコマンドの取り消し&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;U&lt;/td&gt;&lt;td&gt;最後に行ったコマンドの行単位の取り消し&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Ctrl + r&lt;/td&gt;&lt;td&gt;取り消しの取り消し&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;h1&gt;置換系&lt;/h1&gt;
&lt;table&gt;&lt;tr&gt;&lt;th&gt;コマンド&lt;/th&gt;&lt;th&gt;解説&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;r&lt;/td&gt;&lt;td&gt;一文字置き換える&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;R&lt;/td&gt;&lt;td&gt;一文字以上を置き換える&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;c =&gt; w&lt;/td&gt;&lt;td&gt;単語の一部、もしくは全体の置き換え&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;~&lt;/td&gt;&lt;td&gt;カーソル上の文字の大文字⇔小文字変換&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;h1&gt;検索系&lt;/h1&gt;
&lt;table&gt;&lt;tr&gt;&lt;th&gt;コマンド&lt;/th&gt;&lt;th&gt;解説&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;/文字&lt;/td&gt;&lt;td&gt;順方向に任意の文字を検索&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;?文字&lt;/td&gt;&lt;td&gt;逆方向に任意の文字を検索&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;検索後 =&gt; n&lt;/td&gt;&lt;td&gt;検索にヒットしたキーワードの次に現れる。&lt;br /&gt;ヒットしたキーワードにカーソル位置を移動&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;検索後 =&gt; N&lt;/td&gt;&lt;td&gt;検索にヒットしたキーワードの前に現れる。&lt;br /&gt;ヒットしたキーワードにカーソル位置を移動&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;%&lt;/td&gt;&lt;td&gt;(や{や[などの括弧の上にカーソルを置き%キーを押すと、&lt;br /&gt;対応する括弧へカーソルが移動する&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;h1&gt;画面系&lt;/h1&gt;
&lt;table&gt;&lt;tr&gt;&lt;th&gt;コマンド&lt;/th&gt;&lt;th&gt;解説&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Ctrl + g&lt;/td&gt;&lt;td&gt;&quot;ファイル名&quot; [状態] 現在行/全体行 行 --現在行の割合%--を表示する&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Ctrl + l&lt;/td&gt;&lt;td&gt;画面をリフレッシュするシステムメッセージに割り込まれた場合に&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
 </entry>
 
 <entry>
   <title>SolarisにSubversionをインストールするときのメモ</title>
   <link href="http://gosyujin.github.io/2011/12/22/1324573161"/>
   <updated>2011-12-22T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2011/12/22/1324573161</id>
   <content type="html">&lt;h1&gt;インストール&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://www.sunfreeware.com/&quot;&gt;http://www.sunfreeware.com/&lt;/a&gt;&lt;/li&gt;&lt;li&gt;ftp://ftp.ne.jp/Sun/sunfreeware/&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;から必要なライブラリをダウンロード。&lt;/p&gt;
&lt;ol&gt;&lt;ul&gt;&lt;li&gt;neon 0.29.5&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f1&quot; title=&quot;Neon is an HTTP and WebDAV client library - installs in /usr/local. Neon is used by subversion. There are slightly newer versions of neon, but this one seems to work best with subversion. Dependencies: openssl-1.0.0d, expat-2.0.1, zlib-1.2.5, and you will need /usr/local/lib/libgcc_s.so.1 either from the libgcc-3.4.6 or gcc-3.4.6 packages.&quot; name=&quot;fn1&quot;&gt;*1&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;swig 1.3.40&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f2&quot; title=&quot;SWIG is a software development tool that connects programs written in C and C++ with a variety of high-level programming languages. SWIG is used with different types of languages including common scripting languages such as Perl, PHP, Python, Tcl, Ruby and PHP - installs in /usr/local. Dependencies: zlib and having libgcc_s.so.1 and libstdc++.so.6 in /usr/local/lib is required. This can be done by installing libgcc-3.4.6 or gcc-3.4.6.&quot; name=&quot;fn2&quot;&gt;*2&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;expat 2.0.1&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f3&quot; title=&quot;Expat is a fast, non-validating, stream-oriented XML parsing library - installs in /usr/local. Dependency: to have /usr/local/lib/libgcc_s.so.1 install either the libgcc-3.4.6 or gcc-3.4.6 or later.&quot; name=&quot;fn3&quot;&gt;*3&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;libxml2 2.7.8&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f4&quot; title=&quot;Libxml2 is the XML C library developed for the Gnome project - installs in /usr/local. libxml2 requires that the zlib, libiconv, and either libgcc-3.4.6 or gcc-3.4.6 packages be installed.&quot; name=&quot;fn4&quot;&gt;*4&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;db 4.2.52 REV=1.0.12&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f5&quot; title=&quot;db is the Berkeley open source embedded database system - installs in /usr/local/BerkeleyDB.4.2. This packages also requires that you have install either libgcc or gcc.&quot; name=&quot;fn5&quot;&gt;*5&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;openssl 1.0.0d&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f6&quot; title=&quot;Openssl is an open source toolkit implementing the Secure Sockets Layer (SSL v2/v3) and Transport Layer Security (TLS v1) protocols as well as a full-strength general purpose cryptography library - installs in /usr/local/ssl. Note to users with sun4m machines. The openssl package here was built on a sun4u system and will not work on your machines. The one built for Solaris 2.5 was built on a sun4m machine and has been tested and does work. If you do uname -a and you get sun4m in the result, install the Solaris 2.5 openssl package instead. The configure option used for making openssl was solaris-sparcv9-gcc shared. You may also need to install either gcc-3.4.6 or libgcc-3.4.6 to obtain the libgcc_s.so.1 library. The libraries for openssl-0.9.8r are also included in this package to maintain compatibility for those packages still using them. If you cannot or do not want to update to the 1.0.x level, the 0.9.8p package below can be used. Openssl is often used to make machines more secure. Make sure you know what you are doing. Any security problems are your responsiblitiy. See our Disclaimer.&quot; name=&quot;fn6&quot;&gt;*6&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;libiconv 1.13.1&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f7&quot; title=&quot;GNU libiconv provides an iconv() implementation for use on systems which do not have one - installs in /usr/local. Dependencies: libgcc_s.so.1 from libgcc-3.4.6 or gcc-3.4.6 or higher. &quot; name=&quot;fn7&quot;&gt;*7&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;libintl 3.4.0&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f8&quot; title=&quot;Libintl is used with gettext and is needed by a few programs when libintl in not in /usr/lib - installs in /usr/local/lib. Dependencies: libiconv and to have /usr/local/lib/libgcc_s.so.1 and /usr/local/lib/libstdc++.so.6, either the libgcc-3.4.6 or gcc-3.4.6 packages.&quot; name=&quot;fn8&quot;&gt;*8&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;sasl 2.1.21&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f9&quot; title=&quot;This is the Cyrus SASL (Simple Authentication and Security Layer) API implementation. It can be used on the client or server side to provide authentication and authorization services - installs in /usr/local. Dependencies: db-4.2.52.NC and having libgcc_s.so.1 in /usr/local/lib is required. This can be done by installing libgcc-3.3 or gcc-3.3.2 or higher. The installation of the sasl software indicates:&quot; name=&quot;fn9&quot;&gt;*9&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;gcc(libgcc 3.4.6)&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f10&quot; title=&quot;The GNU C compiler and related programs - installs in /usr/local. This package includes the GNU C, C++, and f77 suites and support files. These gcc packages require the installation of libiconv. It was compiled to use the SUN assembler and loader usually in /usr/ccs/bin if the SUNW developer packages are installed. When needed and the source code supports it, this C compiler can create 64-bit executables via the -m64 flag as well as the usual 32-bit ones. Please read the details on how this package was created which can be found at Comments on gcc 3.4.6 . The Details link below contains information on what is new in 3.4.6. Documentation is in /usr/local/doc/gcc, /usr/local/man, and /usr/local/info. The gcc package is quite large. Some users may have trouble downloading very large files via a browser. These users should try using command line anonymous ftp or perhaps the Sun Download Manager.&quot; name=&quot;fn10&quot;&gt;*10&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;zlib&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f11&quot; title=&quot;zlib compression libraries - installs in /usr/local. This package has both libz.a and libz.so libraries. The package requires that libgcc_s.so.1 be in /usr/local/lib. This can be done by installing libgcc-3.3 or gcc or higher.&quot; name=&quot;fn11&quot;&gt;*11&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;apache2 2.2.19&lt;/li&gt;&lt;li&gt;openldap 2.4.24&lt;/li&gt;&lt;li&gt;subversion 1.6.12&lt;/li&gt;&lt;/ul&gt;&lt;/ol&gt;
&lt;p&gt;上記のsparc-local.gzファイルをDLする。&lt;/p&gt;
&lt;h1&gt;確認&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;ldd svnで何が足りないかわかる&lt;/li&gt;&lt;li&gt;全部入れてもエラーが出た&lt;ul&gt;&lt;li&gt;どうもsasl-2.1.21-sol10-sparc-local.gzが足りなかった模様(上記反映済み)&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;インストール&lt;/h1&gt;
&lt;pre class=&quot;&quot;&gt;# pkgadd -d パッケージ&lt;/pre&gt;
&lt;p&gt;依存関係などはない？&lt;/p&gt;
&lt;h1&gt;設定&lt;/h1&gt;
&lt;h2&gt;svnserve&lt;/h2&gt;
&lt;blockquote&gt;&lt;p&gt;Subversion には、Svnserve (通常の TCP/IP 接続上でカスタムプロトコルを使用する軽量スタンドアロンサーバ) があります。小規模構成にしたい場合や、本格的な Apache サーバを使用できない場合には申し分ありませんし、&lt;/p&gt;&lt;p&gt;ほとんどの場合、svnserve は Apache ベースサーバよりセットアップが簡単で、早く実行できますが、高度な機能のいくつかはありません。また今では、さらに安全にしやすくする SASL サポートも含まれています。&lt;/p&gt;&lt;cite&gt;&lt;a href=&quot;http://tortoisesvn.net/docs/nightly/TortoiseSVN_ja/tsvn-serversetup-svnserve.html&quot;&gt;http://tortoisesvn.net/docs/nightly/TortoiseSVN_ja/tsvn-serversetup-svnserve.html&lt;/a&gt;&lt;/cite&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;inetd登場以前は、1台のサーバで複数のサービス(FTPサーバ、TELNETサーバ等)を稼働させておくには、それぞれのサービスのデーモン (ftpd、tftpd等)を起動しておき、それぞれのデーモンが、それぞれの待ち受けポートを監視する - というスタイルだった。しかし、この方法では、監視するポートの数だけデーモンが起動していることとなるため、実際にそのサービスが利用されていない時には、実質、メモリの無駄遣いということとなる。そこで、待ち受けポートを監視する専用の中継デーモンを用意し、待ち受けポートに要求がきた時には、あらかじめ決められたデーモン(ftpd、tftpd等)を起動させるという動作が用意されるようになった。&lt;/p&gt;&lt;cite&gt;&lt;a href=&quot;http://ja.wikipedia.org/wiki/Inetd&quot;&gt;http://ja.wikipedia.org/wiki/Inetd&lt;/a&gt;&lt;/cite&gt;&lt;/blockquote&gt;
&lt;p&gt;Subversion用の簡易サーバをクライアントから要求が来た時だけ起動するようにしたい。(ただしちょっと遅い)ってことかな。&lt;/p&gt;
&lt;dl&gt;&lt;dt&gt;ポート - サービス の設定&lt;/dt&gt;&lt;dd&gt;/etc/services&lt;/dd&gt;&lt;dt&gt;サービス - サーバ の設定&lt;/dt&gt;&lt;dd&gt;/etc/inetd.conf&lt;/dd&gt;&lt;/dl&gt;
&lt;p&gt;Subversionでは3690ポートに要求がくるため/etc/servicesには以下のように追記する。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;# サービス名 ポート
svn      3690/tcp
svn      3690/udp&lt;/pre&gt;
&lt;p&gt;svnというサービスを3690ポートで受ける。&lt;/p&gt;
&lt;h2&gt;管理DBに登録&lt;/h2&gt;
&lt;p&gt;次にinetd.confファイルを追記する。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;svn stream tcp nowait svn /(SVNインストールされたディレクトリ)/svnserve svnserve -i -r SVNROOT&lt;/pre&gt;
&lt;table&gt;&lt;tr&gt;&lt;th&gt;サービス名&lt;/th&gt;&lt;td&gt;svn&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;ソケットタイプ&lt;/th&gt;&lt;td&gt;stream&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;プロトコル&lt;/th&gt;&lt;td&gt;tcp&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;wait or nowait&lt;/th&gt;&lt;td&gt;nowait&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;&lt;del datetime=&quot;2012-01-15T20:04:06+09:00&quot;&gt;プログラム名&lt;/del&gt;ユーザ名&lt;/th&gt;&lt;td&gt;svn&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;コマンドと引数&lt;/th&gt;&lt;td&gt;/(SVNインストールされたディレクトリ)/svnserve svnserve -i -r SVNROOT&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;svnというサービスをsvnserve -i -r SVNROOTというコマンドで動かす。-iは--inetdオプションと同じでsvnserveが標準出力、標準入力のファイル拡張子を利用するように指定する。-r SVNROOTはリポジトリのルートを設定する。UrlはこのSVNROOTからのパスとみなされる。- オプション一覧。 &lt;a href=&quot;http://www.thekyo.jp/manual/subversion/svn.ref.svnserve.html&quot;&gt;http://www.thekyo.jp/manual/subversion/svn.ref.svnserve.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;※ユーザ名を存在しないユーザにしてinetconvすると下記のようなエラーになる。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;inetconv: エラー ./inetd.conf、n行目。不明なユーザ: xxx&lt;/pre&gt;
&lt;p&gt;設定ファイルを作成したが、Solaris10ではinetd.conf自体は使われない。inetconvコマンドを使い管理DB？　に登録を行う。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;# inetconv -i ./inetd.conf
svn -&amp;gt; /var/svc/manifest/network/svn-tcp.xml
Importing svn-tcp.xml ...Done&lt;/pre&gt;
&lt;p&gt;設定変更した時は-fオプションをつける。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;inetconv -f -I ./inetd.conf？&lt;/pre&gt;
&lt;p&gt;起動しているかの確認はinetadmコマンドで行う。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;# inetadm | grep svn
enabled online svc:/network/svn/tcp:default&lt;/pre&gt;
&lt;p&gt;このsvc:/network/svn/tcp:defaultをFMRIという。&lt;/p&gt;
&lt;h2&gt;起動・停止&lt;/h2&gt;
&lt;p&gt;起動・停止もinetadmコマンドを使う。起動は-eオプション+FMRI。(enable？)&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;inetadm -e svc:/network/svn/tcp:default  &lt;/pre&gt;
&lt;p&gt;停止は-dオプション+FMRI。(disable？)&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;inetadm -d svc:/network/svn/tcp:default&lt;/pre&gt;
&lt;h2&gt;参考サイト&lt;/h2&gt;
&lt;p&gt;このあたりはまだよく仕組みがわかってない。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://sy2920.s151.xrea.com/solaris/smf.html&quot;&gt;Solaris 10 のサービス管理方法&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://sy2920.s151.xrea.com/solaris/smf-inetd.html&quot;&gt;SMFによるinetd管理方法&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://www.rinneza.com/junya/tech/solaris10_x86/os/etc_setting_02.html&quot;&gt;Solaris10 OSCXg[®¹ãÌeíÝè2 (inetadm svcadm)&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://www.oratorio-tangram.com/Solaris/SMF.html&quot;&gt;SMF でサービスのメンテナンス&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://tortoisesvn.net/docs/nightly/TortoiseSVN_ja/tsvn-serversetup-svnserve.html&quot;&gt;svnserve ベースのサーバ&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://www.sunsept.com/svnbook_ja_html/ch09s04.html&quot;&gt;svnserve&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;div class=&quot;footnote&quot;&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn1&quot; name=&quot;f1&quot;&gt;*1&lt;/a&gt;: Neon is an HTTP and WebDAV client library - installs in /usr/local. Neon is used by subversion. There are slightly newer versions of neon, but this one seems to work best with subversion. Dependencies: openssl-1.0.0d, expat-2.0.1, zlib-1.2.5, and you will need /usr/local/lib/libgcc_s.so.1 either from the libgcc-3.4.6 or gcc-3.4.6 packages.&lt;/p&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn2&quot; name=&quot;f2&quot;&gt;*2&lt;/a&gt;: SWIG is a software development tool that connects programs written in C and C++ with a variety of high-level programming languages. SWIG is used with different types of languages including common scripting languages such as Perl, PHP, Python, Tcl, Ruby and PHP - installs in /usr/local. Dependencies: zlib and having libgcc_s.so.1 and libstdc++.so.6 in /usr/local/lib is required. This can be done by installing libgcc-3.4.6 or gcc-3.4.6.&lt;/p&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn3&quot; name=&quot;f3&quot;&gt;*3&lt;/a&gt;: Expat is a fast, non-validating, stream-oriented XML parsing library - installs in /usr/local. Dependency: to have /usr/local/lib/libgcc_s.so.1 install either the libgcc-3.4.6 or gcc-3.4.6 or later.&lt;/p&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn4&quot; name=&quot;f4&quot;&gt;*4&lt;/a&gt;: Libxml2 is the XML C library developed for the Gnome project - installs in /usr/local. libxml2 requires that the zlib, libiconv, and either libgcc-3.4.6 or gcc-3.4.6 packages be installed.&lt;/p&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn5&quot; name=&quot;f5&quot;&gt;*5&lt;/a&gt;: db is the Berkeley open source embedded database system - installs in /usr/local/BerkeleyDB.4.2. This packages also requires that you have install either libgcc or gcc.&lt;/p&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn6&quot; name=&quot;f6&quot;&gt;*6&lt;/a&gt;: Openssl is an open source toolkit implementing the Secure Sockets Layer (SSL v2/v3) and Transport Layer Security (TLS v1) protocols as well as a full-strength general purpose cryptography library - installs in /usr/local/ssl. Note to users with sun4m machines. The openssl package here was built on a sun4u system and will not work on your machines. The one built for Solaris 2.5 was built on a sun4m machine and has been tested and does work. If you do uname -a and you get sun4m in the result, install the Solaris 2.5 openssl package instead. The configure option used for making openssl was solaris-sparcv9-gcc shared. You may also need to install either gcc-3.4.6 or libgcc-3.4.6 to obtain the libgcc_s.so.1 library. The libraries for openssl-0.9.8r are also included in this package to maintain compatibility for those packages still using them. If you cannot or do not want to update to the 1.0.x level, the 0.9.8p package below can be used. Openssl is often used to make machines more secure. Make sure you know what you are doing. Any security problems are your responsiblitiy. See our Disclaimer.&lt;/p&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn7&quot; name=&quot;f7&quot;&gt;*7&lt;/a&gt;: GNU libiconv provides an iconv() implementation for use on systems which do not have one - installs in /usr/local. Dependencies: libgcc_s.so.1 from libgcc-3.4.6 or gcc-3.4.6 or higher. &lt;/p&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn8&quot; name=&quot;f8&quot;&gt;*8&lt;/a&gt;: Libintl is used with gettext and is needed by a few programs when libintl in not in /usr/lib - installs in /usr/local/lib. Dependencies: libiconv and to have /usr/local/lib/libgcc_s.so.1 and /usr/local/lib/libstdc++.so.6, either the libgcc-3.4.6 or gcc-3.4.6 packages.&lt;/p&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn9&quot; name=&quot;f9&quot;&gt;*9&lt;/a&gt;: This is the Cyrus SASL (Simple Authentication and Security Layer) API implementation. It can be used on the client or server side to provide authentication and authorization services - installs in /usr/local. Dependencies: db-4.2.52.NC and having libgcc_s.so.1 in /usr/local/lib is required. This can be done by installing libgcc-3.3 or gcc-3.3.2 or higher. The installation of the sasl software indicates:&lt;/p&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn10&quot; name=&quot;f10&quot;&gt;*10&lt;/a&gt;: The GNU C compiler and related programs - installs in /usr/local. This package includes the GNU C, C++, and f77 suites and support files. These gcc packages require the installation of libiconv. It was compiled to use the SUN assembler and loader usually in /usr/ccs/bin if the SUNW developer packages are installed. When needed and the source code supports it, this C compiler can create 64-bit executables via the -m64 flag as well as the usual 32-bit ones. Please read the details on how this package was created which can be found at Comments on gcc 3.4.6 . The Details link below contains information on what is new in 3.4.6. Documentation is in /usr/local/doc/gcc, /usr/local/man, and /usr/local/info. The gcc package is quite large. Some users may have trouble downloading very large files via a browser. These users should try using command line anonymous ftp or perhaps the Sun Download Manager.&lt;/p&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn11&quot; name=&quot;f11&quot;&gt;*11&lt;/a&gt;: zlib compression libraries - installs in /usr/local. This package has both libz.a and libz.so libraries. The package requires that libgcc_s.so.1 be in /usr/local/lib. This can be done by installing libgcc-3.3 or gcc or higher.&lt;/p&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>Ruby実行時のオプションをよろしく解析してくれるoptparseを使ってみる</title>
   <link href="http://gosyujin.github.io/2011/12/21/1324477125"/>
   <updated>2011-12-21T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2011/12/21/1324477125</id>
   <content type="html">&lt;h1&gt;あらすじ&lt;/h1&gt;
&lt;p&gt;コマンドラインから引数つきでRubyを実行する時は&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;ruby xxxx.rb ARG1 ARG2&lt;/pre&gt;
&lt;p&gt;とかして、中でARGVをifで条件分岐とかしていたが…何か他にやり方があるのではと調べたらやっぱりあった。optparseを使えばよろしく解析してくれるようだ。&lt;/p&gt;
&lt;h1&gt;参考サイト&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://www.ruby-lang.org/ja/old-man/html/optparse_A5C1A5E5A1BCA5C8A5EAA5A2A5EB.html&quot;&gt;optparse::チュートリアル - Rubyリファレンスマニュアル&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;blockquote&gt;&lt;p&gt;   1. OptionParser オブジェクト opt を生成する。&lt;/p&gt;&lt;p&gt;   2. オプションを取り扱うブロックを opt に登録する。&lt;/p&gt;&lt;p&gt;   3. opt.parse(ARGV) でコマンドラインを実際に parse する。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;基本はこういう事らしい。&lt;/p&gt;
&lt;h1&gt;サンプルソース&lt;/h1&gt;
&lt;p&gt;とりあえずGistに。色々試してみる。&lt;/p&gt;
&lt;p&gt;&lt;script src=&quot;https://gist.github.com/1376804.js?file=optparse.rb&quot;&gt;&lt;/script&gt;&lt;/p&gt;
&lt;h1&gt;実行結果&lt;/h1&gt;
&lt;h2&gt;単純なオプション&lt;/h2&gt;
&lt;pre class=&quot;ruby&quot;&gt;  # short option
  opt.on(&#39;-a&#39;, &#39;DESCRIPTION&#39;) do |v|
    puts &amp;quot;v class is #{v.class}&amp;quot;
    puts &amp;quot;-a is #{v}&amp;quot;
  end&lt;/pre&gt;
&lt;p&gt;オプションに-aを指定するだけ。真偽値で返ってくる。第二引数のDESCRIPTIONは後述。&lt;/p&gt;
&lt;pre class=&quot;ruby&quot;&gt;$ ruby optparse.rb -a
v class is TrueClass
-a is true&lt;/pre&gt;
&lt;h2&gt;オプションの後に値(必須)&lt;/h2&gt;
&lt;pre class=&quot;ruby&quot;&gt;  # short option with require argument
  opt.on(&#39;-b VALUE&#39;) do |v|
    puts &amp;quot;v class is #{v.class}&amp;quot;
    puts &amp;quot;-b is #{v}&amp;quot;
  end&lt;/pre&gt;
&lt;p&gt;オプションに-b xxxxと指定する。こう記述すると必須になるため、VALUEにあたる値を指定しないとエラーに。&lt;/p&gt;
&lt;pre class=&quot;ruby&quot;&gt;$ ruby optparse.rb -b
C:/ruby/lib/ruby/1.8/optparse.rb:451:in `parse&#39;: missing argument: -b (OptionPar
ser::MissingArgument)
        from C:/ruby/lib/ruby/1.8/optparse.rb:1295:in `parse_in_order&#39;
        from C:/ruby/lib/ruby/1.8/optparse.rb:1254:in `catch&#39;
        from C:/ruby/lib/ruby/1.8/optparse.rb:1254:in `parse_in_order&#39;
        from C:/ruby/lib/ruby/1.8/optparse.rb:1248:in `order!&#39;
        from C:/ruby/lib/ruby/1.8/optparse.rb:1339:in `permute!&#39;
        from C:/ruby/lib/ruby/1.8/optparse.rb:1360:in `parse!&#39;
        from optparse.rb:49
        from C:/ruby/lib/ruby/1.8/optparse.rb:791:in `initialize&#39;
        from optparse.rb:4:in `new&#39;
        from optparse.rb:4&lt;/pre&gt;
&lt;p&gt;VALUEを指定すると受け取れる。&lt;/p&gt;
&lt;pre class=&quot;ruby&quot;&gt;$ ruby optparse.rb -b sample.txt
v class is String
-b is sample.txt&lt;/pre&gt;
&lt;h2&gt;オプションの後に値(任意)&lt;/h2&gt;
&lt;pre class=&quot;ruby&quot;&gt;  # short option with argument
  opt.on(&#39;-c [VALUE]&#39;) do |v|
    puts &amp;quot;v class is #{v.class}&amp;quot;
    puts &amp;quot;-c is #{v}&amp;quot;
  end&lt;/pre&gt;
&lt;p&gt;VALUEを[]で囲むと値は任意指定になる。指定しないのと指定するので返る値がちがう。(Nilが返ってくる)&lt;/p&gt;
&lt;pre class=&quot;ruby&quot;&gt;$ ruby optparse.rb -c
v class is NilClass
-c is&lt;/pre&gt;
&lt;pre class=&quot;ruby&quot;&gt;$ ruby optparse.rb -c sample.txt
v class is String
-c is sample.txt&lt;/pre&gt;
&lt;h2&gt;長いオプション&lt;/h2&gt;
&lt;pre class=&quot;ruby&quot;&gt;  # long option. it can also -d, --d
  opt.on(&#39;--define&#39;) do |v|
    puts &amp;quot;v class is #{v.class}&amp;quot;
    puts &amp;quot;--define is #{v}&amp;quot;
  end&lt;/pre&gt;
&lt;p&gt;一文字じゃなくて長い言葉(--define)にする事もできる。また、その頭文字をとって一文字指定(-d, --d)もできる。(かぶったらどっちが優先されるんだろう、まだ調べてない)&lt;/p&gt;
&lt;pre class=&quot;ruby&quot;&gt;$ ruby optparse.rb --define
v class is TrueClass
--define is true&lt;/pre&gt;
&lt;h2&gt;単純なオプションと長いオプション両方指定&lt;/h2&gt;
&lt;pre class=&quot;ruby&quot;&gt;  # short option and long option. it can also --e
  opt.on(&#39;-e&#39;, &#39;--element&#39;) do |v|
    puts &amp;quot;v class is #{v.class}&amp;quot;
    puts &amp;quot;-e, --element is #{v}&amp;quot;
  end&lt;/pre&gt;
&lt;p&gt;指定する事もできる。&lt;/p&gt;
&lt;pre class=&quot;ruby&quot;&gt;$ ruby optparse.rb -e
v class is TrueClass
-e, --element is true&lt;/pre&gt;
&lt;pre class=&quot;ruby&quot;&gt;$ ruby optparse.rb --element
v class is TrueClass
-e, --element is true&lt;/pre&gt;
&lt;h2&gt;オプションの後に真偽値&lt;/h2&gt;
&lt;pre class=&quot;ruby&quot;&gt;  # class define
  opt.on(&#39;-f BOOLEAN&#39;, TrueClass) do |v|
    puts &amp;quot;v class is #{v.class}&amp;quot;
    puts &amp;quot;-f is #{v}&amp;quot;
  end&lt;/pre&gt;
&lt;p&gt;BOOLEANで真偽値を入力させる事ができる。それ以外だとエラー。&lt;/p&gt;
&lt;pre class=&quot;ruby&quot;&gt;$ ruby optparse.rb -f aaa
C:/ruby/lib/ruby/1.8/optparse.rb:454:in `parse&#39;: invalid argument: -f aaa (Optio
nParser::InvalidArgument)
        from C:/ruby/lib/ruby/1.8/optparse.rb:326:in `parse_arg&#39;
        from C:/ruby/lib/ruby/1.8/optparse.rb:454:in `parse&#39;
        from C:/ruby/lib/ruby/1.8/optparse.rb:1295:in `parse_in_order&#39;
        from C:/ruby/lib/ruby/1.8/optparse.rb:1254:in `catch&#39;
        from C:/ruby/lib/ruby/1.8/optparse.rb:1254:in `parse_in_order&#39;
        from C:/ruby/lib/ruby/1.8/optparse.rb:1248:in `order!&#39;
        from C:/ruby/lib/ruby/1.8/optparse.rb:1339:in `permute!&#39;
        from C:/ruby/lib/ruby/1.8/optparse.rb:1360:in `parse!&#39;
        from optparse.rb:49
        from C:/ruby/lib/ruby/1.8/optparse.rb:791:in `initialize&#39;
        from optparse.rb:4:in `new&#39;
        from optparse.rb:4&lt;/pre&gt;
&lt;p&gt;真偽値が返ってくる。&lt;/p&gt;
&lt;pre class=&quot;ruby&quot;&gt;$ ruby optparse.rb -f true
v class is TrueClass
-f is true&lt;/pre&gt;
&lt;pre class=&quot;ruby&quot;&gt;$ ruby optparse.rb -y
v class is TrueClass
-y is true&lt;/pre&gt;
&lt;h2&gt;ヘルプとバージョン、ヘルプに表示するメッセージ&lt;/h2&gt;
&lt;pre class=&quot;ruby&quot;&gt;  # -h, --h, --help is show usage.
  # -v, --v, --version is show version.&lt;/pre&gt;
&lt;p&gt;オプション-hと-vはヘルプとバージョンに用途が決められている模様。バージョンは何もやっていないので&lt;/p&gt;
&lt;pre class=&quot;ruby&quot;&gt;$ ruby optparse.rb -v
optparse: version unknown&lt;/pre&gt;
&lt;p&gt;こうなる。ヘルプは&lt;/p&gt;
&lt;pre class=&quot;ruby&quot;&gt;$ ruby optparse.rb -h
Usage: optparse [options]
    -z                               MOVE HEAD!!
    -a                               DESCRIPTION
    -b VALUE
    -c [VALUE]
        --define
    -e, --element
    -f BOOLEAN
    -y                               MOVE TAIL!!&lt;/pre&gt;
&lt;p&gt;ここで、一番上の-zと-yの位置とMOVE XXX、そして-aのDESCRIPTIONが気になる。さっきの-aの後にあるDESCRIPTIONはヘルプ用メッセージ。&lt;/p&gt;
&lt;pre class=&quot;ruby&quot;&gt;  # short option
  opt.on(&#39;-a&#39;, &#39;DESCRIPTION&#39;) do |v|
    puts &amp;quot;v class is #{v.class}&amp;quot;
    puts &amp;quot;-a is #{v}&amp;quot;
  end&lt;/pre&gt;
&lt;p&gt;残りの-zと-yは、まず-aと同様に引数にMOVE XXXを指定しているのでこれが表示される。そして、opt.onメソッドの代わりにそれぞれon_headとon_tailを使っている。これでheadの場合はヘルプのはじめに上がってきて、tailの場合はおわりに下がるらしい。&lt;/p&gt;
&lt;pre class=&quot;ruby&quot;&gt;  # usage sort
  opt.on_head(&#39;-z&#39;, &#39;MOVE HEAD!!&#39;) do |v|
    puts &amp;quot;v class is #{v.class}&amp;quot;
    puts &amp;quot;-z is #{v}&amp;quot;
  end&lt;/pre&gt;
&lt;pre class=&quot;ruby&quot;&gt;  # usage sort
  opt.on_tail(&#39;-y&#39;, &#39;MOVE TAIL!!&#39;) do |v|
    puts &amp;quot;v class is #{v.class}&amp;quot;
    puts &amp;quot;-y is #{v}&amp;quot;
  end&lt;/pre&gt;
&lt;h2&gt;組み合わせ&lt;/h2&gt;
&lt;p&gt;組み合わせもできる。&lt;/p&gt;
&lt;pre class=&quot;ruby&quot;&gt;$ ruby optparse.rb -aeb sample.txt
v class is TrueClass
-a is true
v class is TrueClass
-e, --element is true
v class is String
-b is sample.txt &lt;/pre&gt;</content>
 </entry>
 
 <entry>
   <title>CapsLockキーとCtrlキーを入れ替える(置き換える)方法</title>
   <link href="http://gosyujin.github.io/2011/12/20/1324386674"/>
   <updated>2011-12-20T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2011/12/20/1324386674</id>
   <content type="html">&lt;h1&gt;あらすじ&lt;/h1&gt;
&lt;p&gt;CapsLockいらない！　ここにCtrlキーほしい！&lt;/p&gt;
&lt;h1&gt;方法&lt;/h1&gt;
&lt;p&gt;レジストリをいじってキーを置き換える事に。この例では無変換キーもまとめてCtrlキーに変更する。&lt;span class=&quot;deco&quot; style=&quot;color:#FF0000;&quot;&gt;レジストリをいじるため&lt;del&gt;一か八か&lt;/del&gt;細心の注意を払う。&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;ファイルを指定して実行で regedit を起動&lt;/li&gt;&lt;li&gt;HKEY_LOCAL_MACHINE -&gt; SYSTEM -&gt; CurrentControlSet -&gt; Control -&gt; Keyboard Layout を選択し右クリック&lt;/li&gt;&lt;li&gt;新規 -&gt; バイナリ で新しいキーを作成&lt;/li&gt;&lt;li&gt;新しいキーを選択し右クリック -&gt; 名前の変更 で Scancode Map に変更&lt;/li&gt;&lt;li&gt;同じく右クリック -&gt; 修正 でバイナリデータを以下のように編集&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;      0000 00 00 00 00 00 00 00 00 ........
      0008 04 00 00 00 1D 00 3A 00 ......:.
      0010 1D 00 7B 00 00 00 00 00 ..{.....
      0018&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;0000はヘッダらしい。全て0固定&lt;/li&gt;&lt;li&gt;0008前半部の04 00 00 00 は&lt;span class=&quot;deco&quot; style=&quot;font-weight:bold;&quot;&gt;&lt;span class=&quot;deco&quot; style=&quot;color:#FF0000;&quot;&gt;使用するキー+1を入力&lt;/span&gt;&lt;/span&gt;する。今回は下記キーを使用するため04となる&lt;ol&gt;&lt;li&gt;左Ctrlキー&lt;/li&gt;&lt;li&gt;無変換キー&lt;/li&gt;&lt;li&gt;CapsLockキー&lt;/li&gt;&lt;li&gt;&lt;span class=&quot;deco&quot; style=&quot;font-weight:bold;&quot;&gt;&lt;span class=&quot;deco&quot; style=&quot;color:#FF0000;&quot;&gt;プラス1&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;0008後半部の 1D 00 3A 00 と 0010前半部の 1D 00 7B 00 がキーをカスタマイズしている箇所&lt;/li&gt;&lt;li&gt;0010後半部の残りは 00 埋め&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;対応&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;キーとバイナリ値は下記のようになっている&lt;ul&gt;&lt;li&gt;が、書き込むときはひっくり返す事。(CapsLockなら 3A 00 となる)リトルエンディアンだとそうなるらしい&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://ja.wikipedia.org/wiki/%E3%82%A8%E3%83%B3%E3%83%87%E3%82%A3%E3%82%A2%E3%83%B3#.E3.83.AA.E3.83.88.E3.83.AB.E3.82.A8.E3.83.B3.E3.83.87.E3.82.A3.E3.82.A2.E3.83.B3&quot;&gt;エンディアン - Wikipedia&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;table&gt;&lt;tr&gt;&lt;th&gt;キー&lt;/th&gt;&lt;th&gt;バイナリ&lt;/th&gt;&lt;th&gt;ひっくり返す&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;左ctrl&lt;/td&gt;&lt;td&gt;00 1D&lt;/td&gt;&lt;td&gt;1D 00&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;無変換&lt;/td&gt;&lt;td&gt;00 7B&lt;/td&gt;&lt;td&gt;7B 00&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;CapsLock&lt;/td&gt;&lt;td&gt;00 3A&lt;/td&gt;&lt;td&gt;3A 00&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
 </entry>
 
 <entry>
   <title>Excelの備忘録</title>
   <link href="http://gosyujin.github.io/2011/12/19/1324307879"/>
   <updated>2011-12-19T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2011/12/19/1324307879</id>
   <content type="html">&lt;h1&gt;あらすじ&lt;/h1&gt;
&lt;p&gt;Excelの備忘録。ただし個人でExcel持ってないのでスクリーンショットはなし。&lt;/p&gt;
&lt;h1&gt;シート名の取得 - Excel2003,2007で確認&lt;/h1&gt;
&lt;p&gt;&gt;|?|&lt;/p&gt;
&lt;p&gt;=MID(CELL(&quot;filename&quot;, $A$1 ), FIND(&quot;]&quot;, CELL(&quot;filename&quot;, $A$1))+1, 99)&lt;/p&gt;
&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;h1&gt;グラフ関係 - Excel2007で確認&lt;/h1&gt;
&lt;h2&gt;単位などを表示する用&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;グラフを選択 -&gt; レイアウトタブ -&gt; ラベル -&gt; グラフタイトル、軸ラベル&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;複合グラフ&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;分けたいグラフを選択 -&gt; レイアウトタブ -&gt; 現在の選択範囲 -&gt; 選択対象の書式設定 -&gt; 系列のオプション -&gt; 第2軸&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;グラフタイトル等を動的に決める&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;グラフタイトル等をクリック -&gt; 入力エリアではなく関数エリアを選択し「=シート名!A1」とする&lt;ul&gt;&lt;li&gt;あらかじめ規定の場所に(例えばA1)タイトルとしたい文言をセットしておく&lt;/li&gt;&lt;li&gt;シート名を明記しないと「SERIES式では、ワークシートを外部参照していなければなりません。」エラーとなる&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;シートの保護解除 - Excel2007で確認&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;ホーム -&gt; セル -&gt; 書式 -&gt; シート保護の解除&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;入力規則変更(カラムの文字制限、リストから選択など) - Excel2007で確認&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;データ -&gt; データツール -&gt; データの入力規則&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;画像の圧縮 - Excel2007で確認&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;画像を選択 -&gt; 書式リボン(図ツールで出る？) -&gt; 調整エリア -&gt; 図の圧縮&lt;ul&gt;&lt;li&gt;選択した画像のみに適用にチェック -&gt; (オプションでトリミング部分削除などにチェック) -&gt; OK&lt;/li&gt;&lt;li&gt;2003等？　では画像右クリック -&gt; 図のプロパティからいけたらしい&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</content>
 </entry>
 
 <entry>
   <title>Vimを使い始めるためにインストールから設定まで行った</title>
   <link href="http://gosyujin.github.io/2011/12/18/1324219740"/>
   <updated>2011-12-18T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2011/12/18/1324219740</id>
   <content type="html">&lt;h1&gt;あらすじ&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://atnd.org/events/21925&quot;&gt;Vim Advent Calendar 2011  : ATND&lt;/a&gt; を見てvim使いたいと思った！&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;参考サイト&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://d.hatena.ne.jp/osyo-manga/20111201/1322665228&quot;&gt;【Vim Advent Calendar 2011】Vim の開発環境【1日目】 - C++でゲームプログラミング&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://d.hatena.ne.jp/arcright/20100207/1265551998&quot;&gt;Vimをソースからインストール - WapBox&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://sites.google.com/site/vimdocja/various-html&quot;&gt;http://sites.google.com/site/vimdocja/various-html&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://www.hazama.nu/t2o2/archives/002696.shtml&quot;&gt;さくらインターネットの共用サーバに vim をインストールする - talk to oneself 2&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://blog.ville.jp/2011/03/11/536&quot;&gt;最新のvimをインストールする | 村式流 イッパシエンジニアへの道&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://ystyle.jpn.org/geekstyle/archives/9&quot;&gt;vimインストール «  GeekStyle&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;ダウンロード&lt;/h1&gt;
&lt;p&gt;はじめにVimをgetする。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ wget ftp://ftp.vim.org/pub/vim/unix/vim-7.3.tar.bz2&lt;/pre&gt;
&lt;p&gt;次にvim7.3の最新のパッチファイルを確認して、ftp://ftp.vim.org/pub/vim/patches/7.3/からダウンロードする。今382だった。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ cd vim73
$ mkdir patches
$ curl -O &#39;ftp://ftp.vim.org/pub/vim/patches/7.3/7.3.[001-382]&#39;
$ cd ../
$ cat patches/7.3.* | patch -p0
patching file src/misc1.c
patching file src/version.c
patching file src/ex_docmd.c
patching file src/version.c
.
.
.&lt;/pre&gt;
&lt;p&gt;patchコマンドって使った事ないなーと思い、-p0ってなんぞやとman patchしてみる……。&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt; -pnum  または  --strip=num&lt;/p&gt;&lt;p&gt;　　　パッチファイルで見つかったファイル名それぞれについて、 num 個の&lt;/p&gt;&lt;p&gt;　　　スラッシュを含む最小のプレフィクスを取り除く。隣接した 1 個また&lt;/p&gt;&lt;p&gt;　　　は複数のスラッシュの並びは 1 個のスラッシュとして数えられる。こ&lt;/p&gt;&lt;p&gt;　　　のオプションはパッチを送った人と異なるディレクトリにファイルを&lt;/p&gt;&lt;p&gt;　　　格納している場合のために、パッチファイル中のファイル名の扱いを&lt;/p&gt;&lt;p&gt;　　　変更する。例えば、パッチファイル中のファイル名が&lt;/p&gt;&lt;p&gt;　　　/u/howard/src/blurfl/blurfl.c&lt;/p&gt;&lt;p&gt;　　　であったとすると、 -p0 とするとファイル名全体が変更されずに用い&lt;/p&gt;&lt;p&gt;　　　られ、 -p1 とすると&lt;/p&gt;&lt;p&gt;　　　u/howard/src/blurfl/blurfl.c&lt;/p&gt;&lt;p&gt;　　　のように先頭のスラッシュが取り除かれ、 -p4 とすると&lt;/p&gt;&lt;p&gt;　　　blurfl/blurfl.c&lt;/p&gt;&lt;p&gt;　　　のようになり、 -p を指定しなければ blurfl.c となる。最終的に参&lt;/p&gt;&lt;p&gt;　　　照されるディレクトリはカレントディレクトリ、または -d オプション&lt;/p&gt;&lt;p&gt;　　　で指定されたディレクトリである。&lt;/p&gt;&lt;/blockquote&gt;
&lt;h1&gt;インストール&lt;/h1&gt;
&lt;p&gt;configureで色々オプションを指定する必要があるよう。&lt;/p&gt;
&lt;table&gt;&lt;tr&gt;&lt;th&gt;--disable-selinux&lt;/th&gt;&lt;td&gt;Don&#39;t check for SELinux support.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;--enable-xim&lt;/th&gt;&lt;td&gt;Include XIM input support.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;--enable-multibyte&lt;/th&gt;&lt;td&gt;Include multibyte editing support.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;--enable-fontset&lt;/th&gt;&lt;td&gt;Include X fontset output support.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;--enable-rubyinterp=OPTS&lt;/th&gt;&lt;td&gt;Include Ruby interpreter.  default=no OPTS=no/yes/dynamic&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;--enable-pythoninterp=OPTS&lt;/th&gt;&lt;td&gt;Include Python interpreter. default=no OPTS=no/yes/dynamic&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;--with-features=TYPE&lt;/th&gt;&lt;td&gt;TYPE: tiny, small, normal, big or huge (default: normal)&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;うーん。xim(X Input Method)とX fontsetはいらないのかも？&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ ./configure --disable-selinux --enable-multibyte --enable-rubyinterp --enable-pythoninterp --with-features=huge
$ make
$ sudo make install&lt;/pre&gt;
&lt;h1&gt;設定ファイル&lt;/h1&gt;
&lt;p&gt;$HOME/_vimrcもしくは.vimrcファイルの中に書きこんでいく。とりあえずこんなものを設定してみた。なお、.vimrcファイルではダブルクォーテーションがコメントとなる。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;&amp;quot;オートインデント
set autoindent
&amp;quot;バックアップディレクトリ
set backupdir=/tmp/vimbackup
&amp;quot;スワップファイル用ディレクトリ
set directory=/tmp/vimbackup
&amp;quot;タブ、行末を可視化
set list
&amp;quot;listで表示する文字の設定
set listchars=eol:$,tab:&amp;gt;\ ,extends:&amp;lt;
&amp;quot;行番号表示
set number
&amp;quot;シフトの移動幅
set shiftwidth=2&lt;/pre&gt;
&lt;h1&gt;色づけ&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://d.hatena.ne.jp/kattton/20110425/1303746056&quot;&gt;新卒さんのための人気Vimカラースキーマランキング5+1(vim.org &amp;amp; github調べ) - 黒魔法使いの弟子&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;vim　カラースキーマなどでググると色々出てくる。もしくはvimをインストールした場所(/usr/local/share/vimなど)/vim73/colorsの下にもある。このファイルを$HOME/vimfiles/colorsもしくは$HOME/.vim/colorsに放り込む。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://ethanschoonover.com/solarized&quot;&gt;Solarized - Ethan Schoonover&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://ethanschoonover.com/solarized/vim-colors-solarized&quot;&gt;README - Ethan Schoonover&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;今回はSolarizedを入れてみる。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ mkdir -p .vim/bundle
$ mkdir .vim/colors
$ cd .vim/bundle/
$ git clone git://github.com/altercation/vim-colors-solarized.git
Cloning into vim-colors-solarized...
remote: Counting objects: 336, done.
remote: Compressing objects: 100% (189/189), done.
remote: Total 336 (delta 102), reused 309 (delta 75)
Receiving objects: 100% (336/336), 92.06 KiB, done.
Resolving deltas: 100% (102/102), done.
$ cp vim-colors-solarized/colors/solarized.vim ../colors/&lt;/pre&gt;
&lt;p&gt;最後に.vimrcファイルにこのスキーマを読み込む設定を書く。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;syntax enable
set background=dark
colorscheme solarized&lt;/pre&gt;
&lt;p&gt;これでvimを使う準備はOK。どんどんvim使っていこう。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20111218234523&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20111218/20111218234523.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Unixでwmvファイルを他のファイルフォーマットに変換したい</title>
   <link href="http://gosyujin.github.io/2011/12/17/1324168464"/>
   <updated>2011-12-17T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2011/12/17/1324168464</id>
   <content type="html">&lt;h1&gt;前回までのあらすじ&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;2011-12-06-1323186439&quot;&gt;2011-12-06-1323186439&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;ダウンロードしたwmvファイルを他のファイルフォーマットに変換したい。&lt;/p&gt;
&lt;h1&gt;参考サイト&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://d.hatena.ne.jp/griffith181/20090302/1235980536&quot;&gt;ffmpegでWMVをMP4に変換 - YouのMacとかプログラムとか映像編集とか&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;インストール&lt;/h1&gt;
&lt;p&gt;ソースをgit clone で取得してくる。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git clone git://source.ffmpeg.org/ffmpeg.git ffmpeg
Cloning into ffmpeg...
remote: Counting objects: 192168, done.
remote: Compressing objects: 100% (43840/43840), done.
remote: Total 192168 (delta 150640), reused 188926 (delta 148049)
Receiving objects: 100% (192168/192168), 49.63 MiB | 278 KiB/s, done.
Resolving deltas: 100% (150640/150640), done.&lt;/pre&gt;
&lt;pre class=&quot;&quot;&gt;$ ./configure --disable-yasm
$ make
$ sudo make install&lt;/pre&gt;
&lt;h1&gt;使い方&lt;/h1&gt;
&lt;p&gt;基本的に-iオプションでインプットファイルを選択すれば使えるはずなのだが……。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ ffmpeg -i input.wmv -acodec copy output.mp3
ffmpeg version N-35890-g83b4671, Copyright (c) 2000-2011 the FFmpeg developers
  built on Dec 17 2011 22:36:09 with gcc 4.1.2 20080704 (Red Hat 4.1.2-48)
  configuration: --disable-yasm
  libavutil    51. 32. 0 / 51. 32. 0
  libavcodec   53. 46. 0 / 53. 46. 0
  libavformat  53. 26. 0 / 53. 26. 0
  libavdevice  53.  4. 0 / 53.  4. 0
  libavfilter   2. 53. 0 /  2. 53. 0
  libswscale    2.  1. 0 /  2.  1. 0
Input #0, asf, from &#39;input.wmv&#39;:
  Metadata:
    WMFSDKVersion   : 12.0.7601.17514
    WMFSDKNeeded    : 0.0.0.0000
    IsVBR           : 0
  Duration: 00:40:30.10, start: 0.000000, bitrate: 110 kb/s
    Stream #0:0: Audio: wmav2 (a[1][0][0] / 0x0161), 44100 Hz, 2 channels, s16, 96 kb/s
Output #0, mp3, to &#39;output.mp3&#39;:
  Metadata:
    WMFSDKVersion   : 12.0.7601.17514
    WMFSDKNeeded    : 0.0.0.0000
    IsVBR           : 0
    TSSE            : Lavf53.26.0
    Stream #0:0: Audio: wmav2 (a[1][0][0] / 0x0161), 44100 Hz, 2 channels, 96 kb/s
Stream mapping:
  Stream #0:0 -&amp;gt; #0:0 (copy)
Press [q] to stop, [?] for help
size=   28464kB time=00:40:30.10 bitrate=  96.0kbits/s   
video:0kB audio:28464kB global headers:0kB muxing overhead 0.001513%
&lt;/pre&gt;
&lt;p&gt;エラーは出ていないが、再生ができない。多分copyだとダメなのかな…。&lt;/p&gt;
&lt;p&gt;試しに他のフォーマットで変換してみたら、mp4だとうまくいった。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ ffmpeg -i input.wmv output.mp4
ffmpeg version N-35890-g83b4671, Copyright (c) 2000-2011 the FFmpeg developers
  built on Dec 17 2011 22:36:09 with gcc 4.1.2 20080704 (Red Hat 4.1.2-48)
  configuration: --disable-yasm
  libavutil    51. 32. 0 / 51. 32. 0
  libavcodec   53. 46. 0 / 53. 46. 0
  libavformat  53. 26. 0 / 53. 26. 0
  libavdevice  53.  4. 0 / 53.  4. 0
  libavfilter   2. 53. 0 /  2. 53. 0
  libswscale    2.  1. 0 /  2.  1. 0
Input #0, asf, from &#39;input.wmv&#39;:
  Metadata:
    WMFSDKVersion   : 12.0.7601.17514
    WMFSDKNeeded    : 0.0.0.0000
    IsVBR           : 0
  Duration: 00:40:30.10, start: 0.000000, bitrate: 110 kb/s
    Stream #0:0: Audio: wmav2 (a[1][0][0] / 0x0161), 44100 Hz, 2 channels, s16, 96 kb/s
encoder &#39;aac&#39; is experimental and might produce bad results.
Add &#39;-strict experimental&#39; if you want to use it.
&lt;/pre&gt;
&lt;p&gt;ん、-strict experimentalを付けないとだめらしい。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ ffmpeg ｰn -i input.wmv -strict experimental output.mp4
ffmpeg version N-35890-g83b4671, Copyright (c) 2000-2011 the FFmpeg developers
  built on Dec 17 2011 22:36:09 with gcc 4.1.2 20080704 (Red Hat 4.1.2-48)
  configuration: --disable-yasm
  libavutil    51. 32. 0 / 51. 32. 0
  libavcodec   53. 46. 0 / 53. 46. 0
  libavformat  53. 26. 0 / 53. 26. 0
  libavdevice  53.  4. 0 / 53.  4. 0
  libavfilter   2. 53. 0 /  2. 53. 0
  libswscale    2.  1. 0 /  2.  1. 0
Input #0, asf, from &#39;input.wmv&#39;:
  Metadata:
    WMFSDKVersion   : 12.0.7601.17514
    WMFSDKNeeded    : 0.0.0.0000
    IsVBR           : 0
  Duration: 00:40:30.10, start: 0.000000, bitrate: 110 kb/s
    Stream #0:0: Audio: wmav2 (a[1][0][0] / 0x0161), 44100 Hz, 2 channels, s16, 96 kb/s
Output #0, mp4, to &#39;output.mp4&#39;:
  Metadata:
    WMFSDKVersion   : 12.0.7601.17514
    WMFSDKNeeded    : 0.0.0.0000
    IsVBR           : 0
    encoder         : Lavf53.26.0
    Stream #0:0: Audio: aac (@[0][0][0] / 0x0040), 44100 Hz, 2 channels, s16, 128 kb/s
Stream mapping:
  Stream #0:0 -&amp;gt; #0:0 (wmav2 -&amp;gt; aac)
Press [q] to stop, [?] for help
size=   37922kB time=00:40:30.10 bitrate= 127.8kbits/s   
video:0kB audio:37513kB global headers:0kB muxing overhead 1.091713%
&lt;/pre&gt;
&lt;p&gt;これでできた。&lt;/p&gt;
&lt;h1&gt;オプション&lt;/h1&gt;
&lt;table&gt;&lt;tr&gt;&lt;th&gt;-y&lt;/th&gt;&lt;td&gt;アウトプットファイルを上書きする&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;-n&lt;/th&gt;&lt;td&gt;アウトプットファイルを上書きしない&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;-i&lt;/th&gt;&lt;td&gt;インプットファイル指定&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;-acodec&lt;/th&gt;&lt;td&gt;オーディオコーデック(copyでコピー)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;-strict&lt;/th&gt;&lt;td&gt;厳密さ(very &gt; strict &gt; normal(デフォルト) &gt; unofficial &gt; experimental)&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;うーんできることが多すぎて惑う。&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>svn infoコマンドでリビジョン番号を抜き出す</title>
   <link href="http://gosyujin.github.io/2011/12/16/1324086694"/>
   <updated>2011-12-16T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2011/12/16/1324086694</id>
   <content type="html">&lt;h1&gt;前回までのあらすじ&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;2011-12-13-1323783496&quot;&gt;2011-12-13-1323783496&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;もっとよい方法&lt;/h1&gt;
&lt;p&gt;どう考えても他にやり方があるだろうと思っていたらやっぱりあった。&lt;a href=&quot;http://twitter.com/#!/jun66j5&quot;&gt;@jun66j5&lt;/a&gt;さんよりTwitterで教えてもらいました。ありがとうございます。&lt;/p&gt;
&lt;p&gt;&lt;blockquote class=&quot;twitter-tweet&quot; lang=&quot;ja&quot;&gt;&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;&lt;a href=&quot;https://twitter.com/kk_Ataka&quot;&gt;@kk_Ataka&lt;/a&gt; svn info 使って LC_ALL=en_US.UTF8 svn info とか svn info --xml とかすればいいんじゃないかな&lt;/p&gt;&amp;mdash; Jun ?mae (@jun66j5) &lt;a href=&quot;https://twitter.com/jun66j5/status/147687551027781632&quot;&gt;2011, 12月 16&lt;/a&gt;&lt;/blockquote&gt;&lt;/p&gt;
&lt;p&gt;&lt;script async src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;&lt;/p&gt;
&lt;p&gt;svn infoコマンドで見られるのか。というわけで(全然使ってない)プロジェクトで試してみた。まず普通。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ svn info
パス: .
URL: file:///home/kk_Ataka/svn/xxxx
リポジトリのルート: file:///home/kk_Ataka/svn/xxxx
リポジトリ UUID: 99999999-9999-9999-9999-999999999999
リビジョン: 4
ノード種別: ディレクトリ
準備中の処理: 特になし
最終変更者: user
最終変更リビジョン: 4
最終変更日時: 2010-12-29 21:31:44 +0900 (水, 29 12月 2010)&lt;/pre&gt;
&lt;p&gt;ロケールをen_USに。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ LC_ALL=en_US.UTF8 svn info
Path: .
URL: file:///home/kk_Ataka/svn/xxxx
Repository Root: file:///home/kk_Ataka/svn/xxxx
Repository UUID: 99999999-9999-9999-9999-999999999999
Revision: 4
Node Kind: directory
Schedule: normal
Last Changed Author: user
Last Changed Rev: 4
Last Changed Date: 2010-12-29 21:31:44 +0900 (Wed, 29 Dec 2010)&lt;/pre&gt;
&lt;p&gt;xml形式で出力もできる。&lt;/p&gt;
&lt;pre class=&quot;xml&quot;&gt;$ svn info --xml
&amp;lt;?xml version=&amp;quot;1.0&amp;quot;?&amp;gt;
&amp;lt;info&amp;gt;
&amp;lt;entry
   kind=&amp;quot;dir&amp;quot;
   path=&amp;quot;.&amp;quot;
   revision=&amp;quot;4&amp;quot;&amp;gt;
&amp;lt;url&amp;gt;file:///home/kk_Ataka/svn/xxxx&amp;lt;/url&amp;gt;
&amp;lt;repository&amp;gt;
&amp;lt;root&amp;gt;file:///home/kk_Ataka/svn/xxxx&amp;lt;/root&amp;gt;
&amp;lt;uuid&amp;gt;99999999-9999-9999-9999-999999999999&amp;lt;/uuid&amp;gt;
&amp;lt;/repository&amp;gt;
&amp;lt;wc-info&amp;gt;
&amp;lt;schedule&amp;gt;normal&amp;lt;/schedule&amp;gt;
&amp;lt;/wc-info&amp;gt;
&amp;lt;commit
   revision=&amp;quot;4&amp;quot;&amp;gt;
&amp;lt;author&amp;gt;user&amp;lt;/author&amp;gt;
&amp;lt;date&amp;gt;2010-12-29T12:31:44.294483Z&amp;lt;/date&amp;gt;
&amp;lt;/commit&amp;gt;
&amp;lt;/entry&amp;gt;
&amp;lt;/info&amp;gt;&lt;/pre&gt;
&lt;p&gt;ってことは、これをgrepすれば……。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ LC_ALL=en_US.UTF8 svn info | grep Revision
Revision: 4&lt;/pre&gt;
&lt;p&gt;簡単にとれた！　けど、ちゃんと調べないといかんなーこんな簡単に取れるものを敢えて難しくとる必要ないしな。&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>RedmineとApacheを連携させるPassengerをインストールできなかった</title>
   <link href="http://gosyujin.github.io/2011/12/15/1323951847"/>
   <updated>2011-12-15T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2011/12/15/1323951847</id>
   <content type="html">&lt;h1&gt;あらすじ&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;Redmineを自動起動するようにしたい&lt;ul&gt;&lt;li&gt;Phusion Passenger(mod_rails for Apache)を使えばApacheと連携できるらしい&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;blockquote&gt;&lt;p&gt;特徴&lt;/p&gt;&lt;p&gt;    * Apache単独でRailsアプリケーションを実行可能です。Apacheのモジュールとして実装されており、別途デーモンを起動する必要がありません。tcpポートも使いません。&lt;/p&gt;&lt;p&gt;    * Railsアプリケーションのデプロイが簡単になります。ファイルをアップロードするだけ。ほぼPHP感覚です。&lt;/p&gt;&lt;p&gt;    * サーバのメモリを節約できます。Railsインスタンスは必要なタイミングで生成します。また、一定時間アクセスがなければインスタンスを終了させます。&lt;/p&gt;&lt;cite&gt;&lt;a href=&quot;http://redmine.jp/tech_note/apache-passenger/&quot;&gt;http://redmine.jp/tech_note/apache-passenger/&lt;/a&gt;&lt;/cite&gt;&lt;/blockquote&gt;
&lt;p&gt;ふーむ。&lt;/p&gt;
&lt;h1&gt;参考サイト&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://redmine.jp/faq/system_management/redmine-auto-start/&quot;&gt;Redmineを自動起動したい | Redmine.JP&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://redmine.jp/tech_note/apache-passenger/&quot;&gt;Apache上でRuby on Railsアプリケーションを動かす／Passenger(mod_rails for Apache)の利用 | Redmine.JP&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://d.hatena.ne.jp/rx7/20080412/p1&quot;&gt;Passenger (mod_rails for Apache) を使ってRedmineを動かしてみたよ！ - RX-7乗りの適当な日々&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://d.hatena.ne.jp/r7kamura/20110212/1297452845&quot;&gt;さくらVPS設定その3 Git+Ruby+Gem+Rails+Passenger - ✘╹◡╹✘&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;手順&lt;/h1&gt;
&lt;h2&gt;passengerインストール&lt;/h2&gt;
&lt;p&gt;Passengerを使うにはfastthread、daemon_controllerが必要らしい。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ gem install --local fastthread-1.0.7.gem
$ gem install --local daemon_controller-0.2.6.gem
$ gem install --local passenger-3.0.9.gem&lt;/pre&gt;
&lt;p&gt;※スタンドアロンなマシンだったため。ネットにつながっていればgem install passengerで全部入るはず。&lt;/p&gt;
&lt;h1&gt;passenger-install-apache2-module実行&lt;/h1&gt;
&lt;p&gt;対話形式でApacheのモジュール等を確認・インストールしていく。はじめにpassener-install-apache2-moduleを実行するとこんなメッセージが出てくる。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ passenger-install-apache2-module
Welcome to the Phusion Passenger Apache 2 module installer, v3.0.9.

This installer will guide you through the entire installation process. It
shouldn&#39;t take more than 3 minutes in total.

Here&#39;s what you can expect from the installation process:

 1. The Apache 2 module will be installed for you.
 2. You&#39;ll learn how to configure Apache.
 3. You&#39;ll learn how to deploy a Ruby on Rails application.

Don&#39;t worry if anything goes wrong. This installer will advise you on how to
solve any problems.

Press Enter to continue, or Ctrl-C to abort.&lt;/pre&gt;
&lt;ol&gt;&lt;li&gt;Apacheモジュールをインストールしたい&lt;/li&gt;&lt;li&gt;Apacheの設定を知りたい&lt;/li&gt;&lt;li&gt;Railsアプリのデプロイ方法をしりたい&lt;/li&gt;&lt;/ol&gt;
&lt;p&gt;の中から一つ選んだらアドバイスしてやるよっと言っている？　のようなので1を選択。必要なソフトウェアがインストールされているかチェックされる。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;Checking for required software...

 * GNU C++ compiler... found at /usr/local/bin/g++
 * Curl development headers with SSL support... not found
 * OpenSSL development headers... not found
 * Zlib development headers... found
 * Ruby development headers... found
 * OpenSSL support for Ruby... found
 * RubyGems... found
 * Rake... found at /usr/local/bin/rake
 * rack... found
 * Apache 2... not found
 * Apache 2 development headers... not found
 * Apache Portable Runtime (APR) development headers... not found
 * Apache Portable Runtime Utility (APU) development headers... not found

Some required software is not installed.
But don&#39;t worry, this installer will tell you how to install them.

Press Enter to continue, or Ctrl-C to abort.&lt;/pre&gt;
&lt;p&gt;結構インストールされていないものが多いな。メッセージでも「いろいろ入っていないものが見受けられるが心配すんな、俺がお前にインストール方法教えてやるよ！」と言われているようのでそのままエンター。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;Installation instructions for required software

 * To install Curl development headers with SSL support:
   Please download Curl from http://curl.haxx.se/libcurl and make sure you install it with SSL support.

 * To install OpenSSL development headers:
   Please download it from http://www.openssl.org/

 * To install Apache 2:
   Please download it from http://httpd.apache.org/

 * To install Apache 2 development headers:
   Please download it from http://httpd.apache.org/

 * To install Apache Portable Runtime (APR) development headers:
   Please download it from http://httpd.apache.org/
   (APR is an integrated part of Apache.)

 * To install Apache Portable Runtime Utility (APU) development headers:
   Please download it from http://httpd.apache.org/
   (APR Utility is an integrated part of Apache.)

If the aforementioned instructions didn&#39;t solve your problem, then please take
a look at the Users Guide:

  /usr/local/lib/ruby/gems/1.8/gems/passenger-3.0.9/doc/Users guide Apache.html&lt;/pre&gt;
&lt;p&gt;どこに何があるかUrlなどを教えてくれた。親切！&lt;/p&gt;
&lt;h1&gt;足りないもの集め&lt;/h1&gt;
&lt;h2&gt;Curl&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://www.blastwave.org/pkg/pkgcontents.ftd?software=curl&amp;style=brief&amp;state=5&amp;arch=i386&quot;&gt;http://www.blastwave.org/pkg/pkgcontents.ftd?software=curl&amp;amp;style=brief&amp;amp;state=5&amp;amp;arch=i386&lt;/a&gt; から&lt;/li&gt;&lt;li&gt;ディストリビューションを選択しパッケージをDL&lt;ul&gt;&lt;li&gt;依存ファイルもあるので注意&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;libidnとかlibssh2が足りなかったのでcurlが実行できない&lt;ul&gt;&lt;li&gt;not found状態になっていた&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;Apache&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;Apacheはあるはずなんだけどなあ。うまく見てくれてない&lt;/li&gt;&lt;li&gt;/usr/local/apache2/binにパスを通したらApache 2 development headerはfoundになった&lt;ul&gt;&lt;li&gt;え？　Apache 2 development headerだけ？　他は？&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;OpenSSL&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;OpenSSL development headersはなぜ入っていないのかわからなかった&lt;/li&gt;&lt;li&gt;パッケージをpkgaddしただけではダメ？&lt;ul&gt;&lt;li&gt;Solarisにopenssl-develみたいなものはある？&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;この文章を読むとソースから入れればよさそうなのだが…&lt;/li&gt;&lt;/ul&gt;
&lt;blockquote&gt;&lt;p&gt;Does anyone know where I can obtain openssl-devel source or package for&lt;/p&gt;&lt;p&gt;solaris.  I am trying to compile courier-imap-2.1.1 and it bombs out in&lt;/p&gt;&lt;p&gt;the make process with the following error:&lt;/p&gt;&lt;cite&gt;&lt;a href=&quot;http://www.sunhelp.org/pipermail/sunhelp/2003-September/019267.html&quot;&gt;http://www.sunhelp.org/pipermail/sunhelp/2003-September/019267.html&lt;/a&gt;&lt;/cite&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;You can download complete OpenSSL source from www.openssl.org.&lt;/p&gt;&lt;cite&gt;&lt;a href=&quot;http://www.sunhelp.org/pipermail/sunhelp/2003-September/019268.html&quot;&gt;http://www.sunhelp.org/pipermail/sunhelp/2003-September/019268.html&lt;/a&gt;&lt;/cite&gt;&lt;/blockquote&gt;
&lt;ul&gt;&lt;li&gt;configのオプションに --openssldir を指定してみてもダメだった。&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;とかなんとかしてるうちに&lt;/h1&gt;
&lt;p&gt;Rubyが実行できなくなった。lddで調べてみると、シンボルが見つからなくなっている。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;
        librt.so.1 =&amp;gt;    /usr/lib/librt.so.1
        libdl.so.1 =&amp;gt;    /usr/lib/libdl.so.1
        libcrypt_d.so.1 =&amp;gt;       /usr/lib/libcrypt_d.so.1
        libm.so.2 =&amp;gt;     /usr/lib/libm.so.2
        libc.so.1 =&amp;gt;     /usr/lib/libc.so.1
        libgcc_s.so.1 =&amp;gt;         /usr/local/lib//libgcc_s.so.1
        libaio.so.1 =&amp;gt;   /usr/lib/libaio.so.1
        libmd.so.1 =&amp;gt;    /usr/lib/libmd.so.1
        libgen.so.1 =&amp;gt;   /usr/lib/libgen.so.1
        シンボルが見つかりません: rb_cObject          (./md5.so)
        シンボルが見つかりません: MD5_Update          (./md5.so)
        シンボルが見つかりません: MD5_Init            (./md5.so)
        シンボルが見つかりません: MD5_Finish          (./md5.so)
        /platform/SPARC-XXXX/lib/libc_psr.so.1
        /platform/SPARC-XXXX/lib/libmd_psr.so.1&lt;/pre&gt;
&lt;p&gt;md5.soを調べてみる。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ cd /usr/local/lib/ruby/1.8/sparc-solaris2.10/digest
$ ldd -d md5.so
        librt.so.1 =&amp;gt;    /usr/lib/librt.so.1
        libdl.so.1 =&amp;gt;    /usr/lib/libdl.so.1
        libcrypt_d.so.1 =&amp;gt;       /usr/lib/libcrypt_d.so.1
        libm.so.2 =&amp;gt;     /usr/lib/libm.so.2
        libc.so.1 =&amp;gt;     /usr/lib/libc.so.1
        libgcc_s.so.1 =&amp;gt;         /usr/local/lib//libgcc_s.so.1
        libaio.so.1 =&amp;gt;   /usr/lib/libaio.so.1
        libmd.so.1 =&amp;gt;    /usr/lib/libmd.so.1
        libgen.so.1 =&amp;gt;   /usr/lib/libgen.so.1
        シンボルが見つかりません: rb_cObject          (./md5.so)
        /platform/SUNW,SPARC-Enterprise-T5120/lib/libc_psr.so.1
        /platform/SUNW,SPARC-Enterprise-T5120/lib/libmd_psr.so.1&lt;/pre&gt;
&lt;p&gt;Ruby本体の中でなんかやっちゃったのかな？&lt;/p&gt;
&lt;p&gt;結局Rubyを再インストールしたらこのエラーは消えた。&lt;/p&gt;
&lt;h1&gt;今後&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;とりあえず、違うOSでPassenger入れなおしてみる&lt;/li&gt;&lt;/ul&gt;</content>
 </entry>
 
 <entry>
   <title>さくらVPSの初期設定メモ</title>
   <link href="http://gosyujin.github.io/2011/12/14/1323868360"/>
   <updated>2011-12-14T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2011/12/14/1323868360</id>
   <content type="html">&lt;p&gt;さくらVPSで最初に行ったとりあえず最低クラスの設定を発掘したのでメモ。OSはCentOSか。&lt;/p&gt;
&lt;h1&gt;参考サイト&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://blog.myfinder.jp/2010/09/vpsssh.html&quot;&gt;myfinder&amp;#39;s blog: さくらのVPSを借りたら真っ先にやるべきssh設定&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://d.hatena.ne.jp/h-yano/20080225/1203952174&quot;&gt;sshで「Permission denied (publickey,gssapi-with-mic).」が出た時 - 今日とは違う明日&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://d.hatena.ne.jp/rubellum/20100901/1283321253&quot;&gt;「さくらのVPS」借りてみた（作業ユーザー作成，SSH設定） - rubellum&amp;#39;s blog&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://havelog.ayumusato.com/develop/server/e135-sakura-vps-setup1.html&quot;&gt;とあるさくらのVPS (1) ユーザーとSSHを設定 ::ハブろぐ&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;サーバ&lt;/h1&gt;
&lt;p&gt;ユーザを作成する。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;# useradd kk_Ataka
# passwd  kk_Ataka&lt;/pre&gt;
&lt;p&gt;ユーザをwheelグループに。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;# usermod -G wheel kk_Ataka&lt;/pre&gt;
&lt;h1&gt;クライアント&lt;/h1&gt;
&lt;p&gt;鍵を作る。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ ssh-keygen -t rsa&lt;/pre&gt;
&lt;p&gt;鍵をサーバに送る。(既に作ってある場合は~/.ssh/にあるid_rsa.pubを)&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ scp id_rsa.pub USER@ADDRESS:PATH&lt;/pre&gt;
&lt;p&gt;※ポート変えた場合はscpコマンドに -P ポート番号 をつける。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ scp -P PORT id_rsa.pub USER@ADDRESS:PATH&lt;/pre&gt;
&lt;h1&gt;再びサーバ&lt;/h1&gt;
&lt;h2&gt;SSHの設定&lt;/h2&gt;
&lt;p&gt;鍵を受け取ったらホームディレクトリに.sshディレクトリを作りコピー。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ mkdir .ssh
$ mv id_rsa.pub .ssh/authorized_keys&lt;/pre&gt;
&lt;p&gt;権限を変更。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ chmod 700 ~demo/.ssh
$ chmod 600 ~demo/.ssh/authorized_keys&lt;/pre&gt;
&lt;p&gt;sshd_configファイルを編集。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;# vi /etc/ssh/sshd_config&lt;/pre&gt;
&lt;p&gt;&gt;|?|&lt;/p&gt;
&lt;p&gt;# 使用ポートをデフォルトから変更&lt;/p&gt;
&lt;p&gt;Port XXXXX &lt;/p&gt;
&lt;p&gt;# sshでrootでのログインを許可しない&lt;/p&gt;
&lt;p&gt;PermitRootLogin no&lt;/p&gt;
&lt;p&gt;# パスワード認証でのsshログインを許可しない&lt;/p&gt;
&lt;p&gt;PasswordAuthentication no&lt;/p&gt;
&lt;p&gt;# PAMによる認証を許可しない&lt;/p&gt;
&lt;p&gt;UsePAM no&lt;/p&gt;
&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;編集したら再起動。&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f1&quot; title=&quot;もしくはservice sshd restart？&quot; name=&quot;fn1&quot;&gt;*1&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;# /etc/init.d/sshd restart&lt;/pre&gt;
&lt;h2&gt;sudoコマンド&lt;/h2&gt;
&lt;p&gt;wheelグループがsudoコマンド使えるように。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;# visudo&lt;/pre&gt;
&lt;pre class=&quot;&quot;&gt;%wheel  ALL=(ALL)       ALL  &lt;/pre&gt;
&lt;p&gt;rootアカウントをロック。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;# passwd -l root  &lt;/pre&gt;
&lt;p&gt;アンロックするにはuオプション。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;# passwd -u root&lt;/pre&gt;
&lt;div class=&quot;footnote&quot;&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn1&quot; name=&quot;f1&quot;&gt;*1&lt;/a&gt;: もしくはservice sshd restart？&lt;/p&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>svn updateコマンド以外でリビジョン番号を抜き出す</title>
   <link href="http://gosyujin.github.io/2011/12/13/1323783496"/>
   <updated>2011-12-13T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2011/12/13/1323783496</id>
   <content type="html">&lt;h1&gt;あらすじ&lt;/h1&gt;
&lt;p&gt;svnのリビジョン番号だけ抜き出したい。アップデートなしで！　svn updateするとリビジョンは出てくれるんだけど、アップデート走らせないようにリビジョン番号だけ抜き出したい。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ svn up
リビジョン 111 です&lt;/pre&gt;
&lt;h1&gt;&lt;span class=&quot;deco&quot; style=&quot;color:#FF0000;&quot;&gt;続編&lt;/span&gt;&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;2011-12-16-1324086694&quot;&gt;2011-12-16-1324086694&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;&lt;span class=&quot;deco&quot; style=&quot;color:#FF0000;&quot;&gt;以下はとてもめんどくさい方法での実現となります。&lt;/span&gt;&lt;/p&gt;
&lt;h1&gt;試行錯誤&lt;/h1&gt;
&lt;h2&gt;svn log&lt;/h2&gt;
&lt;p&gt;svn logで表示したリビジョンを抽出する。limit N で出力するログを制御。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ /usr/local/bin/svn log --limit 1
------------------------------------------------------------------------
r111 | kk_Ataka | 2011-12-17 11:51:11 +0900 ((金), 17 12月 2011) | 3 lines

コミットログ
...
...
&lt;/pre&gt;
&lt;p&gt;まずは最新ログをひとつだけ取得。&lt;/p&gt;
&lt;h2&gt;grep&lt;/h2&gt;
&lt;p&gt;次にリビジョンが記載してある行だけ抽出。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ /usr/local/bin/svn log --limit 1 | grep ^r.*lines$
r111 | kk_Ataka | 2011-12-17 11:51:11 +0900 ((金), 17 12月 2011) | 3 lines&lt;/pre&gt;
&lt;h2&gt;sed&lt;/h2&gt;
&lt;p&gt;最後にその行からsedコマンドで「rXX」だけを抜き出し。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ /usr/local/bin/svn log --limit 1 | grep ^r.*lines$ | sed -e &amp;quot;s/^\(r[0-9]*\) .*/\1/g&amp;quot; 
r111&lt;/pre&gt;
&lt;p&gt;めんどくさ！　なんか使ったことないコマンドから一発で出せる気がする……。&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>ファイルの拡張子を見て適切なコマンドで解凍してくれるスクリプトを組んだ</title>
   <link href="http://gosyujin.github.io/2011/12/12/1323701022"/>
   <updated>2011-12-12T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2011/12/12/1323701022</id>
   <content type="html">&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;2011-12-09-1323474254&quot;&gt;2011-12-09-1323474254&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;2011-12-10-1323541524&quot;&gt;2011-12-10-1323541524&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;を基に引数に指定したらよろしく解凍してくれるスクリプトを組んでみる。とりあえずオプション指定できないし圧縮できないけど必要になったら実装していこう。&lt;/p&gt;
&lt;p&gt;&lt;script src=&quot;https://gist.github.com/1460871.js?file=autocompress.sh&quot;&gt;&lt;/script&gt;&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>java-ja忘年会に参加しました2011</title>
   <link href="http://gosyujin.github.io/2011/12/11/1323617084"/>
   <updated>2011-12-11T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2011/12/11/1323617084</id>
   <content type="html">&lt;h1&gt;今年は秋葉原&lt;/h1&gt;
&lt;p&gt;の北海道。今年は日曜日だったので余裕を持って3年連続3度目の出場を決められた。自分の正面には&lt;a href=&quot;http://twitter.com/#!/daisuke_m&quot;&gt;@daisuke_m&lt;/a&gt;さんが！　超緊張して全然話ができなかった……。とても眠そうでらした&lt;a href=&quot;http://twitter.com/#!/drillbits&quot;&gt;@drillbits&lt;/a&gt;さんとも初対面だった。が、もしかしたらBPStudyなどでお会いしていたかもしれない。&lt;/p&gt;
&lt;h1&gt;いろんな話題とサンタ的ななにか&lt;/h1&gt;
&lt;p&gt;「PHPは育てるとかわいくなる」とか「ゲームはPC、XBOX、PS3で出すにはどのくらい大変なんだろう？　AndroidとiOSで同じアプリ同時にリリースしろって言われたら困る」とか「ドキュメントはこっちで自由に作ってPDFで送付します、ただし微妙にレイアウトが違うのを指摘される」とか「ブログ持ってTwitterやってGitHubに作ったサービス登録して自分をアピールできる時代」いう話題が繰り広げられる中、違う島ではD社の就職説明会が開催されたり、サンタのようなものが会場を練り歩いたりしていました。&lt;/p&gt;
&lt;p&gt;サンタのようなものはどこかにアップされてそうなのでそちらを参照してください。(java-ja サンタ とかでググる？)&lt;/p&gt;
&lt;h1&gt;個人的な&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://twitter.com/#!/Jxck_&quot;&gt;@Jxck_&lt;/a&gt;さんに以前Sphinxを教えてもらって以来使ってます！　弊社内一人で！　報告ができてよかった&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://twitter.com/#!/fd0&quot;&gt;いけむら&lt;/a&gt;さんと日々の作業の効率化について少しお話させて頂き、作業を効率化して浮いた時間を有効に使い…という正のループにハマれるようにちょっと気持ちを引き締めて明日からまた生きようと思いました&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;最後に&lt;/h1&gt;
&lt;p&gt;幹事の&lt;a href=&quot;http://twitter.com/#!/yamashiro&quot;&gt;@yamashiro&lt;/a&gt;さんいつもお疲れ様です！　いつか冬場のリップクリームの件についてお話させてください＞＜&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>tarコマンドでzオプションを使わずにファイルを解凍する</title>
   <link href="http://gosyujin.github.io/2011/12/10/1323541524"/>
   <updated>2011-12-10T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2011/12/10/1323541524</id>
   <content type="html">&lt;h1&gt;あらすじ&lt;/h1&gt;
&lt;p&gt;Solarisにデフォルトで入っているtarではzオプションなどが使えない。のでtar.gzやtar.bz2ファイルを一発で解凍するにはパイプでつないでやる必要がある。&lt;/p&gt;
&lt;h1&gt;コマンド&lt;/h1&gt;
&lt;pre class=&quot;&quot;&gt;$ gzip -cd xxxx.tar.gz | tar -xvf -&lt;/pre&gt;
&lt;p&gt;こんな感じ。cオプションを指定してやる。……やってる事はわかるけど、tarの最後にあるハイフンはなんじゃろう。tar -f -で標準入力から持ってくるルール？&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://detail.chiebukuro.yahoo.co.jp/qa/question_detail/q1120031991&quot;&gt;&amp;quot;gzip -dc software.tar.gz | tar xvf -&amp;quot;の最後の&amp;quot;-&amp;quot;は何ですか？全体の意味とし... - Yahoo!知恵袋&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;ふむ。マニュアルを見てみる。&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;    tarfile の名前が - である場合は、tarは標準出&lt;/p&gt;&lt;p&gt;    力への書き込みあるいは標準入力からの読み取り&lt;/p&gt;&lt;p&gt;    のいずれか適当な操作を行います。tarはパイプ&lt;/p&gt;&lt;p&gt;    ラインの先頭もしくは末尾として使用することが&lt;/p&gt;&lt;p&gt;    できます。また、次のコマンドを使えば、tar&lt;/p&gt;&lt;p&gt;    は、 ディレクトリ階層を移動するためにも使用す&lt;/p&gt;&lt;p&gt;    ることができます。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;ルールだったようだ。&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Unixでファイル圧縮・解凍するときに使うコマンドをまとめた</title>
   <link href="http://gosyujin.github.io/2011/12/09/1323474254"/>
   <updated>2011-12-09T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2011/12/09/1323474254</id>
   <content type="html">&lt;h1&gt;あらすじ&lt;/h1&gt;
&lt;p&gt;不意に.Zファイルがやってきて解凍の仕方を調べてしまった。あとだいたいオプションを忘れるのでメモ。対象ファイルは以下。&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;.zip&lt;/li&gt;&lt;li&gt;.Z&lt;/li&gt;&lt;li&gt;.gz&lt;/li&gt;&lt;li&gt;.bz2&lt;/li&gt;&lt;li&gt;.tar.gz&lt;/li&gt;&lt;li&gt;.tgz&lt;/li&gt;&lt;li&gt;.tar.bz2&lt;/li&gt;&lt;li&gt;.tbz&lt;/li&gt;&lt;li&gt;.tar.Z&lt;/li&gt;&lt;/ol&gt;
&lt;p&gt;こんなファイルを固めたり解凍したり。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;extracted
┣direct/
┃┗ls.txt # man ls &amp;gt;&amp;gt; ls.txt
┣slink
┣tar.txt  # man tar &amp;gt;&amp;gt; tar.txt
┗zip.txt  # man zip &amp;gt;&amp;gt; zip.txt&lt;/pre&gt;
&lt;pre class=&quot;&quot;&gt;tar
┗sample.tar
$ tar tvf sample.tar ../extracted
drwxr-xr-x 9999/9999      0 12月  8日 19:14 2011年 ../extracted/
lrwxrwxrwx 9999/9999      7 12月  8日 19:13 2011年 ../extracted/slink tar.txt へのシンボリックリンク
drwxr-xr-x 9999/9999      0 12月  8日 19:37 2011年 ../extracted/direct/
-rw-r--r-- 9999/9999  36890 12月  8日 19:37 2011年 ../extracted/direct/ls.txt
-rw-r--r-- 9999/9999  39133 12月  8日 19:07 2011年 ../extracted/tar.txt
-rw-r--r-- 9999/9999  40835 12月  8日 19:11 2011年 ../extracted/zip.txt&lt;/pre&gt;
&lt;h1&gt;zip(unzip) 拡張子: zip&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;圧縮&lt;ul&gt;&lt;li&gt;zip 圧縮後のファイル名 [ファイル ファイル]&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;$ zip ../compressed/c.zip *
  adding: direct/ (stored 0%)
  adding: slink (deflated 71%)
  adding: tar.txt (deflated 71%)
  adding: zip.txt (deflated 67%)&lt;/pre&gt;
&lt;pre class=&quot;&quot;&gt;$ zip -r ../compressed/c.zip *
  adding: direct/ (stored 0%)
  adding: direct/ls.txt (deflated 75%)
  adding: slink (deflated 71%)
  adding: tar.txt (deflated 71%)
  adding: zip.txt (deflated 67%)&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;解凍&lt;ul&gt;&lt;li&gt;unzip 解凍ファイル.zip -d 解凍パス&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;$ unzip ../compressed/c.zip -d ../compressed/output/zip/
Archive:  ../compressed/c.zip
   creating: ../compressed/output/zip/direct/
  inflating: ../compressed/output/zip/direct/ls.txt
  inflating: ../compressed/output/zip/slink
  inflating: ../compressed/output/zip/tar.txt
  inflating: ../compressed/output/zip/zip.txt&lt;/pre&gt;
&lt;p&gt;rでディレクトリの下も含めてまとめて。解凍時にdでパス指定&lt;/p&gt;
&lt;h1&gt;compress(uncompress) 拡張子: Z, tar.Z&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;圧縮&lt;ul&gt;&lt;li&gt;compress -fv [ファイル ファイル]&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;$ compress -fv *
direct: 圧縮: 86.32% -- 通常ファイルではありません: 変更されていません。
slink: 圧縮: 60.13% -- slink.Z と置換しました。
tar.txt: 圧縮: 60.13% -- tar.txt.Z と置換しました。
zip.txt: 圧縮: 57.45% -- zip.txt.Z と置換しました。&lt;/pre&gt;
&lt;pre class=&quot;&quot;&gt;$ compress -v sample.tar
sample.tar: 圧縮: 60.78% -- sample.tar.Z と置換しました。&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;解凍&lt;ul&gt;&lt;li&gt;compress -dv [ファイル ファイル]&lt;/li&gt;&lt;li&gt;uncompress -v [ファイル ファイル]&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;$ compress -dv *
direct.Z: ファイルもディレクトリもありません。
slink.Z:  -- slink と置換しました。
tar.txt.Z:  -- tar.txt と置換しました。
zip.txt.Z:  -- zip.txt と置換しました&lt;/pre&gt;
&lt;pre class=&quot;&quot;&gt;$ uncompress -v *
direct.Z: ファイルもディレクトリもありません。
slink.Z:  -- slink と置換しました。
tar.txt.Z:  -- tar.txt と置換しました。
zip.txt.Z:  -- zip.txt と置換しました。&lt;/pre&gt;
&lt;pre class=&quot;&quot;&gt;$ compress -dv sample.tar.Z
sample.tar.Z:  -- sample.tar と置換しました。&lt;/pre&gt;
&lt;pre class=&quot;&quot;&gt;$ uncompress -v sample.tar.Z
sample.tar.Z:  -- sample.tar と置換しました&lt;/pre&gt;
&lt;p&gt;そのファイル自体が置換される？　fは強制(圧縮しても小さくならない、ファイルが既に存在する場合も上書き)、vは冗長、dは解凍？&lt;/p&gt;
&lt;h1&gt;gzip(gunzip) 拡張子: gz, tar.gz, tgz&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;圧縮&lt;ul&gt;&lt;li&gt;gzip [ファイル ファイル]&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;$ gzip -rv *
direct/ls.txt:   75.2% -- replaced with direct/ls.txt.gz
slink:   71.3% -- replaced with slink.gz
tar.txt:         71.3% -- replaced with tar.txt.gz
zip.txt:         66.7% -- replaced with zip.txt.gz&lt;/pre&gt;
&lt;pre class=&quot;&quot;&gt;$ gzip -v sample.tar
sample.tar:      72.2% -- replaced with sample.tar.gz&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;解凍&lt;ul&gt;&lt;li&gt;gzip -d [ファイル ファイル]&lt;/li&gt;&lt;li&gt;gunzip [ファイル ファイル]&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;$ gzip -rdv *
direct/ls.txt.gz:        75.2% -- replaced with direct/ls.txt
slink.gz:        71.3% -- replaced with slink
tar.txt.gz:      71.3% -- replaced with tar.txt
zip.txt.gz:      66.7% -- replaced with zip.txt&lt;/pre&gt;
&lt;pre class=&quot;&quot;&gt;$ gunzip -rv *
direct/ls.txt.gz:        75.2% -- replaced with direct/ls.txt
slink.gz:        71.3% -- replaced with slink
tar.txt.gz:      71.3% -- replaced with tar.txt
zip.txt.gz:      66.7% -- replaced with zip.txt&lt;/pre&gt;
&lt;pre class=&quot;&quot;&gt;$ gzip -dv sample.tar.gz
sample.tar.gz:   72.2% -- replaced with sample.tar&lt;/pre&gt;
&lt;pre class=&quot;&quot;&gt;$ gunzip -v sample.tar.gz
sample.tar.gz:   72.2% -- replaced with sample.tar&lt;/pre&gt;
&lt;p&gt;そのファイル自体が置換される？　fは強制。vは冗長。dで解凍。&lt;/p&gt;
&lt;h1&gt;bzip2(bunzip2) 拡張子: bz2, tar.bz2, tbz&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;圧縮&lt;ul&gt;&lt;li&gt;bzip2 [ファイル ファイル]&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;$ bzip2 -v *
bzip2: Input file direct is a directory.
  slink:    4.001:1,  1.999 bits/byte, 75.01% saved, 39133 in, 9780 out.
  tar.txt:  4.001:1,  1.999 bits/byte, 75.01% saved, 39133 in, 9780 out.
  zip.txt:  3.355:1,  2.384 bits/byte, 70.19% saved, 40835 in, 12171 out.&lt;/pre&gt;
&lt;pre class=&quot;&quot;&gt;$ bzip2 -v sample.tar
  sample.tar:  4.165:1,  1.921 bits/byte, 75.99% saved, 121856 in, 29256 ou
t.&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;解凍&lt;ul&gt;&lt;li&gt;bzip2 -d [ファイル ファイル]&lt;/li&gt;&lt;li&gt;bunzip2 [ファイル ファイル]&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;$ bzip2 -dv *
bzip2: Input file direct is a directory.
  slink.bz2:   done
  tar.txt.bz2: done
  zip.txt.bz2: done&lt;/pre&gt;
&lt;pre class=&quot;&quot;&gt;$ bunzip2 -v *
bunzip2: Input file direct is a directory.
  slink.bz2:   done
  tar.txt.bz2: done
  zip.txt.bz2: done&lt;/pre&gt;
&lt;pre class=&quot;&quot;&gt;$ bzip2 -dv sample.tar.bz2
  sample.tar.bz2: done&lt;/pre&gt;
&lt;pre class=&quot;&quot;&gt;$ bunzip2 -v sample.tar.bz2
  sample.tar.bz2: done&lt;/pre&gt;
&lt;p&gt;そのファイル自体が置換される？　fは強制。vは冗長。dで解凍。ディレクトリの下は指定しないとダメ？&lt;/p&gt;
&lt;h1&gt;圧縮結果(参考)&lt;/h1&gt;
&lt;pre class=&quot;&quot;&gt;-rw-r--r--   1 test    test      47784 12月  8日  21:38 sample.tar.Z
-rw-r--r--   1 test    test      29256 12月  8日  21:41 sample.tar.bz2
-rw-r--r--   1 test    test      33934 12月  8日  21:21 sample.tar.gz&lt;/pre&gt;
&lt;p&gt;今回の結果だと、ファイルサイズはおおむね Z &gt; gz &gt; bz2 になっている。&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Solarisで現在のOSバージョンやパッチバージョンを確認する</title>
   <link href="http://gosyujin.github.io/2011/12/08/1323357042"/>
   <updated>2011-12-08T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2011/12/08/1323357042</id>
   <content type="html">&lt;p&gt;&lt;del datetime=&quot;2011-12-10T09:14:42+09:00&quot;&gt;SPARC向けだろうか。&lt;/del&gt;そんなことなかったぜ！&lt;/p&gt;
&lt;h1&gt;参考サイト&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://www.rose.sannet.ne.jp/nterasim/solaris/patch.html&quot;&gt;solarisのパッチ適用&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;unameコマンドでパッチ確認+α&lt;/h1&gt;
&lt;p&gt;uname(現在のシステム名の表示)コマンドを使用していろいろ取得する。&lt;/p&gt;
&lt;table&gt;&lt;tr&gt;&lt;th&gt;コマンド 引数&lt;/th&gt;&lt;th&gt;意味&lt;/th&gt;&lt;th&gt;出力内容&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;uname&lt;/td&gt;&lt;td&gt;OSの表示&lt;/td&gt;&lt;td&gt;SunOS&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;uname -n&lt;/td&gt;&lt;td&gt;ホスト名の表示&lt;/td&gt;&lt;td&gt;XXXXXXX&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;uname -r&lt;/td&gt;&lt;td&gt;OSリリースレベルの表示&lt;/td&gt;&lt;td&gt;5.10&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;uname -v&lt;/td&gt;&lt;td&gt;カーネルパッチバージョンの表示&lt;/td&gt;&lt;td&gt;Generic_999999-99&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;uname -m&lt;/td&gt;&lt;td&gt;マシンタイプの表示&lt;/td&gt;&lt;td&gt;sunXX&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;uname -p&lt;/td&gt;&lt;td&gt;プロセッサタイプの表示&lt;/td&gt;&lt;td&gt;sparc&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;uname -i&lt;/td&gt;&lt;td&gt;プラットフォーム名の表示&lt;/td&gt;&lt;td&gt;SUNXX,SPARC-ZZZZZZZZZZ&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;uname -a&lt;/td&gt;&lt;td&gt;全部&lt;/td&gt;&lt;td&gt;SunOS XXXXXXX 5.10 Generic_141999-99 (以下略)&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20111210091242&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20111210/20111210091242.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;パッチは6ケタのパッチ番号と2ケタのバージョンで管理されている。上記の例だと999999がパッチ番号で99がバージョン。&lt;/p&gt;
&lt;h1&gt;当たっているパッチ一覧の確認&lt;/h1&gt;
&lt;p&gt;現在当たっているパッチの一覧は以下のコマンドで表示できる。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ showrev -p&lt;/pre&gt;
&lt;pre class=&quot;&quot;&gt;$ patchadd -p&lt;/pre&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20111210091241&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20111210/20111210091241.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;後は grep と組み合わせて当たっているパッチと当たっていないパッチを精査していく？&lt;/p&gt;
&lt;p&gt;一応、当てたパッチのログは /var/sadm/patch/パッチID/log に残されているので、こっちを見るとパッチがどこまで当たっているかわかりやすい？？&lt;/p&gt;
&lt;p&gt;patchcheckというスクリプトを使えば更新状況がわかるようだが、内部で閉じているサーバ環境だと使えないか。&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>ZenTestでRSpecを自動実行できるようにした</title>
   <link href="http://gosyujin.github.io/2011/12/07/1323291938"/>
   <updated>2011-12-07T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2011/12/07/1323291938</id>
   <content type="html">&lt;h1&gt;あらすじ&lt;/h1&gt;
&lt;p&gt;ZenTestを使えばテストを*specファイルを変更したタイミングで実行できるという事を知った。&lt;/p&gt;
&lt;p&gt;ファイル編集する -&gt; alt+tabでウィンドウ切り替える -&gt; プロンプトでrspecコマンドうつ…の繰り返しとはなんだったのか……。&lt;/p&gt;
&lt;h1&gt;参考サイト&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://randd.kwappa.net/2011/08/07/338&quot;&gt;autotestの結果をgrowlに通知する | Kwappa研究開発室&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://d.hatena.ne.jp/seiunsky/20100131/1264913047&quot;&gt;Ruby の開発環境として ZenTest(autotest)を入れた - @sugamasao.blog.title # =&amp;gt; ”コードで世界を変えたい”&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;環境&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;Windows XP&lt;/li&gt;&lt;li&gt;導入済み&lt;ul&gt;&lt;li&gt;Ruby 1.8.7&lt;/li&gt;&lt;li&gt;Rspec 2.5&lt;/li&gt;&lt;li&gt;Rubygems バージョン失念&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;手順&lt;/h1&gt;
&lt;h2&gt;ZenTest導入&lt;/h2&gt;
&lt;p&gt;まずはZenTestをgemで導入……しようと思ったらgem自体のアップデートを要求された。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;gem update --system&lt;/pre&gt;
&lt;p&gt;アップした後はgem 1.8.10となった。gemを最新にしたらZenTestを導入。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;gem install ZenTest&lt;/pre&gt;
&lt;p&gt;次にソースファイルを用意。Growlで何かしら通知するファイルを作りたかったのでそんな感じの名前に。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;growl_for_ruby
┣.autotest
┣autotest
┃┗discover.rb
┣growl.rb　　　　# 実際にソースをゴリゴリ書いていく
┗spec
　┗growl_spec.rb # テストコード&lt;/pre&gt;
&lt;h2&gt;.autotest&lt;/h2&gt;
&lt;p&gt;これにはまだ何も書いていない。設定を書いていくらしい。&lt;/p&gt;
&lt;h2&gt;autotest/discover.rb&lt;/h2&gt;
&lt;p&gt;autotestコマンド実行時にautotestフォルダに入っているdiscover.rbを読みに行くようだ。中身は以下。&lt;/p&gt;
&lt;pre class=&quot;ruby&quot;&gt;Autotest.add_discovery { &amp;quot;rspec2&amp;quot; }&lt;/pre&gt;
&lt;p&gt;autotestでrspec 2.Xを使うよってことかな。&lt;/p&gt;
&lt;h2&gt;spec/growl_spec.rb&lt;/h2&gt;
&lt;p&gt;テストコード。rspecの書き方にならってテストを書いていく。注意しないといけないのは、テストコードはspecフォルダ以下に入れないと読み込んでくれない。&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f1&quot; title=&quot;ただし、どこかの設定で場所は変えられると書いてあった気がする。&quot; name=&quot;fn1&quot;&gt;*1&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;テスト実行&lt;/h2&gt;
&lt;p&gt;一つ新しいプロンプトを開き、プロジェクトルートへ移動。そしてautotest実行。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ autotest
loading autotest/rspec2
C:\ruby1.8\bin\ruby -rrubygems -S C:/ruby1.8/lib/ruby/gems/1.8/gems/rspec-core-2.5.1/bin/rspec --tty &#39;C:/xx/growl_for_ruby/spec/growl_spec.rb&#39;&lt;/pre&gt;
&lt;p&gt;成功すると待ち状態になり。以後はコードを保存する毎？　にrspecコマンドが走ってくれる！&lt;/p&gt;
&lt;h2&gt;その他&lt;/h2&gt;
&lt;p&gt;どうもRubyのPATHにスペースが入っているとLoad Errorとなる様子。&lt;del datetime=&quot;2011-12-08T06:05:38+09:00&quot;&gt;またお前か。&lt;/del&gt;ここでもデフォルトパスでインストールした弊害が……。&lt;/p&gt;
&lt;p&gt;と、もう一つ。autotestの他にrspecにautospecというコマンドがあるらしく、こちらを叩いてもOK&quot;だった&quot;らしい。今は以下のようなメッセージが出る。訳は &lt;a href=&quot;http://d.hatena.ne.jp/smellman/20110310/1299727933&quot;&gt;autospecと打ったら罵られてしまった件について - すめるまん Broken Diary&lt;/a&gt; に記載されています。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;************************************************************
REMOVAL NOTICE: you are using behaviour that has been
removed from rspec-2.

 * The &#39;autospec&#39; command is no longer supported.
 * Please use &#39;autotest&#39; insted.

This message will be removed from a future version of rspec.
************************************************************&lt;/pre&gt;
&lt;h1&gt;今後の予定&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;動作原理をもう少し調べる&lt;/li&gt;&lt;li&gt;rspecにオプションをつけて実行したい&lt;/li&gt;&lt;li&gt;テスト結果をGrowlで通知したい&lt;/li&gt;&lt;/ul&gt;
&lt;div class=&quot;footnote&quot;&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn1&quot; name=&quot;f1&quot;&gt;*1&lt;/a&gt;: ただし、どこかの設定で場所は変えられると書いてあった気がする。&lt;/p&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>UnixでストリーミングファイルをDLしたい</title>
   <link href="http://gosyujin.github.io/2011/12/06/1323186439"/>
   <updated>2011-12-06T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2011/12/06/1323186439</id>
   <content type="html">&lt;h1&gt;あらすじ&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;http://hibiki-radio.jp/description/milky&quot;&gt;ミルキィホームズのラジオ&lt;/a&gt;(番組はなんでも可)を毎週自動的にサーバにDLするスクリプトを組みたい！&lt;/p&gt;
&lt;h1&gt;調べること&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;ラジオはMMSプロトコルのASFファイル&lt;ul&gt;&lt;li&gt;wgetでDLできる？&lt;ul&gt;&lt;li&gt;MMSに対応してない模様？　wget proなら対応しているらしいが…&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;mplayerというソフトウェアでUnixでもMMSファイルをDLできるらしい &lt;a href=&quot;http://ja.wikipedia.org/wiki/MPlayer&quot;&gt;MPlayer - Wikipedia&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;というわけでまずはmplayerを使ってUnixでストリーミングファイルをDLできるようにしてみる。&lt;/p&gt;
&lt;h1&gt;ダウンロード、インストール&lt;/h1&gt;
&lt;p&gt;ソースからDL。まずはzlibそしてGitが必要。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://zlib.net/&quot;&gt;zlib Home Site&lt;/a&gt;&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ wget http://zlib.net/zlib-1.2.5.tar.gz
$ gunzip zlib-1.2.5.tar.gz 
$ tar xf zlib-1.2.5.tar 
$ cd zlib-1.2.5/
$ ./configure
$ make
$ sudo make install&lt;/pre&gt;
&lt;p&gt;&lt;a href=&quot;http://git-scm.com/&quot;&gt;Git&lt;/a&gt;&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ wget http://git-core.googlecode.com/files/git-1.7.7.4.tar.gz
$ gunzip git-1.7*
$ tar xf git -1.7*
$ cd git-1.7*
$ ./configure
$ make
$ sudo make install&lt;/pre&gt;
&lt;p&gt;&lt;a href=&quot;http://www.mplayerhq.hu/design7/dload.html&quot;&gt;MPlayer - The Movie Player&lt;/a&gt;&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ wget http://www.mplayerhq.hu/MPlayer/releases/mplayer-export-snapshot.tar.bz2
$ bunzip2 mplayer-export-*
$ tar xf mplayer-export-*
$ cd mplayer-export-*
$ ./configure --yasm=&#39;&#39;

# FFmpegをチェックアウトするのにGitが必要
No FFmpeg checkout, press enter to download one with git or CTRL+C to abort

Cloning into &#39;ffmpeg&#39;...

$ make 
$ sudo make install

$ which mplayer
/usr/local/bin/mplayer&lt;/pre&gt;
&lt;h1&gt;基本的な使い方&lt;/h1&gt;
&lt;pre class=&quot;&quot;&gt;$ mplayer URL -dumpstream -dumpfile OUTPUT&lt;/pre&gt;
&lt;p&gt;でOK。試しに落としてみる…。URLはwgetコマンドで引っ張ってくる。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ wget -O - http://origin.hibiki-radio.info/movie/asx/8/2080.asx
--2011-12-05 06:47:08--  http://origin.hibiki-radio.info/movie/asx/8/2080.asx
Resolving origin.hibiki-radio.info... 202.210.134.26
Connecting to origin.hibiki-radio.info|202.210.134.26|:80... connected.
HTTP request sent, awaiting response... 200 OK
Length: 216 [video/x-ms-asf]
Saving to: `STDOUT&#39;

 0% [                                                                       ] 0           --.-K/s              &amp;lt;ASX version=&amp;quot;3.0&amp;quot;&amp;gt;
    &amp;lt;TITLE&amp;gt;&amp;amp;#65533;~&amp;amp;#65533;&amp;amp;#65533;&amp;amp;#65533;L&amp;amp;#65533;B3 #33 11/29&amp;lt;/TITLE&amp;gt;
    &amp;lt;AUTHOR&amp;gt;&amp;lt;/AUTHOR&amp;gt;
    &amp;lt;COPYRIGHT&amp;gt;&amp;lt;/COPYRIGHT&amp;gt;
    &amp;lt;ENTRY&amp;gt;
        &amp;lt;REF HREF=&amp;quot;mms://wms.hibiki-radio.info/hibiki1004/8_0_2080.wmv&amp;quot; /&amp;gt;
    &amp;lt;/ENTRY&amp;gt;
&amp;lt;/ASX&amp;gt;
100%[======================================================================&amp;gt;] 216         --.-K/s   in 0s      

2011-12-05 06:47:08 (37.6 MB/s) - written to stdout [216/216]&lt;/pre&gt;
&lt;pre class=&quot;&quot;&gt;$ mplayer mms://wms.hibiki-radio.info/hibiki1004/8_0_2080.wmv -dumpstream -dumpfile milky.wmv
MPlayer SVN-r34393-snapshot-4.4.5 (C) 2000-2011 MPlayer Team

Playing mms://wms.hibiki-radio.info/hibiki1004/8_0_2080.wmv.
STREAM_ASF, URL: mms://wms.hibiki-radio.info/hibiki1004/8_0_2080.wmv
Resolving wms.hibiki-radio.info for AF_INET6...

Couldn&#39;t resolve name for AF_INET6: wms.hibiki-radio.info
Resolving wms.hibiki-radio.info for AF_INET...
Connecting to server wms.hibiki-radio.info[202.210.134.27]: 1755...

connect error: Connection timed out
Resolving wms.hibiki-radio.info for AF_INET6...

Couldn&#39;t resolve name for AF_INET6: wms.hibiki-radio.info
Resolving wms.hibiki-radio.info for AF_INET...
Connecting to server wms.hibiki-radio.info[202.210.134.27]: 80...
Resolving wms.hibiki-radio.info for AF_INET6...

Couldn&#39;t resolve name for AF_INET6: wms.hibiki-radio.info
Resolving wms.hibiki-radio.info for AF_INET...
Connecting to server wms.hibiki-radio.info[202.210.134.27]: 80...

Cache size set to 180 KBytes
Stream not seekable!
dump: 3502080 bytes written&lt;/pre&gt;
&lt;pre class=&quot;&quot;&gt;$ while : ; do date; ls -l mil*; sleep 1 ; done
Mon Dec  5 06:50:21 PST 2011
-rw-r--r-- 1 gosyujin gosyujin 946176 2011-12-05 06:50 milky.wmv
Mon Dec  5 06:50:22 PST 2011
-rw-r--r-- 1 gosyujin gosyujin 962560 2011-12-05 06:50 milky.wmv
Mon Dec  5 06:50:23 PST 2011
-rw-r--r-- 1 gosyujin gosyujin 970752 2011-12-05 06:50 milky.wmv
Mon Dec  5 06:50:24 PST 2011
-rw-r--r-- 1 gosyujin gosyujin 987136 2011-12-05 06:50 milky.wmv
Mon Dec  5 06:50:25 PST 2011
-rw-r--r-- 1 gosyujin gosyujin 1003520 2011-12-05 06:50 milky.wmv
Mon Dec  5 06:50:26 PST 2011
-rw-r--r-- 1 gosyujin gosyujin 1019904 2011-12-05 06:50 milky.wmv
Mon Dec  5 06:50:27 PST 2011
-rw-r--r-- 1 gosyujin gosyujin 1019904 2011-12-05 06:50 milky.wmv
Mon Dec  5 06:50:28 PST 2011
-rw-r--r-- 1 gosyujin gosyujin 1036288 2011-12-05 06:50 milky.wmv
Mon Dec  5 06:50:29 PST 2011
-rw-r--r-- 1 gosyujin gosyujin 1052672 2011-12-05 06:50 milky.wmv
Mon Dec  5 06:50:30 PST 2011
-rw-r--r-- 1 gosyujin gosyujin 1069056 2011-12-05 06:50 milky.wmv
Mon Dec  5 06:50:31 PST 2011
-rw-r--r-- 1 gosyujin gosyujin 1077248 2011-12-05 06:50 milky.wmv&lt;/pre&gt;
&lt;p&gt;もりもりDLなされている！　そしてちゃんと聞ける！&lt;/p&gt;
&lt;p&gt;&lt;del datetime=&quot;2011-12-18T09:35:51+09:00&quot;&gt;次回は毎週お目当てのファイルを探し当てる旅にでます。&lt;/del&gt;&lt;/p&gt;
&lt;h1&gt;次回&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;2011-12-17-1324168464&quot;&gt;2011-12-17-1324168464&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;その前にダウンロードしたファイルを変換する事に。&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>RedmineでプラグインインストールしたらTemplateErrorが出た</title>
   <link href="http://gosyujin.github.io/2011/12/05/1323092947"/>
   <updated>2011-12-05T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2011/12/05/1323092947</id>
   <content type="html">&lt;h1&gt;あらすじ&lt;/h1&gt;
&lt;p&gt;Redmineにプラグインをインストールした後で動かそうとしたらエラーが。&lt;/p&gt;
&lt;h1&gt;調査&lt;/h1&gt;
&lt;p&gt;下記の例はredmine_importerというCSVでチケット一括登録するプラグイン。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;ActionView::TemplateError (No plugin called &#39;redmine_importer&#39; - please use the full name of a loaded plugin.) on line #2 of vendor/plugins/idlysphere-redmine_importer-7a19e8d/app/views/importer/match.html.erb:
1: &amp;lt;% content_for :header_tags do %&amp;gt;
2:     &amp;lt;%= stylesheet_link_tag &#39;importer&#39;, :plugin =&amp;gt; &#39;redmine_importer&#39; %&amp;gt;
3: &amp;lt;% end %&amp;gt;
4:
5: &amp;lt;h2&amp;gt;&amp;lt;%= l(:label_match_columns) %&amp;gt;&amp;lt;/h2&amp;gt;

    vendor/plugins/idlysphere-redmine_importer-7a19e8d/app/views/importer/match.html.erb:2
    app/helpers/application_helper.rb:764:in `content_for&#39;
    vendor/plugins/idlysphere-redmine_importer-7a19e8d/app/views/importer/match.html.erb:1
    /usr/local/lib/ruby/1.8/webrick/httpserver.rb:104:in `service&#39;
    /usr/local/lib/ruby/1.8/webrick/httpserver.rb:65:in `run&#39;
    /usr/local/lib/ruby/1.8/webrick/server.rb:173:in `start_thread&#39;
    /usr/local/lib/ruby/1.8/webrick/server.rb:162:in `start&#39;
    /usr/local/lib/ruby/1.8/webrick/server.rb:162:in `start_thread&#39;
    /usr/local/lib/ruby/1.8/webrick/server.rb:95:in `start&#39;
    /usr/local/lib/ruby/1.8/webrick/server.rb:92:in `each&#39;
    /usr/local/lib/ruby/1.8/webrick/server.rb:92:in `start&#39;
    /usr/local/lib/ruby/1.8/webrick/server.rb:23:in `start&#39;
    /usr/local/lib/ruby/1.8/webrick/server.rb:82:in `start&#39;

Rendering /usr/local/redmine-1.0.0/public/500.html (500 Internal Server Error)&lt;/pre&gt;
&lt;p&gt;redmine_importerが呼ばれていないようだ。いろいろ変えて判明した原因としては、このエラープラグインフォルダ名が「redmine_importer」になってなかったかららしい。&lt;/p&gt;
&lt;h1&gt;原因&lt;/h1&gt;
&lt;p&gt;なんでこんなエラー出したかというと、GitHubからソースを落としてくると「ユーザ名-プロジェクト名-リビジョン」というフォルダ名(？)になるのだが、これをそのままvendor/plugin下に突っ込んでしまったためredmine_importerがないといわれているようだ。リネームしてから移動することで解決する？&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>複数のRuby環境の管理・切替ができるrvmをインストールした</title>
   <link href="http://gosyujin.github.io/2011/12/04/1323009249"/>
   <updated>2011-12-04T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2011/12/04/1323009249</id>
   <content type="html">&lt;h1&gt;あらすじ&lt;/h1&gt;
&lt;p&gt;先にWindowsにてRubyのバージョン管理ができるpikをインストールしていたので、今度はWindows以外にrvmをインストールする。&lt;/p&gt;
&lt;h1&gt;参考サイト&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://rvm.beginrescueend.com/rvm/install&quot;&gt;https://rvm.beginrescueend.com/rvm/install&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://www.machu.jp/diary/20110521.html#p01&quot;&gt;rvm 入門 … 複数バージョンの Ruby と Rails を混在させる - まちゅダイアリー(2011-05-21)&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://d.hatena.ne.jp/mirakui/20100502/1272849327&quot;&gt;rvm: 複数のRubyを共存させる最新のやり方 - 昼メシ物語&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;まとめ&lt;/h1&gt;
&lt;p&gt;とりあえず以下のコマンドを覚える。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;rvm list known&lt;ul&gt;&lt;li&gt;インストールできるRubyの一覧&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;rvm list&lt;ul&gt;&lt;li&gt;インストールしているRubyの一覧&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;rvm install x.x.x&lt;ul&gt;&lt;li&gt;インストール&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;rvm use x.x.x&lt;ul&gt;&lt;li&gt;Rubyの切り替え&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;事前準備&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;既にインストールされていたRubyは全部消した。&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;手順&lt;/h1&gt;
&lt;p&gt;インストールのため下記コマンドをうつ。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ bash &amp;lt; &amp;lt;(curl -s https://raw.github.com/wayneeseguin/rvm/master/binscripts/rvm-installer )&lt;/pre&gt;
&lt;p&gt;ホームディレクトリに.rvmが生成される。list knownでインストールできるRuby一覧が表示される。&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;deco&quot; style=&quot;color:#FF0000;&quot;&gt;(2012/04/07追記)&lt;/span&gt;command not foundが出る場合はPATHが通ってない。&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Installing RVM to /Users/kk_Ataka/.rvm/&lt;/p&gt;&lt;p&gt;    Adding rvm PATH line to /Users/kk_Ataka/.bashrc /Users/kk_Ataka/.zshrc.&lt;/p&gt;&lt;p&gt;    RVM sourcing line found in /Users/kk_Ataka/.bashrc.&lt;/p&gt;&lt;/blockquote&gt;
&lt;pre class=&quot;&quot;&gt;$ rvm list known
# MRI Rubies
[ruby-]1.8.6[-p420]
[ruby-]1.8.6-head
[ruby-]1.8.7[-p352]
[ruby-]1.8.7-head
[ruby-]1.9.1-p378
[ruby-]1.9.1[-p431]
[ruby-]1.9.1-head
[ruby-]1.9.2-p180
[ruby-]1.9.2[-p290]
[ruby-]1.9.2-head
[ruby-]1.9.3-preview1
[ruby-]1.9.3-rc1
[ruby-]1.9.3[-p0]
[ruby-]1.9.3-head
ruby-head

# GoRuby
goruby

# JRuby
jruby-1.2.0
jruby-1.3.1
jruby-1.4.0
jruby-1.6.1
jruby-1.6.2
jruby-1.6.3
jruby-1.6.4
jruby[-1.6.5]
jruby-head

# Rubinius
rbx-1.0.1
rbx-1.1.1
rbx-1.2.3
rbx-1.2.4
rbx[-head]
rbx-2.0.0pre

# Ruby Enterprise Edition
ree-1.8.6
ree[-1.8.7][-2011.03]
ree-1.8.6-head
ree-1.8.7-head

# Kiji
kiji

# MagLev
maglev[-head]
maglev-1.0.0

# Mac OS X Snow Leopard Only
macruby[-0.10]
macruby-nightly
macruby-head

# IronRuby -- Not implemented yet.
ironruby-0.9.3
ironruby-1.0-rc2
ironruby-head&lt;/pre&gt;
&lt;p&gt;とりあえず1.8系のために1.8.7、1.9系のために1.9.3をインストールする。installコマンドを使う。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ rvm install ruby-1.8.7
Installing Ruby from source to: /Users/kk_Ataka/.rvm/rubies/ruby-1.8.7-p352, this may take a while depending on your cpu(s)...

ruby-1.8.7-p352 - #fetching
ruby-1.8.7-p352 - #downloading ruby-1.8.7-p352, this may take a while depending on your connection...
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100 4108k  100 4108k    0     0  1718k      0  0:00:02  0:00:02 --:--:-- 2576k
ruby-1.8.7-p352 - #extracting ruby-1.8.7-p352 to /Users/kk_Ataka/.rvm/src/ruby-1.8.7-p352
ruby-1.8.7-p352 - #extracted to /Users/kk_Ataka/.rvm/src/ruby-1.8.7-p352
Applying patch &#39;stdout-rouge-fix&#39; (located at /Users/kk_Ataka/.rvm/patches/ruby/1.8.7/stdout-rouge-fix.patch)
ruby-1.8.7-p352 - #configuring
ruby-1.8.7-p352 - #compiling
ruby-1.8.7-p352 - #installing
Retrieving rubygems-1.8.10
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100  243k  100  243k    0     0   533k      0 --:--:-- --:--:-- --:--:-- 1113k
Extracting rubygems-1.8.10 ...
Removing old Rubygems files...
Installing rubygems-1.8.10 for ruby-1.8.7-p352 ...
Installation of rubygems completed successfully.
ruby-1.8.7-p352 - adjusting #shebangs for (gem irb erb ri rdoc testrb rake).
ruby-1.8.7-p352 - #importing default gemsets (/Users/kk_Ataka/.rvm/gemsets/)
Install of ruby-1.8.7-p352 - #complete&lt;/pre&gt;
&lt;pre class=&quot;&quot;&gt;$ rvm install ruby-1.9.3
Installing Ruby from source to: /Users/kk_Ataka/.rvm/rubies/ruby-1.9.3-p0, this may take a while depending on your cpu(s)...

ruby-1.9.3-p0 - #fetching
ruby-1.9.3-p0 - #downloading ruby-1.9.3-p0, this may take a while depending on your connection...
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100 9330k  100 9330k    0     0  1775k      0  0:00:05  0:00:05 --:--:-- 2094k
ruby-1.9.3-p0 - #extracting ruby-1.9.3-p0 to /Users/kk_Ataka/.rvm/src/ruby-1.9.3-p0
ruby-1.9.3-p0 - #extracted to /Users/kk_Ataka/.rvm/src/ruby-1.9.3-p0
Fetching yaml-0.1.4.tar.gz to /Users/kk_Ataka/.rvm/archives
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100  460k  100  460k    0     0   155k      0  0:00:02  0:00:02 --:--:--  261k
Extracting yaml-0.1.4.tar.gz to /Users/kk_Ataka/.rvm/src
Configuring yaml in /Users/kk_Ataka/.rvm/src/yaml-0.1.4.
Compiling yaml in /Users/kk_Ataka/.rvm/src/yaml-0.1.4.
Installing yaml to /Users/kk_Ataka/.rvm/usr
ruby-1.9.3-p0 - #configuring
ruby-1.9.3-p0 - #compiling
ruby-1.9.3-p0 - #installing
Removing old Rubygems files...
Installing rubygems-1.8.10 for ruby-1.9.3-p0 ...
Installation of rubygems completed successfully.
ruby-1.9.3-p0 - adjusting #shebangs for (gem irb erb ri rdoc testrb rake).
ruby-1.9.3-p0 - #importing default gemsets (/Users/kk_Ataka/.rvm/gemsets/)
Install of ruby-1.9.3-p0 - #complete&lt;/pre&gt;
&lt;p&gt;gemは最新版？　が入ってしまった。&lt;/p&gt;
&lt;p&gt;※ところで、rvmでインストールしたRubyたちは~/.rvm/rubies下に入れられていく。Ruby切り替え時にパスなんかをセットしてくれるスクリプトが.rvm/scriptの下にあるのでシェル起動時に実行してくれるようにする必要がある。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://d.hatena.ne.jp/mirakui/20100502/1272849327&quot;&gt;rvm: 複数のRubyを共存させる最新のやり方 - 昼メシ物語&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;if [[ -s .rvm/scripts/rvm ]] ; then source .rvm/scripts/rvm ; fi&lt;/pre&gt;
&lt;p&gt;インストールしたRubyはlistコマンドで確認できる。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ rvm list

rvm rubies

   ruby-1.8.7-p352 [ i686 ]
   ruby-1.9.3-p0 [ x86_64 ]
&lt;/pre&gt;
&lt;p&gt;Rubyを切り替えるときはuseコマンドを使う。1.8に切り替え。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ rvm use 1.8.7
Using /Users/kk_Ataka/.rvm/gems/ruby-1.8.7-p352&lt;/pre&gt;
&lt;pre class=&quot;&quot;&gt;$ rvm list

rvm rubies

=&amp;gt; ruby-1.8.7-p352 [ i686 ]
   ruby-1.9.3-p0 [ x86_64 ]&lt;/pre&gt;
&lt;pre class=&quot;&quot;&gt;$ ruby -v
ruby 1.8.7 (2011-06-30 patchlevel 352) [i686-darwin10.8.0]&lt;/pre&gt;
&lt;p&gt;.rvm/rubies/ruby-1.8.7xxx/bin下のものを使っている。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ which ruby
/Users/kk_Ataka/.rvm/rubies/ruby-1.8.7-p352/bin/ruby&lt;/pre&gt;
&lt;pre class=&quot;&quot;&gt;$ which gem
/Users/kk_Ataka/.rvm/rubies/ruby-1.8.7-p352/bin/gem&lt;/pre&gt;
&lt;pre class=&quot;&quot;&gt;$ gem -v
1.8.10&lt;/pre&gt;
&lt;p&gt;bundlerとrakeはデフォルトで入っている模様。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ gem list

*** LOCAL GEMS ***

bundler (1.0.21 ruby)
rake (0.9.2)&lt;/pre&gt;
&lt;p&gt;次は1.9に切り替え。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ rvm use 1.9.3
Using /Users/kk_Ataka/.rvm/gems/ruby-1.9.3-p0&lt;/pre&gt;
&lt;pre class=&quot;&quot;&gt;$ rvm list

rvm rubies

   ruby-1.8.7-p352 [ i686 ]
=&amp;gt; ruby-1.9.3-p0 [ x86_64 ]
&lt;/pre&gt;
&lt;pre class=&quot;&quot;&gt;$ ruby -v
ruby 1.9.3p0 (2011-10-30 revision 33570) [x86_64-darwin10.8.0]&lt;/pre&gt;
&lt;p&gt;きちんと1.9に切り替わっている。パスも。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ which ruby
/Users/kk_Ataka/.rvm/rubies/ruby-1.9.3-p0/bin/ruby&lt;/pre&gt;
&lt;pre class=&quot;&quot;&gt;$ which gem
/Users/kk_Ataka/.rvm/rubies/ruby-1.9.3-p0/bin/gem&lt;/pre&gt;
&lt;pre class=&quot;&quot;&gt;$ gem -v
1.8.10&lt;/pre&gt;
&lt;pre class=&quot;&quot;&gt;$ gem list

*** LOCAL GEMS ***

bundler (1.0.21 ruby)
rake (0.9.2)&lt;/pre&gt;
&lt;p&gt;rvm listで&quot;=&gt;&quot;の矢印ができていれば切り替え成功。&lt;/p&gt;
&lt;p&gt;切り替えたのに矢印が出ていなかったら、rvm導入前に既にインストールしているRubyが優先的に見られている？&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f1&quot; title=&quot;ただ、rvm環境以外のRubyとも行き来ができる(rvm system)らしいのでよくわからん。&quot; name=&quot;fn1&quot;&gt;*1&lt;/a&gt;&lt;/span&gt;　pikでやらかした時みたいにパスがうまく書き換わっていないという凡ミスをしている可能性があるかもしれない。&lt;/p&gt;
&lt;h1&gt;今後&lt;/h1&gt;
&lt;p&gt;rvmには一つのRubyバージョンに対して複数のgem環境を持たせることもできるらしい。1.8.7のtest環境用とかRails動かす用みたいな感じで。これはまた今度学ぶ。&lt;/p&gt;
&lt;div class=&quot;footnote&quot;&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn1&quot; name=&quot;f1&quot;&gt;*1&lt;/a&gt;: ただ、rvm環境以外のRubyとも行き来ができる(rvm system)らしいのでよくわからん。&lt;/p&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>Macで現在の入力モードを判別しやすくするImageUpをインストールした</title>
   <link href="http://gosyujin.github.io/2011/12/03/1322922769"/>
   <updated>2011-12-03T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2011/12/03/1322922769</id>
   <content type="html">&lt;h1&gt;あらすじ&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;全角文字を入力しようとしたら半角文字を入力してしまってctrl+h連打…&lt;/li&gt;&lt;li&gt;入力ソース切り替え時に表示されるウィンドウは、プライマリディスプレイにしか表示されないのでセカンダリディスプレイ見ていると確認するのがめんどい&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20111203121354&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20111203/20111203121354.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;右上の現在のモードも見るのがめんどい&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20111203121510&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20111203/20111203121510.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;一目で今どっちのモードなのかわかることができないだろうかと探したところ、ImageUpというツールでできるらしい。のでメモ。&lt;/p&gt;
&lt;h1&gt;サイト&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;http://software.cockscomb.info/imageup/&quot;&gt;ImageUp&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;できること&lt;/h1&gt;
&lt;p&gt;設定次第でいろいろできるようだけど、とりあえずColor Extraというテーマだと以下のようになる。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;バーの色変え&lt;ul&gt;&lt;li&gt;全角の場合&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20111203121514&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20111203/20111203121514.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;&lt;ul&gt;&lt;li&gt;半角の場合&lt;/li&gt;&lt;/ul&gt;&lt;/ol&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20111203121513&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20111203/20111203121513.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;画面の上下に色線つけ&lt;ul&gt;&lt;li&gt;全角の場合&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20111203121514&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20111203/20111203121514.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20111203121515&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20111203/20111203121515.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;&lt;ul&gt;&lt;li&gt;半角の場合&lt;/li&gt;&lt;/ul&gt;&lt;/ol&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20111203121513&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20111203/20111203121513.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20111203121516&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20111203/20111203121516.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;マウスカーソルの側に入力ソース表示&lt;ul&gt;&lt;li&gt;全角の場合&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20111203121511&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20111203/20111203121511.png&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;&lt;ul&gt;&lt;li&gt;半角の場合&lt;/li&gt;&lt;/ul&gt;&lt;/ol&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20111203121512&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20111203/20111203121512.png&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;このマウスカーソルの側に出してもらえるのが非常に便利すぎた。これでもう全角半角確認はしなくてOKになりそうだ！&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Sphinxでドキュメントを書くためreST記法に入門した</title>
   <link href="http://gosyujin.github.io/2011/12/02/1322839748"/>
   <updated>2011-12-02T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2011/12/02/1322839748</id>
   <content type="html">&lt;h1&gt;あらすじ&lt;/h1&gt;
&lt;p&gt;Sphinxを導入した時にまとめたreST(reStructuredText)記法をアウトプットしよう。まだリファレンス読み込んでおらず、感覚で使っているところもあるので間違った認識もあるかも…そこは学んだら追記しよう。&lt;/p&gt;
&lt;h1&gt;参考&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://sphinx.shibu.jp/&quot;&gt;Overview — Sphinx v1.0 (hg) documentation&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://docutils.sourceforge.net/rst.html&quot;&gt;reStructuredText&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;基本的にSphinxのサイトに書いてあることを写経してます。&lt;/p&gt;
&lt;h1&gt;注意&lt;/h1&gt;
&lt;p&gt;見出しの文字数より少なくならないように上下囲む、とかテーブルは列・行を合わせるとか結構シビアな書き方が求められるのですが……pre記法にしても揃ってない…！&lt;/p&gt;
&lt;h1&gt;見出し系&lt;/h1&gt;
&lt;p&gt;&lt;span class=&quot;deco&quot; style=&quot;color:#FF0000;&quot;&gt;間違って覚えていたので、見出し系については&lt;a href=&quot;2012-08-16-1345124098&quot;&gt;2012-08-16-1345124098&lt;/a&gt;を参照。&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;h1見出し&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;半角イコールで上下を&lt;span class=&quot;deco&quot; style=&quot;font-weight:bold;&quot;&gt;揃えて囲む&lt;/span&gt;とh1と同等。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;      =========================
      rst(reStructuredText)解説
      =========================&lt;/pre&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20111203000832&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20111203/20111203000832.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;deco&quot; style=&quot;color:#FF0000;&quot;&gt;見出しより長くしても問題ないが、見出しより短いと警告される。(Title underline too short.):&lt;/span&gt;&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;      ===========================
      怒られない
      ===========================&lt;/pre&gt;
&lt;pre class=&quot;&quot;&gt;      ==
      怒られる
      ==&lt;/pre&gt;
&lt;p&gt;&lt;span class=&quot;deco&quot; style=&quot;color:#FF0000;&quot;&gt;以下の見出しも同様。&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;h2見出し&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;下だけ半角イコールでh2と同等。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;      &amp;lt;h2&amp;gt;になる
      ==========&lt;/pre&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20111203000826&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20111203/20111203000826.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;h3見出し&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;ハイフンで上下囲むとh3と同等。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;      ----------
      &amp;lt;h3&amp;gt;になる
      ----------&lt;/pre&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20111203000827&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20111203/20111203000827.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;h4見出し&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;下だけハイフンでh4と同等。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;      &amp;lt;h4&amp;gt;になる
      ----------&lt;/pre&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20111203000828&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20111203/20111203000828.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;リスト系&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;箇条書きリスト&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;箇条書きリストの項目。ハイフンで定義。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;      - りんご
      - きのこ
              - パワーアップ用
              - 1UP用
      - みかん&lt;/pre&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20111202231941&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20111202/20111202231941.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;数字つきリスト&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;数字つきリストの項目。数字・アルファベット等と半角の閉じ括弧で定義。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;      1) りんご
      2) きのこ
              a) パワーアップ用
                      i) 毒きのこ
              b) 1UP用
      3) みかん&lt;/pre&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20111202231922&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20111202/20111202231922.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;また、閉じ括弧 は . でもよい様子。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;数字つきリストの項目2&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;シャープで自動発番してくれる。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;      #. りんご
      #. きのこ
              #. パワーアップ用
                      #. 毒きのこ
              #. 1UP用
      #. みかん&lt;/pre&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20111202231923&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20111202/20111202231923.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;定義項目&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;&lt;span class=&quot;deco&quot; style=&quot;font-weight:bold;&quot;&gt;一個改行して&lt;/span&gt;インデント。二個改行してインデントすると字下げになる。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;      キノコ
              食べてパワーアップする
      スター
              一定時間無敵になる&lt;/pre&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20111202231924&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20111202/20111202231924.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;装飾系&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;イタリック体&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;アスタリスクで囲んでイタリック体。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;      *アスタリスクで囲んでイタリック体*&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;ボールド体&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;アスタリスク2つで囲んでボールド体。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;      **アスタリスク2つで囲んでボールド体**&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;そのまま表示&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;`` ``で囲んだ文字をそのまま表示。アスタリスクで囲んでもイタリック体にならない。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;      ``*囲んだ文字をそのまま表示*アスタリスクで囲んでもイタリック体にならない``&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;リンク&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;リンクにしたい文字の後ろ _ をつけ、 別の場所でリンクの定義をする。リンク内にスペースが必要な時は` `でくくる。普通の文字とリンク文字の間にはスペースあけがいるようだ。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;      リンクその1 ggrks_ と やふれかす_ リンク内にスペースが必要な時はくくる `やふれ　かす`_
      .. _ggrks: http://www.google.com/
      .. _やふれかす: http://www.yahoo.co.jp/
      .. _やふれ　かす: http://www.yahoo.co.jp/&lt;/pre&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20111202231925&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20111202/20111202231925.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;リンクその2&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;こういう書き方もある。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;      `グーグル`__ に
      __ http://www.google.com/&lt;/pre&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20111202231926&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20111202/20111202231926.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;リンクその3&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;URL直打ちも実はリンクになる。&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f1&quot; title=&quot;これが一番簡単？&quot; name=&quot;fn1&quot;&gt;*1&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20111202231927&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20111202/20111202231927.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;テーブル&lt;/h1&gt;
&lt;p&gt;半角イコールと半角ハイフンで作れる。イコールで囲んだ行が見出しとなる。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20111203000829&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20111203/20111203000829.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20111202231928&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20111202/20111202231928.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;deco&quot; style=&quot;font-weight:bold;&quot;&gt;きちんと列と行を揃える&lt;/span&gt;必要がある。これがめんどくさいんだよなあ。なんか楽にテーブル組める方法はないんだろうか。&lt;/p&gt;
&lt;p&gt;カラム幅の割合をスペースの量で調整する事もできる。一つ前のテーブルよりも1列目が広い。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20111203000830&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20111203/20111203000830.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20111202231929&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20111202/20111202231929.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;また、半角プラスと半角パイプで枠を作ってテーブルにする事もできる。イコールの上が見出しとなる。これも作るのめんどい？&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20111203000831&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20111203/20111203000831.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20111202231930&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20111202/20111202231930.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;文章系&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;基本的な事&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;途中の改行は無視される。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;          途中の改行は
          無視される&lt;/pre&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20111202231931&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20111202/20111202231931.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;二行以上改行してからタブで字下げ。タブを戻したら字下げから復帰。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;          タブでインデントをかけると字下げされる

                  この行字下げしてます

          字下げなおしました&lt;/pre&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20111202231932&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20111202/20111202231932.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;※二行以上改行してから字下げしないと定義分になる。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;              ※改行してから字下げしないと定義分になる
                      こんなふうに
&lt;/pre&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20111202231933&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20111202/20111202231933.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;整形済みテキスト&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;文末にコロン2つ。で次の文章をインデントするといわゆるpreタグに。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;        いわゆる&amp;lt;pre&amp;gt;タグ。今までずっと使ってきてる::

                コロン二つのあと字下げで使う？
                改行も
                        字下げも
                *文字装飾*も**そのまま表示される**

        字下げを戻せば終了&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;脚注&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;脚注は [#]_ で定義。別の場所で脚注の説明。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;    脚注 [#]_ はこう
    連番 [#]_ で触れる

    .. [#] ただしイケメンに限る
    .. [#] 連番&lt;/pre&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20111202231934&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20111202/20111202231934.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20111202231935&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20111202/20111202231935.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;引用&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;引用は [引用内容] で定義。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;    引用 [reference]_ はこう

    .. [reference] Google先生より&lt;/pre&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20111202231936&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20111202/20111202231936.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20111202231937&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20111202/20111202231937.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;置換&lt;/li&gt;&lt;/ul&gt;
&lt;table&gt;&lt;tr&gt;&lt;td&gt;変数&lt;/td&gt;&lt;td&gt;を定義して、 ..&lt;/td&gt;&lt;td&gt;変数&lt;/td&gt;&lt;td&gt;replaceで置換。&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;pre class=&quot;&quot;&gt;    ここ置換してね |rep| 。あとここも |rep| ::

    .. |rep| replace:: ★ちかん★&lt;/pre&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20111202231938&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20111202/20111202231938.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;ディレクティブ&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;コンテンツ表示&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;Sphinxページ最上部にコンテンツ一覧を表示できる。:&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;      .. contents::&lt;/pre&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20111202231939&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20111202/20111202231939.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;ナビゲーション&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;スタート &gt; 全ての... &gt; MS &gt; Excel のような表記を表現できる。:&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;      スタート &amp;gt; 全ての... &amp;gt; MS &amp;gt; Excel のような表記を :menuselection:`スタート --&amp;gt; 全ての... --&amp;gt; MS --&amp;gt; Excel` こう表記できる&lt;/pre&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20111202231940&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20111202/20111202231940.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;footnote&quot;&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn1&quot; name=&quot;f1&quot;&gt;*1&lt;/a&gt;: これが一番簡単？&lt;/p&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>DAT装置の使い方 超簡易版(Solaris)</title>
   <link href="http://gosyujin.github.io/2011/12/01/1322746718"/>
   <updated>2011-12-01T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2011/12/01/1322746718</id>
   <content type="html">&lt;h1&gt;あらすじ&lt;/h1&gt;
&lt;p&gt;結局はtarコマンド+αなんだけど、どうもDAT装置とテープというデバイスが使い慣れないので操作方法をメモしておく。とりあえず&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;状態確認&lt;/li&gt;&lt;li&gt;何も考えずに書き込み&lt;/li&gt;&lt;li&gt;全部取り出し&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;くらい。&lt;/p&gt;
&lt;h1&gt;コマンド&lt;/h1&gt;
&lt;p&gt;使用するコマンドはmt(磁気テープの制御)とtar。まずはmt。&lt;/p&gt;
&lt;h2&gt;テープの状態表示&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;-fオプションでテープデバイスの指定&lt;/li&gt;&lt;li&gt;/dev/rmt/0はテープデバイスのパス&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;$ mt -f /dev/rmt/0 status&lt;/pre&gt;
&lt;h2&gt;テープの巻き戻し&lt;/h2&gt;
&lt;p&gt;今回は使わなかった。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ mt -f /dev/rmt/0 rewind&lt;/pre&gt;
&lt;h2&gt;テープの取り出し&lt;/h2&gt;
&lt;p&gt;データの取り出しではなく、DAT装置からの取り出し。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ mt -f /dev/rmt/0 offline&lt;/pre&gt;
&lt;p&gt;ここからtar。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;fオプションはtarファイル引数の指定。&lt;ul&gt;&lt;li&gt;fを省略した場合は$TAPE(設定されている場合)&lt;/li&gt;&lt;li&gt;$TAPEもない場合は/etc/default/tarを見に行く&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f1&quot; title=&quot;必ずf指定してたからこれは知らなかった&quot; name=&quot;fn1&quot;&gt;*1&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;vオプションはファイル名の出力&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;テープの内容を表示&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;tオプションは指定されたtarファイルの内容一覧表示&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;$ tar tvf /dev/rmt/0&lt;/pre&gt;
&lt;p&gt;tオプションで表示される内容はこんな感じ。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ tar tf test.tar
test/aaa.txt
...&lt;/pre&gt;
&lt;p&gt;vオプションと併用すると詳細に。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ tar tvf openssl-xxx.tar
-rw-r--r--   9/9    99999  3月 19日 22:22 2011年 test/aaa.txt
...&lt;/pre&gt;
&lt;h2&gt;テープへ書き込み&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;cオプションは作成&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;$ tar cvf /dev/rmt/0 FILE&lt;/pre&gt;
&lt;h2&gt;テープ内データの取り出し&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;xオプションはファイルの抽出、復元。テープに入ったデータがそのまま復元される&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;$ tar xvf /dev/rmt/0&lt;/pre&gt;
&lt;p&gt;テープに/tmp/AAA.tarが書き込まれている場合、上記コマンドを実行すると/tmp/下に復元する。&lt;/p&gt;
&lt;div class=&quot;footnote&quot;&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn1&quot; name=&quot;f1&quot;&gt;*1&lt;/a&gt;: 必ずf指定してたからこれは知らなかった&lt;/p&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>rvm環境でRuby実行時にReadlineエラーが起きた時の対処法</title>
   <link href="http://gosyujin.github.io/2011/11/30/1322662743"/>
   <updated>2011-11-30T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2011/11/30/1322662743</id>
   <content type="html">&lt;p&gt;タイトル通り。さくらVPS(CentOS)にrvmでRubyをインストールし、Heroku環境を構築しようとしたらReadlineエラーが起きた。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ rvm install 1.9.2
(略)
$ rvm use 1.9.2
$ gem install heroku
(略)
$ heroku
/home/kk_Ataka/.rvm/rubies/ruby-1.9.2-p290/lib/ruby/site_ruby/1.9.1/rubygems/custom_require.rb:36:in `require&#39;: no such file to load -- readline (LoadError)
     from /home/kk_Ataka/.rvm/rubies/ruby-1.9.2-p290/lib/ruby/site_ruby/1.9.1/rubygems/custom_require.rb:36:in `require&#39;
     from /home/kk_Ataka/.rvm/gems/ruby-1.9.2-p290/gems/heroku-2.14.0/lib/heroku/command/run.rb:1:in `&amp;lt;top (required)&amp;gt;&#39;
     from /home/kk_Ataka/.rvm/rubies/ruby-1.9.2-p290/lib/ruby/site_ruby/1.9.1/rubygems/custom_require.rb:36:in `require&#39;
     from /home/kk_Ataka/.rvm/rubies/ruby-1.9.2-p290/lib/ruby/site_ruby/1.9.1/rubygems/custom_require.rb:36:in `require&#39;
     from /home/kk_Ataka/.rvm/gems/ruby-1.9.2-p290/gems/heroku-2.14.0/lib/heroku/command.rb:17:in `block in load&#39;
     from /home/kk_Ataka/.rvm/gems/ruby-1.9.2-p290/gems/heroku-2.14.0/lib/heroku/command.rb:16:in `each&#39;
     from /home/kk_Ataka/.rvm/gems/ruby-1.9.2-p290/gems/heroku-2.14.0/lib/heroku/command.rb:16:in `load&#39;
     from /home/kk_Ataka/.rvm/gems/ruby-1.9.2-p290/gems/heroku-2.14.0/bin/heroku:13:in `&amp;lt;top (required)&amp;gt;&#39;
     from /home/kk_Ataka/.rvm/gems/ruby-1.9.2-p290/bin/heroku:19:in `load&#39;
     from /home/kk_Ataka/.rvm/gems/ruby-1.9.2-p290/bin/heroku:19:in `&amp;lt;main&amp;gt;&#39;&lt;/pre&gt;
&lt;p&gt;readlineが入っていなかったのだろうか？&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ sudo yum install readline-devel
$ cd $rvm_path/src/RUBYVERSION/ext/readline
$ ruby extconf.rb
$ make
$ make install&lt;/pre&gt;
&lt;p&gt;オプション--with-readline-dir指定は特になくていけた。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://rvm.beginrescueend.com/packages/readline&quot;&gt;https://rvm.beginrescueend.com/packages/readline&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;opensslなども同じように解決できるみたい。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://d.hatena.ne.jp/kamm/20110119/1295433210&quot;&gt;heroku createをするとエラーになる（解決） - わたしのたまごやき&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://d.hatena.ne.jp/seiryo/20071213/1197545500&quot;&gt;ruby-openssl のインスコ問題は１行でイナフだった - Home And Dry&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</content>
 </entry>
 
 <entry>
   <title>pikでインストールしたRubyでbundle exec rubyしたらエラーになった 解決編</title>
   <link href="http://gosyujin.github.io/2011/11/29/1322569582"/>
   <updated>2011-11-29T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2011/11/29/1322569582</id>
   <content type="html">&lt;h1&gt;前回までのあらすじ&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;2011-11-28-1322482230&quot;&gt;2011-11-28-1322482230&lt;/a&gt;で出たRubyオプションのエラー。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ bundle exec ruby app.rb
ruby: invalid switch in RUBYOPT: -a (RuntimeError)&lt;/pre&gt;
&lt;p&gt;この-aオプションはどこから出てきたのかというと、&quot;Documents and Settings&quot;のaだという事がわかった。&lt;/p&gt;
&lt;h1&gt;結論&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;&lt;span class=&quot;deco&quot; style=&quot;color:#FF0000;&quot;&gt;Rubyのインストールパスにスペースを含めない&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&quot;deco&quot; style=&quot;color:#FF0000;&quot;&gt;pikでRubyをインストールする前にpik config install_dir=XXXでパス指定する&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;先に結論を書くと、やっぱりこうだった。以下、調査ログ。&lt;/p&gt;
&lt;h1&gt;調査&lt;/h1&gt;
&lt;p&gt;試しに以下のディレクトリに設置したRubyを使用しようとしたところ、下記のエラーが。(whichとか使えてるのはnyaosを使っているからです)&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;C:\rubies\Ru by\&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;$ which ruby
C:\rubies\Ru by\bin\ruby.exe
$ bundle exec ruby myapp.rb
ruby: illegal switch in RUBYOPT: -b (RuntimeError)&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;C:\rubies\R uby\&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;$ which ruby
C:\rubies\R uby\bin\ruby.exe
$ bundle exec ruby myapp.rb
ruby: illegal switch in RUBYOPT: -u (RuntimeError)&lt;/pre&gt;
&lt;p&gt;あぁやっぱりかー。&lt;/p&gt;
&lt;h1&gt;pikの設定変更&lt;/h1&gt;
&lt;p&gt;という事は、pik install時にデフォルトでDocuments and Settingsに入れられるのは避けなければならん。pikのhistoryにそれっぽいことが書いてあった。&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;=== 0.2.8 / 2010-06-22&lt;/p&gt;&lt;h1&gt;BACKWARD COMPATIBILITY CHANGE&lt;/h1&gt;&lt;p&gt;  pik will now install new rubies to %USERPROFILE%\rubies\, instead of %PIK_BIN%\pik\ this was necessary to all for installation into %PROGRAMFILES% dir. If you&#39;d like to keep the old path, run:&lt;/p&gt;&lt;p&gt;    &gt;pik config install_dir=C:\path\to\pik&lt;/p&gt;&lt;cite&gt;&lt;a href=&quot;https://github.com/vertiginous/pik/blob/master/History.txt&quot;&gt;https://github.com/vertiginous/pik/blob/master/History.txt&lt;/a&gt;&lt;/cite&gt;&lt;/blockquote&gt;
&lt;p&gt;なるほど。pik configコマンドでパスを指定するのか。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ pik config install_dir=C:\rubies\
$ pik config
** CURRENT CONFIGURATION **

187: ruby 1.8.7 (2010-12-23 patchlevel 330) [i386-mswin32] *
     path: C:\rubies\Ruby\bin

** GLOBAL CONFIGURATION **

---
install_dir: C:\rubies\&lt;/pre&gt;
&lt;p&gt;install_dirがセットされた。次にinstall。Rubyはとりあえず1.9.1を指定。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ pik install ruby 1.9.1
** Downloading:  http://rubyforge.org/frs/download.php/72076/ruby-1.9.1-p430-i386-mingw32.7z
   to:  C:\Documents and Settings\USERNAME\.pik\downloads\ruby-1.9.1-p430-i386-mingw32.7z

ruby-1.9.1-p430-i386-min...7z: 100% |oooooooooo|   4.7MB/  4.7MB Time: 00:01:11

** Extracting:  C:\Documents and Settings\USERNAME\.pik\downloads\ruby-1.9.1-p430-i386-mingw32.7z
   to:  C:\rubies\Ruby-191-p430
done

** Adding:  191: ruby 1.9.1p430 (2010-08-16 revision 28998) [i386-mingw32]
 Located at:  C:\rubies\Ruby-191-p430\bin&lt;/pre&gt;
&lt;p&gt;ダウンロードはUSERPROFILEか。でもインストール先はちゃんとinstall_dirになってる。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ pik list
 * 187: ruby 1.8.7 (2010-12-23 patchlevel 330) [i386-mswin32]
   187: ruby 1.8.7 (2011-06-30 patchlevel 352) [i386-mingw32]
   191: ruby 1.9.1p430 (2010-08-16 revision 28998) [i386-mingw32]
   193: ruby 1.9.3p0 (2011-10-30) [i386-mingw32]
$ pik use 1.9.1
$ pik list
   187: ruby 1.8.7 (2010-12-23 patchlevel 330) [i386-mswin32]
   187: ruby 1.8.7 (2011-06-30 patchlevel 352) [i386-mingw32]
 * 191: ruby 1.9.1p430 (2010-08-16 revision 28998) [i386-mingw32]
   193: ruby 1.9.3p0 (2011-10-30) [i386-mingw32]
$ which ruby
C:\rubies\Ruby-191-p430\bin\ruby.exe
$ ruby -v
ruby 1.9.1p430 (2010-08-16 revision 28998) [i386-mingw32]&lt;/pre&gt;
&lt;p&gt;1.9.1確認。%USERPROFILE%\.pik\config.ymlも更新されてた。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;--- 
&amp;quot;187: ruby 1.8.7 (2010-12-23 patchlevel 330) [i386-mswin32]&amp;quot;: 
  :path: !ruby/object:Pathname 
    path: C:/rubies/Ruby/bin
&amp;quot;187: ruby 1.8.7 (2011-06-30 patchlevel 352) [i386-mingw32]&amp;quot;: 
  :path: !ruby/object:Pathname 
    path: C:/rubies/Ruby-187-p352/bin
&amp;quot;191: ruby 1.9.1p430 (2010-08-16 revision 28998) [i386-mingw32]&amp;quot;: 
  :path: !ruby/object:Pathname 
    path: C:/rubies/Ruby-191-p430/bin
&amp;quot;193: ruby 1.9.3p0 (2011-10-30) [i386-mingw32]&amp;quot;: 
  :path: !ruby/object:Pathname 
    path: C:/rubies/Ruby-193-p0/bin
--- 
:install_dir: !ruby/object:Pathname 
  path: c:\rubies\&lt;/pre&gt;
&lt;p&gt;最後に実行してみ…なんじゃこりゃあーー！&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ bundle exec ruby test.rb
Error loading gem paths on load path in gem_prelude
can&#39;t modify frozen string
&amp;lt;internal:gem_prelude&amp;gt;:69:in `force_encoding&#39;
&amp;lt;internal:gem_prelude&amp;gt;:69:in `set_home&#39;
&amp;lt;internal:gem_prelude&amp;gt;:38:in `dir&#39;
&amp;lt;internal:gem_prelude&amp;gt;:76:in `set_paths&#39;
&amp;lt;internal:gem_prelude&amp;gt;:47:in `path&#39;
&amp;lt;internal:gem_prelude&amp;gt;:286:in `push_all_highest_version_gems_on_load_path&#39;
&amp;lt;internal:gem_prelude&amp;gt;:355:in `&amp;lt;compiled&amp;gt;&#39;
&amp;lt;internal:gem_prelude&amp;gt;:345:in `method_missing&#39;: undefined method `user_home&#39; for Gem:Module (NoMethodError)
        from C:/rubies/Ruby-191-p430/lib/ruby/gems/1.9.1/gems/bundler-1.0.21/lib/bundler/rubygems_integration.rb:57:in `user_home&#39;
        from C:/rubies/Ruby-191-p430/lib/ruby/gems/1.9.1/gems/bundler-1.0.21/lib/bundler/settings.rb:107:in `global_config_file&#39;
        from C:/rubies/Ruby-191-p430/lib/ruby/gems/1.9.1/gems/bundler-1.0.21/lib/bundler/settings.rb:6:in `initialize&#39;
        from C:/rubies/Ruby-191-p430/lib/ruby/gems/1.9.1/gems/bundler-1.0.21/lib/bundler.rb:185:in `new&#39;
        from C:/rubies/Ruby-191-p430/lib/ruby/gems/1.9.1/gems/bundler-1.0.21/lib/bundler.rb:185:in `settings&#39;
        from C:/rubies/Ruby-191-p430/lib/ruby/gems/1.9.1/gems/bundler-1.0.21/lib/bundler.rb:261:in `configure_gem_home_and_path&#39;
        from C:/rubies/Ruby-191-p430/lib/ruby/gems/1.9.1/gems/bundler-1.0.21/lib/bundler.rb:82:in `configure&#39;
        from C:/rubies/Ruby-191-p430/lib/ruby/gems/1.9.1/gems/bundler-1.0.21/lib/bundler.rb:136:in `definition&#39;
        from C:/rubies/Ruby-191-p430/lib/ruby/gems/1.9.1/gems/bundler-1.0.21/lib/bundler.rb:126:in `load&#39;
        from C:/rubies/Ruby-191-p430/lib/ruby/gems/1.9.1/gems/bundler-1.0.21/lib/bundler.rb:110:in `setup&#39;
        from C:/rubies/Ruby-191-p430/lib/ruby/gems/1.9.1/gems/bundler-1.0.21/lib/bundler/setup.rb:7:in `&amp;lt;top (required)&amp;gt;&#39;
        from C:\rubies\Ruby-191-p430\bin\ruby.exe:0:in `require&#39;&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://saikyoline.jp/weblog/2011/09/10/013622.html&quot;&gt;Ruby 1.9.1とrvmとエラー。 » サイキョウライン&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://d.hatena.ne.jp/sasaplus1/20110522/1306074417&quot;&gt;Rubyのインストールとか - 四角革命前夜&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://www.ruby-forum.com/topic/1832630&quot;&gt;[Ruby 1.9 - Bug #4809&lt;/a&gt;[Open] ruby1.9.1で GEM HOME をセットしていると常にエラーが発生する - Ruby Forum]&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;Ruby1.9.1の現象らしい…。1.9.2に切り替えて…。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ bundle exec ruby myapp.rb
[2011-11-29 13:45:14] INFO  WEBrick 1.3.1
[2011-11-29 13:45:14] INFO  ruby 1.9.2 (2011-07-09) [i386-mingw32]
== Sinatra/1.3.1 has taken the stage on 4567 for development with backup from WEBrick
[2011-11-29 13:45:14] INFO  WEBrick::HTTPServer#start: pid=4568 port=4567&lt;/pre&gt;
&lt;p&gt;ふぅ…いろんなことが起こりすぎた…。最後のエラーは置いといて、デフォルトでスペース入っているパスにインストールされると危ないな。&lt;/p&gt;
&lt;h1&gt;結論&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;&lt;span class=&quot;deco&quot; style=&quot;color:#FF0000;&quot;&gt;Rubyのインストールパスにスペースを含めない&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&quot;deco&quot; style=&quot;color:#FF0000;&quot;&gt;pikでRubyをインストールする前にpik config install_dir=XXXでパス指定する&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;大事なことだったので二回書いた。&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>pikでインストールしたRubyでbundle exec rubyしたらエラーになった</title>
   <link href="http://gosyujin.github.io/2011/11/28/1322482230"/>
   <updated>2011-11-28T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2011/11/28/1322482230</id>
   <content type="html">&lt;p&gt;&lt;span class=&quot;deco&quot; style=&quot;color:#FF0000;&quot;&gt;解決編 - &lt;a href=&quot;2011-11-29-1322569582&quot;&gt;2011-11-29-1322569582&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h1&gt;あらすじ&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;デフォルトのRubyからpikでインストールしたRubyに切り替えた後bundle exec rubyをしたら下記のようなエラーが出た&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;$ bundle exec ruby app.rb
ruby: invalid switch in RUBYOPT: -a (RuntimeError)&lt;/pre&gt;
&lt;p&gt;ン？　なんだこれ。&lt;/p&gt;
&lt;h1&gt;調査&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;pikでインストールしたRubyはバージョン等関係なしにことごとくこけた&lt;ul&gt;&lt;li&gt;1.8.7 patch352&lt;/li&gt;&lt;li&gt;1.9.3&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;デフォルトでインストールしたRubyでは無事起動した / 下記ログ&lt;ul&gt;&lt;li&gt;1.8.7 patch330&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;$ bundle exec ruby app.rb
[2011-11-28 19:31:55] INFO  WEBrick 1.3.1
[2011-11-28 19:31:55] INFO  ruby 1.8.7 (2010-12-23) [i386-mswin32]
== Sinatra/1.3.1 has taken the stage on 4567 for development with backup from WEBrick
[2011-11-28 19:31:55] INFO  WEBrick::HTTPServer#start: pid=964 port=4567&lt;/pre&gt;
&lt;p&gt;1.8.7同士でもこけたのと成功したのに分かれたので、gemが足りないのかなーとか思ったが、Bundlerでgem installし、ソースではgemを使っていないプロジェクトを作ってもダメだった。同じエラーだー。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ mkdir sample
$ cd sample&lt;/pre&gt;
&lt;p&gt;Gemfile作成。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;source :rubygems
source &amp;quot;http://rubygems.org&amp;quot;

gem &#39;pit&#39; # 適当に&lt;/pre&gt;
&lt;p&gt;test.rb作成。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;puts &amp;quot;Hello World!&amp;quot;&lt;/pre&gt;
&lt;p&gt;実行…。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ bundle install ./vendor/bundle
$ bundle exec ruby test.rb
ruby: invalid switch in RUBYOPT: -a (RuntimeError)&lt;/pre&gt;
&lt;p&gt;bundleを使わなければ通る。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ ruby test.rb
Hello World!&lt;/pre&gt;
&lt;p&gt;bundle exec rubyでこけてるのかなー？&lt;/p&gt;
&lt;h1&gt;ふりだしに戻る&lt;/h1&gt;
&lt;p&gt;よくわからないので、初めのエラーメッセージに帰ってみる。Rubyの-aオプションってなんだろう。&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;    `-n&#39;や`-p&#39;とともに用いて, オートスプリットモードをONにします。オートスプリットモードでは各ループの先頭で,&lt;/p&gt;&lt;p&gt;        $F = $_.split&lt;/p&gt;&lt;p&gt;    が実行されます。`-n&#39;か`-p&#39;オプションが同時に指定されない限り, このオプションは意味を持ちません。&lt;/p&gt;&lt;cite&gt;&lt;a href=&quot;http://doc.ruby-lang.org/ja/1.8.7/doc/spec=2frubycmd.html&quot;&gt;http://doc.ruby-lang.org/ja/1.8.7/doc/spec=2frubycmd.html&lt;/a&gt;&lt;/cite&gt;&lt;/blockquote&gt;
&lt;p&gt;nとpが出てきたな。&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;    このフラグがセットされるとプログラム全体が sed -nやawk のように&lt;/p&gt;&lt;p&gt;        while gets&lt;/p&gt;&lt;p&gt;         ...&lt;/p&gt;&lt;p&gt;        end&lt;/p&gt;&lt;p&gt;    で囲まれているように動作します.&lt;/p&gt;&lt;p&gt;    -nフラグとほぼ同じですが, 各ループの最後に変数 $_ の値を出力するようになります。&lt;/p&gt;&lt;p&gt;    例:&lt;/p&gt;&lt;p&gt;        % echo matz | ruby -p -e &#39;$_.tr! &quot;a-z&quot;, &quot;A-Z&quot;&#39;&lt;/p&gt;&lt;p&gt;        MATZ&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;？？？　今回のエラーとどうつながっているんだろう？&lt;/p&gt;
&lt;h1&gt;他に違う点がないか調べる&lt;/h1&gt;
&lt;p&gt;オプションがどんな原因に結びついているかわからなかったので、デフォルトRubyとpikRubyの相違点を探してみる事に。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;パッチバージョンが違っていた&lt;/li&gt;&lt;li&gt;インストールパスが違っていた&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;インストールパスかぁ。%USERPROFILE%/.pik/config.ymlにインストール先の定義が書いてあったのを見つけた。Ruby1.8.7 330が自分で入れたRubyで1.8.7 352と1.9.3がpikで入れたRuby。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;--- 
&amp;quot;187: ruby 1.8.7 (2010-12-23 patchlevel 330) [i386-mswin32]&amp;quot;: 
  :path: !ruby/object:Pathname 
    path: C:/ruby/bin
&amp;quot;187: ruby 1.8.7 (2011-06-30 patchlevel 352) [i386-mingw32]&amp;quot;: 
  :path: !ruby/object:Pathname 
    path: C:/Documents and Settings/USERNAME/.pik/rubies/Ruby-187-p352/bin
&amp;quot;193: ruby 1.9.3p0 (2011-10-30) [i386-mingw32]&amp;quot;: 
  :path: !ruby/object:Pathname 
    path: C:/Documents and Settings/USERNAME/.pik/rubies/Ruby-193-p0/bin
--- {}&lt;/pre&gt;
&lt;p&gt;並べて見てみると&quot;Documents and Settings&quot;が何か非常にイヤ～な感じだったのでちょっと動かしてみた。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;--- 
&amp;quot;187: ruby 1.8.7 (2010-12-23 patchlevel 330) [i386-mswin32]&amp;quot;: 
  :path: !ruby/object:Pathname 
    path: C:/ruby/bin
&amp;quot;187: ruby 1.8.7 (2011-06-30 patchlevel 352) [i386-mingw32]&amp;quot;: 
  :path: !ruby/object:Pathname 
    path: C:/rubies/Ruby-187-p352/bin
&amp;quot;193: ruby 1.9.3p0 (2011-10-30) [i386-mingw32]&amp;quot;: 
  :path: !ruby/object:Pathname 
    path: C:/Documents and Settings/USERNAME/.pik/rubies/Ruby-193-p0/bin
--- {}&lt;/pre&gt;
&lt;p&gt;Cドライブ直下に移動。さて…&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ bundle exec ruby test.rb
Hello World!&lt;/pre&gt;
&lt;p&gt;！？　うーん動いた…。&lt;/p&gt;
&lt;h1&gt;一旦まとめ&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;インストールディレクトリにProgram FilesとかDocuments and Settingsみたいなスペースが入っているパスを使わない&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;で、一旦解決という事で。。。根本的な原因はわからなかった。BundlerとPikのページでも見たら何かひらめくだろうか。pikのデフォルトディレクトリ変えたいなー。&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>LokkaをインストールしてHerokuにデプロイした</title>
   <link href="http://gosyujin.github.io/2011/11/27/1322329546"/>
   <updated>2011-11-27T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2011/11/27/1322329546</id>
   <content type="html">&lt;h1&gt;あらすじ&lt;/h1&gt;
&lt;p&gt;Herokuを使い出したのでLokkaを触ってみる。&lt;/p&gt;
&lt;h1&gt;参考サイト&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://lokka.org/getting-started&quot;&gt;Getting Started - Lokka&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;公式ページの手順だけでなんとかなりそう。&lt;/p&gt;
&lt;h1&gt;手順&lt;/h1&gt;
&lt;h2&gt;Lokka入手、インストール&lt;/h2&gt;
&lt;p&gt;LokkaをGitHubからCloneして、Bundle install。--withoutオプションでmysql, postgresql, sqliteから使わないDBを指定できる。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git clone git://github.com/komagata/lokka.git$ cd lokka
$ bundle install ./vendor/bundle --without development mysql sqlite&lt;/pre&gt;
&lt;p&gt;ん、何かエラッた。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;Gem::Installer::ExtensionBuildError: ERROR: Failed to build gem native extension.
(略)
Gem files will remain installed in /home/kk_Ataka/github/lokka/vendor/bundle/ruby/1.9.1/bundler/gems/do-d7cb262d89a1/do_postgres for inspection.
Results logged to /home/kk_Ataka/github/lokka/vendor/bundle/ruby/1.9.1/bundler/gems/do-d7cb262d89a1/do_postgres/ext/do_postgres/gem_make.out
An error occured while installing do_postgres (0.10.6), and Bundler cannot continue.
Make sure that `gem install do_postgres -v &#39;0.10.6&#39;` succeeds before bundling.&lt;/pre&gt;
&lt;p&gt;do_postgresがbundlerだとインストールできてない…？&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ gem install do_postgres
Fetching: addressable-2.2.6.gem (100%)
Fetching: data_objects-0.10.7.gem (100%)
Fetching: do_postgres-0.10.7.gem (100%)
Building native extensions.  This could take a while...
ERROR:  Error installing do_postgres:
     ERROR: Failed to build gem native extension.

        /home/kk_Ataka/.rvm/rubies/ruby-1.9.3-p0/bin/ruby extconf.rb
checking for main() in -lpq... no
checking for main() in -llibpq... no
*** extconf.rb failed ***
Could not create Makefile due to some reason, probably lack of
necessary libraries and/or headers.  Check the mkmf.log file for more
details.  You may need configuration options.&lt;/pre&gt;
&lt;p&gt;postgresが入っていなかったので入れる。&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;deco&quot; style=&quot;color:#FF0000;&quot;&gt;※やっぱりSQLite3でやることにしたため以下はメモ。&lt;/span&gt;&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ sudo yum install postgresql-devel
(略)
$ cd ~/.rvm/gems/ruby-1.9.3-p0/gems/do_postgres-0.10.7/ext/do_postgres
$ ruby extconf.rb
checking for main() in -lpq... yes
checking for libpq-fe.h... yes
checking for libpq/libpq-fs.h... yes
checking for postgres.h... yes
checking for mb/pg_wchar.h... yes
checking for catalog/pg_type.h... yes
checking for localtime_r()... yes
checking for gmtime_r()... yes
checking for PQsetClientEncoding()... yes
checking for pg_encoding_to_char()... yes
checking for PQfreemem()... yes
creating Makefile
$ make
linking shared-object do_postgres/do_postgres.so
$ make install
/usr/bin/install -c -m 0755 do_postgres.so /home/kk_Ataka/.rvm/rubies/ruby-1.9.3-p0/lib/ruby/site_ruby/1.9.1/x86_64-linux/do_postgres
installing default do_postgres libraries&lt;/pre&gt;
&lt;p&gt;&lt;span class=&quot;deco&quot; style=&quot;color:#FF0000;&quot;&gt;メモここまで。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Lokkaのディレクトリに戻って再度bundle install...。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;Gem::Installer::ExtensionBuildError: ERROR: Failed to build gem native extension.

        /home/kk_Ataka/.rvm/rubies/ruby-1.9.3-p0/bin/ruby extconf.rb
extconf.rb:10: Use RbConfig instead of obsolete and deprecated Config.
checking for libxml/parser.h... no
-----
libxml2 is missing.  please visit http://nokogiri.org/tutorials/installing_nokogiri.html for help with installing dependencies.
-----
*** extconf.rb failed ***
Could not create Makefile due to some reason, probably lack of
necessary libraries and/or headers.  Check the mkmf.log file for more
details.  You may need configuration options.

(略)

Gem files will remain installed in /home/kk_Ataka/github/lokka/vendor/bundle/ruby/1.9.1/gems/nokogiri-1.5.0 for inspection.
Results logged to /home/kk_Ataka/github/lokka/vendor/bundle/ruby/1.9.1/gems/nokogiri-1.5.0/ext/nokogiri/gem_make.out
An error occured while installing nokogiri (1.5.0), and Bundler cannot continue.
Make sure that `gem install nokogiri -v &#39;1.5.0&#39;` succeeds before bundling.
&lt;/pre&gt;
&lt;p&gt;nokogiriはlibxml2が必要なのか。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ sudo yum install libxml2-devel&lt;/pre&gt;
&lt;p&gt;libxsltもか。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ sudo yum install libxslt-devel&lt;/pre&gt;
&lt;p&gt;んで満を持してBundle。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ bundle install ./vendor/bundle --without development mysql postgres&lt;/pre&gt;
&lt;h2&gt;もろもろの設定、ローカルで起動&lt;/h2&gt;
&lt;p&gt;database.default.ymlファイルをコピーしてdatabase.ymlを作成。そしてDBセットアップから起動。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ cp database.default.yml database.yml
$ bundle exec rake db:setup
$ bundle exec rackup&lt;/pre&gt;
&lt;p&gt;&lt;a href=&quot;http://localhost:9292&quot;&gt;http://localhost:9292&lt;/a&gt;にアクセスし、TestSiteが表示されたらOK！&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20111127024213&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20111127/20111127024213.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;その他&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;初期IDとパスワードがtest/testなのでAdmin loginよりログインして変更する&lt;/li&gt;&lt;li&gt;プラグインは&lt;a href=&quot;http://lokka.org/plugins&quot;&gt;Plugins - Lokka&lt;/a&gt;から欲しいものをDLする。public/plugin/に置けばいいらしいが…？&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;Herokuにpush&lt;/h1&gt;
&lt;p&gt;Gitでpushする手順は&lt;a href=&quot;http://d.hatena.ne.jp/kk_Ataka/20111126/1322240459&quot;&gt;前回の記事を参照&lt;/a&gt;。その後、Heroku側のDBセットアップを。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ bundle exec heroku rake db:setup&lt;/pre&gt;
&lt;h2&gt;Herokuのタイムゾーン&lt;/h2&gt;
&lt;p&gt;Herokuのタイムゾーンが日本になっていない。日本に住んでいるのでブログ更新したら更新日は日本時間で出てほしいなと思ったが、これはconfig:addで設定でけるよう。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ bundle exec heroku config:add TZ=Asia/Tokyo&lt;/pre&gt;</content>
 </entry>
 
 <entry>
   <title>HerokuにWebアプリ(Sinatra)をデプロイする手順をまとめた</title>
   <link href="http://gosyujin.github.io/2011/11/26/1322240459"/>
   <updated>2011-11-26T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2011/11/26/1322240459</id>
   <content type="html">&lt;h1&gt;あらすじ&lt;/h1&gt;
&lt;p&gt;いよいよHerokuをはじめる。&lt;/p&gt;
&lt;h1&gt;参考サイト&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://d.hatena.ne.jp/ruedap/20110209/ruby_heroku_twitter_bot&quot;&gt;Herokuを使って1日1回名言をツイートするTwitter Botの作り方 - アインシュタインの電話番号☎&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://studyheroku.wiki.fc2.com/wiki/Heroku%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89&quot;&gt;Herokuコマンド - study_heroku&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://kuranuki.sonicgarden.jp/2009/05/rubypaasherokurails.html&quot;&gt;Ruby版PaaSの&amp;quot;Heroku&amp;quot;で無料Railsホスティング環境を手に入れよう - Social Change!&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;事前準備&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;Ruby 1.9.3&lt;/li&gt;&lt;li&gt;Git 1.7.3&lt;/li&gt;&lt;li&gt;rvm 1.9.2&lt;/li&gt;&lt;li&gt;gem 1.8.10&lt;ul&gt;&lt;li&gt;gem管理にbundlerを使いたい&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;プロジェクト作成&lt;/h1&gt;
&lt;h2&gt;Bundler準備&lt;/h2&gt;
&lt;p&gt;プロジェクトフォルダ(heroku_sample)を作成し、その中にGemfileファイルを作成する。gem &#39;heroku&#39;は後ほどHerokuに対してプロジェクトを作ったりするのに使用する。&lt;/p&gt;
&lt;pre class=&quot;ruby&quot;&gt;$ mkdir heroku_sample
$ cd heroku_sample
$ vi Gemfile
source :rubygems
source &#39;http://rubygems.org&#39;

gem &#39;sinatra&#39;
gem &#39;heroku&#39;&lt;/pre&gt;
&lt;p&gt;bundleでインストール。場所は任意で。今回はカレントのvendor/bundleにインストール。&lt;/p&gt;
&lt;pre class=&quot;ruby&quot;&gt;$ bundle install ./vendor/bundle&lt;/pre&gt;
&lt;h2&gt;Sinatra準備&lt;/h2&gt;
&lt;p&gt;SinatraでHello World!!できるようにサンプルファイルapp.rbを作成。&lt;/p&gt;
&lt;pre class=&quot;ruby&quot;&gt;$ vi app.rb
require &#39;rubygems&#39;
require &#39;sinatra&#39;

get &#39;/&#39; do
  &amp;quot;Hello World!&amp;quot;
end&lt;/pre&gt;
&lt;p&gt;Rackアプリケーションとして起動するためconfig.ruファイルを作成する。&lt;/p&gt;
&lt;pre class=&quot;ruby&quot;&gt;require &#39;./app.rb&#39;
run Sinatra::Application&lt;/pre&gt;
&lt;p&gt;&lt;span class=&quot;deco&quot; style=&quot;color:#FF0000;&quot;&gt;※ちょっと先の話になるけど、始めは1行目をrequire &#39;app.rb&#39;としていた。それでもローカルでは問題なくロードして動作してたし。が、Herokuにデプロイすると下記のようなログを吐きエラーとなった。&lt;/span&gt;&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;2011-11-23T08:10:02+00:00 heroku[web.1]: State changed from created to starting
2011-11-23T08:10:03+00:00 heroku[web.1]: Starting process with command `thin -p 54821 -e production -R /home/heroku_rack/heroku.ru start`
2011-11-23T08:10:04+00:00 app[web.1]: &amp;lt;internal:lib/rubygems/custom_require&amp;gt;:29:in `require&#39;: no such file to load -- .app.rb (LoadError)
2011-11-23T08:10:04+00:00 app[web.1]:      from &amp;lt;internal:lib/rubygems/custom_require&amp;gt;:29:in `require&#39;
2011-11-23T08:10:04+00:00 app[web.1]:      from config.ru:1:in `block (3 levels) in &amp;lt;main&amp;gt;&#39;
...&lt;/pre&gt;
&lt;p&gt;&lt;span class=&quot;deco&quot; style=&quot;color:#FF0000;&quot;&gt;ん？　`require&#39;: no such file to load -- .app.rb (LoadError)ってなんでapp.rbでロードエラーしてんの？　何か設定し忘れ？　――HerokuのRubyはデフォルトで1.9.2になっているということがわかった。そして、Ruby1.9.2からロードパスにカレントディレクトリが含まれなくなったらしく。カレントディレクトリのファイルは./で明示的に教えてあげないといけないようなのでした。うーんRuby1.9.2からの仕様だったのか。1.8ばっかり使ってたからしらなんだ。&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://d.hatena.ne.jp/ruedap/20110531/ruby_require_load_path&quot;&gt;Rubyでrbファイルをrequireするときはドットを打つと良さそう - アインシュタインの電話番号☎&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://www.ruby-lang.org/ja/news/2010/08/18/ruby-1-9-2-is-released/#label-8&quot;&gt;Ruby 1.9.2ãªãªã¼ã¹&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;Gitの管理下に&lt;/h2&gt;
&lt;p&gt;で、戻ってきて…次にgitの管理対象におく。(今はまだやる必要ないけど、先にすませとく)bundle系のファイルはignoreしておく。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git init
$ vi .gitignore
.bundle
vendor&lt;/pre&gt;
&lt;p&gt;ここまでのプロジェクト構成はこう。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;heroku_sample
┣.bundle/
┣.git/
┣.gitignore
┣Gemfile
┣Gemfile.lock
┣config.ru
┣app.rb
┗vendor/&lt;/pre&gt;
&lt;h1&gt;ローカルで動作確認&lt;/h1&gt;
&lt;h2&gt;Sinatra起動&lt;/h2&gt;
&lt;p&gt;ちょっとローカルで動作確認。&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f1&quot; title=&quot;この時はRuby1.8.7でやっていた。後ほど1.9代へ変更&quot; name=&quot;fn1&quot;&gt;*1&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ bundle exec ruby app.rb
[2011-11-23 13:51:52] INFO  WEBrick 1.3.1
[2011-11-23 13:51:52] INFO  ruby 1.8.7 (2011-06-30) [i686-darwin10.8.0]
== Sinatra/1.3.1 has taken the stage on 4567 for development with backup from WEBrick
[2011-11-23 13:51:52] INFO  WEBrick::HTTPServer#start: pid=50924 port=4567&lt;/pre&gt;
&lt;p&gt;&lt;a href=&quot;http://localhost:4567&quot;&gt;http://localhost:4567&lt;/a&gt;にアクセスしてHello World!!できていればローカルでは成功。&lt;/p&gt;
&lt;h1&gt;Herokuへデプロイ&lt;/h1&gt;
&lt;h2&gt;Sign up&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;http://www.heroku.com&quot;&gt;http://www.heroku.com&lt;/a&gt;にアクセスし、sign upを選択。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20111126014002&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20111126/20111126014002.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;メールアドレスを登録し送られてきたメールからHerokuへ再度アクセスしパスワードを登録。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20111126014003&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20111126/20111126014003.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;プロジェクト作成&lt;/h2&gt;
&lt;p&gt;先ほどgemで入れたherokuでHerokuにプロジェクトを作成する。その際、メールアドレスとパスワードの入力が求められる。あとsshキーが必要になるっぽい。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ bundle exec heroku create heroku_sample
Enter your Heroku credentials.
Email: メールアドレス入れる
Password: パスワード入れる
Found existing public key: /Users/kk_Ataka/.ssh/id_rsa.pub
Uploading ssh public key /Users/kk_Ataka/.ssh/id_rsa.pub
 !   Name must start with a letter and can only contain lowercase letters, numbers, and dashes&lt;/pre&gt;
&lt;p&gt;ん？　名前は小文字と数字とダッシュだけ？　んじゃ適当に…。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ bundle exec heroku create tycoon-gosyujin
Creating tycoon-gosyujin... done, stack is bamboo-mri-1.9.2
http://tycoon-gosyujin.heroku.com/ | git@heroku.com:tycoon-gosyujin.git
Git remote heroku added&lt;/pre&gt;
&lt;p&gt;お、できたできた。HerokuにアクセスしてMy Appsを見に行くとプロジェクトができてた。ちなみに、現在HerokuのサーバのRubyデフォルトバージョンは1.9.2の模様。これはherokuコマンドで1.8などに変えられるみたい。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20111126014001&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20111126/20111126014001.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;GitでHerokuへpush&lt;/h2&gt;
&lt;p&gt;そしたらGitのローカルリポジトリにcommitしたのち、Herokuへpushする。(gitコマンドエイリアス使ってます)&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ git add ./
$ git com &#39;First commit.&#39;
$ git push heroku master
Counting objects: 774, done.
Delta compression using up to 2 threads.
Compressing objects: 100% (679/679), done.
Writing objects: 100% (774/774), 1.94 MiB, done.
Total 774 (delta 49), reused 0 (delta 0)

-----&amp;gt; Heroku receiving push
-----&amp;gt; Ruby/Sinatra app detected
-----&amp;gt; Gemfile detected, running Bundler version 1.0.7
       Unresolved dependencies detected; Installing...
       Using --without development:test
       Fetching source index for http://rubygems.org/
       Fetching source index for http://rubygems.org/
       Installing addressable (2.2.6)
       Installing launchy (2.0.5)
       Installing mime-types (1.17.2)
       Installing rest-client (1.6.7)
       Installing rubyzip (0.9.4)
       Installing term-ansicolor (1.0.7)
       Installing heroku (2.14.0)
       Installing pit (0.0.6)
       Installing rack (1.3.5)
       Installing rack-protection (1.1.4)
       Installing tilt (1.3.3)
       Installing sinatra (1.3.1)
       Using bundler (1.0.7)
       Your bundle is complete! It was installed into ./.bundle/gems/
-----&amp;gt; Compiled slug size is 1.9MB
-----&amp;gt; Launching... done, v4
       http://tycoon-gosyujin.heroku.com deployed to Heroku

To git@heroku.com:tycoon-gosyujin.git
 * [new branch]      master -&amp;gt; master
&lt;/pre&gt;
&lt;p&gt;無事にデプロイが成功したようなので、Webページへアクセス。&lt;/p&gt;
&lt;div class=&quot;footnote&quot;&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn1&quot; name=&quot;f1&quot;&gt;*1&lt;/a&gt;: この時はRuby1.8.7でやっていた。後ほど1.9代へ変更&lt;/p&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>複数のRuby環境の管理・切替ができるpikを実行できた nyaos編</title>
   <link href="http://gosyujin.github.io/2011/11/24/1322138944"/>
   <updated>2011-11-24T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2011/11/24/1322138944</id>
   <content type="html">&lt;h1&gt;前回までのあらすじ&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;2011-10-04-1317660186&quot;&gt;2011-10-04-1317660186&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;まず、環境変数がおかしいとpikが正常に動きませんよというのが一つ。もう一つの原因がコマンドプロンプトではなくnyaosを使っていたという事。&lt;/p&gt;
&lt;h1&gt;参考サイト&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://d.hatena.ne.jp/miyamuko/20100905/nyaos_with_pik&quot;&gt;nyaos で pik を使う設定と pik の動作原理 - *Trace Output*&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;修正方法&lt;/h1&gt;
&lt;p&gt;そのままだと、nyaosでPATH追加シェルを起動しても親シェルであるnyaosには反映されませんよってんで、動かすには_nyaファイルに以下のコードを追加する。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;pik{
  pik_runner.exe pik.bat %*
  if exist &amp;quot;%USERPROFILE%\.pik\pik.bat&amp;quot; then
    source &amp;quot;%USERPROFILE%\.pik\pik.bat&amp;quot; 2&amp;gt; nul
  endif
}&lt;/pre&gt;
&lt;p&gt;msysgitを使ってる時も同じ感じで追加すればいいのかな。&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Word2007でCtrl+hjklで移動できるようにする</title>
   <link href="http://gosyujin.github.io/2011/11/17/1321537502"/>
   <updated>2011-11-17T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2011/11/17/1321537502</id>
   <content type="html">&lt;h1&gt;あらすじ&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;あーWord使ってる時hjklで移動してーあとバックスペースも&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;手順&lt;/h1&gt;
&lt;p&gt;テンプレートファイルを編集するとできるよう。で、それはApplication Data下にある。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Word2007を起動し、左上のWindowsマークから開くを選択&lt;ul&gt;&lt;li&gt;ファイルの種類で「Word マクロ有効テンプレート(.dotm)」を選択&lt;ul&gt;&lt;li&gt;%APPDATA%\Microsoft\Templates\Normal.dotmを開く&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;開発タブ -&gt; VisualBasic -&gt; Normal -&gt; Microsoft Word Objects -&gt; ThisDocumentに以下をペーストする&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;vb&quot;&gt;Sub BkSpPrc()
  Selection.TypeBackspace
End Sub
Sub MoveLeft()
    Selection.MoveLeft
End Sub
Sub MoveRight()
    Selection.MoveRight
End Sub
Sub MoveUp()
    Selection.MoveUp
End Sub
Sub MoveDown()
    Selection.MoveDown
End Sub&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;左上のWindowsマーク -&gt; Wordのオプション -&gt; ユーザー設定 -&gt; ショートカットキー:ユーザー設定 -&gt; 分類:マクロ&lt;ul&gt;&lt;li&gt;マクロに上記で記載した関数が表示されていることを確認&lt;/li&gt;&lt;li&gt;マクロを選択してMoveLeftはCtrl+h、MoveDownはCtrl+j...とキーを割り当てていく&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</content>
 </entry>
 
 <entry>
   <title>Excel2007のF1キーを無効化する</title>
   <link href="http://gosyujin.github.io/2011/11/16/1321447232"/>
   <updated>2011-11-16T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2011/11/16/1321447232</id>
   <content type="html">&lt;h1&gt;あらすじ&lt;/h1&gt;
&lt;p&gt;ExcelのF1キーを殺したい…。Wordとかは百歩譲っていいとして、ExcelにはF2キーにセル編集が割当たっているので、それを使うときに暴発してしまうため。&lt;/p&gt;
&lt;h1&gt;案&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;F1キーそのものを引っこ抜く&lt;/li&gt;&lt;li&gt;何かしらの方法で無効化する&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;ググってみると、F1キーをぶちぬくという方法も割とメジャーらしいのですが、いずれ返却しなければいけないPCのため物理的な方法は却下。なので無効化する方向でいきます。レジストリをいじってなんとかする。Accessの履歴といい、なんでMicrosoft製品は何かしようとしたらレジストリいじらないといけないんだ…。&lt;/p&gt;
&lt;h1&gt;手順&lt;/h1&gt;
&lt;p&gt;Windowsキー+r -&gt; regedit でレジストリエディタ起動、まずは下記パスを掘っていく。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;HKEY_CURRENT_USER
┗Software
　┗Policies
　　┗Microsoft
　　　┗Office&lt;/pre&gt;
&lt;p&gt;Officeフォルダ直下になにかしら数字フォルダがあるかもしれないが、これはOfficeのバージョン。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;12.0 = Office2007&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;という事らしい。今回は2007なので12.0を掘る。ここから下の階層はなければ作成する。(作成したい階層で右クリック -&gt; 新規 -&gt; キー)&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;HKEY_CURRENT_USER
┗Software
　┗Policies
　　┗Microsoft
　　　┗Office
　　　　┗12.0
　　　　　┗Excel
　　　　　　┗DisabledShortcutKeysCheckBoxes&lt;/pre&gt;
&lt;p&gt;DisabledShortcutKeysCheckBoxesを作り、DisabledShortcutKeysCheckBoxesで右クリック -&gt; 新規 -&gt; 文字列値を選択しF1Key(わかればなんでもよい)と入力。作成したF1Keyをダブルクリックし&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;112,0&lt;/pre&gt;
&lt;p&gt;と入力しOK押下。&lt;/p&gt;
&lt;p&gt;Excelを再起動するとF1キーを押しても何も起こらなくなった！！　よし！&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Windowsのローカル環境にWordPressをインストールした</title>
   <link href="http://gosyujin.github.io/2011/10/11/1318334855"/>
   <updated>2011-10-11T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2011/10/11/1318334855</id>
   <content type="html">&lt;h1&gt;あらすじ&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;Wordpress上ではてな記法を使うことができるというプラグイン &lt;a href=&quot;http://rewish.org/wp/hatena_notation_plugin&quot;&gt;WordPressにはてな記法を導入するプラグインを作った - Rewish&lt;/a&gt; を見つけて使ってみたい！　と思ったのでWordpress備忘録も兼ねてインストール&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;参考サイト&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;WordPress&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://ja.wordpress.org/&quot;&gt;WordPress | 日本語&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://ja.wordpress.org/install/&quot;&gt;WordPress | 日本語 » インストール&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://www.webcreatorbox.com/tech/wordpress-install-local/&quot;&gt;Wordpressをローカルにインストールする | Webクリエイターボックス&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;MySQL&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://y-kit.jp/saba/xp/mysqlinst.htm&quot;&gt;MySQLデータベースサーバーのインストール Windows篇&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://www.mysql.com/downloads/installer/&quot;&gt;MySQL ::  Download MySQL Installer&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;推奨環境&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;WordPress 3.2 の場合&lt;ul&gt;&lt;li&gt;PHP 5.2.4 以上&lt;/li&gt;&lt;li&gt;MySQL 5.0 以上&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;実行環境&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;Windows XP&lt;/li&gt;&lt;li&gt;WordPress 3.2&lt;/li&gt;&lt;li&gt;Apache 2.2.1&lt;/li&gt;&lt;li&gt;PHP 5.3.8&lt;/li&gt;&lt;li&gt;MySQL 5.5.15&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;MySQL&lt;/h1&gt;
&lt;h2&gt;インストール、設定&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://www.mysql.com/downloads/installer/&quot;&gt;MySQL ::  Download MySQL Installer&lt;/a&gt;よりMySQLをDL。登録がめんどかったら&lt;a href=&quot;http://download.softagency.net/mysql/Downloads/MySQL-5.5/&quot;&gt;Index of /mysql/Downloads/MySQL-5.5&lt;/a&gt;この辺から&lt;/li&gt;&lt;li&gt;msi実行。基本的に次へ次へ&lt;/li&gt;&lt;li&gt;C:\windows直下にmy.iniファイルを作成以下のように記述&lt;ul&gt;&lt;li&gt;basedirはMySQLのルート(msiでデフォルトインストールするとC:/Program Files/MySQL/MySQL Server 5.5に入る)&lt;/li&gt;&lt;li&gt;datadirはその中のdataフォルダ&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;python&quot;&gt;[mysqld]
basedir=&amp;quot;C:/Program Files/MySQL/MySQL Server 5.5&amp;quot;
datadir=&amp;quot;C:/Program Files/MySQL/MySQL Server 5.5/data&amp;quot;
default-character-set=cp932

[mysql]
default-character-set=cp932&lt;/pre&gt;
&lt;h2&gt;Windowsサービス登録&lt;/h2&gt;
&lt;pre class=&quot;python&quot;&gt;$ cd &amp;quot;c:/Program Files/MySQL/MySQL Server 5.5/bin/&amp;quot;
$ mysqld --install
Service successfully installed.&lt;/pre&gt;
&lt;h2&gt;Windowsサービス起動&lt;/h2&gt;
&lt;pre class=&quot;python&quot;&gt;$ net start mysql
MySQL サービスを開始します....
MySQL サービスを開始できませんでした。

システム エラーが発生しました。

システム エラー 1067 が発生しました。

プロセスを途中で強制終了しました。&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;エラーが起きた。1067でググってみると設定ファイルがうまく読み込めていないよう&lt;/li&gt;&lt;li&gt;さらにdatadir下にある.errファイルを見るとこんなエラーが。default-character-setミスってるっぽい？&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;python&quot;&gt;111004 17:18:24 [ERROR] c:\Program Files\MySQL\MySQL Server 5.5\bin\mysqld.exe: unknown variable &#39;default-character-set=cp932&#39;&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;default-character-setが使えるのははMySQL5.0までで5.5以降はcharacter-set-serverとなるらしい&lt;/li&gt;&lt;li&gt;ただし、[mysql]はdefault-character-setらしい…？&lt;/li&gt;&lt;li&gt;my.ini書き換え&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;python&quot;&gt;[mysqld]
basedir=&amp;quot;C:/Program Files/MySQL/MySQL Server 5.5&amp;quot;
datadir=&amp;quot;C:/Program Files/MySQL/MySQL Server 5.5/data&amp;quot;
# default-character-set=cp932
character-set-server=cp932

[mysql]
default-character-set=cp932
# character-set-server=cp932&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;一旦サービス削除&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;python&quot;&gt;$ mysqld --remove
Service successfully removed.&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;設定ファイルを指定しつつサービス登録&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;python&quot;&gt;$ mysqld --install
Service successfully installed.&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;再度起動&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;python&quot;&gt;$ net start mysql
MySQL サービスを開始します..
MySQL サービスは正常に開始されました&lt;/pre&gt;
&lt;p&gt;よし。&lt;/p&gt;
&lt;h2&gt;ユーザ作成&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;はじめにrootユーザのパスワードを設定する&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;python&quot;&gt;$ mysqladmin.exe -u root password root&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;接続&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;python&quot;&gt;$ mysql -u root -p
Enter password: **** # パスワード求められる&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;Wordpress用のDBを作成&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;python&quot;&gt;mysql&amp;gt; create database wordpress
    -&amp;gt; ;
Query OK, 1 row affected (0.05 sec)&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;とりあえず終了&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;python&quot;&gt;mysql&amp;gt; quit
Bye&lt;/pre&gt;
&lt;h1&gt;PHP&lt;/h1&gt;
&lt;h2&gt;インストール&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://windows.php.net/download/&quot;&gt;PHP For Windows: Binaries and sources Releases&lt;/a&gt; からWindows用のPHPをDL&lt;ul&gt;&lt;li&gt;Non Thread safe版にはApacheと連携するためのライブラリ等が入っていないのでThread safe版のInstallerを&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;次へ次へ&lt;ul&gt;&lt;li&gt;インストール先はC:\Program Files\PHP\にした&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Web Server Setup は Apache 2.2.x Moduleを選択&lt;/li&gt;&lt;li&gt;Apache Configuration Directory は次に入れるApacheのパスを記述(どこまで？Apacheルート？　bin？)&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;Apache&lt;/h1&gt;
&lt;h2&gt;インストール&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://httpd.apache.org/download.cgi#apache22&quot;&gt;Download - The Apache HTTP Server Project&lt;/a&gt; からDL&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;ApacheとPHPとWordpressの連携&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;APACHE2.2\conf\httpd.confファイルを編集&lt;ul&gt;&lt;li&gt;LoadModuleの近くに追加&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;python&quot;&gt;PHPIniDir &amp;quot;C:\Program Files\PHP\&amp;quot; # PHPがインストールされているフォルダ
LoadModule php5_module &amp;quot;C:/Program Files/PHP/php5apache2_2.dll&amp;quot;&lt;/pre&gt;
&lt;ol&gt;&lt;ul&gt;&lt;li&gt;DocumentRootをWordpressのルートに変更&lt;/li&gt;&lt;/ul&gt;&lt;/ol&gt;
&lt;pre class=&quot;python&quot;&gt;DocumentRoot &amp;quot;C:\Program Files\wordpress&amp;quot; # Wordpressを解凍したフォルダ

&amp;lt;Directory &amp;quot;C:\Program Files\wordpress&amp;quot;&amp;gt; # 同じく&lt;/pre&gt;
&lt;ol&gt;&lt;ul&gt;&lt;li&gt;index.phpをウェルカムファイルに追加&lt;/li&gt;&lt;/ul&gt;&lt;/ol&gt;
&lt;pre class=&quot;&quot;&gt;    DirectoryIndex index.html, index.php # index.php追加。htmlより左に持って行くと最優先でindex.phpが表示&lt;/pre&gt;
&lt;ol&gt;&lt;ul&gt;&lt;li&gt;AddTypeなどを追加&lt;/li&gt;&lt;/ul&gt;&lt;/ol&gt;
&lt;pre class=&quot;&quot;&gt;     AddHandler cgi-script .cgi

     AddType application/x-httpd-php .php
     PHPIniDir &amp;quot;C:/Program Files/PHP&amp;quot;&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;Apache再起動後、localhost:80へアクセスすると(エラーが出るが)PHPが実行されているはず&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;WordPress&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://ja.wordpress.org/&quot;&gt;WordPress | 日本語&lt;/a&gt; からWordPressをDLし解凍&lt;/li&gt;&lt;li&gt;wp-config-sample.phpをコピーしwp-config.phpを作成し、以下の設定を変更&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;python&quot;&gt;// ** MySQL 設定 - こちらの情報はホスティング先から入手してください。 ** //
/** WordPress のためのデータベース名 */
define(&#39;DB_NAME&#39;, &#39;database_name_here&#39;); # 上で作成したwordpressに

/** MySQL データベースのユーザー名 */
define(&#39;DB_USER&#39;, &#39;username_here&#39;); # ユーザ(今回はrootで)

/** MySQL データベースのパスワード */
define(&#39;DB_PASSWORD&#39;, &#39;password_here&#39;); # パスワード&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;localhost:80/wp-admin/install.phpへアクセスし、「ようこそ」画面が出てきたら正常動作している&lt;/li&gt;&lt;li&gt;サイトのタイトル、ユーザ名、パスワードを入力し「Wordpressをインストール」ボタン押下&lt;/li&gt;&lt;li&gt;localhost:80にアクセスし、Hello World!が表示されていれば完了！&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;wordpress-hatena&lt;/h1&gt;
&lt;h2&gt;参考サイト&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://rewish.org/wp/hatena_notation_plugin&quot;&gt;WordPressにはてな記法を導入するプラグインを作った - Rewish&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;手順&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://downloads.wordpress.org/plugin/wp-hatena-notation.zip&quot;&gt;WPHatenaNotation&lt;/a&gt; をDL&lt;/li&gt;&lt;li&gt;Wordpressにログイン&lt;/li&gt;&lt;li&gt;プラグイン -&gt; 新規追加 -&gt; アップロード -&gt; zipを参照しいますぐインストール -&gt; プラグインを有効化&lt;/li&gt;&lt;/ul&gt;</content>
 </entry>
 
 <entry>
   <title>さくらVPSにインストールしたDropboxのEnable LAN syncオプションをOFFにする</title>
   <link href="http://gosyujin.github.io/2011/10/08/1318068887"/>
   <updated>2011-10-08T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2011/10/08/1318068887</id>
   <content type="html">&lt;h1&gt;あらすじ&lt;/h1&gt;
&lt;p&gt;DropboxにはEnable LAN syncというオプションがあり、これをONにすると同じLAN内のマシンはインターネットを経由しないで同期ができる。&lt;/p&gt;
&lt;p&gt;f:&lt;a href=&quot;http://d.hatena.ne.jp/kk_Ataka/&quot;&gt;id:kk_Ataka&lt;/a&gt;:20111008190858j:image&lt;/p&gt;
&lt;p&gt;ただし、17500ポートに向けてUDPパケットがやまほど投げているようで、同じLAN内に自分以外のマシンがある状態でこのオプションをONにしていると近隣の方へやまほどパケットを投げまくりで非常に迷惑がかかります……。基本的にDropboxのオプションからEnable LAN sync(LAN同期を有効にする)をOFFにすればよい。&lt;/p&gt;
&lt;p&gt;……のだが、CUIからDropboxをインストールしている場合は少し手順を踏んでこのオプションを切る必要があります。&lt;/p&gt;
&lt;h1&gt;参考サイト&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://d.hatena.ne.jp/otn/20110502/p1&quot;&gt;「さくらのVPS」ファイアーウォール設定 - それはそれ。これはこれ。&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://blog.7kai.org/2011/04/dropbox-lan-sync-disable/&quot;&gt;The Diary of Aska - これは不正アクセスですか？いいえ、Dropbox LAN syncです。&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;というか、前回の記事&lt;a href=&quot;2011-04-23-1303489798&quot;&gt;2011-04-23-1303489798&lt;/a&gt; でインストールするときに参考にしたサイトにこの問題が書いてあった……。&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;To stop dropbox from sending LAN Sync broadcasts every 30 seconds over port 17500 (&lt;a href=&quot;http://forums.dropbox.com/topic.php?id=16253&quot;&gt;http://forums.dropbox.com/topic.php?id=16253&lt;/a&gt;) see DropboxAddons/DisableLanSync&lt;/p&gt;&lt;cite&gt;&lt;a href=&quot;http://wiki.dropbox.com/TipsAndTricks/TextBasedLinuxInstall#SuppressLANSyncbroadcasts&quot;&gt;http://wiki.dropbox.com/TipsAndTricks/TextBasedLinuxInstall#SuppressLANSyncbroadcasts&lt;/a&gt;&lt;/cite&gt;&lt;/blockquote&gt;
&lt;h1&gt;必要環境&lt;/h1&gt;
&lt;table&gt;&lt;tr&gt;&lt;th&gt;Python&lt;/th&gt;&lt;td&gt;2.6&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;h1&gt;スクリプトDL&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://wiki.dropbox.com/DropboxAddons/PyDropboxValues&quot;&gt;http://wiki.dropbox.com/DropboxAddons/PyDropboxValues&lt;/a&gt; から &lt;a href=&quot;http://dl.dropbox.com/u/340607/pyDropboxValues.py&quot;&gt;pyDropboxValues.py&lt;/a&gt; をDLする&lt;ul&gt;&lt;li&gt;設定値を表示できる&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://wiki.dropbox.com/DropboxAddons/DisableLanSync&quot;&gt;http://wiki.dropbox.com/DropboxAddons/DisableLanSync&lt;/a&gt; から &lt;a href=&quot;http://dl.dropbox.com/u/340607/dropbox_set_lansync.py&quot;&gt;dropbox_set_lansync.py&lt;/a&gt; をDLする&lt;ul&gt;&lt;li&gt;LAN syncオプションを切り替える&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;手順&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;pyDropboxValue.pyで設定をバックアップする&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;python&quot;&gt;$ PYTHON2.6 pyDropboxValues.py _backup
Backed up &#39;config.db&#39; to &#39;/home/kk_Ataka/.dropbox/backup_1_config.db&#39;&lt;/pre&gt;
&lt;ol&gt;&lt;ul&gt;&lt;li&gt;LAN syncオプションを確認する&lt;/li&gt;&lt;/ul&gt;&lt;/ol&gt;
&lt;pre class=&quot;python&quot;&gt;$ PYTHON2.6 pyDropboxValues.py | grep p2p_enable
p2p_enable = 1 # LAN syncオプションはp2p_enableというらしい。1でON。&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;dropbox_set_lansync.pyでEnable LAN syncオプションをOFFにする&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;python&quot;&gt;$ PYTHON2.6 dropbox_set_lansync.py off # 特にレスポンスは返ってこないが…。&lt;/pre&gt;
&lt;ol&gt;&lt;ul&gt;&lt;li&gt;LAN syncオプションを確認する&lt;/li&gt;&lt;/ul&gt;&lt;/ol&gt;
&lt;pre class=&quot;python&quot;&gt;$ PYTHON2.6 pyDropboxValues.py | grep p2p_enable
p2p_enable = 0 # 0になっていればよい。最後にプロセスを再起動するのを忘れないように……。&lt;/pre&gt;
&lt;p&gt;f:&lt;a href=&quot;http://d.hatena.ne.jp/kk_Ataka/&quot;&gt;id:kk_Ataka&lt;/a&gt;:20111008190855j:image&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Dropboxプロセスを再起動する(dropbox.pyは以前DLしているはず)&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;$ PYTHON2.6 dropbox.py stop
Dropbox daemon stopped.
$ PYTHON2.6 dropbox.py start
Starting Dropbox...Dropbox isn&#39;t running!
Done!&lt;/pre&gt;
&lt;h1&gt;実行時にエラー？&lt;/h1&gt;
&lt;p&gt;実行しようとするとsqlite3のImportErrorになる？　なんで？　標準で入ってるんじゃないの？&lt;/p&gt;
&lt;pre class=&quot;python&quot;&gt;$ PYTHON2.6 pyDropboxValues.py
Traceback (most recent call last):
  File &amp;quot;pyDropboxValue.py&amp;quot;, line 21, in &amp;lt;module&amp;gt;
    import sqlite3
  File &amp;quot;/usr/local/Python-2.6.2/lib/python2.6/sqlite3/__init__.py&amp;quot;, line 24, in &amp;lt;module&amp;gt;
    from dbapi2 import *
  File &amp;quot;/usr/local/Python-2.6.2/lib/python2.6/sqlite3/dbapi2.py&amp;quot;, line 27, in &amp;lt;module&amp;gt;
    from _sqlite3 import *
ImportError: No module named _sqlite3&lt;/pre&gt;
&lt;p&gt;f:&lt;a href=&quot;http://d.hatena.ne.jp/kk_Ataka/&quot;&gt;id:kk_Ataka&lt;/a&gt;:20111008190856j:image&lt;/p&gt;
&lt;p&gt;→ &lt;a href=&quot;http://d.hatena.ne.jp/omiyan/20110108/p1&quot;&gt;Python2.6からsqlite3が読み込まれないエラーの解決方法 - ドラあり！*ドラゴンに挑むアリの物語 ** Python使いの日々&lt;/a&gt; によるとPython2.6からはsqlite3は標準インストールから外れているらしい。この辺りはわからんね。yumでsqliteを入れなおす。&lt;/p&gt;
&lt;pre class=&quot;python&quot;&gt;$ sudo yum install sqlite-*&lt;/pre&gt;
&lt;p&gt;f:&lt;a href=&quot;http://d.hatena.ne.jp/kk_Ataka/&quot;&gt;id:kk_Ataka&lt;/a&gt;:20111008190857j:image&lt;/p&gt;
&lt;p&gt;そして、PythonをソースからインストールしなおせばOK！&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>複数のRuby環境の管理・切替ができるpikを実行できた</title>
   <link href="http://gosyujin.github.io/2011/10/04/1317660186"/>
   <updated>2011-10-04T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2011/10/04/1317660186</id>
   <content type="html">&lt;h1&gt;あらすじ&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;2011-10-03-1317642705&quot;&gt;2011-10-03-1317642705&lt;/a&gt;にてBundlerでのgem管理に失敗した&lt;/li&gt;&lt;li&gt;別の方法はないかと調べているとRubyをバージョンごとに管理できるrvmとpikを見つけた&lt;ul&gt;&lt;li&gt;とりあえず別出ししておいて安定させたい環境と色々試行錯誤したい環境に分けられる？&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Windows環境なのでpikを使ってみようとインストールしてみた&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;インストール手順(gem)&lt;/h1&gt;
&lt;p&gt;※gemでは実際にRubyをinstallする段階の所で失敗したので、実際は次のmsiを使ってインストールした。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;gemでOK&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;gem install pik&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;pikをインストールするにはpik_installコマンドを実行する必要があるが、フォルダを作成し、PATHに追加してから実行してくれと言われる&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;$ pik_install
Usage:  pik_install path\to\install

You should install to a directory that is in your system path,
or add the directory to your system path.  Do not install to
your ruby&#39;s bin directory because pik will remove it from the
path when switching versions.

Example:

  C:\&amp;gt;path

  PATH=C:\tools;C:\ruby\Ruby-186-p383\bin;C:\WINDOWS\system32;...

  C:\&amp;gt;pik_install C:\tools&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;C:\pikフォルダ作成しPATHに追加し再度&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;$ pik_install C:\pik
Thank you for using pik.

mkdir -p C:\pik
mkdir -p %userprofile%/.pik
Installing to C:\pik

cp C:/ruby/lib/ruby/gems/1.8/gems/pik-0.2.8/tools/pik_runner.exe C:\pik
cp C:/ruby/lib/ruby/gems/1.8/gems/pik-0.2.8/tools/pik.bat C:\pik
cp C:/ruby/lib/ruby/gems/1.8/gems/pik-0.2.8/tools/pik.ps1 C:\pik

creating %USERPROFILE%/.pik/.pikrc

pik is installed

The directory you installed to is not in the sytem path.
C:\pik

You will need to add it.


if you want to use pik with git bash, add the following line to your ~/.bashrc:

  [[ -s $USERPROFILE/.pik/.pikrc ]] &amp;amp;&amp;amp; source $USERPROFILE/.pik/.pikr&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;ホームとC直下にファイルが作成された&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;インストール手順(msi)&lt;/h1&gt;
&lt;p&gt;※gemから入れるとRubyをinstallする段階でエラーが表示された。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ pik install ruby -v 1.9.2-P136
pik 0.2.8

There was an error.
 Error: private method `gsub&#39; called for nil:NilClass

  in: pik/commands/install_command.rb:24:in `execute&#39;
  in: pik_runner:33&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;他のバージョンでもだめだった。ぐぬぬ。調べてみるとgemからではなくmsiからインストールした方がよいとの事なので一回gem uninstallしてmsiからインストールする事に。。。&lt;/li&gt;&lt;/ul&gt;
&lt;blockquote&gt;&lt;p&gt;    * &lt;a href=&quot;https://github.com/vertiginous/pik/downloads&quot;&gt;Downloads · vertiginous/pik · GitHub&lt;/a&gt;&lt;/p&gt;&lt;p&gt;から .msi をダウンロードして実行してください。今回は pik 2.8.0 を使いました。&lt;/p&gt;&lt;cite&gt;&lt;a href=&quot;http://d.hatena.ne.jp/miau/20110106/1294325095&quot;&gt;http://d.hatena.ne.jp/miau/20110106/1294325095&lt;/a&gt;&lt;/cite&gt;&lt;/blockquote&gt;
&lt;ul&gt;&lt;li&gt;msiからインストールする場合Rubyが空っぽの場合からでもいけるようなので既存のRubyを削除。。&lt;/li&gt;&lt;li&gt;そしてmsi実行&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;pikコマンドを打つ際にRubyが一つも入っていないとエラーになるため、%USERPROFILE%\.pik\config.ymlにダミーのバージョンを記載する必要がある。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;--- 
&amp;quot;000: ruby 0.0.0 (dummy ruby for pik)&amp;quot;: 
  :path: !ruby/object:Pathname 
    path: C:/pik/dummy
--- {}&lt;/pre&gt;
&lt;p&gt;で、使用法へ。&lt;/p&gt;
&lt;h1&gt;使用法&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;現在インストールされているRuby表示&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;$ pik list
 * 187: ruby 1.8.7 (2010-12-23 patchlevel 330) [i386-mswin32]&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;インストール可能なRuby一覧表示。Ruby1.8から1.9からJRubyまで&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;$ pik list -r
---
DevKit:
  3.4.5r3: http://rubyforge.org/frs/download.php/66888/devkit-3.4.5r3-20091110.7z
IronRuby:
  0.3.0: http://rubyforge.org/frs/download.php/53552/ironruby-0.3.0.zip
  0.5.0: http://rubyforge.org/frs/download.php/57126/ironruby-0.5.0.zip
  0.6.0: http://rubyforge.org/frs/download.php/59717/ironruby-0.6.0.zip
  0.9.0: http://rubyforge.org/frs/download.php/61382/ironruby-0.9.0.zip
  0.9.1: http://rubyforge.org/frs/download.php/64504/ironruby-0.9.1.zip
  0.9.2: http://rubyforge.org/frs/download.php/66606/ironruby-0.9.2.zip
  &amp;quot;1.0&amp;quot;: http://rubyforge.org/frs/download.php/70179/ironruby-1.0.zip
  1.0-rc1: http://rubyforge.org/frs/download.php/67955/ironruby-1.0-rc1.zip
  1.0-rc2: http://rubyforge.org/frs/download.php/69180/ironruby-1.0-rc2.zip
  1.0.0rc: http://rubyforge.org/frs/download.php/69853/ironruby-1.0.0rc.zip
  1.0rc3: http://rubyforge.org/frs/download.php/69665/ironruby-1.0rc3.zip
  1.0v4: http://rubyforge.org/frs/download.php/70181/ironruby-1.0v4.zip
JRuby:
  1.5.6: http://jruby.org.s3.amazonaws.com/downloads/1.5.6/jruby-bin-1.5.6.zip
  1.6.4: http://jruby.org.s3.amazonaws.com/downloads/1.6.4/jruby-bin-1.6.4.zip
Ruby:
  1.8.7-p302: http://rubyforge.org/frs/download.php/72087/ruby-1.8.7-p302-i386-mingw32.7z
  1.8.7-p330: http://rubyforge.org/frs/download.php/73720/ruby-1.8.7-p330-i386-mingw32.7z
  1.8.7-p334: http://rubyforge.org/frs/download.php/74296/ruby-1.8.7-p334-i386-mingw32.7z
  1.8.7-p352: http://rubyforge.org/frs/download.php/75108/ruby-1.8.7-p352-i386-mingw32.7z
  1.9.1-p429: http://rubyforge.org/frs/download.php/71496/ruby-1.9.1-p429-i386-mingw32.7z
  1.9.1-p430: http://rubyforge.org/frs/download.php/72076/ruby-1.9.1-p430-i386-mingw32.7z
  1.9.2-p0: http://rubyforge.org/frs/download.php/72160/ruby-1.9.2-p0-i386-mingw32.7z
  1.9.2-p136: http://rubyforge.org/frs/download.php/73723/ruby-1.9.2-p136-i386-mingw32.7z
  1.9.2-p180: http://rubyforge.org/frs/download.php/74299/ruby-1.9.2-p180-i386-mingw32.7z
  1.9.2-p290: http://rubyforge.org/frs/download.php/75128/ruby-1.9.2-p290-i386-mingw32.7z
  1.9.2-rc1: http://rubyforge.org/frs/download.php/71498/ruby-1.9.2-rc1-i386-mingw32.7z
  1.9.2dev-preview3-1: http://rubyforge.org/frs/download.php/71175/ruby-1.9.2dev-preview3-i386-mingw32-1.7z&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;pikフォルダへRubyインストール&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;$ pik install ruby -v 1.9.2-p0
pik 0.2.8
** Downloading:  http://rubyforge.org/frs/download.php/72160/ruby-1.9.2-p0-i386-mingw32.7z
   to:  %userprofile%\.pik\downloads\ruby-1.9.2-p0-i386-mingw32.7z

ruby-1.9.2-p0-i386-mingw32.7z: 100% |oooooooooo|   5.7MB/  5.7MB Time: 00:00:20

You need the 7zip utility to extract this file.
Would you like me to download it? (yes/no)  |yes|
y [ENTER]
7za465.zip: 100% |ooooooooooooooooooooooooooooo| 352.5KB/352.5KB Time: 00:00:00

** Extracting:  %USERPROFILE%\.pik\downloads\ruby-1.9.2-p0-i386-mingw32.7z
   to:  %USERPROFILE%\.pik\rubies\Ruby-192-p0
done

** Adding:  192: ruby 1.9.2p0 (2010-08-18) [i386-mingw32]
 Located at:  %USERPROFILE%\.pik\rubies\Ruby-192-p0\bin&lt;/pre&gt;
&lt;p&gt;お、行けた。&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f1&quot; title=&quot;config.ymlを開きっぱにしている場合、Permission deniedがでる&quot; name=&quot;fn1&quot;&gt;*1&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;再度確認。1.9が入ってる。&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt; $ pik list
 * 187: ruby 1.8.7 (2010-12-23 patchlevel 330) [i386-mswin32]
   192: ruby 1.9.2p0 (2010-08-18) [i386-mingw32]&lt;/pre&gt;
&lt;p&gt;&lt;del datetime=&quot;2011-11-24T21:41:19+09:00&quot;&gt;最後にswitch or sw or use コマンドを使用する事でrubyのバージョンを切り替えられる……はずだったのだが、どうにも試した環境だと変わらなかった。何故変わらんのだー。ので、今回の導入は見送りして少し調べないといかん。&lt;/del&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;deco&quot; style=&quot;color:#FF0000;&quot;&gt;20111124追記&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;……と、切り替わらなかったのが前回までの話。原因は主に二つあり、なぜ切り替わらなかったのかわかるためにはpikの動きを追う必要があった。&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;環境変数がおかしかった&lt;/li&gt;&lt;li&gt;コマンドプロンプトではなくnyaosを使っていた&lt;/li&gt;&lt;/ol&gt;
&lt;p&gt;この記事では1を解決させる。nyaosは &lt;a href=&quot;2011-11-24-1322138944&quot;&gt;2011-11-24-1322138944&lt;/a&gt; で。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://d.hatena.ne.jp/miyamuko/20100905/nyaos_with_pik&quot;&gt;nyaos で pik を使う設定と pik の動作原理 - *Trace Output*&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;2-1. pik_runner.exe の処理を読むと最後に切り替えたRubyのパスを環境変数に追加するために%USERPROFILE%\.pik\pik.batを実行していると書いている。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;ただし、このpik.batはインストールしてpik listとかって実行する時のpik.batとは違う&lt;ul&gt;&lt;li&gt;そのpikはC:\pikとかに入っているはず&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;知らなかった……こんなbatファイルが生成されているとは。このSET PATHを見ると……ギャーーー！！　なんかpath変数の頭の方に%PATH%が入っていて、pikで追加したRuby(%USERPROFILE%\.pik\rubies\Ruby-192-p0\binなど)より既存Ruby(C:\ruby\binなど)のパスが前におるじゃないかぁぁぁ！　というわけで、path変数から%PATH%を取り除いたのが一つ。これでコマンドプロンプトからは動いた！&lt;/p&gt;
&lt;h1&gt;その他&lt;/h1&gt;
&lt;p&gt;今回は使わなかったコマンドたち&lt;/p&gt;
&lt;p&gt;既に入っているRubyをpikへ追加するaddと削除するuninstall&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ pik add Rubyのパス(ruby.exeのある場所)
$ pik uninstall ruby -v 187&lt;/pre&gt;
&lt;p&gt;※コマンドはバージョンによって若干記述が違う様子。特にsw or switch or useあたり？&lt;/p&gt;
&lt;div class=&quot;footnote&quot;&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn1&quot; name=&quot;f1&quot;&gt;*1&lt;/a&gt;: config.ymlを開きっぱにしている場合、Permission deniedがでる&lt;/p&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>Rubyのgemバージョン管理ができるBundlerを実行できなかった</title>
   <link href="http://gosyujin.github.io/2011/10/03/1317642705"/>
   <updated>2011-10-03T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2011/10/03/1317642705</id>
   <content type="html">&lt;h1&gt;あらすじ&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;gemでライブラリを入れまくり、updateしまくりでバージョンの不整合が起こり復旧不可能になった&lt;/li&gt;&lt;li&gt;同じ過ちは繰り返したくない…ので今度はうまく管理したい&lt;/li&gt;&lt;li&gt;Bundlerを使えばgemのバージョン管理ができるみたい&lt;ul&gt;&lt;li&gt;設定さえあればどの環境も同じにする事が出来る？&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;Bundlerを入れてみます。&lt;/p&gt;
&lt;h1&gt;環境&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;Windows XP&lt;/li&gt;&lt;li&gt;Ruby 1.8.7&lt;ul&gt;&lt;li&gt;RubyのパスはC:\ruby&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;必要なDLLなど&lt;ul&gt;&lt;li&gt;zlib.dll&lt;/li&gt;&lt;li&gt;readline.dll&lt;/li&gt;&lt;li&gt;iconv.dll&lt;/li&gt;&lt;li&gt;iconv.lib&lt;/li&gt;&lt;li&gt;iconv_a.lib&lt;/li&gt;&lt;li&gt;ssleay32.dll&lt;/li&gt;&lt;li&gt;libeay32.dll&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;手順&lt;/h1&gt;
&lt;h2&gt;Rubygemsインストール&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://rubyforge.org/frs/?group_id=126&quot;&gt;RubyForge: RubyGems: Project Filelist&lt;/a&gt;よりRubygemsをDL。バージョンは1.7.2&lt;ul&gt;&lt;li&gt;gemは入っていないとするので、zipファイルからインストールする。&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;$ ruby setup.rb
RubyGems 1.7.2 installed

・ｿ=== 1.7.2 / 2011-04-05

 * 1 Bug Fix:
   * Warn on loading bad spec array values (ntlm-http gem has nil in its cert
     chain)


------------------------------------------------------------------------------

RubyGems installed the following executables:
        C:/ruby/bin/gem&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;バージョン、環境を確認&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;$ gem -v
1.7.2

$ gem env
RubyGems Environment:
  - RUBYGEMS VERSION: 1.7.2
  - RUBY VERSION: 1.8.7 (2010-12-23 patchlevel 330) [i386-mswin32]
  - INSTALLATION DIRECTORY: C:/ruby/lib/ruby/gems/1.8
  - RUBY EXECUTABLE: C:/ruby/bin/ruby.exe
  - EXECUTABLE DIRECTORY: C:/ruby/bin
  - RUBYGEMS PLATFORMS:
    - ruby
    - x86-mswin32-60
  - GEM PATHS:
     - C:/ruby/lib/ruby/gems/1.8
     - %USERPROFILE%/.gem/ruby/1.8
  - GEM CONFIGURATION:
     - :update_sources =&amp;gt; true
     - :verbose =&amp;gt; true
     - :benchmark =&amp;gt; false
     - :backtrace =&amp;gt; false
     - :bulk_threshold =&amp;gt; 1000
  - REMOTE SOURCES:
     - http://rubygems.org/&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;C:\ruby\binにgemコマンドが格納される&lt;/li&gt;&lt;li&gt;C:\ruby\lib\ruby\site_ruby\1.8がgemのパスとなっており、rbconfigやrubygemsが作成されている&lt;ul&gt;&lt;li&gt;rubyフォルダ下と%USERPROFILE%下に.gemフォルダも定義されている。各ユーザ用かな？&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;※proxyエラー等が起こった場合は~/に.gemrcファイルを作成し、http-proxy: PROXY_URLと記述すればよい？&lt;/p&gt;
&lt;h2&gt;Bundlerインストール&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;Bundlerは最新版を導入する(0.X系と1.X系で大きく変わったところがあるらしいので気をつける)&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;$ gem install bundler
Fetching: bundler-1.0.20.gem (100%)
Successfully installed bundler-1.0.20
1 gem installed
Installing ri documentation for bundler-1.0.20...
Installing RDoc documentation for bundler-1.0.20...&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;bundleコマンドが実行できるようになるが、今うってもエラーが出る。&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;$ bundle install
Could not locate Gemfile&lt;/pre&gt;
&lt;p&gt;Gemfileを作成する必要があるようだ。&lt;/p&gt;
&lt;h2&gt;Gemfile作成&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;書式等は &lt;a href=&quot;http://gembundler.com/gemfile.html&quot;&gt;Bundler: The best way to manage Ruby applications&lt;/a&gt; 参照。&lt;/li&gt;&lt;li&gt;少なくとも一つはRubygemsのサーバURLを記述する必要がある&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;source :rubygems
source &amp;quot;http://rubygems.org&amp;quot;&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;次にインストールするgemとバージョンを指定する&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;gem &#39;rails&#39;, &#39;2.3.5&#39;&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;バージョンの指定方法は以下仮でまとめ&lt;/li&gt;&lt;/ul&gt;
&lt;table&gt;&lt;tr&gt;&lt;th&gt;記載なし&lt;/th&gt;&lt;td&gt;最新版&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;&#39;1.5&#39;&lt;/th&gt;&lt;td&gt;1.5&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;&#39;&gt;=1.5&#39;&lt;/th&gt;&lt;td&gt;1.5以上の最新版？&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;&#39;~&gt;1.5&#39;&lt;/th&gt;&lt;td&gt;1.5以上2.0未満？&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;ul&gt;&lt;li&gt;プロジェクトに配備&lt;ul&gt;&lt;li&gt;プロジェクトのルートフォルダにGemfileを配備(redmineで使おうと思ったらredmine/Gemfileとする)&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;gemインストール&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;下記コマンドでPATHへgemがインストールされる&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;bundle install PATH&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;お勧めはプロジェクトルート/vendor/bundleらしい&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;$ bundle install vendor/bundle
Fetching source index for http://rubygems.org/
Fetching source index for http://rubygems.org/
Installing rake (0.9.2)
Installing activesupport (2.3.5)
Installing rack (1.0.1)
Installing actionpack (2.3.5)
Installing actionmailer (2.3.5)
Installing activerecord (2.3.5)
Installing activeresource (2.3.5)
Installing rails (2.3.5)
Using bundler (1.0.20)
Your bundle is complete! It was installed into ./vendor/bundle
The path argument to `bundle install` is deprecated. It will be removed in version 1.1. Please use `bundle install --path vendor/bundle` instead.&lt;/pre&gt;
&lt;p&gt;するとこんな感じでファイルが作成される。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;redmine # redmineルートフォルダ
┃
┣(略)redmine系のファイルとフォルダ
┃
┣Gemfile # 今作ったGemfile
┣Gemfile.lock # Gemfileからバージョンの整合性などを確認している？
┣.bundle
┃┗config # bundleのコンフィグファイル
┗vendor
　┃
　┣(略)元々あるpluginなど
　┃
　┗bundle # インストールしたgem格納フォルダ
　　┗ruby
　　　┗...&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;ところで、インストール後のコメントを見るとこのbundle install PATHコマンドは1.1でなくなる予定のようで、今後はきちんと--pathオプションを指定しなければならないらしい&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;bundle install --path vendor/bundle
Fetching source index for http://rubygems.org/
Fetching source index for http://rubygems.org/
Installing rake (0.9.2)
Installing activesupport (2.3.5)
Installing rack (1.0.1)
Installing actionpack (2.3.5)
Installing actionmailer (2.3.5)
Installing activerecord (2.3.5)
Installing activeresource (2.3.5)
Installing rails (2.3.5)
Using bundler (1.0.20)
Your bundle is complete! It was installed into ./vendor/bundle&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;また、システムに同じgemが入っていたらシステム優先とする--disable-shared-gemsオプションというものがあるようだが、最新バージョンではやらなくてよいみたい？　「--pathオプション使え」と出てる&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt; bundle install vendor/bundle --disable-shared-gems
The disable-shared-gem option is no longer available.

Instead, use `bundle install` to install to your system,
or `bundle install --path path/to/gems` to install to an isolated
location. Bundler will resolve relative paths relative to
your `Gemfile`.&lt;/pre&gt;
&lt;h1&gt;確認(ここから先は失敗したので自分用備忘録…)&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;gemにはbundler以外なし&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;gem list

*** LOCAL GEMS ***

bundler (1.0.20)&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;bundlerで導入したgemを確認するにはプロジェクトのルートフォルダ下で以下コマンド&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;bundle show
Gems included by the bundle:
  * actionmailer (2.3.5)
  * actionpack (2.3.5)
  * activerecord (2.3.5)
  * activeresource (2.3.5)
  * activesupport (2.3.5)
  * bundler (1.0.20)
  * rack (1.0.1)
  * rails (2.3.5)
  * rake (0.9.2)&lt;/pre&gt;
&lt;h2&gt;プロジェクトでbundle内のgemを読み込むようにする&lt;/h2&gt;
&lt;p&gt;今回はredmineを参考にしてみる&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;config/boot.rbを修正&lt;/li&gt;&lt;li&gt;config/preinitializer.rbを作成&lt;/li&gt;&lt;/ul&gt;
&lt;ul&gt;&lt;li&gt;i18nが足りないと言われたのでGemfileに足し再度インストール&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;ruby script\server -e production
Missing the i18n 0.4.2 gem. Please `gem install -v=0.4.2 i18n`&lt;/pre&gt;
&lt;pre class=&quot;&quot;&gt;gem &#39;rails&#39;, &#39;2.3.5&#39;
gem &#39;i18n&#39;, &#39;0.4.2&#39; # Add&lt;/pre&gt;
&lt;pre class=&quot;&quot;&gt;$ ruby script\server -e production
C:/ruby/lib/ruby/site_ruby/1.8/rubygems/custom_require.rb:32:in `gem_original_require&#39;: no such file to load -- tree (MissingSourceFile)
        from C:/ruby/lib/ruby/site_ruby/1.8/rubygems/custom_require.rb:32:in `require&#39;&lt;/pre&gt;
&lt;p&gt;うーん。treeがない…らしい？　前回インストールしてたんだったっけ？&lt;/p&gt;
&lt;p&gt;gem install tree&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ ruby script\server -e production
=&amp;gt; Booting WEBrick
=&amp;gt; Rails 2.3.5 application starting on http://0.0.0.0:3000
C:/redmine/config/../vendor/rails/railties/lib/rails/gem_dependency.rb:119:Warning: Gem::Dependency#version_requirements is deprecated and will be removed on or after August 2010.  Use #requirement
C:/ruby/lib/ruby/site_ruby/1.8/rubygems/custom_require.rb:31:in `gem_original_require&#39;: no such file to load -- spreadsheet (MissingSourceFile)&lt;/pre&gt;
&lt;p&gt;spreadsheetも足りない？&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;gem install spreadsheet
||,

&amp;gt;||
$ ruby script\server -e production
=&amp;gt; Booting WEBrick
=&amp;gt; Rails 2.3.5 application starting on http://0.0.0.0:3000
C:/redmine/config/../vendor/rails/railties/lib/rails/gem_dependency.rb:119:Warning: Gem::Dependency#version_requirements is deprecated and will be removed on or after August 2010.  Use #requirement
Missing these required gems:
  rubytree
  coderay  ~&amp;gt; 0.9.7

You&#39;re running:
  ruby 1.8.7.330 at C:/ruby/bin/ruby.exe
  rubygems 1.3.7 at %userprofile%/.gem/ruby/1.8, C:/ruby/lib/ruby/gems/1.8

Run `rake gems:install` to install the missing gems.&lt;/pre&gt;
&lt;p&gt;まだ足りん？rubytreeとcoderay？　Run rake gems:installするといいと書いてある…。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ rake gems:install
rake/rdoctask is deprecated.  Use rdoc/task instead (in RDoc 2.4.2+)
WARNING: &#39;task :t, arg, :needs =&amp;gt; [deps]&#39; is deprecated.  Please use &#39;task :t, [args] =&amp;gt; [deps]&#39; instead.
    at C:/redmine/lib/tasks/email.rake:170
gem.bat install rubytree

unrecognized option `--files&#39;

For help on options, try &#39;rdoc --help&#39;

========================================================================

 Thank you for installing rubytree.

              WARNING: SIGNIFICANT API CHANGE in 0.8.0 !
              ------------------------------------------

 Please note that as of 0.8.0 the CamelCase method names are DEPRECATED.

 The new method names follow the ruby_convention (separated by &#39;_&#39;).

 The old CamelCase methods still work (a warning will be displayed),
 but may go away in the future.

 Details of the API changes are documented in the API-CHANGES file.

========================================================================
Successfully installed rubytree-0.8.1
1 gem installed
Installing ri documentation for rubytree-0.8.1...
gem.bat install coderay --version &amp;quot;~&amp;gt; 0.9.7&amp;quot;
Successfully installed coderay-0.9.8
1 gem installed
Installing ri documentation for coderay-0.9.8...
Installing RDoc documentation for coderay-0.9.8...&lt;/pre&gt;
&lt;p&gt;…ここで一回断念。どうもRedmineにもともと入っていたファイルを消してしまっている疑惑が発覚したのだが、Redmineをいれなおしてもbundlerからだと起動できなかった……。&lt;/p&gt;
&lt;p&gt;うーん。普通のプロジェクトだと使えたのでローカルに存在しているRedmineのどこかでしくってると思うんだけど……。&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>.msgファイルをパースして中から添付ファイルを抜き出す</title>
   <link href="http://gosyujin.github.io/2011/09/30/1317312438"/>
   <updated>2011-09-30T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2011/09/30/1317312438</id>
   <content type="html">&lt;p&gt;正確にはRubyというには微妙なんですが…。&lt;/p&gt;
&lt;h1&gt;前回までのあらすじ&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;選んだメール(本文と添付ファイル)をまとめてDLしてくるだけの簡単なお仕事はできるようになった&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;2011-05-17-1305560776&quot;&gt;2011-05-17-1305560776&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;2011-07-09-1310140318&quot;&gt;2011-07-09-1310140318&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;2011-08-23-1314103220&quot;&gt;2011-08-23-1314103220&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;しかし、社内セキュリティGWの設定？　のためかzipとかexeとか怪しい拡張子が付いている添付ファイルは一旦msgファイルに固められるという仕様のためそのままでは添付ファイルが見れない。&lt;/p&gt;
&lt;p&gt;こういうメールが&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;メール
┗添付ファイル.zip&lt;/pre&gt;
&lt;p&gt;届いた時にはこうなっている &lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;メール
┗ラップ.msg(＼あやしいファイルだから注意してDLしてね／)
　┗本来の添付ファイル.zip&lt;/pre&gt;
&lt;p&gt;なんとかRubyからmsgファイル内を解析して添付ファイルを引っこ抜いて保存ができまいか…というのが今回の問題。&lt;/p&gt;
&lt;h1&gt;結論&lt;/h1&gt;
&lt;p&gt;以下のライブラリを駆使して実現しました。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;msgparser(Auxiliiという所のJava用msgファイルパースライブラリ)&lt;/li&gt;&lt;li&gt;jrb(Java Ruby Bridge: RubyからJavaVMを操作できるライブラリ)&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;一応Rubyでmsgファイルを解析するライブラリも探してみたのですが、あまりないのかな？　&lt;a href=&quot;http://en.sourceforge.jp/projects/sfnet_ssfiledll/downloads/SSFileDLL%20%28MAPI%29/1.0/SSFileDLL-MAPI-1.0-Source.zip/&quot;&gt;Downloading File SSFileDLL-MAPI-1.0-Source.zip - Outlook msg file parser DLL - SourceForge.JP&lt;/a&gt; こういうdllは見つけたのですが、MAPIがよくわからん上に説明を見る限りHasAttach(添付ファイルを持ってるか持ってないか？)くらいしかわからない？　ようなのであきらめました。&lt;/p&gt;
&lt;p&gt;あと、msgparserはJavaライブラリなので当初はJRubyで書けば何とかなるかなと思ってました。簡単なサンプルは &lt;a href=&quot;http://www.rgagnon.com/javadetails/java-0613.html&quot;&gt;Read an Outlook MSG file - Real&amp;#39;s Java How-to&lt;/a&gt; このページのような感じ。が、今まで書いたコードをJRubyで実行すると失敗してしまったので方向転換；；　RubyからJavaVMを操作できるrjbというライブラリを使う事に。&lt;/p&gt;
&lt;h1&gt;ダウンロード・インストール&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;msgparser&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://auxilii.com/msgparser/Page.php?id=16000&quot;&gt;msgparser - Downloads...&lt;/a&gt; よりmsgparserをDL&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://poi.apache.org/poifs/&quot;&gt;Apache POI - POIFS - Java implementation of the OLE 2 Compound Document format&lt;/a&gt;や&lt;a href=&quot;http://www.freeutils.net/source/jtnef/&quot;&gt;JTNEF - Java TNEF package&lt;/a&gt;とかが必要になるのですが、上記のmsgparse.zipの中に全部入ってます&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f1&quot; title=&quot;complete package including source code, binaries and third party librariesと書いてあった&quot; name=&quot;fn1&quot;&gt;*1&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;distよりmasparser-X.XX.jarを、libよりpoi-X.X-YYYYMMDD.jarとtnef-X.X.X.jarを取得し、同じプロジェクト内にコピー。とりあえずlibフォルダを作ってそこに入れました&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;rjb&lt;ul&gt;&lt;li&gt;gemで。ただし、当然というかJavaが入っていないと失敗する模様。環境変数JAVA_HOMEも設定している必要があるみたい&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;gem install rjb&lt;/pre&gt;
&lt;h1&gt;ソース&lt;/h1&gt;
&lt;p&gt;ソース全体は &lt;a href=&quot;https://github.com/gosyujin/outlook_for_ruby&quot;&gt;gosyujin/outlook_for_ruby · GitHub&lt;/a&gt; 。msgParse.rbが本体、ライブラリがlibに入っています。&lt;/p&gt;
&lt;p&gt;使い方としてはMsgParseをnewしてinputMsgで.msgファイルのパス指定、saveFileで添付ファイルぶっこぬいて出力先に保存としたい。こんな感じで。&lt;/p&gt;
&lt;pre class=&quot;ruby&quot;&gt;    msg = MsgParse.new
    msg.inputMsg(MSGFILE)
    msg.saveFile(SAVEDIR)&lt;/pre&gt;
&lt;p&gt;という事でMsgParser&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f2&quot; title=&quot;ライブラリと同じ名前にしてしまった…。&quot; name=&quot;fn2&quot;&gt;*2&lt;/a&gt;&lt;/span&gt;クラスを作成。ソースは &lt;a href=&quot;https://github.com/gosyujin/outlook_for_ruby/blob/master/msgParse.rb&quot;&gt;outlook_for_ruby/msgParse.rb at master · gosyujin/outlook_for_ruby · GitHub&lt;/a&gt; 。まずは初期化から。&lt;/p&gt;
&lt;pre class=&quot;ruby&quot;&gt;    include Rjb
    
    # JavaクラスのImport、Jarの読み込み
    # 初期化処理を行う
    def initialize
        #Rjb::load(&#39;./&#39;)
        initJavaClass()
        addJar()
        @msg = nil
    end
    
    # JavaのクラスをImportする
    def initJavaClass()
        @system = import(&amp;quot;java.lang.System&amp;quot;)
#        @string = import(&amp;quot;java.lang.String&amp;quot;)
#        @list = import(&amp;quot;java.util.List&amp;quot;)
        @fileOutputStream = import(&amp;quot;java.io.FileOutputStream&amp;quot;)
    end
    
    # Jarを読みこむ
    def addJar()
        Rjb::add_jar(File.expand_path(&#39;lib/tnef-1.3.1.jar&#39;))
        Rjb::add_jar(File.expand_path(&#39;lib/poi-3.2-FINAL-20081019.jar&#39;))
        Rjb::add_jar(File.expand_path(&#39;lib/msgparser-1.10.jar&#39;))
        @msgParser = import(&amp;quot;com.auxilii.msgparser.MsgParser&amp;quot;)
        @fileAttachment = import(&amp;quot;com.auxilii.msgparser.attachment.FileAttachment&amp;quot;)
    end&lt;/pre&gt;
&lt;p&gt;java.lang.Systemとかjava.lang.Stringとか使う予定のあるクラスは全て明示的にimportしてやる必要がある。今回はjava.lang.Systemとjava.io.FileOutputStreamを使用する。&lt;/p&gt;
&lt;p&gt;次にライブラリを読み込む。msgparserをDLしたときのtnef, poi, msgparserを追加する。追加後にcom.auxilii.msgparser.MsgParserとcom.auxilii.msgparser.attachment.FileAttachmentをimportする。※add_jarの順番でエラーになる。-classpathの記述？　に順番って関係あるんだっけ？&lt;/p&gt;
&lt;p&gt;これで今回使用したいクラスはRuby上から呼び出せるようになりました。次はファイル読み込み。&lt;/p&gt;
&lt;pre class=&quot;ruby&quot;&gt;    # .msgファイルを読みこむ
    def inputMsg(path)
        @msg = @msgParser.new.parseMsg(path)
    end&lt;/pre&gt;
&lt;p&gt;parseMsg(PATH)メソッドを使用し.msgファイルを読み込めるように。最後は.msgファイル内から添付ファイルをぶっこぬく！&lt;/p&gt;
&lt;pre class=&quot;ruby&quot;&gt;    # .msgファイルの添付ファイル数をカウントする
    def getAttachmentSize()
        @msg.getAttachments.size
    end
    
    # 添付ファイルをpathに保存する
    # 返り値は保存した添付ファイル名(の一つ)
    def saveFile(path)
        fileName = &amp;quot;&amp;quot;
        if getAttachmentSize() != 0 then
            for i in 0..getAttachmentSize - 1
                file = @msg.getAttachments.get(i)
                begin
                    fileName = file.getLongFilename
                rescue =&amp;gt; ex
                    puts &amp;quot;File name is including WAVE DASH?:#{ex}&amp;quot;
                    fileName = file.getFilename
                end
                out = @fileOutputStream.new(path + fileName)
                out.write(file.getData)
                puts &amp;quot;■.msgファイル抽出:#{fileName}&amp;quot;
                out.close
            end
        else
            puts &amp;quot;no temp file.&amp;quot;
        end
        return fileName
    end
end&lt;/pre&gt;
&lt;p&gt;はじめにgetAttachments.get(i)で添付ファイルを取得します。次に保存する時のファイル名として添付ファイル名を取得します。ファイル名を取得できるメソッドは2種類あります。getLongFilenameはファイル名をそのまま取得でき、getFilenameはファイル名を短縮して取得できます。&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f3&quot; title=&quot;TODOとして、添付ファイル名に波ダッシュが入っているとエラーになるので要調査…。&quot; name=&quot;fn3&quot;&gt;*3&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;ここまでやったら最後はFileOutputStream#writeにgetDataで取得した添付ファイルのバイト配列を渡してやればOK！&lt;/p&gt;
&lt;div class=&quot;footnote&quot;&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn1&quot; name=&quot;f1&quot;&gt;*1&lt;/a&gt;: complete package including source code, binaries and third party librariesと書いてあった&lt;/p&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn2&quot; name=&quot;f2&quot;&gt;*2&lt;/a&gt;: ライブラリと同じ名前にしてしまった…。&lt;/p&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn3&quot; name=&quot;f3&quot;&gt;*3&lt;/a&gt;: TODOとして、添付ファイル名に波ダッシュが入っているとエラーになるので要調査…。&lt;/p&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>Solarisのパッケージを作ってみる もう少し学んだ版</title>
   <link href="http://gosyujin.github.io/2011/09/14/1316002377"/>
   <updated>2011-09-14T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2011/09/14/1316002377</id>
   <content type="html">&lt;h1&gt;前回までのあらすじ&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;2011-09-12-1315826713&quot;&gt;2011-09-12-1315826713&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;もう少し調べてみた。&lt;/p&gt;
&lt;h1&gt;参考サイト&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://dlc.sun.com/osol/g11n/content/PACKINSTALL/ja/ch2buildpkg-11300.html&quot;&gt;pkginfo ファイルの作成 - アプリケーションパッケージ開発者ガイド&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;必要なもの&lt;/h1&gt;
&lt;dl&gt;&lt;dt&gt;パッケージコンテンツ&lt;/dt&gt;&lt;dd&gt;ディレクトリ含めたソース一式。ざっくりソース一式とか言ってるのでここは作るものによってもう少しブレークダウンする必要がある&lt;/dd&gt;&lt;dt&gt;pkginfoファイル&lt;/dt&gt;&lt;dd&gt;パッケージ名等のパラメータを定義するファイル。コマンドではなくファイル。&lt;/dd&gt;&lt;dt&gt;Prototypeファイル&lt;/dt&gt;&lt;dd&gt;パッケージのコンポーネント一覧を記載するファイル&lt;/dd&gt;&lt;/dl&gt;
&lt;h1&gt;場合によって用意するもの(必須ではない)&lt;/h1&gt;
&lt;dl&gt;&lt;dt&gt;compverファイル&lt;/dt&gt;&lt;dd&gt;パッケージと互換性がある以前のバージョンのパッケージの定義ファイル&lt;/dd&gt;&lt;dt&gt;dependファイル&lt;/dt&gt;&lt;dd&gt;パッケージと関連があるパッケージの定義ファイル&lt;/dd&gt;&lt;dt&gt;spaceファイル&lt;/dt&gt;&lt;dd&gt;インストールに必要なディスク容量の定義ファイル&lt;/dd&gt;&lt;dt&gt;copyrightファイル&lt;/dt&gt;&lt;dd&gt;インストール時に表示される著作権メッセージの定義ファイル&lt;/dd&gt;&lt;/dl&gt;
&lt;h1&gt;パッケージコンテンツの作成&lt;/h1&gt;
&lt;p&gt;作成ディレクトリと内訳。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ pwd
/home/kk_Ataka/pkgroot/

MYAPpkg┳bin┳proccess
　　　 ┃　 ┗start
　　　 ┣lib━common.lib
　　　 ┗etc━etcFile&lt;/pre&gt;
&lt;p&gt;これを/直下にインストールしたい。&lt;/p&gt;
&lt;h1&gt;pkginfoファイル作成&lt;/h1&gt;
&lt;p&gt;/にインストールしたいので、BASEDIRが/でいいのか？&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;PKG=&amp;quot;MYAPpkg&amp;quot;
NAME=&amp;quot;MyApplyPackage&amp;quot;
ARCH=&amp;quot;sparc&amp;quot;
VERSION=&amp;quot;release 1.0 /svn revision r222&amp;quot;
CATEGORY=&amp;quot;application&amp;quot;
DESC=&amp;quot;This is my test packages.&amp;quot;
VENDOR=&amp;quot;MYAPPLY&amp;quot;
BASEDIR=&amp;quot;/&amp;quot;&lt;/pre&gt;
&lt;h2&gt;pkginfoファイル書式&lt;/h2&gt;
&lt;table&gt;&lt;tr&gt;&lt;th&gt;PKG&lt;/th&gt;&lt;td&gt;必須&lt;/td&gt;&lt;td&gt;32文字以内&lt;/td&gt;&lt;td&gt;パッケージの省略名 英数字で構成、頭に数字は× 予約語(install, new等)は使用できない。最初の4文字は社名などがお勧め&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;NAME&lt;/th&gt;&lt;td&gt;必須&lt;/td&gt;&lt;td&gt;256文字以内&lt;/td&gt;&lt;td&gt;パッケージの完全名 英数字で構成 必要なタイミング、インストールするパーティション等を明瞭に記載する&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f1&quot; title=&quot;たとえばこんな感じらしい。「Chip designers need CAD application software to design abc chips.  Runs only on xyz hardware and is installed in the usr partition.」&quot; name=&quot;fn1&quot;&gt;*1&lt;/a&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;ATCH&lt;/th&gt;&lt;td&gt;必須&lt;/td&gt;&lt;td&gt;16文字以内&lt;/td&gt;&lt;td&gt;アーキテクチャ 複数対応している場合はカンマ区切り&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;VERSION&lt;/th&gt;&lt;td&gt;必須&lt;/td&gt;&lt;td&gt;256文字以内&lt;/td&gt;&lt;td&gt;バージョン 先頭に(は×&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;CATEGORY&lt;/th&gt;&lt;td&gt;必須&lt;/td&gt;&lt;td&gt;16文字以内&lt;/td&gt;&lt;td&gt;カテゴリ 英数字で構成 最低でもsystemかapplicationには属する 複数に属している場合はカンマ区切り&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;DESC&lt;/th&gt;&lt;td&gt;必須ではない&lt;/td&gt;&lt;td&gt;?&lt;/td&gt;&lt;td&gt;パッケージの説明。description&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;VENDOR&lt;/th&gt;&lt;td&gt;必須ではない&lt;/td&gt;&lt;td&gt;?&lt;/td&gt;&lt;td&gt;社名など&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;BASEDIR&lt;/th&gt;&lt;td&gt;必須ではない&lt;/td&gt;&lt;td&gt;?&lt;/td&gt;&lt;td&gt;ファイルのデフォルトの位置&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;PSTAMP&lt;/th&gt;&lt;td&gt;必須ではない&lt;/td&gt;&lt;td&gt;?&lt;/td&gt;&lt;td&gt;プロダクションのスタンプ。pkgmapで使用されるらしい。デフォルト値は「マシン名YYYYMMDDHHMISS」&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;h1&gt;Prototypeファイル作成&lt;/h1&gt;
&lt;p&gt;前回はviでパッケージにしたいパスをゴリゴリ書いてPrototypeファイルに変換したが、Prototype DIRで指定したDIRの下のファイルをPrototypeファイルのフォーマットにしてくれた。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ pkgproto ./MYAPpkg/
d none MYAPpkg 0755 kk_Ataka users
d none MYAPpkg/bin 0755 kk_Ataka users
f none MYAPpkg/bin/proccess 0644 kk_Ataka users
f none MYAPpkg/bin/testbin 0644 kk_Ataka users
d none MYAPpkg/lib 0755 kk_Ataka users
f none MYAPpkg/lib/lib.lib 0644 kk_Ataka users
d none MYAPpkg/etc 0755 kk_Ataka users
f none MYAPpkg/etc/etcfile 0644 kk_Ataka users&lt;/pre&gt;
&lt;p&gt;これをリダイレクトさせてPrototypeファイルを作成する。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ pkgproto ./MYAPpkg/ &amp;gt;&amp;gt; Prototype&lt;/pre&gt;
&lt;p&gt;作成したPrototypeファイルを微調整。pkginfoファイルを読み込むようにするためファイルの先頭に以下を記述する。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;i pkginfo&lt;/pre&gt;
&lt;h2&gt;Prototypeファイル書式&lt;/h2&gt;
&lt;p&gt;上の生成されたファイルを見る限り、かっこのものはなくてもよさげ&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;(part) ftype class path (major) (minor) mode owner group&lt;/pre&gt;
&lt;table&gt;&lt;tr&gt;&lt;th&gt;part&lt;/th&gt;&lt;td&gt;パッケージ オブジェクトを細かくグループ化できる、省略可能な数値フィールドです。デフォルト値は part 1 です。…らしい。&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;ftype&lt;/th&gt;&lt;td&gt;オブジェクトの種類を指定するフィールド(後述)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;class&lt;/th&gt;&lt;td&gt;オブジェクトが所属するインストールクラス&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;path&lt;/th&gt;&lt;td&gt;パッケージコンテンツのインストール場所を示すパス(後述)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;major&lt;/th&gt;&lt;td&gt;ブロック特殊デバイスまたは文字特殊デバイスのためのメジャーデバイス番号です。…らしい。&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;minor&lt;/th&gt;&lt;td&gt;ブロック特殊デバイスまたは文字特殊デバイスのためのマイナーデバイス番号です。…らしい。&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;mode&lt;/th&gt;&lt;td&gt;オブジェクトの実行権限を指定するフィールド&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;owner&lt;/th&gt;&lt;td&gt;オブジェクトの所有者&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;group&lt;/th&gt;&lt;td&gt;オブジェクトが所属するグループ&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;h2&gt;ftype&lt;/h2&gt;
&lt;p&gt;fとdが主に使用する事になるかな。&lt;/p&gt;
&lt;table&gt;&lt;tr&gt;&lt;th&gt;f&lt;/th&gt;&lt;td&gt;実行ファイル等&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;d&lt;/th&gt;&lt;td&gt;ディレクトリ&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;l&lt;/th&gt;&lt;td&gt;リンクファイル&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;s&lt;/th&gt;&lt;td&gt;シンボリックリンク&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;i&lt;/th&gt;&lt;td&gt;情報ファイル・インストールスクリプト&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;e&lt;/th&gt;&lt;td&gt;インストール・削除時に編集するファイル&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;v&lt;/th&gt;&lt;td&gt;ログファイル等の揮発性ファイル&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;x&lt;/th&gt;&lt;td&gt;このパッケージでのみアクセスできる排他的なディレクトリ&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;p&lt;/th&gt;&lt;td&gt;名前付きパイプ&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;c&lt;/th&gt;&lt;td&gt;文字特殊デバイス&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;b&lt;/th&gt;&lt;td&gt;ブロック特殊デバイス&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;h2&gt;path&lt;/h2&gt;
&lt;p&gt;絶対パス指定と相対パス指定があり、相対パス指定はさらに集合的再配置と個別再配置にわかれる。今回はBASEDIRを指定しているから集合的再配置ってやつだろうか。&lt;/p&gt;
&lt;table&gt;&lt;tr&gt;&lt;th&gt;絶対パス&lt;/th&gt;&lt;td&gt;Prototypeファイル内に絶対パスで指定 再配置する事はできない pkginfoファイルのBASEDIRは無視される？&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;集合的再配置&lt;/th&gt;&lt;td&gt;Prototypeファイル内に相対パスで指定 相対パス+pkginfoのBASEDIRを元にインストール？&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;個別再配置&lt;/th&gt;&lt;td&gt;Prototypeファイル内に相対パスで指定 そのパスの中にインストール変数を指定し、requestスクリプトというものを作成 インストール時に対話的にパスを決定する？&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;h1&gt;パッケージの構築&lt;/h1&gt;
&lt;p&gt;pkginfoファイルとPrototypeファイルを作成したため、構成はこんな感じになった。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ pwd
/home/kk_Ataka/pkgroot/

MYAPpkg┳bin┳proccess
　　　 ┃　 ┗start
　　　 ┣lib━common.lib
　　　 ┗etc━etcFile
Prototype
pkginfo
package━&lt;/pre&gt;
&lt;p&gt;同じパスでパッケージ作ろうとすると警告が出たので、パッケージ保存用にpackageディレクトリ作成。そしてpackageにパッケージ作成。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ pwd
/home/kk_Ataka/pkgroot/
$ pkgmk -o -r . -d ./package
## prototype ファイルから pkgmap を作成中です。
## pkginfo ファイルを処理中です。
    警告: パラメータ &amp;lt;PSTAMP&amp;gt; の値は &amp;quot;XXXXXXXX20110914163337&amp;quot; に設定されます。
    警告: パラメータ &amp;lt;CLASSES&amp;gt; の値は &amp;quot;none&amp;quot; に設定されます。
## pkgmap の 8 個の項目をボリューム単位で分割しようとしています。
第  1 部-- 37 ブロック, 23 エントリ
## 1 部をパッケージ処理中です。
/home/kk_Ataka/pkgroot/package/MYAPpkg/pkgmap
/home/kk_Ataka/pkgroot/package/MYAPpkg/pkginfo
/home/kk_Ataka/pkgroot/package/MYAPpkg/reloc/MYAPpkg/bin/process
/home/kk_Ataka/pkgroot/package/MYAPpkg/reloc/MYAPpkg/bin/start
/home/kk_Ataka/pkgroot/package/MYAPpkg/reloc/MYAPpkg/etc/etcFile
/home/kk_Ataka/pkgroot/package/MYAPpkg/reloc/MYAPpkg/lib/common.lib
## 制御スクリプトの妥当性検査中です。
## パッケージ処理は完了しました。&lt;/pre&gt;
&lt;p&gt;パッケージを作るとこうなる。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ pwd
/home/kk_Ataka/pkgroot/

MYAPpkg┳bin┳proccess
　　　 ┃　 ┗start
　　　 ┣lib━common.lib
　　　 ┗etc━etcFile
Prototype
pkginfo
package━MYAPpkg┳pkginfo
　　　　　　　　┣pkgmap
　　　　　　　　┗reloc━MYAPpkg┳bin┳proccess
　　　　　　　　　　　　　　　　┃　 ┗start
　　　　　　　　　　　　　　　　┣lib━common.lib
　　　　　　　　　　　　　　　　┗etc━etcFile&lt;/pre&gt;
&lt;p&gt;最後にできたパッケージをひとつに固める。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ pwd
/home/kk_Ataka/pkgroot/

$ pkgtrans ./package MYAPpkg.pkg

The following packages are available:
  1  MYAPpkg     MyApplyPackage
                 (sparc) release 1.0 /svn revision r222

Select package(s) you wish to process (or &#39;all&#39; to process
all packages). (default: all) [?,??,q]:
Transferring &amp;lt;MYAPpkg&amp;gt; package instance&lt;/pre&gt;
&lt;p&gt;まだよくわかっていないが、第一引数には作成したパッケージのあるディレクトリ(package)を指定してやらないといけない。第二引数は相対パスにすると第一引数で指定したパス(package)からの相対になる。&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f2&quot; title=&quot;絶対パスは関係ない&quot; name=&quot;fn2&quot;&gt;*2&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h1&gt;パッケージインストール、アンインストール&lt;/h1&gt;
&lt;pre class=&quot;&quot;&gt;$ pkgadd -d package/MYAPpkg.pkg&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;d をつけないと/var/spool/pkgの下を見に行く。&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;$ pkgrm MYAPpkg&lt;/pre&gt;
&lt;p&gt;pkginfoファイルのPKGで定義した名称で選択。探す場合はpkginfoコマンドから。&lt;/p&gt;
&lt;h1&gt;以下、コマンド。&lt;/h1&gt;
&lt;h2&gt;pkgproto(コマンド)&lt;/h2&gt;
&lt;p&gt;Prototypeファイルを作成するコマンド。(まだよくわかってない)&lt;/p&gt;
&lt;h2&gt;pkgmk(コマンド)&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;pkgmk -o&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;パッケージに上書き。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;pkgmk -d DEVICE&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;指定したDEVICE(パスでもいい)にパッケージが作成される。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;pkgmk -r ROOTPATH&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;パッケージのルートパス指定？&lt;/p&gt;
&lt;h2&gt;pkginfo(コマンド)&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;pkginfo -i&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;現在インストールされているパッケージ情報を表示する&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;application SMCsvn1612                       subversion
system      TESTPKG                          This is a Test Package.&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;pkginfo -l PKG&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;指定したパッケージの内容を表示する。必須項目しか記載しなかったTESTPKGはこんな感じ。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ pkginfo -l TESTPKG
   PKGINST:  TESTPKG
      NAME:  This is a Test Package.
  CATEGORY:  system
      ARCH:  sparc
   VERSION:  1.0
   BASEDIR:  /
    PSTAMP:  XXXXXXXX20110912170357
  INSTDATE:  9月 12 2011 17:21
    STATUS:  完全にインストールされました。
     FILES:        4 のインストールされたパス名
                   1 の共有パス名
                   3 のディレクトリ&lt;/pre&gt;
&lt;p&gt;ちなみにzshはこう。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ pkginfo -l SUNWzsh
   PKGINST:  SUNWzsh
      NAME:  Z shell (zsh)
  CATEGORY:  system
      ARCH:  sparc
   VERSION:  11.10.0,REV=2005.01.08.05.16
   BASEDIR:  /
    VENDOR:  Sun Microsystems, Inc.
      DESC:  Z shell (zsh)
    PSTAMP:  sfw1020050108052452
  INSTDATE:  Jun 13 2011 09:41
   HOTLINE:  Please contact your local service provider
    STATUS:  完全にインストールされました。
     FILES:      594 のインストールされたパス名
                   6 の共有パス名
                   1 のリンクされたファイル
                  32 のディレクトリ
                  30 の実行可能ファイル
                5585 ブロック (概算値) が使われました&lt;/pre&gt;
&lt;p&gt;Subversionはこんな感じ。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ pkginfo -l SMCsvn1612
   PKGINST:  SMCsvn1612
      NAME:  subversion
  CATEGORY:  application
      ARCH:  sparc
   VERSION:  1.6.12
   BASEDIR:  /usr/local
    VENDOR:  The Subversion Group
    PSTAMP:  Steve Christensen
  INSTDATE:  7月 22 2011 16:21
     EMAIL:  steve@smc.vnet.net
    STATUS:  完全にインストールされました。
     FILES:      787 のインストールされたパス名
                  32 の共有パス名
                 119 のディレクトリ
                 196 の実行可能ファイル
               32057 ブロック (概算値) が使われま&lt;/pre&gt;
&lt;h2&gt;pkgadd(コマンド)&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;pkgadd PKG&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;パッケージのインストール&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;pkgadd -n PKG&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;パッケージのインストール(選択肢を全てデフォルトとする)&lt;/p&gt;
&lt;h2&gt;pkgrm(コマンド)&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;pkgrm PKG&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;パッケージのアンインストール&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;pkgrm -n PKG&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;パッケージのアンインストール(選択肢を全てデフォルトとする)&lt;/p&gt;
&lt;div class=&quot;footnote&quot;&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn1&quot; name=&quot;f1&quot;&gt;*1&lt;/a&gt;: たとえばこんな感じらしい。「Chip designers need CAD application software to design abc chips.  Runs only on xyz hardware and is installed in the usr partition.」&lt;/p&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn2&quot; name=&quot;f2&quot;&gt;*2&lt;/a&gt;: 絶対パスは関係ない&lt;/p&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>Solarisのパッケージを作ってみる</title>
   <link href="http://gosyujin.github.io/2011/09/12/1315826713"/>
   <updated>2011-09-12T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2011/09/12/1315826713</id>
   <content type="html">&lt;p&gt;&lt;span class=&quot;deco&quot; style=&quot;color:#FF0000;&quot;&gt;もう少し学んだ。&lt;a href=&quot;2011-09-14-1316002377&quot;&gt;2011-09-14-1316002377&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h1&gt;あらすじ&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;Solarisのパッケージの作り方を学ぶ刻がきた&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;参考サイト&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://www.syuhitu.org/other/package/package.html&quot;&gt;パッケージの作成&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://www.nognog.com/techmemo/Solaris_Package_Creation_HOWTO.php&quot;&gt;うにっくすさんの覚え書き - Solaris - オリジナルパッケージの作成&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://blogs.oracle.com/yappri/entry/create_solaris_package&quot;&gt;http://blogs.oracle.com/yappri/entry/create_solaris_package&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;インストール後のファイルを作成する&lt;/h1&gt;
&lt;p&gt;作業用ディレクトリに移動する。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ cd /tmp/kk_Ataka&lt;/pre&gt;
&lt;p&gt;次にインストール後のファイル構成を作る。今回はこんなパッケージを作る。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;/home/kk_Ataka/testpkg
/home/kk_Ataka/testpkg/readme.txt&lt;/pre&gt;
&lt;p&gt;実際に作る。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ mkdir /home/kk_Ataka/testpkg
$ touch /home/kk_Ataka/testpkg/readme.txt&lt;/pre&gt;
&lt;p&gt;あと、パッケージ名を考えておく。今回はTESTPKGでいいかな。&lt;/p&gt;
&lt;h1&gt;Prototypeファイルを作成する&lt;/h1&gt;
&lt;p&gt;以下のような内容のファイルを作成し保存する。名前は適当でよいので今回はtext.txtとした。これはまだPrototypeファイルではない。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;/home/
/home/kk_Ataka/
/home/kk_Ataka/testpkg/
/home/kk_Ataka/testpkg/readme.txt&lt;/pre&gt;
&lt;p&gt;次に下記コマンドを実行する。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;pkgproto &amp;lt; test.txt &amp;gt; Prototype&lt;/pre&gt;
&lt;p&gt;成功したら、カレントディレクトリにPrototypeというファイルが出来ている。中身はこんなもん。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;d none /home 0755 root root
d none /home/kk_Ataka 0755 kk_Ataka users
d none /home/kk_Ataka/testpkg 0755 kk_Ataka users
f none /home/kk_Ataka/testpkg/readme.txt 0644 kk_Ataka users&lt;/pre&gt;
&lt;p&gt;左がファイルのタイプ？(d:ディレクトリ、f:ファイル)　noneはなんだろう？作成するファイル、権限、ユーザ名、グループ名かな。&lt;/p&gt;
&lt;p&gt;PrototypeファイルができたらPrototypeファイルの先頭に以下を追加する。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;i pkginfo&lt;/pre&gt;
&lt;p&gt;なのでこうなる。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;i pkginfo
d none /home 0755 root root
d none /home/kk_Ataka 0755 kk_Ataka users
d none /home/kk_Ataka/testpkg 0755 kk_Ataka users
f none /home/kk_Ataka/testpkg/readme.txt 0644 kk_Ataka users&lt;/pre&gt;
&lt;h2&gt;どっちがいいのか？&lt;/h2&gt;
&lt;p&gt;ちなみに、test.txtを一番最下層のファイルのみにするとこうなるが、どっちの方がいいんだろう。後で試してみる。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;/home/kk_Ataka/testpkg/readme.txt&lt;/pre&gt;
&lt;pre class=&quot;&quot;&gt;f none /home/kk_Ataka/testpkg/readme.txt 0644 kk_Ataka users&lt;/pre&gt;
&lt;h1&gt;pkginfoファイルを作成する&lt;/h1&gt;
&lt;p&gt;pkginfoファイルを作成する。中身はパッケージの情報。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;PKG=&amp;quot;TESTPKG&amp;quot;
NAME=&amp;quot;This is a Test Package.&amp;quot;
ARCH=&amp;quot;sparc&amp;quot;
VERSION=&amp;quot;1.0&amp;quot;
CATEGORY=&amp;quot;system&amp;quot;&lt;/pre&gt;
&lt;table&gt;&lt;tr&gt;&lt;th&gt;PKG&lt;/th&gt;&lt;td&gt;必須&lt;/td&gt;&lt;td&gt;パッケージ名称&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;NAME&lt;/th&gt;&lt;td&gt;必須&lt;/td&gt;&lt;td&gt;パッケージの名前&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;ARCH&lt;/th&gt;&lt;td&gt;必須&lt;/td&gt;&lt;td&gt;アーキテクチャ sparc, i386など&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;VERSION&lt;/th&gt;&lt;td&gt;必須&lt;/td&gt;&lt;td&gt;バージョン&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;CATEGORY&lt;/th&gt;&lt;td&gt;必須&lt;/td&gt;&lt;td&gt;カテゴリ application, systemなどがあるらしい&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;h1&gt;パッケージ作成&lt;/h1&gt;
&lt;p&gt;Prototypeファイルとpkginfoファイルを使いパッケージを作成する。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ pkgmk -r / -d .
## prototype ファイルから pkgmap を作成中です。
## pkginfo ファイルを処理中です。
    警告: パラメータ &amp;lt;PSTAMP&amp;gt; の値は &amp;quot;xxx999999999999999999&amp;quot; に設定されます。
    警告: パラメータ &amp;lt;CLASSES&amp;gt; の値は &amp;quot;none&amp;quot; に設定されます。
## pkgmap の 4 個の項目をボリューム単位で分割しようとしています。
第  1 部-- 21 ブロック, 14 エントリ
## 1 部をパッケージ処理中です。
/tmp/kk_Ataka/TESTPKG/pkgmap
/tmp/kk_Ataka/TESTPKG/pkginfo
/tmp/kk_Ataka/TESTPKG/root/home/kk_Ataka/testpkg/readme.txt
## 制御スクリプトの妥当性検査中です。
## パッケージ処理は完了しました。&lt;/pre&gt;
&lt;p&gt;pkginfoに設定する項目が足りないせいか警告は出たが問題なさげ。ともかくこれでパッケージはできた！&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ pwd
/tmp/kk_Ataka
$ ls
Prototype   TESTPKG/    pkginfo     test.txt&lt;/pre&gt;
&lt;h1&gt;パッケージを一つにまとめる&lt;/h1&gt;
&lt;p&gt;今のままではTESTPKGというディレクトリなので、これをパッケージ(.pkg)としてまとめる。以下のコマンドを使用する。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;$ pkgtrans . TESTPKG.pkg&lt;/pre&gt;
&lt;pre class=&quot;&quot;&gt;$ pkgtrans . TESTPKG.pkg

The following packages are available:
  1  TESTPKG     This is a Test Package.
                 (sparc) 1.0

Select package(s) you wish to process (or &#39;all&#39; to process
all packages). (default: all) [?,??,q]:

Transferring &amp;lt;TESTPKG&amp;gt; package instance
$ ls
Prototype     TESTPKG/      TESTPKG.pkg   pkginfo       test.txt&lt;/pre&gt;
&lt;p&gt;TESTPKGがTESTPKG.pkgにまとまった。&lt;/p&gt;
&lt;h1&gt;パッケージをインストールする&lt;/h1&gt;
&lt;p&gt;最後にインストール。root権限で。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;# pkgadd -d TESTPKG.pkg&lt;/pre&gt;
&lt;p&gt;以上。&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Redmineのプラグイン作成のための備忘録と、時々SQLite3</title>
   <link href="http://gosyujin.github.io/2011/09/07/1315401886"/>
   <updated>2011-09-07T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2011/09/07/1315401886</id>
   <content type="html">&lt;h1&gt;あらすじ&lt;/h1&gt;
&lt;dl&gt;&lt;dt&gt;今あると幸せになれるもの&lt;/dt&gt;&lt;dd&gt;チケットのCSVエクスポート機能。ただし、履歴つきで。これがあるといわゆるバグとかPJ課題の管理がRedmineで一元化できExcelの呪縛から解き放てられる……&lt;/dd&gt;&lt;/dl&gt;
&lt;p&gt;既に履歴つきCSVエクスポートプラグインは存在しているようです。&lt;a href=&quot;http://d.hatena.ne.jp/suer/20101003/1286120294&quot;&gt;履歴付チケット一覧出力プラグインを書いてみた - すえひろがりっっっっ!&lt;/a&gt;　ただ、履歴の出方が1履歴毎に列を更新なんですよね。。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;No, ... ,履歴
1, ... ,#1の履歴,#2の履歴,#3の履歴
2, ... ,#1の履歴,#2の履歴&lt;/pre&gt;
&lt;p&gt;今自分が抱えている縛り的にはこう出てほしい。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;No, ... ,履歴
1, ... ,&amp;quot;#1の履歴
#2の履歴,
#3の履歴&amp;quot;
2, ... ,&amp;quot;#1の履歴,
#2の履歴&amp;quot;&lt;/pre&gt;
&lt;p&gt;吐き出したときにチケット1つの履歴を1セルの中に収めたい。CSVに改行はどうなんだとか1セルに改行しまくるのはどうなんだとか色々ありますがそこは縛りなので。。。&lt;/p&gt;
&lt;p&gt;だもんで、これを機会にRedmineのプラグインはどう作るのかを調べてみました。&lt;/p&gt;
&lt;h1&gt;参考サイト&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://www.r-labs.org/projects/r-labs/wiki/%E3%83%97%E3%83%A9%E3%82%B0%E3%82%A4%E3%83%B3%E9%96%8B%E7%99%BA%E3%82%AC%E3%82%A4%E3%83%89&quot;&gt;r-labs&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://gihyo.jp/dev/serial/01/ruby/0038&quot;&gt;Ruby Freaks Lounge：第38回　Redmineプラグイン開発（3）｜gihyo.jp … 技術評論社&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;環境&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;WindowsXP&lt;/li&gt;&lt;li&gt;Redmine 1.0.0&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f1&quot; title=&quot;[http://redmine.jp/guide/RedmineInstall/:title=Redmineのインストール | Redmine.JP]　に準拠。&quot; name=&quot;fn1&quot;&gt;*1&lt;/a&gt;&lt;/span&gt;&lt;ul&gt;&lt;li&gt;Ruby 1.8.7&lt;/li&gt;&lt;li&gt;Rails 2.3.5&lt;/li&gt;&lt;li&gt;Rack 1.0.1&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;SQLite3 バージョン失念&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;プラグインのスケルトン作成&lt;/h1&gt;
&lt;p&gt;まずはプラグインのスケルトンというものを作成する。テンプレートみたいなもの？　以下のコマンドで自動生成してくれます。&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f2&quot; title=&quot;途中でコマンドプロンプトからConsole2というフリーソフトに切り替えたのでパスの区切りが\だったり/だったりしてます。&quot; name=&quot;fn2&quot;&gt;*2&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;&amp;gt;ruby script\generate redmine_plugin extendCsv&lt;/pre&gt;
&lt;p&gt;するといきなりエラー。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;!!! The bundled mysql.rb driver has been removed from Rails 2.2. Please install
the mysql gem and try again: gem install mysql.&lt;/pre&gt;
&lt;p&gt;さらに、&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;LIBMYSQL.dll が見つからなかったため、このアプリケーションを開始できませんでした。…&lt;/pre&gt;
&lt;p&gt;libmysqlが必要らしい。なんでmysqlなんだろう？　SQLite3使うようにしてなかったっけ？&lt;/p&gt;
&lt;p&gt;(略)&lt;/p&gt;
&lt;p&gt;あーわかった。config/database.ymlがこうなっていた。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;production:
  adapter: sqlite3
  database: db/redmine
 
development:
  adapter: mysql
  database: redmine_development
  host: localhost
  username: root
  password:
  encoding: utf8&lt;/pre&gt;
&lt;p&gt;productionは変えていたけどdevelopmentはデフォルト=MySQLのままだった。開発時はdevelopmentモードを使うようになっているからmysql探し出したのか。変えてみた。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;production:
  adapter: sqlite3
  database: db/redmine
 
development:
  adapter: sqlite3
  database: db/redminedev&lt;/pre&gt;
&lt;p&gt;再度。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;&amp;gt;ruby script\generate redmine_plugin extendCsv&lt;/pre&gt;
&lt;pre class=&quot;&quot;&gt;C:\redmine-1.0.0&amp;gt;ruby script\generate redmine_plugin extendCsv
      create  vendor/plugins/redmine_extend_csv/app/controllers
      create  vendor/plugins/redmine_extend_csv/app/helpers
      create  vendor/plugins/redmine_extend_csv/app/models
      create  vendor/plugins/redmine_extend_csv/app/views
      create  vendor/plugins/redmine_extend_csv/db/migrate
      create  vendor/plugins/redmine_extend_csv/lib/tasks
      create  vendor/plugins/redmine_extend_csv/assets/images
      create  vendor/plugins/redmine_extend_csv/assets/javascripts
      create  vendor/plugins/redmine_extend_csv/assets/stylesheets
      create  vendor/plugins/redmine_extend_csv/lang
      create  vendor/plugins/redmine_extend_csv/config/locales
      create  vendor/plugins/redmine_extend_csv/test
      create  vendor/plugins/redmine_extend_csv/README.rdoc
      create  vendor/plugins/redmine_extend_csv/init.rb
      create  vendor/plugins/redmine_extend_csv/lang/en.yml
      create  vendor/plugins/redmine_extend_csv/config/locales/en.yml
      create  vendor/plugins/redmine_extend_csv/test/test_helper.rb&lt;/pre&gt;
&lt;p&gt;vendor/plugins下にスケルトンができた。この「vendor/plugins/今回作成したディレクトリ」というのがプラグインのルートになるようです。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;C:\redmine-1.0.0\vendor\plugins&amp;gt;dir

2011/09/06  09:24    &amp;lt;DIR&amp;gt;          .
2011/09/06  09:24    &amp;lt;DIR&amp;gt;          ..
略
2011/09/06  09:24    &amp;lt;DIR&amp;gt;          redmine_extend_csv
略&lt;/pre&gt;
&lt;p&gt;プラス、自動で頭に「redmine」付加+スネークケースにリネームしてくれている。これが規約か…？　とりあえずフォルダ構成等は置いておいて、次の章へ。&lt;/p&gt;
&lt;h1&gt;init.rbの作成&lt;/h1&gt;
&lt;p&gt;プラグイン名、作者名などを記述できるが今は特になにも設定せず。後でプラグインを表示さす時に戻って来ます。&lt;/p&gt;
&lt;p&gt;ここで一回起動してみる。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;&amp;gt;ruby script\server&lt;/pre&gt;
&lt;p&gt;オプションに-e productionをつけないとdevelopmentモードで起動する。その前に、DBの初期化をしていない場合は初期化を……。(RAILS_ENV=productionを除外)&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;&amp;gt;rake db:migrate
&amp;gt;rake redmine:load_default_data&lt;/pre&gt;
&lt;p&gt;そしてRedmine起動 -&gt; 管理 -&gt; プラグインを見に行くと…あった！(写真なし)&lt;/p&gt;
&lt;h1&gt;補足:SQLite3あれこれ&lt;/h1&gt;
&lt;p&gt;ちょっとSQLite3も使ってみる。コンソールから見ることもないだろうとexeはDLしていなかったので今回初。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;まずexe版SQLite3をDL&lt;/li&gt;&lt;li&gt;実行&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;# Redmineのconfig/database.ymlで定義し作成したDBへ接続
&amp;gt;sqlite3.exe REDMINE_DB_FILE
SQLite version 3.7.7.1 2011-06-28 17:39:05
Enter &amp;quot;.help&amp;quot; for instructions
Enter SQL statements terminated with a &amp;quot;;&amp;quot;&lt;/pre&gt;
&lt;p&gt;今回はとりあえず下記の2つのコマンドを覚えて帰る。&lt;/p&gt;
&lt;table&gt;&lt;tr&gt;&lt;th&gt;.table&lt;/th&gt;&lt;td&gt;テーブル一覧を取得する&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;pragma_table_info(TABLE)&lt;/th&gt;&lt;td&gt;テーブルのカラム情報を取得する&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;ul&gt;&lt;li&gt;.table&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;sqlite&amp;gt; .table
attachments                          news
auth_sources                         open_id_authentication_associations
boards                               open_id_authentication_nonces
changes                              projects
changesets                           projects_trackers
changesets_issues                    queries
comments                             repositories
custom_fields                        roles
custom_fields_projects               schema_migrations
custom_fields_trackers               settings
custom_values                        time_entries
documents                            tokens
enabled_modules                      trackers
enumerations                         user_preferences
groups_users                         users
issue_categories                     versions
issue_relations                      watchers
issue_statuses                       wiki_content_versions
issues                               wiki_contents
journal_details                      wiki_pages
journals                             wiki_redirects
member_roles                         wikis
members                              workflows&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;pragma_table_info(TABLE)&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;sqlite&amp;gt; pragma table_info(issues);
0|id|INTEGER|1||1
1|tracker_id|integer|1|0|0
2|project_id|integer|1|0|0
3|subject|varchar(255)|1|&#39;&#39;|0
4|description|text|0||0
5|due_date|date|0||0
6|category_id|integer|0||0
7|status_id|integer|1|0|0
8|assigned_to_id|integer|0||0
9|priority_id|integer|1|0|0
10|fixed_version_id|integer|0||0
11|author_id|integer|1|0|0
12|lock_version|integer|1|0|0
13|created_on|datetime|0||0
14|updated_on|datetime|0||0
15|start_date|date|0||0
16|done_ratio|integer|1|0|0
17|estimated_hours|float|0||0
18|parent_id|integer|0|NULL|0
19|root_id|integer|0|NULL|0
20|lft|integer|0|NULL|0
21|rgt|integer|0|NULL|0&lt;/pre&gt;
&lt;p&gt;今回欲しいテーブルはissues, journals, journal_detailsの3つでOKのはずなので&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f3&quot; title=&quot;チケットの履歴がjournalテーブルで管理されているのを探すのに手間取ったんだけど、どう探すのがクールなんだろう。チケット画面遷移したときのログで探して辿り着いたんだけど。&quot; name=&quot;fn3&quot;&gt;*3&lt;/a&gt;&lt;/span&gt;これをちょっとメモしておく。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;sqlite&amp;gt; pragma table_info(issues);
 0|id              |INTEGER     |1|    |1
 1|tracker_id      |integer     |1|0   |0
 2|project_id      |integer     |1|0   |0
 3|subject         |varchar(255)|1|&#39;&#39;  |0
 4|description     |text        |0|    |0
 5|due_date        |date        |0|    |0
 6|category_id     |integer     |0|    |0
 7|status_id       |integer     |1|0   |0
 8|assigned_to_id  |integer     |0|    |0
 9|priority_id     |integer     |1|0   |0
10|fixed_version_id|integer     |0|    |0
11|author_id       |integer     |1|0   |0
12|lock_version    |integer     |1|0   |0
13|created_on      |datetime    |0|    |0
14|updated_on      |datetime    |0|    |0
15|start_date      |date        |0|    |0
16|done_ratio      |integer     |1|0   |0
17|estimated_hours |float       |0|    |0
18|parent_id       |integer     |0|NULL|0
19|root_id         |integer     |0|NULL|0
20|lft             |integer     |0|NULL|0
21|rgt             |integer     |0|NULL|0

sqlite&amp;gt; pragma table_info(journals);
 0|id              |INTEGER     |1|    |1
 1|journalized_id  |integer     |1|0   |0
 2|journalized_type|varchar(30) |1|&#39;&#39;  |0
 3|user_id         |integer     |1|0   |0
 4|notes           |text        |0|    |0
 5|created_on      |datetime    |1|    |0

sqlite&amp;gt; pragma table_info(journal_details);
 0|id              |INTEGER     |1|    |1
 1|journal_id      |integer     |1|0   |0
 2|property        |varchar(30) |1|&#39;&#39;  |0
 3|prop_key        |varchar(30) |1|&#39;&#39;  |0
 4|old_value       |varchar(255)|0|    |0
 5|value           |varchar(255)|0|    |0&lt;/pre&gt;
&lt;p&gt;これで準備とデータを見ることはできるようになった！　次からは実際にプラグインの中身に入っていく！ &lt;/p&gt;
&lt;div class=&quot;footnote&quot;&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn1&quot; name=&quot;f1&quot;&gt;*1&lt;/a&gt;: [http://redmine.jp/guide/RedmineInstall/:title=Redmineのインストール | Redmine.JP]　に準拠。&lt;/p&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn2&quot; name=&quot;f2&quot;&gt;*2&lt;/a&gt;: 途中でコマンドプロンプトからConsole2というフリーソフトに切り替えたのでパスの区切りが\だったり/だったりしてます。&lt;/p&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn3&quot; name=&quot;f3&quot;&gt;*3&lt;/a&gt;: チケットの履歴がjournalテーブルで管理されているのを探すのに手間取ったんだけど、どう探すのがクールなんだろう。チケット画面遷移したときのログで探して辿り着いたんだけど。&lt;/p&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>vmstatとかiostatとかsarとかswapコマンドのメモ</title>
   <link href="http://gosyujin.github.io/2011/09/04/1315146050"/>
   <updated>2011-09-04T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2011/09/04/1315146050</id>
   <content type="html">&lt;p&gt;すぐ忘れるのでメモ。あと略称とかも。&lt;/p&gt;
&lt;h1&gt;vmstat&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;表示&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt; kthr      memory            page            disk          faults      cpu
 r b w   swap  free  re  mf pi po fr de sr ** ** ** **   in   sy   cs us sy id&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;kthr: KernelTHRead&lt;/li&gt;&lt;/ul&gt;
&lt;table&gt;&lt;tr&gt;&lt;th&gt;r&lt;/th&gt;&lt;td&gt;Run queue&lt;/td&gt;&lt;td&gt;待ち行列内のカーネルスレッド数(mpstatやprstatでも取得可能)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;b&lt;/th&gt;&lt;td&gt;?&lt;/td&gt;&lt;td&gt;I/Oで待たされているカーネルスレッド数&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;w&lt;/th&gt;&lt;td&gt;?&lt;/td&gt;&lt;td&gt;スワップアウトされたカーネルスレッド数&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;ul&gt;&lt;li&gt;memory&lt;/li&gt;&lt;/ul&gt;
&lt;table&gt;&lt;tr&gt;&lt;th&gt;swap&lt;/th&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;現在利用可能なスワップ領域(ディスク上+メモリ上のスワップ領域)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;free&lt;/th&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;空きメモリ領域&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;ul&gt;&lt;li&gt;page&lt;/li&gt;&lt;/ul&gt;
&lt;table&gt;&lt;tr&gt;&lt;th&gt;re&lt;/th&gt;&lt;td&gt;pageREclaims&lt;/td&gt;&lt;td&gt;freeListに入れられた後、復帰したページ数&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;mf&lt;/th&gt;&lt;td&gt;MinorFault&lt;/td&gt;&lt;td&gt;HAT faultとAddress Space faultを足した数&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;pi&lt;/th&gt;&lt;td&gt;PageIn&lt;/td&gt;&lt;td&gt;ページインされたメモリサイズ(キロバイト)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;po&lt;/th&gt;&lt;td&gt;PageOut&lt;/td&gt;&lt;td&gt;ページアウトされたメモリサイズ(キロバイト)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;fr&lt;/th&gt;&lt;td&gt;FRee?&lt;/td&gt;&lt;td&gt;解放されたメモリサイズ(キロバイト)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;de&lt;/th&gt;&lt;td&gt;DEficit&lt;/td&gt;&lt;td&gt;次のプロセスで必要と予測しSolarisが確保する仮想メモリのバッファ&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;sr&lt;/th&gt;&lt;td&gt;?&lt;/td&gt;&lt;td&gt;ページデーモンによってスキャンされたページ数(0以外だと実行されている)&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;ul&gt;&lt;li&gt;disk&lt;/li&gt;&lt;/ul&gt;
&lt;table&gt;&lt;tr&gt;&lt;th&gt;最高4台のデータを表示&lt;/th&gt;&lt;td&gt;読み書きした回数&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;ul&gt;&lt;li&gt;fault&lt;/li&gt;&lt;/ul&gt;
&lt;table&gt;&lt;tr&gt;&lt;th&gt;in&lt;/th&gt;&lt;td&gt;INterrupt&lt;/td&gt;&lt;td&gt;1秒あたりの割り込み(インタラプト)回数&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;sy&lt;/th&gt;&lt;td&gt;SYstemcall&lt;/td&gt;&lt;td&gt;1秒あたりのシステムコース回数&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;cs&lt;/th&gt;&lt;td&gt;CpucontextSwitches&lt;/td&gt;&lt;td&gt;コンテクストスイッチ発生回数&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;ul&gt;&lt;li&gt;cpu&lt;/li&gt;&lt;/ul&gt;
&lt;table&gt;&lt;tr&gt;&lt;th&gt;us&lt;/th&gt;&lt;td&gt;USertime?&lt;/td&gt;&lt;td&gt;ユーザモードで使用したCPU時間&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;sy&lt;/th&gt;&lt;td&gt;SYstemtime?&lt;/td&gt;&lt;td&gt;システムモードで使用したCPU時間&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;id&lt;/th&gt;&lt;td&gt;IDletime&lt;/td&gt;&lt;td&gt;CPUが使用されていなかった時間&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;h1&gt;iostat -D&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;表示&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;    ****          ****          ****          ****
rps wps util  rps wps util  rps wps util  rps wps util&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;パラメータ&lt;/li&gt;&lt;/ul&gt;
&lt;table&gt;&lt;tr&gt;&lt;th&gt;rps&lt;/th&gt;&lt;td&gt;ReadperSec&lt;/td&gt;&lt;td&gt;毎秒何回読み取りしているか&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;wps&lt;/th&gt;&lt;td&gt;WriteperSec&lt;/td&gt;&lt;td&gt;毎秒何回書き込みしているか&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;util&lt;/th&gt;&lt;td&gt;UTILization?&lt;/td&gt;&lt;td&gt;各デバイスの使用率&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;h1&gt;iostat -x(全てのディスク情報)&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;表示&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;                 extended device statistics
device    r/s    w/s   kr/s   kw/s wait actv  svc_t  %w  %b&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;パラメータ&lt;/li&gt;&lt;/ul&gt;
&lt;table&gt;&lt;tr&gt;&lt;th&gt;device&lt;/th&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;デバイス名&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;r/s&lt;/th&gt;&lt;td&gt;ReadperSec&lt;/td&gt;&lt;td&gt;毎秒何回読み取りしているか&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;w/s&lt;/th&gt;&lt;td&gt;WriteperSec&lt;/td&gt;&lt;td&gt;毎秒何回書き込みしているか&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;kr/s&lt;/th&gt;&lt;td&gt;KiloReadperSec&lt;/td&gt;&lt;td&gt;毎秒何KB読み取りしているか&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;kw/s&lt;/th&gt;&lt;td&gt;KiloWriteperSec&lt;/td&gt;&lt;td&gt;毎秒何KB書き込みしているか&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;wait&lt;/th&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;実行待ち中のI/Oの数&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;actv&lt;/th&gt;&lt;td&gt;ACTiVe&lt;/td&gt;&lt;td&gt;毎秒処理されているI/Oの数&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;svc_t&lt;/th&gt;&lt;td&gt;SerViCeTime&lt;/td&gt;&lt;td&gt;平均サービス時間？&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;%w&lt;/th&gt;&lt;td&gt;?&lt;/td&gt;&lt;td&gt;待ち行列が存在している時間の割合、リーマン和&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;%b&lt;/th&gt;&lt;td&gt;?&lt;/td&gt;&lt;td&gt;ディスクビジーの時間の割合、リーマン和&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;h1&gt;swap -s&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;表示&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;合計: 7429999k バイト割り当て済み + 99999k 予約済み = 8399999k 使用済み, 5199999k使用可&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;パラメータ&lt;/li&gt;&lt;/ul&gt;
&lt;table&gt;&lt;tr&gt;&lt;th&gt;allocated&lt;/th&gt;&lt;td&gt;割り当て済み&lt;/td&gt;&lt;td&gt;バックアップ用の記憶域として使用可能なスワップ空間を表す1024バイトのブロック数&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;reserved&lt;/th&gt;&lt;td&gt;予約済み&lt;/td&gt;&lt;td&gt;後から使用できるようにメモリによって回収されるスワップ空間を表す1024バイトのブロック数&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;used&lt;/th&gt;&lt;td&gt;使用済み&lt;/td&gt;&lt;td&gt;割り当て・予約済みのスワップ空間を表す1024バイトのブロック数&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;available&lt;/th&gt;&lt;td&gt;使用可&lt;/td&gt;&lt;td&gt;後から予約や割り当てに使用可能なスワップ空間を表す1024バイトのブロック数&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
 </entry>
 
 <entry>
   <title>MicrosoftOutlookで消せなくなったフォルダをwin32ole経由でRubyから消してみる</title>
   <link href="http://gosyujin.github.io/2011/08/23/1314103220"/>
   <updated>2011-08-23T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2011/08/23/1314103220</id>
   <content type="html">&lt;p&gt;&lt;span class=&quot;deco&quot; style=&quot;color:#FF0000;&quot;&gt;※&lt;del datetime=&quot;2011-08-25T07:19:37+09:00&quot;&gt;この操作をすると新しくフォルダを追加してもOutlookの画面から見れなくなるようです？win32ole経由だと見えるのになんで…。&lt;/del&gt;→Windows再起動したらなおりました。&lt;/span&gt;&lt;/p&gt;
&lt;h1&gt;あらすじ&lt;/h1&gt;
&lt;p&gt;OutlookのRSSフィード内にどうやっても消えないフォルダが出来てしまい途方に暮れていた。&lt;/p&gt;
&lt;p&gt;何がどうなってこうなのかは定かではないんですが、誤って「RSSフィードフォルダ」内にある「RSSフィード記事」に対して「RSSフィードフォルダ」自体をD&amp;Dしてしまった時に生まれたフォルダだと思いまする。。&lt;/p&gt;
&lt;p&gt;フィードをまるごと削除しようとしても「権限を見直してからまた挑戦してねてへぺろ(・ω＜)」&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f1&quot; title=&quot;一応、権限を確認してみたところ己のアカウントは「所有者」となっており、ファイルの削除もできる設定になっていた。というか他のフィードはサクサク消せる。&quot; name=&quot;fn1&quot;&gt;*1&lt;/a&gt;&lt;/span&gt;とか言って絶対消えてくれないのでOutlookフォルダとかレジストリとかいじらないと消滅させられないのかなーと悩んでいました。&lt;/p&gt;
&lt;p&gt;……が、正直どこをどういじればいいかわからないので、最後にダメ元でwin32oleにお願いしてみた。&lt;/p&gt;
&lt;h1&gt;解法そして解放&lt;/h1&gt;
&lt;p&gt;これで消えた……。&lt;/p&gt;
&lt;pre class=&quot;ruby&quot;&gt;require &#39;win32ole&#39;
ol = WIN32OLE::connect(&amp;quot;Outlook.Application&amp;quot;)
nameSpace = ol.getNameSpace(&amp;quot;MAPI&amp;quot;)
# RSSFEEDは「RSS フィード」フォルダのEntryId
nameSpace.getFolderFromID(RSSFEED).Folders.Remove(1)
# puts nameSpace.getFolderFromID(RSSFEED).Name =&amp;gt; # RSS フィード&lt;/pre&gt;
&lt;p&gt;Removeメソッドはインデックスを指定するとの事。&lt;/p&gt;
&lt;blockquote&gt;&lt;table&gt;&lt;tr&gt;&lt;th&gt;メソッド・プロパティ&lt;/th&gt;&lt;td&gt;説明&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;Add&lt;/th&gt;&lt;td&gt;指定した名前の Outlook フォルダを追加します。&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;GetFirst&lt;/th&gt;&lt;td&gt;最初の Outlookフォルダを取得します。&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;GetNext&lt;/th&gt;&lt;td&gt;次の Outlook フォルダを取得します。&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;Item&lt;/th&gt;&lt;td&gt;あるインデックスの Outlook フォルダを取得します。&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;Remove&lt;/th&gt;&lt;td&gt;あるインデックスの Outlook フォルダを削除します。&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;cite&gt;&lt;a href=&quot;http://jp.rubyist.net/magazine/?0007-Win32OLE&quot;&gt;Rubyist Magazine - Win32OLE 活用法 【第 5 回】 Outlook&lt;/a&gt;&lt;/cite&gt;&lt;/blockquote&gt;
&lt;p&gt;また、インデックスは1から始まりフォルダビューの親フォルダ直下にあるフォルダを1とし2, 3...と並んでいる様子。上記のソースでは「RSS フィード」フォルダ直下の(1番目の)フォルダを削除できた！&lt;/p&gt;
&lt;p&gt;EntryIdを見つけるにはFoldersオブジェクトを回してEntryIdを調べる。これを繰り返せば深い階層までいける。&lt;/p&gt;
&lt;pre class=&quot;ruby&quot;&gt;folders = nameSpace.Folders
folders.each do |f|
  puts f.Name
  puts f.EntryId
end&lt;/pre&gt;
&lt;p&gt;ありがとうwin32ole…。&lt;/p&gt;
&lt;h1&gt;おまけ&lt;/h1&gt;
&lt;p&gt;Windowsのirbにショートカットでペーストする方法をはじめて知ったのでメモ。&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f2&quot; title=&quot;今までは Alt+Space -&gt; 編集 から貼り付けしていた。&quot; name=&quot;fn2&quot;&gt;*2&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;span class=&quot;deco&quot; style=&quot;font-weight:bold;&quot;&gt;Shift + insert !!&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;div class=&quot;footnote&quot;&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn1&quot; name=&quot;f1&quot;&gt;*1&lt;/a&gt;: 一応、権限を確認してみたところ己のアカウントは「所有者」となっており、ファイルの削除もできる設定になっていた。というか他のフィードはサクサク消せる。&lt;/p&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn2&quot; name=&quot;f2&quot;&gt;*2&lt;/a&gt;: 今までは Alt+Space -&gt; 編集 から貼り付けしていた。&lt;/p&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>Subversionのauto-props設定ではまった</title>
   <link href="http://gosyujin.github.io/2011/08/14/1313326346"/>
   <updated>2011-08-14T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2011/08/14/1313326346</id>
   <content type="html">&lt;p&gt;SubversionでExcelファイルをコミットしようとするとエラーが発生。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;ファイル &#39;C:\～～～\なんとか管理表.xls&#39; の MIMEタイプ属性はバイナリです&lt;/pre&gt;
&lt;p&gt;んーなんでだっけー？.xlsファイルのmime-typeを指定してないからかなー？ という事でconfigファイルにmime-type指定。&lt;a href=&quot;http://trac.symfony-project.org/wiki/SymfonyRepositoryTips&quot;&gt;SymfonyRepositoryTips - symfony - Trac&lt;/a&gt; ここを参考に。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt; *.xls = svn:mime-type=application/vnd.ms-excel&lt;/pre&gt;
&lt;p&gt;しかしエラーは変わらず。なんでだー。というか今までは別にmime-type指定しなくてもいけてた気がするのに…と、ここまでやってconfigをよく見ると&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt; *.xls = svn:mime-type=application/vnd.ms-excel
 * = svn:eol-style=native&lt;/pre&gt;
&lt;p&gt;こうなってた。全部のファイルにeol-style=nativeしている！！&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f1&quot; title=&quot;自分でやったんだけど&quot; name=&quot;fn1&quot;&gt;*1&lt;/a&gt;&lt;/span&gt;　とあるファイル種別&lt;span class=&quot;deco&quot; style=&quot;font-weight:bold;&quot;&gt;以外&lt;/span&gt;、みたいな指定はできない？　っぽいので、横着せずに一拡張子毎に設定を書いてうまく行きました。 &lt;/p&gt;
&lt;pre class=&quot;&quot;&gt; *.xls = svn:mime-type=application/vnd.ms-excel
 *.sh = svn:eol-style=native&lt;/pre&gt;
&lt;div class=&quot;footnote&quot;&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn1&quot; name=&quot;f1&quot;&gt;*1&lt;/a&gt;: 自分でやったんだけど&lt;/p&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>BPStudy#47に参加しました</title>
   <link href="http://gosyujin.github.io/2011/08/01/1312213654"/>
   <updated>2011-08-01T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2011/08/01/1312213654</id>
   <content type="html">&lt;h1&gt;詳細: &lt;a href=&quot;http://atnd.org/events/17717&quot;&gt;BPStudy#47 : ATND&lt;/a&gt;&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;サーバの調達が毎回めんどい上に自由に使えるマシンがないので、仮想で立てられるXenServer見てみたい&lt;/li&gt;&lt;li&gt;アジャイルには縁のない、ウォーターフォール一直線の日々なのでことはじめ的な話を聞いてみたい&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;というわけで久しぶしにBPStudy参加。&lt;/p&gt;
&lt;h1&gt;XenServerによるお手軽開発用サーバ運用 @&lt;a href=&quot;http://twitter.com/tokibito&quot;&gt;tokibito&lt;/a&gt;さん&lt;/h1&gt;
&lt;h2&gt;Webシステムを作るに当たって&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;本番に近い環境、お客さんに見てもらう環境を作りたい&lt;/li&gt;&lt;li&gt;Wikiや課題管理をしたい&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;という事で、開発用のサーバを立てたくなる時がよくあると。ただし…&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;費用がかかりすぎては本末転倒なのでコストはかけない&lt;/li&gt;&lt;li&gt;あれもこれも盛り込みすぎてもダメなので、今必要のないものはいらない&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;この2点を念頭に置いて立てる。&lt;/p&gt;
&lt;h2&gt;実際にサーバを立てる&lt;/h2&gt;
&lt;p&gt;色々な方法があるが…&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;レンタル？(共用サーバ、専用サーバ、VPSなど)&lt;/li&gt;&lt;li&gt;自前？&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;プロジェクト毎に別の環境(OSなども)を作りたいので共用サーバでは設定的に難しい。1～3ヶ月が1プロジェクトの平均サイクルなので、データセンターなども難しい。じゃあ自前でやろう。&lt;/p&gt;
&lt;h2&gt;自前サーバに導入できるXenServerを選んだ。なぜXenServerなの？&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;対抗はVPS&lt;/li&gt;&lt;li&gt;メモリ増やしたりとかはVPSより自前の方が融通がきく&lt;/li&gt;&lt;li&gt;&lt;span class=&quot;deco&quot; style=&quot;font-weight:bold;&quot;&gt;XenServerが無料になったので！&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;Xen&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;オープンソースのフリーウェア&lt;/li&gt;&lt;li&gt;サーバの仮想化&lt;/li&gt;&lt;li&gt;ハードウェアの上で直接動作するOS&lt;/li&gt;&lt;li&gt;Amazon EC2 とかでも使ってる&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;のっけ方
VM        Xen
ゲストOS
  VM      OS OS OS
ホストOS  XenServer
  HW         HW&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;Linux、Windowsを動かせる&lt;/li&gt;&lt;/ul&gt;
&lt;br /&gt;
&lt;h2&gt;インストール方法&lt;/h2&gt;
&lt;ol&gt;&lt;li&gt;iso落とす&lt;/li&gt;&lt;li&gt;XenCenterを管理用端末にインストールする(XenCenterは残念ながらWindows専用)&lt;/li&gt;&lt;li&gt;ライセンスファイルを取得し、XenCenter経由でライセンスファイルをインストールする&lt;/li&gt;&lt;/ol&gt;
&lt;h2&gt;XenCenter特徴&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;GUI&lt;/li&gt;&lt;li&gt;複数管理も楽&lt;/li&gt;&lt;li&gt;スナップショットとって壊しても戻せる&lt;/li&gt;&lt;li&gt;VM単位でバックアップが取れる&lt;/li&gt;&lt;li&gt;まったく同じ構成の環境も簡単に作れる&lt;/li&gt;&lt;li&gt;リソース割り当てもXenCenterから簡単に&lt;/li&gt;&lt;li&gt;別のホストにVMをまるごと移動できる&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;めんどい事&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;ネットワークの設定…IPを固定したりホスト名変えたり&lt;/li&gt;&lt;li&gt;なのでスクリプト組んだ &lt;a href=&quot;https://gist.github.com/1113337&quot;&gt;https://gist.github.com/1113337&lt;/a&gt;&lt;/li&gt;&lt;li&gt;ユーザ管理もめんどい&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;運用管理&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;VMの管理はスプレッドシートとかで原始的にやるしかない&lt;/li&gt;&lt;li&gt;リソースははじめは少なめに作って足りなかったら管理者に言って！　という方針&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;今後&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;バックアップ強化したい&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;ちなみに&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;XMLRPCのAPIが使える&lt;/li&gt;&lt;li&gt;なのでWebアプリに組み込んでWebから起動とかバックアップとかできる&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;非アジャイラーにアジャイルという言葉を使わずにアジャイルな見積りについて語ってみた+α @&lt;a href=&quot;http://twitter.com/bash0C7&quot;&gt;bash0C7&lt;/a&gt;さん&lt;/h1&gt;
&lt;h2&gt;プロジェクトとは&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;戦略/ポートフォリオ/プロダクト/リリースにわけられる&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;プロジェクトの成功とは&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;予定通りの期間、予算で最初の定義したフィーチャを実現できている事&lt;/li&gt;&lt;li&gt;…でもほんと？　それだけ？&lt;/li&gt;&lt;li&gt;最初に定義したことが必ずしも最高とは限らない&lt;ul&gt;&lt;li&gt;すべてうまくいったとしてもメンバーが全員疲弊したら意味ないよね&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;失敗する要因&lt;/h2&gt;
&lt;ol&gt;&lt;ul&gt;&lt;li&gt;…いっぱい！&lt;/li&gt;&lt;li&gt;原因の一つとして見積もりミス&lt;ul&gt;&lt;li&gt;…でも見積もり無駄じゃないか？&lt;/li&gt;&lt;li&gt;そうでもない。実施価値判断、優先順位付け、体制検討に見積もりは使える&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ol&gt;
&lt;h2&gt;とりあえず3つ覚えて帰ってくださいね。不確実性コーン、規模と期間、正確さと労力&lt;/h2&gt;
&lt;ol&gt;&lt;ul&gt;&lt;li&gt;不確実性コーン&lt;ul&gt;&lt;li&gt;横軸がウォーターフォールにおける各工程(要件定義とか？)、縦軸が誤差&lt;/li&gt;&lt;li&gt;プロジェクトの最初の段階は誤差が生じやすい&lt;/li&gt;&lt;li&gt;が、工程が進むことによって少しずつ誤差は収束する傾向にある(最後でだいばくはつする事もある)&lt;/li&gt;&lt;li&gt;詳しくはぐぐる&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ol&gt;
&lt;h2&gt;規模と期間&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;たとえば、東京-大阪間でかかる時間。のぞみだと2時間40分かかる、こだまだともっとかかる＝期間。乗り物(開発者)によって変わる。&lt;/li&gt;&lt;li&gt;乗り物(開発者)によってかかる時間(規模)を求め比率で出してみる&lt;/li&gt;&lt;li&gt;ユーザ追加機能は3くらいだから…削除機能は2？　みたいな&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;正確さと労力&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;見積もりに時間かけ過ぎてもいかん。見積りなんか天気予報と同じ。&lt;/li&gt;&lt;li&gt;どんだけやっても100％にはならないので、適度な所で切り上げることも大事&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;アジャイルな見積もりと計画づくり&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;このあたりの内容は「&lt;a href=&quot;http://amzn.to/pc5emT&quot;&gt;Agileな見積もりと計画づくり(Amazon)&lt;/a&gt;」に乗っている。簡単に絶版になるらしい(！)&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;アジャイルの手法？　というか流れ？&lt;/h2&gt;
&lt;table&gt;&lt;tr&gt;&lt;th&gt;Product Backlog&lt;/th&gt;&lt;td&gt;これからやることを積んでおく&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;Sprint Backlog&lt;/th&gt;&lt;td&gt;「これ」を達成するためにやらないといけない「あれ」や「それ」&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;Sprint Review&lt;/th&gt;&lt;td&gt;成果物確認(1週間ごと)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;Test Release&lt;/th&gt;&lt;td&gt;まずは自分の環境 -&gt; そしてチーム内 -&gt; 最終的にお客さんに見せるように&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;Sprint Reviewの内容&lt;/th&gt;&lt;td&gt;週一の進捗報告。こんなものつくりましたーな成果物デモのみ。コードレビューは別の場で&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;ul&gt;&lt;li&gt;成果物がないと動かせるものがないので進捗報告がモロに出てしまう…だがそれがいい&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;その他まとまらないメモ&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;MSProjectによる謎の進捗報告&lt;ul&gt;&lt;li&gt;耳が痛い&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;会場にアジャイルやってる人&lt;ul&gt;&lt;li&gt;…いない&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;「慎重にウォーターフォールで開発」&lt;ul&gt;&lt;li&gt;…言わんとしてることは分かるけど…&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;ul&gt;&lt;li&gt;タイムリーにリリース(手っ取り早く適当にうごかす) vs 未来を明らかにする(慎重にすべての事態を調べる)&lt;ul&gt;&lt;li&gt;うまく共存できないか　-&gt; 順々に明らかにしていけ&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;ul&gt;&lt;li&gt;スクラムマスター:スクラムプロセスがうまくいくよう外部からチームを守る&lt;ul&gt;&lt;li&gt;-&gt; 具体的にどんな事するんだろう？&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;最後に&lt;/h1&gt;
&lt;p&gt;アジャイル導入は環境的にムリダナと思いつつ、何か一部だけでも取り入れられないかなーと思うものの、なかなか難しい。。。とりあえず、アジャイルあんまり関係ないけど「Excel管理」と「ソースファイルに日付入れてバックアップ」やめればっ！？　っつってSubversionとRedmine導入しようとしてみてます。&lt;/p&gt;
&lt;p&gt;また、皆の自由な開発環境&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f1&quot; title=&quot;入れても使う人いるのかは知らない。&quot; name=&quot;fn1&quot;&gt;*1&lt;/a&gt;&lt;/span&gt;を手に入れるためXenServerがけっこういい感じというのも知れたのでちょっと導入できるか探ってみようとおもいました。&lt;/p&gt;
&lt;p&gt;そして流れるように懇親会へ…。@&lt;a href=&quot;http://twitter.com/haru860&quot;&gt;haru860&lt;/a&gt;さんの顔認識能力に驚愕；；&lt;/p&gt;
&lt;p&gt;お疲れさまでした。&lt;/p&gt;
&lt;div class=&quot;footnote&quot;&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn1&quot; name=&quot;f1&quot;&gt;*1&lt;/a&gt;: 入れても使う人いるのかは知らない。&lt;/p&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>MicrosoftOutlookのメールをRuby(win32ole)で操作する！ その2</title>
   <link href="http://gosyujin.github.io/2011/07/09/1310140318"/>
   <updated>2011-07-09T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2011/07/09/1310140318</id>
   <content type="html">&lt;h1&gt;前回までのあらすじ&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;2011-05-17-1305560776&quot;&gt;2011-05-17-1305560776&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;あれから色々変えたので追記。前回のTODOは…&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;フォルダ名先頭にYYYYMMDD&lt;/li&gt;&lt;li&gt;フォルダ名に使用できない文字を全角に置換&lt;/li&gt;&lt;li&gt;フォルダ存在時の対処&lt;/li&gt;&lt;li&gt;デスクトップに保存したい&lt;/li&gt;&lt;/ol&gt;
&lt;p&gt;全部消化。とりあえずOutlook開いて添付ファイル付きのメールファイルをデスクトップに保存するだけの簡単なお仕事はできるようになりました！やった！&lt;/p&gt;
&lt;h1&gt;GitHub&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/gosyujin/outlook_for_ruby&quot;&gt;gosyujin/outlook_for_ruby · GitHub&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;なにやってるかの流れ&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;まず初期化。&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;ruby&quot;&gt;	# MicrosoftOutlookに接続後初期化処理を行う。
	# MicrosoftOutlookが起動していないと終了する。
	def initialize
		begin
			ol = WIN32OLE::connect(&amp;quot;Outlook.Application&amp;quot;)
		rescue WIN32OLERuntimeError
			putsError(&amp;quot;MicrosoftOutlookが起動していません。&amp;quot;)
			exit
		else
			desktopJa = Kconv.tosjis(&amp;quot;デスクトップ&amp;quot;)
			# NameSpace取得(getNameSpaceの引数は&amp;quot;MAPI&amp;quot;のみ)
			@nameSpace = ol.getNameSpace(&amp;quot;MAPI&amp;quot;)
			# 保存パス指定
			@saveRootPath = &amp;quot;#{ENV[&amp;quot;USERPROFILE&amp;quot;]}\\&amp;quot; + desktopJa + &amp;quot;\\&amp;quot;
			# 保存パスに作成するディレクトリ作成
			@saveDir = &amp;quot;&amp;quot;
			# フォルダ選択番号、ハッシュ
			@folderNum = -1
			@folder = Hash.new
			# メール選択番号、ハッシュ
			@mailNum = -1
			@mail = Hash.new
			# 取得件数のデフォルト値
			@defaultCount = 20
		end
	end&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;初期化した後、トップレベル&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f1&quot; title=&quot;デフォルトだと個人用フォルダ、保存フォルダみたいな名前かな。ostファイル単位？&quot; name=&quot;fn1&quot;&gt;*1&lt;/a&gt;&lt;/span&gt;のメールフォルダ全部を取得してます。&lt;/li&gt;&lt;li&gt;コマンドから選べるように{num =&gt; EntryID}のハッシュを作っておきます。{ &quot;1&quot; =&gt; &quot;受信トレイのEntryID&quot; }みたいな。&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;ruby&quot;&gt;	# ルートからフォルダの一覧を取得する
	def folders(count=@defaultCount)
		folders = @nameSpace.Folders
		@folderNum = 1
		folders.each do |f|
			if count &amp;lt; @folderNum then
				break
			end
			GC.start
			puts f.Name
			puts &amp;quot;N | CNT | FolderName&amp;quot;
			findFolder(f.EntryId)
		end
	end&lt;/pre&gt;
&lt;pre class=&quot;ruby&quot;&gt;	# entoryIdを元にフォルダ名を再帰的に取得する
	def findFolder(entryId, count=@defaultCount)
		folder(entryId).Folders.each do |f|
			if count &amp;lt; @folderNum then
				break
			end
			begin
				puts &amp;quot;#{@folderNum} | &amp;quot; + 
				      &amp;quot;#{f.Items.Count}通 | &amp;quot; + 
				      &amp;quot;#{f.Name}&amp;quot;
				      # + &amp;quot; | #{f.Parent.Name}&amp;quot;
				@folder[@folderNum.to_s] = f.EntryId
				@folderNum += 1
				findFolder(f.EntryId)
			rescue =&amp;gt; ex
				putsError(ex)
			end
		end
	end&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;フォルダ一覧から一つ選んだら、そのフォルダ内のメール一覧を取得します。&lt;/li&gt;&lt;li&gt;これもコマンドから選べるように{num =&gt; EntryID}のハッシュを作っておきます。{ &quot;1&quot; =&gt; &quot;とあるメールのEntryID&quot; }みたいな。&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;ruby&quot;&gt;	# entryIdを元に対象フォルダのメール一覧を取得する
	def mails(entryId, count=@defaultCount)
		f = @nameSpace.GetFolderFromID(entryId)
		if f.Items.Count == 0 then
			raise &amp;quot;フォルダにメールがありません。&amp;quot;
		end
		@mailNum = 1
		puts &amp;quot;N | A | SentOn              | Name       | Subject&amp;quot;
		f.Items.each do |mail|
			if count &amp;lt; @mailNum then
				break
			end
			GC.start
			puts &amp;quot;#{@mailNum} | &amp;quot; +
						&amp;quot;#{mail.Attachments.Count} | &amp;quot; +
						&amp;quot;#{mail.SentOn} | &amp;quot; +
						&amp;quot;#{mail.SenderName.unpack(&#39;A10&#39;)} | &amp;quot; +
						&amp;quot;#{mail.Subject.unpack(&#39;A35&#39;)}&amp;quot;
			@mail[@mailNum.to_s] = mail.EntryId
			@mailNum += 1
		end
	end&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;なお、メールオブジェクト(MailItem)からは以下のような情報を取得できます。&lt;/li&gt;&lt;/ul&gt;
&lt;table&gt;&lt;tr&gt;&lt;th&gt;MailItem#Attachments.Count&lt;/th&gt;&lt;td&gt;添付ファイルの数&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;MailItem#SentOn&lt;/th&gt;&lt;td&gt;送信時間&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;MailItem#SenderName&lt;/th&gt;&lt;td&gt;送信者名&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;MailItem#Subject&lt;/th&gt;&lt;td&gt;件名&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;MailItem#To&lt;/th&gt;&lt;td&gt;送信先&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;MailItem#CC&lt;/th&gt;&lt;td&gt;CC&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;MailItem#Body&lt;/th&gt;&lt;td&gt;本文&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;ul&gt;&lt;li&gt;メール一覧から一つ選んだら、デスクトップにディレクトリを作って、その中にメール本文と添付ファイルを保存します。&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;ruby&quot;&gt;	# @saveRootPath下にディレクトリを作成する
	def mkdir(mail)
		# 受信日のYYYYMMDD
		receivedTime = Date.strptime(mail.SentOn, &amp;quot;%Y/%m/%d&amp;quot;).strftime(&amp;quot;%Y%m%d&amp;quot;)
		@saveDir = &amp;quot;#{@saveRootPath}&amp;quot; + 
								&amp;quot;#{receivedTime}_#{replace(mail.Subject)}\\&amp;quot;
		if !File.exist?(@saveDir) then
			Dir.mkdir(@saveDir)
		end
	end&lt;/pre&gt;
&lt;pre class=&quot;ruby&quot;&gt;	# @saveDir下にSubject.txtファイルを作成しメール内容を書きこむ
	def saveMail(mail)
		fullPath = &amp;quot;#{@saveDir}#{self.replace(mail.Subject)}.txt&amp;quot;
		File.open(fullPath, &amp;quot;w&amp;quot;) do |file|
			file.write &amp;quot;SENDER      : #{mail.SenderName}&amp;quot; + 
									&amp;quot;(#{mail.SenderEmailAddress})\n&amp;quot;
			file.write &amp;quot;TO          : #{mail.To}\n&amp;quot;
			file.write &amp;quot;CC          : #{mail.CC}\n&amp;quot;
			file.write &amp;quot;ReceivedTime: #{mail.SentOn}\n&amp;quot;
			file.write &amp;quot;SUBJECT     : #{mail.Subject}\n&amp;quot;
			file.write &amp;quot;BODY        : \n#{mail.Body}\n&amp;quot;
			#puts &amp;quot;■本文保存　　　　:#{fullPath}&amp;quot;
			puts &amp;quot;■本文保存　　　　:#{self.replace(mail.Subject)}&amp;quot;
		end
	end&lt;/pre&gt;
&lt;pre class=&quot;ruby&quot;&gt;	# @saveDir下に添付ファイルを保存する
	def saveFile(mail)
		if mail.Attachments.Count != 0 then
			mail.Attachments.each do |item|
				item.SaveAsFile(&amp;quot;#{@saveDir}#{self.replace(item.FileName)}&amp;quot;)
				puts &amp;quot;■添付ファイル保存:#{item.FileName}&amp;quot;
				
				# ファイルが.msgだった場合添付ファイルをぶっこぬき
				# フォルダ名も変更
				if item.FileName =~ /.*\.msg/ then 
					msg = MsgParse.new
					msg.inputMsg(&amp;quot;#{@saveDir}#{self.replace(item.FileName)}&amp;quot;)
					fileName = msg.saveFile(@saveDir)
					renameFolder(mail, fileName)
				end
			end
		else
			puts &amp;quot;添付ファイルはありません。&amp;quot;
		end
	end&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;Attachmentオブジェクトからは以下のような情報を取得できます。&lt;/li&gt;&lt;/ul&gt;
&lt;table&gt;&lt;tr&gt;&lt;th&gt;Attachment#SaveAsFile(PATH)&lt;/th&gt;&lt;td&gt;添付ファイルをPATHへ保存&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;ul&gt;&lt;li&gt;ぶっこぬきのくだりは次回…。&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;今ソース貼ってたら命名とか特にひどい＞＜&lt;/p&gt;
&lt;p&gt;リファクタリングしよー。&lt;/p&gt;
&lt;div class=&quot;footnote&quot;&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn1&quot; name=&quot;f1&quot;&gt;*1&lt;/a&gt;: デフォルトだと個人用フォルダ、保存フォルダみたいな名前かな。ostファイル単位？&lt;/p&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>PythonでCOBOLファイルの行頭に連番をふる</title>
   <link href="http://gosyujin.github.io/2011/06/26/1309044393"/>
   <updated>2011-06-26T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2011/06/26/1309044393</id>
   <content type="html">&lt;h1&gt;あらすじ&lt;/h1&gt;
&lt;p&gt;限られた環境の中でCOBOLを書かなくてはならかった。(FF2)&lt;/p&gt;
&lt;p&gt;COBOL自体はviやらでゴリゴリ書いていけるんですが、ソース書いて間に挿入…を繰り返していると行頭の連番&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f1&quot; title=&quot;一連番号領域と呼ぶようです。&quot; name=&quot;fn1&quot;&gt;*1&lt;/a&gt;&lt;/span&gt;にズレが生じていきます。幸いPythonは入っていたので書いてみました。Python初心者なので練習も兼ねる。&lt;/p&gt;
&lt;h1&gt;ソース&lt;/h1&gt;
&lt;p&gt;&lt;script src=&quot;https://gist.github.com/1047001.js?file=cobol.py&quot;&gt;&lt;/script&gt;&lt;/p&gt;
&lt;h1&gt;結果&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;このCOBOLファイルに&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;f:&lt;a href=&quot;http://d.hatena.ne.jp/kk_Ataka/&quot;&gt;id:kk_Ataka&lt;/a&gt;:20110626081707j:image&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;こうはさがってきた場合&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;f:&lt;a href=&quot;http://d.hatena.ne.jp/kk_Ataka/&quot;&gt;id:kk_Ataka&lt;/a&gt;:20110626081706j:image&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;こう置換できた！&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;f:&lt;a href=&quot;http://d.hatena.ne.jp/kk_Ataka/&quot;&gt;id:kk_Ataka&lt;/a&gt;:20110626081705j:image&lt;/p&gt;
&lt;div class=&quot;footnote&quot;&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn1&quot; name=&quot;f1&quot;&gt;*1&lt;/a&gt;: 一連番号領域と呼ぶようです。&lt;/p&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>MicrosoftOutlookのメールをRubyで操作する！</title>
   <link href="http://gosyujin.github.io/2011/05/17/1305560776"/>
   <updated>2011-05-17T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2011/05/17/1305560776</id>
   <content type="html">&lt;h1&gt;あらすじ&lt;/h1&gt;
&lt;ol&gt;&lt;li&gt;職場のメールはMicrosoftOutlook…添付ファイルとかメール本文を手動で保存するだけの簡単なお仕事がめんどいのでマクロを作った&lt;/li&gt;&lt;li&gt;ある日、なんか共通マクロを適用してくださいねとか通達がきたので適用した(今まで使っていた自分のマクロは退避した)&lt;/li&gt;&lt;li&gt;新マクロにはご丁寧にパスワードがかけられていた…編集不可／(^o^)＼&lt;/li&gt;&lt;li&gt;Outlookからマクロを実行するのは諦めて外部からメールを操作しよう…&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f1&quot; title=&quot;もしかしたらググッたら打開策があるのかもしれない。&quot; name=&quot;fn1&quot;&gt;*1&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;Rubyでできないかな？　…win32oleというものがあるらしい！←今ここ&lt;/li&gt;&lt;/ol&gt;
&lt;h1&gt;参考サイト&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://jp.rubyist.net/magazine/?0007-Win32OLE&quot;&gt;Rubyist Magazine - Win32OLE 活用法 【第 5 回】 Outlook&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;ドンピシャでした。&lt;/p&gt;
&lt;h1&gt;やりたい事&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;メール本文を保存したい(ファイル名は件名.txt)&lt;/li&gt;&lt;li&gt;添付ファイルを保存したい(ファイル名は添付ファイル名のまま)&lt;/li&gt;&lt;li&gt;上記のファイルをYYYYMMDD_添付ファイル名(拡張子なし)フォルダの中へ格納&lt;/li&gt;&lt;li&gt;保存場所はマイドキュメントかデスクトップ&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;こんな感じ&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;[メール]
件名:subsubject
添付ファイル:tmptmpfile.zip

↓ダウンロード

[マイドキュメント]
└[YYYYMMDD_tmptmpfile]
　├tmptmpfile.zip
　└subsubject.txt&lt;/pre&gt;
&lt;h1&gt;手順&lt;/h1&gt;
&lt;p&gt;まずソースはこんな感じ。GitHubは &lt;a href=&quot;https://github.com/gosyujin/outlook_for_ruby&quot;&gt;gosyujin/outlook_for_ruby · GitHub&lt;/a&gt;&lt;/p&gt;
&lt;pre class=&quot;ruby&quot;&gt;# -*- encoding: UTF-8 -*-
require &amp;quot;win32ole&amp;quot;

# 保存ディレクトリ基準。一応マイドキュメントへ
SaveRootPath = &amp;quot;#{ENV[&amp;quot;USERPROFILE&amp;quot;]}\\My Documents&amp;quot;

class Outlook
	def initialize
		# Outlookに接続
		ol = WIN32OLE::connect(&amp;quot;Outlook.Application&amp;quot;)
		# NameSpace取得(getNameSpaceの引数は&amp;quot;MAPI&amp;quot;のみ)
		@nameSpace = ol.getNameSpace(&amp;quot;MAPI&amp;quot;)
	end

	# EntryIDを元にメールを取得	
	def mail(entryId)
		item = @nameSpace.GetItemFromID(entryId)
		return item
	end
	
	# メールの一覧を取得
	def mails
		# GetDefaultFolder(6)は受信トレイ
		folder = @nameSpace.GetDefaultFolder(6)
		folder.Items.each do |mail|
			GC.start
			yield mail
		end
	end	
end

outlook = Outlook.new
# メールのタイトル、送信日時、EntryID一欄を表示
outlook.mails do |mail|
	#puts &amp;quot;To     :#{mail.To}&amp;quot;
	puts &amp;quot;#{mail.SentOn} | #{mail.Subject.unpack(&amp;quot;a50&amp;quot;)}&amp;quot;
	puts &amp;quot;#{mail.EntryID}&amp;quot;
end

# 入力待ち。保存したいメールのEntryIdを貼りつけ
mail = outlook.mail(STDIN.gets.chomp)
#puts mail.Attachments.ole_methods
#puts mail.Attachments.Item(1).ole_methods

# 添付ファイルのファイル名を取得
file = mail.Attachments.Item(1).FileName
# RootPath下に添付ファイル名のディレクトリ作成
SaveDir = &amp;quot;#{SaveRootPath}\\#{file.split(&amp;quot;.&amp;quot;)[0]}&amp;quot;
Dir.mkdir(SaveDir)

# 添付ファイル保存
mail.Attachments.Item(1).SaveAsFile(&amp;quot;#{SaveDir}\\#{file}&amp;quot;)

# ディレクトリ下にタイトル.txtファイルを作成し送信者、タイトル、本文を書きこむ
File.open(&amp;quot;#{SaveDir}\\#{mail.Subject}.txt&amp;quot;, &amp;quot;w&amp;quot;) do |file|
	file.write &amp;quot;SENDER      : #{mail.SenderName}(#{mail.SenderEmailAddress})\n&amp;quot;
	file.write &amp;quot;TO          : #{mail.To}\n&amp;quot;
	file.write &amp;quot;CC          : #{mail.CC}\n&amp;quot;
	file.write &amp;quot;ReceivedTime: #{mail.SentOn}\n&amp;quot;
	file.write &amp;quot;SUBJECT     : #{mail.Subject}\n&amp;quot;
	file.write &amp;quot;BODY: \n#{mail.Body}\n&amp;quot;
end&lt;/pre&gt;
&lt;p&gt;基本的に参考サイトの「Ruby から Outlook を操作する」の章の通りに進めば、まず受信トレイの一覧を取ってこれるまではいけます。詰まったのは添付ファイルの扱い…Attachmentsオブジェクトの扱い方でした。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;まず、自作のOutlook#mailを呼び出し特定のメールを取得します。(EntryIDを元に)&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;ruby&quot;&gt;	# EntryIDを元にメールを取得	
	def mail(entryId)
		item = @nameSpace.GetItemFromID(entryId)
		return item
	end&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;このメールオブジェクトにAttachmentsが。そしてAttachments.Item(number)に添付ファイルが格納されているようです。Itemのnumberは1から始まっている？　0だとエラーが出たような…。&lt;/li&gt;&lt;li&gt;Item(number)#FileNameで添付ファイル名が、Item(number)#SaveAsFile(path)で添付ファイルの保存ができました。この辺り。&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;ruby&quot;&gt;file = mail.Attachments.Item(1).FileName
# RootPath下に添付ファイル名のディレクトリ作成
SaveDir = &amp;quot;#{SaveRootPath}\\#{file.split(&amp;quot;.&amp;quot;)[0]}&amp;quot;
Dir.mkdir(SaveDir)

# 添付ファイル保存
mail.Attachments.Item(1).SaveAsFile(&amp;quot;#{SaveDir}\\#{file}&amp;quot;)&lt;/pre&gt;
&lt;h1&gt;まとめ&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;メール本文を保存したい(ファイル名は件名.txt)&lt;ul&gt;&lt;li&gt;とりあえずできた&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;添付ファイルを保存したい(ファイル名は添付ファイル名のまま)&lt;ul&gt;&lt;li&gt;とりあえずできた&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;上記のファイルをYYYYMMDD_添付ファイル名(拡張子なし)フォルダの中へ格納&lt;ul&gt;&lt;li&gt;YYYYMMDD付加はまだ、フォルダはできた&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;保存場所はマイドキュメントかデスクトップ&lt;ul&gt;&lt;li&gt;マイドキュメントに保存はできた&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;TODO&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;フォルダ名先頭にYYYYMMDD&lt;/li&gt;&lt;li&gt;フォルダ名に使用できない文字を全角に置換&lt;/li&gt;&lt;li&gt;フォルダ存在時の対処&lt;/li&gt;&lt;li&gt;デスクトップに保存したい&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;穴だらけだしまだわからない事も多いけど、とりあえず動く所までは行けた！　ので続く。&lt;/p&gt;
&lt;div class=&quot;footnote&quot;&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn1&quot; name=&quot;f1&quot;&gt;*1&lt;/a&gt;: もしかしたらググッたら打開策があるのかもしれない。&lt;/p&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>Redmineインストール備忘録(Windows)</title>
   <link href="http://gosyujin.github.io/2011/05/01/1304204171"/>
   <updated>2011-05-01T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2011/05/01/1304204171</id>
   <content type="html">&lt;h1&gt;参考サイト&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://redmine.jp/tech_note/install/&quot;&gt;http://redmine.jp/tech_note/install/&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;OSとRubyとか&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;OSはWindows XP&lt;/li&gt;&lt;li&gt;Ruby, RubyGemsインストール済み&lt;/li&gt;&lt;li&gt;DBはSQLite3にする&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;必要なものをDL, インストール&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;GemでRailsをインストール&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;&amp;gt;gem install rails&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;同じくsqlite3をインストール&lt;ul&gt;&lt;li&gt;最新のsqlite3-ruby(1.2.4)ではなく、1.2.3を指定&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f1&quot; title=&quot;http://redmine.ruby-lang.org/issues/1097&quot; name=&quot;fn1&quot;&gt;*1&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;&amp;gt;gem install sqlite3-ruby --version &#39;= 1.2.3&#39;&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://www.sqlite.org/download.html&quot;&gt;SQLite Download Page&lt;/a&gt; でSQLite3のdllをDLしC:\WINDOWS\system32(パスが通ってるところ)にコピー&lt;ul&gt;&lt;li&gt;コマンドラインから動かす予定はないのでexeは落とさない&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://rubyforge.org/frs/?group_id=1850&quot;&gt;RubyForge: Redmine: Project Filelist&lt;/a&gt; でRedmineをDLし解凍&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;各種設定&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;Redmineフォルダ内のconfig/database.ymlを作成し&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f2&quot; title=&quot;確かサンプルファイルがあったはず。&quot; name=&quot;fn2&quot;&gt;*2&lt;/a&gt;&lt;/span&gt;、最低限下記のように編集&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;&gt;|??|&lt;/p&gt;
&lt;p&gt;production:&lt;/p&gt;
&lt;p&gt;	adapter: sqlite3		# SQLite3を指定&lt;/p&gt;
&lt;p&gt;	database: db/redmine.db	# DB名は任意&lt;/p&gt;
&lt;p&gt;	timeout: 5000		# タイムアウト時間&lt;/p&gt;
&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;ul&gt;&lt;li&gt;config/initializers/session_store.rb作成&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;&amp;gt;rake generate_session_store&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;DBの初期化&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;&amp;gt;rake db:migrate RAILS_ENV=production
&amp;gt;rake redmine:load_default_data RAILS_ENV=production&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;…が、ここでエラー&lt;ul&gt;&lt;li&gt;rackバージョンが1.2.2はダメ、1.0.1にしてって事らしい&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;rake aborted!
RubyGem version error: rack(1.2.2 not ~&amp;gt; 1.0.1)&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;バージョン指定してインストールし直し、再度DBの初期化を実行&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;&amp;gt;gem uninstall rack
&amp;gt;gem install rack -v=1.0.1&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;2つ目のコマンド実行時、途中で言語を求められるのでjaを指定&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;(略)
Select language: bg, bs, ca, cs, da, de, el, en, en-GB, es, eu, fi, fr, gl, he,
hr, hu, id, it, ja, ko, lt, lv, mk, mn, nl, no, pl, pt, pt-BR, ro, ru, sk, sl, s
r, sr-YU, sv, th, tr, uk, vi, zh, zh-TW [en]&lt;/pre&gt;
&lt;h1&gt;起動&lt;/h1&gt;
&lt;pre class=&quot;&quot;&gt;&amp;gt;ruby script\server -e production&lt;/pre&gt;
&lt;p&gt;というわけで、一人でRedmine使ってみる。&lt;/p&gt;
&lt;div class=&quot;footnote&quot;&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn1&quot; name=&quot;f1&quot;&gt;*1&lt;/a&gt;: http://redmine.ruby-lang.org/issues/1097&lt;/p&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn2&quot; name=&quot;f2&quot;&gt;*2&lt;/a&gt;: 確かサンプルファイルがあったはず。&lt;/p&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>さくらVPSにDropboxをインストールした</title>
   <link href="http://gosyujin.github.io/2011/04/23/1303489798"/>
   <updated>2011-04-23T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2011/04/23/1303489798</id>
   <content type="html">&lt;p&gt;&lt;span class=&quot;deco&quot; style=&quot;color:#FF0000;&quot;&gt;※インストール後、Enable LAN sync(LAN同期を有効にする)オプションをOFFにする必要がある&lt;/span&gt; &lt;a href=&quot;2011-10-08-1318068887&quot;&gt;2011-10-08-1318068887&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;あらすじ&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;GUIがなくてもDropboxを使いたい！→CUI版のDropboxがあるらしい&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;参考サイト&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://wiki.dropbox.com/TipsAndTricks/TextBasedLinuxInstall&quot;&gt;http://wiki.dropbox.com/TipsAndTricks/TextBasedLinuxInstall&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://www.hyk-home.com/blog/infra/archives/2009/05/05-202601-137.html&quot;&gt;GUIの無いLinux（CentOS）にDropboxをインストールする - インフラメンコ&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;上記のサイトの情報だけで全部できました。以下自分用メモ。&lt;/p&gt;
&lt;h1&gt;OSとかPythonとか&lt;/h1&gt;
&lt;table&gt;&lt;tr&gt;&lt;th&gt;CentOS&lt;/th&gt;&lt;td&gt;5.5 x86_64&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;Python&lt;/th&gt;&lt;td&gt;2.6.2&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;ul&gt;&lt;li&gt;Pythonはデフォルトで2.4.3が入っているがこれじゃあ動かなかった。2.6が必須らしい。&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://www.python.org/ftp/python/&quot;&gt;Index of /ftp/python&lt;/a&gt; 必要に応じてダウンロードしておく。&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;Dropboxを手に入れる～インストール&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;&lt;del datetime=&quot;2012-04-07T12:38:37+09:00&quot;&gt;&lt;a href=&quot;http://wiki.dropbox.com/TipsAndTricks/TextBasedLinuxInstall#Step-by-stepversion&quot;&gt;Step-by-stepversion&lt;/a&gt; の1.～7.まで順番に実行していく。&lt;/del&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&quot;deco&quot; style=&quot;color:#FF0000;&quot;&gt;(2012/04/07追記)手順を一部修正&lt;/span&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.dropbox.com/install?os=lnx&quot;&gt;Dropbox - Download Dropbox - Simplify your life&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;$ cd ~ &amp;amp;&amp;amp; wget -O - &amp;quot;http://www.dropbox.com/download?plat=lnx.x86&amp;quot; | tar xzf -&lt;/pre&gt;
&lt;ol&gt;&lt;ul&gt;&lt;li&gt;&lt;del datetime=&quot;2012-04-07T12:38:37+09:00&quot;&gt;1. ホームディレクトリに移動する。&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f1&quot; title=&quot;デフォルトでインストールする場所に合わせる？&quot; name=&quot;fn1&quot;&gt;*1&lt;/a&gt;&lt;/span&gt;&lt;/del&gt;&lt;/li&gt;&lt;li&gt;&lt;del datetime=&quot;2012-04-07T12:38:37+09:00&quot;&gt;2. &lt;a href=&quot;http://www.getdropbox.com/download?plat=lnx.x86&quot;&gt;32bit版Dropbox&lt;/a&gt; をダウンロードする。&lt;/del&gt;&lt;/li&gt;&lt;li&gt;&lt;del datetime=&quot;2012-04-07T12:38:37+09:00&quot;&gt;3.～5. ダウンロードしたファイルを解凍する。&lt;/del&gt;解凍するとホームディレクトリに.dropbox-dist/が生成される。ドットファイルなので隠しファイル。&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f2&quot; title=&quot;見つけるのに時間がかかった…&quot; name=&quot;fn2&quot;&gt;*2&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;6. .dropbox-dist/dropboxd を実行する。実行するとリンクしてください！　と言われる。他のPCから指定のアドレスへアクセスし、自分のDropboxアカウントでログインする。&lt;/li&gt;&lt;/ul&gt;&lt;/ol&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20110423012022&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20110423/20110423012022.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;&lt;ul&gt;&lt;li&gt;リンクすると、自動で同期が始まる。&lt;/li&gt;&lt;/ul&gt;&lt;/ol&gt;
&lt;h1&gt;確認&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://www.getdropbox.com/download?dl=packages/dropbox.py&quot;&gt;dropbox.py&lt;/a&gt; でステータスなどが確認できる。&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;python&quot;&gt;$python dropbox.py status&lt;/pre&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20110423012021&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20110423/20110423012021.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;これはwhileで回しまくってる時にファイルを同期させた所を確認している。よし！&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;使わなかったもの&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://dl.getdropbox.com/u/6995/dbmakefakelib.py&quot;&gt;http://dl.getdropbox.com/u/6995/dbmakefakelib.py&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://dl.getdropbox.com/u/6995/dbreadconfig.py&quot;&gt;http://dl.getdropbox.com/u/6995/dbreadconfig.py&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;参考サイトでは使ってたけど、この2つは使わなくても同期できるみたい？&lt;/p&gt;
&lt;div class=&quot;footnote&quot;&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn1&quot; name=&quot;f1&quot;&gt;*1&lt;/a&gt;: デフォルトでインストールする場所に合わせる？&lt;/p&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn2&quot; name=&quot;f2&quot;&gt;*2&lt;/a&gt;: 見つけるのに時間がかかった…&lt;/p&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>RubyではてなのWSSE認証をしてはてブにブクマをポストする</title>
   <link href="http://gosyujin.github.io/2011/03/08/1299588433"/>
   <updated>2011-03-08T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2011/03/08/1299588433</id>
   <content type="html">&lt;p&gt;ReadItLaterの続きをやろうと思ったのですが、GitHubにはてブスクリプトをコミットしたので先にまとめる。&lt;/p&gt;
&lt;p&gt;結構前に作ったので、OAuthではなくWSSE認証を使っています。&lt;/p&gt;
&lt;h1&gt;手順&lt;/h1&gt;
&lt;ol&gt;&lt;li&gt;X-WSSEヘッダを作成する&lt;/li&gt;&lt;li&gt;ブックマークするUrl・コメントを記述したxmlデータと、X-WSSEヘッダを含めたリクエストを&lt;a href=&quot;http://b.hatena.ne.jp/atom/post&quot;&gt;http://b.hatena.ne.jp/atom/post&lt;/a&gt;へPOSTする&lt;/li&gt;&lt;/ol&gt;
&lt;p&gt;手順はこれだけ。次に詳細を…。&lt;/p&gt;
&lt;h1&gt;ヘッダを作成する&lt;/h1&gt;
&lt;p&gt;以下のデータを用意します&lt;/p&gt;
&lt;table&gt;&lt;tr&gt;&lt;th&gt;Username&lt;/th&gt;&lt;td&gt;はてなID&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;Nonce&lt;/th&gt;&lt;td&gt;HTTPリクエスト毎に生成したセキュリティ・トークンをBASE64エンコードしたもの&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f1&quot; title=&quot;一意な値ならとりあえず動くようです。&quot; name=&quot;fn1&quot;&gt;*1&lt;/a&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;Created&lt;/th&gt;&lt;td&gt;Nonce作成時のタイムスタンプをISO-8601表記で記述したもの&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;PasswordDigest&lt;/th&gt;&lt;td&gt;「Nonce+Created+はてなのパスワード」をSHA1でダイジェスト化しBASE64エンコードしたもの&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;これらのデータをX-WSSEヘッダに以下の形式で格納します。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;UsernameToken Username=&amp;quot;USERNAME&amp;quot;, PasswordDigest=&amp;quot;PASSWORDDIGEST&amp;quot;, Nonce=&amp;quot;NONCE&amp;quot;, Created=&amp;quot;CREATED&amp;quot;&lt;/pre&gt;
&lt;h1&gt;POSTする&lt;/h1&gt;
&lt;p&gt;ヘッダは完成したので、次にブックマークする情報を用意します。形式はxmlで以下のようなフォーマットで作成します。&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f2&quot; title=&quot;ブックマークコメントを[]でくくるとタグになります。[Google]みたいな。&quot; name=&quot;fn2&quot;&gt;*2&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;&amp;lt;entry xmlns=&amp;quot;http://purl.org/atom/ns#&amp;quot;&amp;gt;
                &amp;lt;title&amp;gt;dummy&amp;lt;/title&amp;gt;
                &amp;lt;link rel=&amp;quot;related&amp;quot; type=&amp;quot;text/html&amp;quot; href=&amp;quot;ブックマークするURL&amp;quot; /&amp;gt;
                &amp;lt;summary type=&amp;quot;text/plain&amp;quot;&amp;gt;ブックマークコメント&amp;lt;/summary&amp;gt;
&amp;lt;/entry&amp;gt;&lt;/pre&gt;
&lt;p&gt;作成されたヘッダとデータはこんな感じになります。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20110308213639&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20110308/20110308213639.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;最後に作成したヘッダとブックマークデータを&lt;a href=&quot;http://b.hatena.ne.jp/atom/post&quot;&gt;http://b.hatena.ne.jp/atom/post&lt;/a&gt;へポストすると。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20110308213640&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20110308/20110308213640.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;おお。&lt;/p&gt;
&lt;p&gt;正常に作成された場合は、ステータスコードは201が返ってくるようです。&lt;/p&gt;
&lt;h1&gt;ソース&lt;/h1&gt;
&lt;p&gt;Gistは直接貼れるけどGitHubは貼れないのね…。ここにあります。&lt;a href=&quot;https://github.com/gosyujin/hatena&quot;&gt;gosyujin/hatena · GitHub&lt;/a&gt;&lt;/p&gt;
&lt;pre class=&quot;ruby&quot;&gt;require &#39;rubygems&#39;
require &#39;pit&#39;
require &#39;time&#39;
require &#39;digest/sha1&#39;
require &#39;net/http&#39;
require &#39;uri&#39;
require &#39;nkf&#39;

# wsse認証を行う
def wsse(hatena_id, password)
	# 一意な値(仮実装)
	nonce = [Time.now.to_i.to_s].pack(&#39;m&#39;).gsub(/\n/, &#39;&#39;)
	# nonce作成時のタイムスタンプをISO-8601表記で記述したもの
	now = Time.now.utc.iso8601
	
	# SHA1ダイジェスト化した文字列をBase64エンコード
	digest = [Digest::SHA1.digest(nonce + now + password)].pack(&amp;quot;m&amp;quot;).gsub(/\n/, &#39;&#39;)
	
	{ &#39;X-WSSE&#39; =&amp;gt; sprintf(
		%Q&amp;lt;UsernameToken Username=&amp;quot;%s&amp;quot;, PasswordDigest=&amp;quot;%s&amp;quot;, Nonce=&amp;quot;%s&amp;quot;, Created=&amp;quot;%s&amp;quot;&amp;gt;,
		hatena_id, digest, nonce, now)
	}
end

# はてブ登録用xmlを生成する
def getXml(link, summary)
	%Q(
	&amp;lt;entry xmlns=&amp;quot;http://purl.org/atom/ns#&amp;quot;&amp;gt;
		&amp;lt;title&amp;gt;dummy&amp;lt;/title&amp;gt;
		&amp;lt;link rel=&amp;quot;related&amp;quot; type=&amp;quot;text/html&amp;quot; href=&amp;quot;#{link}&amp;quot; /&amp;gt;
		&amp;lt;summary type=&amp;quot;text/plain&amp;quot;&amp;gt;#{summary}&amp;lt;/summary&amp;gt;
	&amp;lt;/entry&amp;gt;
	)
end

b_url = ARGV.shift || abort(&amp;quot;Usage: hatenabookmark.rb &amp;lt;url&amp;gt; &amp;lt;comment&amp;gt;&amp;quot;)
b_comment = ARGV.shift

# エンドポイント
url = &amp;quot;http://b.hatena.ne.jp/atom/post&amp;quot;

# ユーザ情報読み込み
hatena = Pit.get(&amp;quot;hatena&amp;quot;, :require =&amp;gt; {
	# はてなIDとパスワード
	&amp;quot;hatena_id&amp;quot; =&amp;gt; &amp;quot;your hatena_id&amp;quot;, 
	&amp;quot;password&amp;quot; =&amp;gt; &amp;quot;your password&amp;quot;, 
})
# pitを使わずにべた書き用
# hatena = {
#	hatena_id =&amp;gt; HATENA_ID, 
#	password = PASSWORD
# }

# WSSE認証
header = wsse(hatena[&amp;quot;hatena_id&amp;quot;], hatena[&amp;quot;password&amp;quot;])

uri = URI.parse(url)
proxy_class = Net::HTTP::Proxy(ENV[&amp;quot;PROXY&amp;quot;], 8080)
http = proxy_class.new(uri.host)
http.start do |http|
	# 読み込んだ文字列をutf-8に変換
	# b_url = NKF.nkf(&#39;-w&#39;, b_url)
	# b_comment = NKF.nkf(&#39;-w&#39;, b_comment)
	
	# エンドポイントへPOST
	res = http.post(uri.path, getXml(b_url, b_comment), header)
	if res.code == &amp;quot;201&amp;quot; then
		print &amp;quot;Bookmark success: #{b_url}\n&amp;quot;
	else
		print &amp;quot;#{res.code} Error: #{b_url}\n&amp;quot;
	end
end&lt;/pre&gt;
&lt;p&gt;参考にしたサイトにトラックバック打とうと思ったけど前すぎて忘れた＞＜　見つけたら追記します。&lt;/p&gt;
&lt;div class=&quot;footnote&quot;&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn1&quot; name=&quot;f1&quot;&gt;*1&lt;/a&gt;: 一意な値ならとりあえず動くようです。&lt;/p&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn2&quot; name=&quot;f2&quot;&gt;*2&lt;/a&gt;: ブックマークコメントを[]でくくるとタグになります。[Google]みたいな。&lt;/p&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>Read it LaterをRubyで取得する</title>
   <link href="http://gosyujin.github.io/2011/03/02/1299062938"/>
   <updated>2011-03-02T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2011/03/02/1299062938</id>
   <content type="html">&lt;p&gt;ブラウザからログインせずともRILを見たい！　追加したい！　ということで。&lt;/p&gt;
&lt;h1&gt;前準備&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;はじめにapikeyを取得するために&lt;a href=&quot;http://readitlaterlist.com/api/signup/&quot;&gt;http://readitlaterlist.com/api/signup/&lt;/a&gt;にアクセスします。&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f1&quot; title=&quot;ReadItLaterのアカウントを持っていない場合は、あらかじめ作っておきます。&quot; name=&quot;fn1&quot;&gt;*1&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;必須項目(AppNameとContact Email)を記入し、Generate API Keyします。&lt;/li&gt;&lt;li&gt;取得したapikeyを取っておきます。&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20110302190610&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20110302/20110302190610.png&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;APIの概要は&lt;a href=&quot;http://readitlaterlist.com/api/docs/&quot;&gt;http://readitlaterlist.com/api/docs/&lt;/a&gt;に載っているので、基本的にはこれを見ながらできる…はず。&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;記事をGetする&lt;/h1&gt;
&lt;p&gt;以下のパラメータを生成し、URLのおしりに?AAA=BBB&amp;CCC=DDD...形式でくっつけて&lt;a href=&quot;https://readitlaterlist.com/v2/get&quot;&gt;https://readitlaterlist.com/v2/get&lt;/a&gt;に送ります。&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f2&quot; title=&quot;順不同でもよい&quot; name=&quot;fn2&quot;&gt;*2&lt;/a&gt;&lt;/span&gt;パラメータは他にもあるけど、とりあえずこれだけあれば取得はできます。&lt;/p&gt;
&lt;table&gt;&lt;tr&gt;&lt;th&gt;apikey(必須)&lt;/th&gt;&lt;td&gt;今生成したapikey&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;username(必須)&lt;/th&gt;&lt;td&gt;Read It Laterのアカウント&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;password(必須)&lt;/th&gt;&lt;td&gt;パスワード&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;format&lt;/th&gt;&lt;td&gt;レスポンスのフォーマット。jsonかxmlが選択できる。デフォルトはjson&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;パスワードが丸見えなのでショルダーハックとかされるとアレですが…。&lt;/p&gt;
&lt;h1&gt;ソースコード&lt;/h1&gt;
&lt;p&gt;ここまでをRubyで書いてみました。jsonの解析はTwitterから取得したツイートを解析したときと同じようにsimplejsonparserを使用させていただきました。&lt;/p&gt;
&lt;pre class=&quot;ruby&quot;&gt;require &#39;uri&#39;
require &#39;net/http&#39;
# http://rubyforge.org/snippet/detail.php?type=snippet&amp;amp;id=148
require &#39;simplejsonparser&#39;
require &#39;pp&#39;

# RIL取得用のURL
url = &amp;quot;https://readitlaterlist.com/v2/get&amp;quot;

# アカウント名とパスワード
username = &amp;quot;kk_Ataka&amp;quot;
password = PASSWORD
# apikey
apikey = APIKEY
# format json or xml
format = &amp;quot;json&amp;quot;

# パラメータ作成
param = &amp;quot;username=#{username}&amp;amp;password=#{password}&amp;amp;apikey=#{apikey}&amp;amp;format=#{format}&amp;quot;

# GETする
uri = URI.parse(url)
proxy_class = Net::HTTP::Proxy(ARGV[0], 8080)
http = proxy_class.new(uri.host)
http.start do |http|
        res = http.get(uri.path + &amp;quot;?#{param}&amp;quot;)
        if res.code == &amp;quot;200&amp;quot; then
                json = res.body
                # jsonparseでparseしてもらう
                jsonparse = JsonParser.new.parse(json)

                pp jsonparse
        else
                print &amp;quot;#{res.code}\n&amp;quot;
        end
end&lt;/pre&gt;
&lt;p&gt;すると、こんな感じに返ってきます。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20110302190611&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20110302/20110302190611.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;json形式では、こんなフォーマットで返ってくるみたい。&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;{&lt;/p&gt;&lt;p&gt;　　&quot;status&quot;:&quot;1&quot;,			// 1=normal, 2=no changes since your provided &#39;since&#39;&lt;/p&gt;&lt;p&gt;　　&quot;since&quot;:&quot;1245626956&#39;,		// timestamp of this response&lt;/p&gt;&lt;p&gt;　　&quot;list&quot;:{&lt;/p&gt;&lt;p&gt;　　　&quot;93817&quot;:{&lt;/p&gt;&lt;p&gt;　　　　&quot;item_id&quot;:&quot;93817&quot;		    // unique id identifying the url&lt;/p&gt;&lt;p&gt;　　　　&quot;url&quot;:&quot;&lt;a href=&quot;http://url.com&quot;&gt;http://url.com&lt;/a&gt;&quot;,&lt;/p&gt;&lt;p&gt;　　　　&quot;title&quot;:&quot;Page Title&quot;,&lt;/p&gt;&lt;p&gt;　　　　&quot;time_updated&quot;:&quot;1245626956&quot;,       // time the item was last added/changed&lt;/p&gt;&lt;p&gt;　　　　&quot;time_added&quot;:&quot;1245626956&quot;,	    // time item was added to list&lt;/p&gt;&lt;p&gt;　　　　&quot;tags&quot;:&quot;comma,seperated,list&quot;,&lt;/p&gt;&lt;p&gt;　　　　&quot;state&quot;:&quot;0&quot;,                       // 0=unread, 1=read&lt;/p&gt;&lt;p&gt;　　　},&lt;/p&gt;&lt;p&gt;...&lt;/p&gt;&lt;cite&gt;&lt;a href=&quot;http://readitlaterlist.com/api/docs/#get&quot;&gt;http://readitlaterlist.com/api/docs/#get&lt;/a&gt;&lt;/cite&gt;&lt;/blockquote&gt;
&lt;p&gt;さしあたり、欲しいのはlist内のurl,titleくらいなんだけど、これどうやって取得するんだろう。うまい方法が思い浮かばなかったので、一旦listのkeyを全部取得してkey分forを回すというあまりイケてない方法に。parse以降をこう変えました。&lt;/p&gt;
&lt;pre class=&quot;ruby&quot;&gt;                # jsonparseでparseしてもらう
                jsonparse = JsonParser.new.parse(json)
                
				# listのキーを取得
                keys = jsonparse[&amp;quot;list&amp;quot;].keys
                for i in 0..keys.length-1
                        print_url = jsonparse[&amp;quot;list&amp;quot;][keys[i]][&amp;quot;url&amp;quot;]
                        print_title = jsonparse[&amp;quot;list&amp;quot;][keys[i]][&amp;quot;title&amp;quot;]

                        print &amp;quot;#{print_title} ■ #{print_url}\n&amp;quot;
                end&lt;/pre&gt;
&lt;p&gt;すると表示は、&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20110302192703&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20110302/20110302192703.png&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;おお、ニコニコ動画！　次はAddをやりたい。むしろそっちが目的！&lt;/p&gt;
&lt;div class=&quot;footnote&quot;&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn1&quot; name=&quot;f1&quot;&gt;*1&lt;/a&gt;: ReadItLaterのアカウントを持っていない場合は、あらかじめ作っておきます。&lt;/p&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn2&quot; name=&quot;f2&quot;&gt;*2&lt;/a&gt;: 順不同でもよい&lt;/p&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>BPStudy#41に参加しました</title>
   <link href="http://gosyujin.github.io/2011/01/30/1296401919"/>
   <updated>2011-01-30T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2011/01/30/1296401919</id>
   <content type="html">&lt;ul&gt;&lt;li&gt;詳細: &lt;a href=&quot;http://atnd.org/events/11755&quot;&gt;BPStudy#41 : ATND&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;ATNDなどでBPStudyの存在は知っていたのですが、今回初参加。&lt;/p&gt;
&lt;p&gt;分散SCMを勉強しようと思って最近Gitを使いはじめたのですが、リアル周りに使っている人がいないので知識共有ができず……。他の人はどうやって使っているのかなーと思っているところに神速さんがGitの発表をすると聞いたので、自重せずに参加しました。&lt;/p&gt;
&lt;p&gt;以下メモ。前半戦のjsも、聞けばわかるかなーとか思っていたら甘かった……jsは勉強不足でした。もう少し使えないと話にもついていけない……。&lt;/p&gt;
&lt;h1&gt;JavaScript @&lt;a href=&quot;http://twitter.com/monjudoh&quot;&gt;monjudoh&lt;/a&gt;さん&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://d.hatena.ne.jp/monjudoh/20110128/1296205331&quot;&gt;BPStudy#41 RequireJSとeventとUIコンポーネント - 文殊堂&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;RequireJS実践編&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;RequireJSって何？&lt;ul&gt;&lt;li&gt;jsの依存性解決をしてくれるライブラリ&lt;/li&gt;&lt;li&gt;モジュール内で他のモジュールを再帰的に読み込みを行いたい場合…define関数を使用して読み込んでいく&lt;/li&gt;&lt;li&gt;require関数を使うと逆に読み込んでいく&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;ul&gt;&lt;li&gt;RequireJS読み込みの前にrequireなんたらという名前が付いているグローバル変数がある場合、設定ファイルとして使ってくれる&lt;/li&gt;&lt;/ul&gt;
&lt;ul&gt;&lt;li&gt;モジュールjsのあるディレクトリが深い場合呼び出しがめんどい&lt;ul&gt;&lt;li&gt;baseUrlを指定してjsがあるパスを基底のパスにすると楽になる&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;ul&gt;&lt;li&gt;パスの上書きもできる&lt;ul&gt;&lt;li&gt;スタブモジュールと置き換える事もできる&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;ul&gt;&lt;li&gt;キャッシュされた古いJavaScriptを読みこまないようにもできる&lt;ul&gt;&lt;li&gt;クエリパラメータにデプロイ日時を入れる&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;jQuery custom event 応用編&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;custom eventって何？&lt;ul&gt;&lt;li&gt;ブラウザがサポートしてないイベント&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f1&quot; title=&quot;普通はユーザがクリックするとか、ページが読み込み終わるとイベントが始まるけど、jQueryはtriggerHandlerメソッドで(ユーザに関係なく)始まる&quot; name=&quot;fn1&quot;&gt;*1&lt;/a&gt;&lt;/span&gt;を定義する独自のイベント&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;ul&gt;&lt;li&gt;普通のプログラムのような事もcustom eventでできる&lt;ul&gt;&lt;li&gt;関数呼び出し&lt;/li&gt;&lt;li&gt;引数付き呼び出し&lt;/li&gt;&lt;li&gt;インスタンス変数へのアクセス&lt;/li&gt;&lt;li&gt;クラス作成のような事&lt;/li&gt;&lt;li&gt;mixin&lt;/li&gt;&lt;li&gt;callback&lt;/li&gt;&lt;li&gt;mixout&lt;/li&gt;&lt;li&gt;同名のn(≧0)個の関数呼び出し&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;疎結合なUIコンポーネントの作成について&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;複数画面で使えるAjaxformダイアログのコンポーネントを作りたい&lt;ul&gt;&lt;li&gt;例えば、Googleカレンダーのように日付セルをクリックしたらスケジュール登録ダイアログが出るように&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;ul&gt;&lt;li&gt;仕様変更&lt;ul&gt;&lt;li&gt;セルをクリックしたらアクティブ、アクティブをクリックしたらスケジュール登録ダイアログが出るように&lt;/li&gt;&lt;li&gt;ダイアログを開く→custom eventにして「開く」と「ユーザアクションの検知」を別に&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;ul&gt;&lt;li&gt;仕様変更&lt;ul&gt;&lt;li&gt;スケジュール一覧画面を作る、画面に新規追加ボタンもあり、カレンダーのセルをクリックしたときと同じダイアログをだす&lt;/li&gt;&lt;li&gt;ユーザアクション検知のモジュールをカレンダー画面とスケジュール表示画面に分ける&lt;/li&gt;&lt;li&gt;callback処理も分ける&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;ul&gt;&lt;li&gt;本体の再利用性も高いし、挿し込むパーツも機能が明確なので再利用性が高くなる&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;マスタリング非同期読み込み @&lt;a href=&quot;http://twitter.com/os0x&quot;&gt;os0x&lt;/a&gt;さん&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://ss-o.net/event/js20110128/&quot;&gt;マスタリング非同期読み込み BPStudy#41&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;最近非同期読み込みが流行っているらしい…&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;Node.jsなどが有名&lt;/li&gt;&lt;li&gt;JavaScriptは他のリソースの読み込みをブロックするので非同期で行いたい&lt;/li&gt;&lt;li&gt;新UIになったTwitterでも使われている&lt;ul&gt;&lt;li&gt;けど、あまりはやくなってない？&lt;/li&gt;&lt;li&gt;本文が最後に表示されるから(先に読み込もうとしているけど表示に時間がかかっている)&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;ライブラリ&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;LAB.js&lt;ul&gt;&lt;li&gt;ロード処理をjsで実装。Twitterでも使われている&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;ControlJS&lt;ul&gt;&lt;li&gt;scriptタグのtypeをtext/javascript→text/cjsにしてあとでcjsとして評価する&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;RequireJS&lt;ul&gt;&lt;li&gt;document.createElement(&#39;script&#39;)してinsertで使える&lt;/li&gt;&lt;li&gt;が、依存がネストすると非同期にならない→先に読み込んでおく&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;gitの歴史改変について @&lt;a href=&quot;http://twitter.com/sinsoku_listy&quot;&gt;sinsoku_listy&lt;/a&gt;さん&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://dl.dropbox.com/u/3501492/bpstudy-41/presen.html&quot;&gt;git の歴史改変について&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;分散SCMの利点について&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;各操作が早い&lt;/li&gt;&lt;li&gt;他リポジトリに影響を与えない&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;今回のGitコマンド&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;git add -p&lt;ul&gt;&lt;li&gt;部分変更を記録するコミット&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;git rebase -i&lt;ul&gt;&lt;li&gt;歴史を書き換えるコマンド&lt;ul&gt;&lt;li&gt;コミットの変更、コミットメッセージの変更などができる&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;デモ&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;pep8規約違反を起こしたコードを改変する&lt;ul&gt;&lt;li&gt;bisect(テストの失敗したコミットを二分探索でさがす)で探して改変&lt;/li&gt;&lt;li&gt;rebaseでコミットの修正&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;まとめ&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;詳しくは「入門Git」で！&lt;/li&gt;&lt;li&gt;他人が作ったコミット、他人に渡したコミットは改変してはいけない&lt;/li&gt;&lt;li&gt;…が、実際はプロジェクトの方針によってまちまち&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;発表後&lt;/h1&gt;
&lt;p&gt;ATNDに登録していなかったのですが、無理を言って懇親会に参加させていただきました。懇親会の場で話題にあがった、先のない技術の維持をダラダラ続けているのは守りの姿勢、それならニートでいる方がよっぽど攻めている。自分が本当に突き詰めたいものをもって外に攻め出たほうがいい。という言葉がちょっと考えさせられました。本当にこのままでいいのだろうかという……。とりあえず少しずつ。Gitを使いこなす所から始めよう。&lt;/p&gt;
&lt;h1&gt;最後に&lt;/h1&gt;
&lt;p&gt;主催者の@haru860さん、発表者の@monjudohさん、@os0xさん、@sinsoku_listyさん、受付をしてくださった皆さん今回はありがとうございました！&lt;/p&gt;
&lt;div class=&quot;footnote&quot;&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn1&quot; name=&quot;f1&quot;&gt;*1&lt;/a&gt;: 普通はユーザがクリックするとか、ページが読み込み終わるとイベントが始まるけど、jQueryはtriggerHandlerメソッドで(ユーザに関係なく)始まる&lt;/p&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>RubyでFizzBuzzみじかいのに挑戦した</title>
   <link href="http://gosyujin.github.io/2011/01/25/1295956879"/>
   <updated>2011-01-25T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2011/01/25/1295956879</id>
   <content type="html">&lt;ul&gt;&lt;li&gt;参考: &lt;a href=&quot;http://togetter.com/li/92612&quot;&gt;FizzBuzzを３０バイトで - Togetter&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;FizzBuzz自体は組んだことあるけど、短いのは考えたことがなかったのでこれを機会に挑戦。&lt;/p&gt;
&lt;h1&gt;一つ目&lt;/h1&gt;
&lt;pre class=&quot;ruby&quot;&gt;101.times{|i|p(i%15==0?&#39;FizzBuzz&#39;:i%3==0?&#39;Fizz&#39;:i%5==0?&#39;Buzz&#39;:i)}&lt;/pre&gt;
&lt;pre class=&quot;ruby&quot;&gt;101.times{ |i|
	p (
		i % 15 == 0 ? &#39;FizzBuzz&#39; 
			: i % 3 == 0 ? &#39;Fizz&#39;
					: i % 5 == 0 ? &#39;Buzz&#39; : i
	)
}&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;do～endが文字数消費するので{}を使った&lt;/li&gt;&lt;li&gt;if～elseが文字数消費するので三項演算子を使った&lt;/li&gt;&lt;li&gt;アウトプットをpにして文字数を稼いだ&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;三項演算子の入れ子なんて初めて使ったからどうインデントしたら綺麗に見えるのかもわからん！　しかもこれで66byte…某Y!社に入れないなぁ。&lt;/p&gt;
&lt;p&gt;また、どうもFizzBuzzって1から100でやるらしく、上記のソースだと0から100まで実行してしまうので他の部分も含めてちょっと考え直し……。&lt;/p&gt;
&lt;h1&gt;二つ目&lt;/h1&gt;
&lt;pre class=&quot;ruby&quot;&gt;(1..100).each{|i|p(i%15&amp;gt;0?i%5&amp;gt;0?i%3&amp;gt;0?i:&#39;Fizz&#39;:&#39;Buzz&#39;:&#39;FizzBuzz&#39;)}&lt;/pre&gt;
&lt;pre class=&quot;ruby&quot;&gt;(1..100).each{ |i|
	p (
		i % 15 &amp;gt; 0 ?
			i % 5 &amp;gt; 0 ?
				i % 3 &amp;gt; 0 ? i
				: &#39;Fizz&#39;
			: &#39;Buzz&#39;
		: &#39;FizzBuzz&#39;
	)
}&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;eachにしてループを1から100までにした&lt;/li&gt;&lt;li&gt;条件を割り切れたら(i%15==0)から割り切れなかったら(i%15&gt;0)に変更&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;条件式で3byte縮めたけどtimesからeachに交えたせいで67byteに増えた……。&lt;/p&gt;
&lt;p&gt;その後、最短方法をいろいろググッてみると配列使うテクニックとかがあるみたいすなあ。&quot;FizzBuzz&quot;の出力の仕方でもうちょい短縮できそうかな。&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>RubyでTwitterにツイートをキメてみる</title>
   <link href="http://gosyujin.github.io/2011/01/23/1295789180"/>
   <updated>2011-01-23T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2011/01/23/1295789180</id>
   <content type="html">&lt;h1&gt;前回までのあらすじ&lt;/h1&gt;
&lt;ol&gt;&lt;li&gt;&lt;a href=&quot;2010-11-21-1290271210&quot;&gt;2010-11-21-1290271210&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;2010-11-30-1291125511&quot;&gt;2010-11-30-1291125511&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;2010-12-07-1291733295&quot;&gt;2010-12-07-1291733295&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;
&lt;p&gt;ターミナルからOAuth認証をキメて、タイムラインを見られるようになりました。最後にターミナルからツイートが出来れば一応Twitterの見る・書くがライブラリ無しでできたことになります。&lt;/p&gt;
&lt;h1&gt;ツイートする方法&lt;/h1&gt;
&lt;ol&gt;&lt;li&gt;signatureを作成する。必要な値は以下のとおり。&lt;ol&gt;&lt;li&gt;oauth_consumer_key&lt;/li&gt;&lt;li&gt;oauth_nonce&lt;/li&gt;&lt;li&gt;oauth_signature&lt;/li&gt;&lt;li&gt;oauth_signature_method&lt;/li&gt;&lt;li&gt;oauth_timestamp&lt;/li&gt;&lt;li&gt;oauth_token&lt;/li&gt;&lt;li&gt;oauth_version&lt;/li&gt;&lt;li&gt;status &lt;span style=&quot;color:#FF0000;&quot;&gt;New!&lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;
&lt;p&gt;statusっていうのがツイートの本文ですね。signature作成するのにエスケープします。作成後のheaderはこんな感じ。&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f1&quot; title=&quot;実際はインデントとかなし。&quot; name=&quot;fn1&quot;&gt;*1&lt;/a&gt;&lt;/span&gt;statusには「確認確認」って入ってます。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;{
	&amp;quot;oauth_nonce&amp;quot;=&amp;gt;&amp;quot;3c8293f9c5a0295148d428a26edb9f46&amp;quot;, 
	&amp;quot;oauth_timestamp&amp;quot;=&amp;gt;&amp;quot;1295784908&amp;quot;, 
	&amp;quot;oauth_signature_method&amp;quot;=&amp;gt;&amp;quot;HMAC-SHA1&amp;quot;, 
	&amp;quot;oauth_consumer_key&amp;quot;=&amp;gt;&amp;quot;XXXXXXXXXXXXXXXXXXXXXX&amp;quot;, 
	&amp;quot;oauth_token&amp;quot;=&amp;gt;&amp;quot;99999999-YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY&amp;quot;, 
	&amp;quot;oauth_signature&amp;quot;=&amp;gt;&amp;quot;UKt1BmJ+UWNWrSmBuAyJ40iiCNY=&amp;quot;, 
	&amp;quot;status&amp;quot;=&amp;gt;&amp;quot;%E7%A2%BA%E8%AA%8D%E7%A2%BA%E8%AA%8D&amp;quot;, 
	&amp;quot;oauth_version&amp;quot;=&amp;gt;&amp;quot;1.0&amp;quot;
}&lt;/pre&gt;
&lt;h1&gt;signature作成後&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;signatureを作成したら、headerからstatusを消します&lt;/li&gt;&lt;li&gt;残ったheaderをアルファベット順に並べ、xxx=yyy&lt;span style=&quot;color:#FF0000;&quot;&gt;,&lt;/span&gt;vvv=zzz……の形で連結します。連結後はこんな感じ&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;oauth_consumer_key=XXXXXXXXXXXXXXXXXXXXXX,oauth_nonce=341d852d61cdc3c22e3e847b0ab69d20,oauth_signature=MR5WEJ1qHuE49ozgRYduNJ%2BBiCs%3D,oauth_signature_method=HMAC-SHA1,oauth_timestamp=1295785315,oauth_token=99999999-YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY,oauth_version=1.0&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;連結した上記の値をAuthorizationヘッダに入れる。入れた後はこんな感じ。&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;&amp;quot;Authorization&amp;quot;=&amp;gt;&amp;quot;OAuth oauth_consumer_key=XXXXXXXXXXXXXXXXXXXXXX,oauth_nonce=341d852d61cdc3c22e3e847b0ab69d20,oauth_signature=MR5WEJ1qHuE49ozgRYduNJ%2BBiCs%3D,oauth_signature_method=HMAC-SHA1,oauth_timestamp=1295785315,oauth_token=99999999-YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY,oauth_version=1.0&amp;quot;&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;Authorizationヘッダを作成したら&lt;a href=&quot;http://api.twitter.com/1/statuses/home_timeline.json&quot;&gt;http://api.twitter.com/1/statuses/home_timeline.json&lt;/a&gt;へPOST。また、ツイート本文を「status=本文」の形でくっつける&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;結果&lt;/h1&gt;
&lt;p&gt;以上で、Twitterにツイートが完了しました！　おっぱいきたーー&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20110123215838&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20110123/20110123215838.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;ソース&lt;/h1&gt;
&lt;p&gt;ソースはこんな感じです。&lt;/p&gt;
&lt;pre class=&quot;ruby&quot;&gt;# -*- encoding: UTF-8 -*-

require &#39;openssl&#39;
require &#39;uri&#39;
require &#39;net/http&#39;
require &#39;nkf&#39;
require &#39;time&#39;

# 署名
def sigunature(method, 
		consumer_secret, 
		oauth_token_secret, 
		url, 
		oauth_header=nil)
	# sigunature_keyの作成
	# リクエストトークン時は&amp;quot;CONSUMER_SECRET&amp;amp;&amp;quot;(アンドが入っている)
	# アクセストークン時は&amp;quot;CONSUMER_SECRET&amp;amp;OAUTH_TOKEN_SECRET&amp;quot;として使用
	sigunature_key = consumer_secret + &amp;quot;&amp;amp;&amp;quot;
	if !oauth_token_secret.nil? then
		sigunature_key += oauth_token_secret
	end

	param = sort_and_concat(oauth_header)

	# メソッド + URL + パラメータ
	value = method + &amp;quot;&amp;amp;&amp;quot; + escape(url) + &amp;quot;&amp;amp;&amp;quot; + escape(param)
	# hmac_sha1
	sha1 = OpenSSL::HMAC.digest(OpenSSL::Digest::SHA1.new, sigunature_key, value)
	# base64
	base64 = [sha1].pack(&#39;m&#39;).gsub(/\n/, &#39;&#39;)
	return base64
end

# 文字列のエスケープ(: / = %をエスケープする。. _ -はそのまま)
def escape(value)
	URI.escape(value, Regexp.new(&amp;quot;[^a-zA-Z0-9._-]&amp;quot;))
end

# oauth_headerの情報をアルファベット順に並べ替え &amp;amp; で結合
def sort_and_concat(oauth_header)
	oauth_header_array = oauth_header.sort
	param = &amp;quot;&amp;quot;
	oauth_header_array.each do |params|
		for i in 1..params.length
			param += params[i-1]
			if i % params.length == 0
				param += &amp;quot;&amp;amp;&amp;quot;
			else
				param += &amp;quot;=&amp;quot;
			end
		end
	end
	param = param.slice(0, param.length-1)
end

# -------------------------------------------------------------

update_url = &amp;quot;http://twitter.com/statuses/update.json&amp;quot;

url = update_url
# コマンドプロンプトはutf8変換
text = escape(ARGV[0])
# text = escape(NKF.nkf(&#39;-w&#39;, ARGV[0]))
proxy = ARGV[1]

# Twitterで登録したらもらえる
consumer_key = &amp;quot;XXXXXXXXXXXXXXXXXXX&amp;quot;
consumer_secret = &amp;quot;YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY&amp;quot;
# Twitterからもらえるリクエストトークン(最初は使わない)
oauth_token = &amp;quot;11111111-ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ&amp;quot;
oauth_token_secret = &amp;quot;VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV&amp;quot;

# oauthパラメータたち(決め打ちのもの)
oauth_header = {
	# Consumer Key
	&amp;quot;oauth_consumer_key&amp;quot; =&amp;gt; consumer_key,
	# 一意な値
	&amp;quot;oauth_nonce&amp;quot; =&amp;gt; OpenSSL::Digest::Digest.hexdigest(&#39;MD5&#39;, &amp;quot;#{Time.now.to_f}#{rand}&amp;quot;), 
	# 署名方式(HMAC-SHA1)
	&amp;quot;oauth_signature_method&amp;quot; =&amp;gt; &amp;quot;HMAC-SHA1&amp;quot;,
	# リクエスト生成時のタイムスタンプのミリ秒
	&amp;quot;oauth_timestamp&amp;quot; =&amp;gt; Time.now.to_i.to_s, 
	# バージョン(1.0)
	&amp;quot;oauth_version&amp;quot; =&amp;gt; &amp;quot;1.0&amp;quot;,

	# アクセストークン
	&amp;quot;oauth_token&amp;quot; =&amp;gt; oauth_token
}

# headerにツイート追加
oauth_header[&amp;quot;status&amp;quot;] = text

# 署名生成
oauth_header[&amp;quot;oauth_signature&amp;quot;] = sigunature(&amp;quot;POST&amp;quot;,
					consumer_secret,
					oauth_token_secret,
					url,
					oauth_header)

# headerからツイート削除
oauth_header.delete(&amp;quot;status&amp;quot;)
# 署名エンコード
oauth_header[&amp;quot;oauth_signature&amp;quot;] = escape(oauth_header[&amp;quot;oauth_signature&amp;quot;])
param = sort_and_concat(oauth_header)

param = param.gsub(&#39;&amp;amp;&#39;, &#39;,&#39;)

header = {
	&amp;quot;Authorization&amp;quot; =&amp;gt; &amp;quot;OAuth &amp;quot; + param
}

# POST
uri = URI.parse(update_url)
proxy_class = Net::HTTP::Proxy(proxy, 8080)
http = proxy_class.new(uri.host)
http.start do |http|
	res = http.post(uri.path, &amp;quot;status=#{text}&amp;quot;, header)

	if res.code == &amp;quot;200&amp;quot; then
		print &amp;quot;#{res.code} tweet: #{ARGV[0]}\n&amp;quot;
	else
		print &amp;quot;ERROR: #{res.code}\n #{res.body}\n&amp;quot;
	end
end&lt;/pre&gt;
&lt;div class=&quot;footnote&quot;&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn1&quot; name=&quot;f1&quot;&gt;*1&lt;/a&gt;: 実際はインデントとかなし。&lt;/p&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>MacBook Air 11インチ欲しい！</title>
   <link href="http://gosyujin.github.io/2011/01/23/1295789120"/>
   <updated>2011-01-23T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2011/01/23/1295789120</id>
   <content type="html">&lt;p&gt;[[MacBook Air 11インチ欲しい！]]&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Wicket勉強会に参加しました</title>
   <link href="http://gosyujin.github.io/2011/01/12/1294833920"/>
   <updated>2011-01-12T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2011/01/12/1294833920</id>
   <content type="html">&lt;ul&gt;&lt;li&gt;詳細: &lt;a href=&quot;http://atnd.org/events/11066&quot;&gt;Wicket勉強会 2011-01 : ATND&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;TwitterのTL取得ページを自分用に作った程度ですが、二年連続二回目の出席をキメました。バージョン1.3メインで使っていた(いる？)人なので、もう1.5が出るのかーっといったところです。&lt;/p&gt;
&lt;p&gt;1.5になると矢野さんのWicket本の1/3が意味なくなるらしい…。&lt;/p&gt;
&lt;h1&gt;Wicket1.5の新機能 @&lt;a href=&quot;http://twitter.com/t_yano&quot;&gt;t_yano&lt;/a&gt;さん&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;WebRequestCycleが消えた&lt;/li&gt;&lt;li&gt;steps(), step()も消えた&lt;ul&gt;&lt;li&gt;RequestTargetという概念が消えた→IRequestHandlerで代替&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;UrlCodingStrategy→IRequestMappterで代替&lt;/li&gt;&lt;li&gt;リクエストのサイクル&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;IRequestHandler
　↑　　　　↓
--------------------
IRequestMapper
--------------------
　↑　　　　↓
Request      Url&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;RequestHandlerを使えればWicketの世界に入っていける&lt;/li&gt;&lt;li&gt;RequestHandlerStack: リクエスト処理の中心でRequestHandlerをスタックとして扱う&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;Urlマウント&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;mountBookmarkablePageが消え、代わりにmountPageになった。&lt;/li&gt;&lt;li&gt;${}で変数をUrlに埋め込めるようになった&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;/mountpath/${year}/

StringValue year = parameter.get(&amp;quot;year&amp;quot;)&lt;/pre&gt;
&lt;ol&gt;&lt;ul&gt;&lt;li&gt;現状はページのみ。リソースの場合はインデックスで取れる&lt;/li&gt;&lt;/ul&gt;&lt;/ol&gt;
&lt;pre class=&quot;&quot;&gt;/user/t_yano/image/

parameter.get(0) //user
parameter.get(1) //t_yano&lt;/pre&gt;
&lt;h2&gt;コンポーネントの初期化と設定&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;コンストラクタ？onBeforeRender？&lt;ul&gt;&lt;li&gt;onInitialize()が追加された&lt;ul&gt;&lt;li&gt;自身が&lt;strong&gt;ページにadd済み&lt;/strong&gt;である事を保証。ただし&lt;strong&gt;一度しか呼ばれない&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;isVisibleがfalseだったりすると呼ばれない&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;onConfigure()&lt;ul&gt;&lt;li&gt;&lt;strong&gt;レンダリング前にかならず呼ばれる&lt;/strong&gt;事を保証&lt;/li&gt;&lt;li&gt;&lt;strong&gt;全コンポーネントが揃っている事が保証できる&lt;/strong&gt;タイミング&lt;/li&gt;&lt;li&gt;&lt;strong&gt;isVisibleがfalseでも呼ばれる&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;ButtonとかLinkとかPanelに書くもので、Pageに書くものではない&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;コンポーネントの独立性&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;密結合&lt;ul&gt;&lt;li&gt;ボタンを押すとあるコンポーネントが消えるという場合…&lt;ul&gt;&lt;li&gt;ボタンと消すコンポーネントを連携させないといけなかった&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;ul&gt;&lt;li&gt;IEventSink: イベントを受け取るオブジェクト&lt;/li&gt;&lt;li&gt;IEventSource: イベントを送信できるオブジェクト&lt;ul&gt;&lt;li&gt;あらゆるコンポーネントはIEventSinkかつIEventSource&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;ul&gt;&lt;li&gt;Page#sendで送れる範囲&lt;ul&gt;&lt;li&gt;BREADTH: 子に広げる&lt;/li&gt;&lt;li&gt;WIDTH: 子から自分まで上がる&lt;/li&gt;&lt;li&gt;BUBBLE: 自分から親に上がる&lt;ul&gt;&lt;li&gt;BREADTHしか使わないんじゃないか？&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;pre class=&quot;&quot;&gt;◯　　　　　◯　　◯　　◯
↓イベント　↑　　↑　　↑
フ　レ　ー　ム　ワ　ー　ク&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;他のコンポーネントを意識しなくてもよくなった！&lt;/li&gt;&lt;li&gt;今後はページからではなくコンポーネントから考えよう&lt;/li&gt;&lt;/ul&gt;
&lt;ul&gt;&lt;li&gt;ajaxコンポーネントを更新するaddComponent()メソッドはadd()になった&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;最終的な表示処理は誰のもの？ @&lt;a href=&quot;http://twitter.com/t_hyssh&quot;&gt;hayassh&lt;/a&gt;さん&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;Wicket歴4年&lt;/li&gt;&lt;li&gt;40人以上のプロジェクトでWicketを使っている&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;こんなときどうするか&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;住所を一行で表示&lt;/li&gt;&lt;li&gt;郵便番号はXXX-XXXX&lt;/li&gt;&lt;li&gt;郵便番号と住所は半角スペースひとつあける&lt;ul&gt;&lt;li&gt;郵便番号にハイフンを入れる、半角スペースあけで表示するというのは表示側の都合&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;上記の処理をWicketのどの部分でやるか？？&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;Component部分でやるか&lt;ul&gt;&lt;li&gt;再利用性が高くなる&lt;/li&gt;&lt;li&gt;拡張性も保たれる&lt;/li&gt;&lt;li&gt;テスタビリティが低い&lt;/li&gt;&lt;li&gt;WicketTesterを使用しなければいけない&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;ul&gt;&lt;li&gt;Comverterでやるか&lt;ul&gt;&lt;li&gt;Componentよりテスタビリティが高い&lt;/li&gt;&lt;li&gt;変換処理だけ考えるので責務がはっきりする&lt;/li&gt;&lt;li&gt;Stringへの変換しかしない&lt;/li&gt;&lt;li&gt;Nullの場合にConverterが適用されない&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;ul&gt;&lt;li&gt;ViewHelperでやるか&lt;ul&gt;&lt;li&gt;テスタビリティが高い&lt;/li&gt;&lt;li&gt;概念が理解されやすい&lt;/li&gt;&lt;li&gt;CompoundPropertyModelと相性がいい&lt;/li&gt;&lt;li&gt;再利用性・拡張性が悪い&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;入力があればConverter。表示するだけならModelでなんとかする？再利用単位はコンポーネントがいい？&lt;/h2&gt;
&lt;h2&gt;まとめ&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;Componentで行えば再利用性が高まる？&lt;/li&gt;&lt;li&gt;ただし、ViewHelperはJUnitでテストができる&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;タイトル未定 @&lt;a href=&quot;http://twitter.com/tetsuyas&quot;&gt;tetsuyas&lt;/a&gt;さん&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;大学の教員をやっている&lt;/li&gt;&lt;li&gt;Shuugi.in - &lt;a href=&quot;http://shuugi.in/&quot;&gt;shuugi.in　予測市場　選挙・政治予測/経済・投資予測&lt;/a&gt; というサービスを作成している&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;Shuugi.inサイトでの事例&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;更新すべきパネルをもち回している。&lt;/li&gt;&lt;li&gt;OAuth&lt;ul&gt;&lt;li&gt;Twitter&lt;ul&gt;&lt;li&gt;Twitter4j&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;はてな&lt;ul&gt;&lt;li&gt;oauth-signpostを利用&lt;/li&gt;&lt;li&gt;OAuthConsumer,OAuthProviderをもち回す&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;ModalWindow内でのページ遷移&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;Wicket1.3から1.4へのマイグレーション時にハマった事 @&lt;a href=&quot;http://twitter.com/gishi_yama&quot;&gt;gishi_yama&lt;/a&gt;さん&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;大学の教員をやっている&lt;/li&gt;&lt;li&gt;学内のシステムをWicketで開発&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;構成&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;Wicket + Guice + JDBC&lt;/li&gt;&lt;li&gt;コンポーネントをシンプルに使用&lt;/li&gt;&lt;li&gt;確認は目視&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;マイグレーション後&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;エラー350近く、ワーニングは5000近く&lt;ul&gt;&lt;li&gt;エラーの原因はメソッドの廃止によるものがほとんど&lt;/li&gt;&lt;li&gt;ワーニングはジェネリクス、Validator&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;工数&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;300クラス/3.2万ステップ&lt;/li&gt;&lt;li&gt;社内SE2人でコード修正、確認など…80H&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;マイグレーションで注意&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;CompundPropertyModelを使用したFileUploadFieldコンポーネント&lt;ul&gt;&lt;li&gt;FileUploadFieldにModelを指定しないとエラーになる&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;ModelをセットしないLinkやFormに対するジェネリクス&lt;ul&gt;&lt;li&gt;Link&lt;Void&gt;にする&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;htmlの書き換え&lt;ul&gt;&lt;li&gt;xmlnsを1.3から1.4にかえる&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;1.4からのコンポーネントに置き換え&lt;ul&gt;&lt;li&gt;EnumLabel,onConfigure(),onInitialize()など&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;1.3から1.4で仕様変更したコンポーネント&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;changelogとかWicketTesterを使いこなせば…&lt;/h2&gt;
&lt;h1&gt;PropertyModelクラスがオブジェクトのフィールド変数を取得する仕組みについて  ravicotさん&lt;/h1&gt;
&lt;h2&gt;アクセサがないのにどう取得しているのか？&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;リフレクションを使っていた&lt;/li&gt;&lt;li&gt;動的にアクセサを使用していた&lt;/li&gt;&lt;li&gt;PropertyResolver.getValueを使用している&lt;ul&gt;&lt;li&gt;フィールドを取得してアクセサがなければアクセサ作成を試みる！&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;Wicket:idを利用しないテンプレートとの対応付け @&lt;a href=&quot;http://twitter.com/madogiwa&quot;&gt;madogiwa&lt;/a&gt;さん&lt;/h1&gt;
&lt;h2&gt;html5だとwicket:idタグは警告される&lt;/h2&gt;
&lt;h2&gt;警告を消すには…&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;xmllnを追加する&lt;/li&gt;&lt;li&gt;wicket:idを使わなければいいじゃない！&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;どうする&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;フィルターを拡張する&lt;/li&gt;&lt;li&gt;フィルターを有効にする&lt;/li&gt;&lt;li&gt;具体的には……&lt;a href=&quot;http://d.hatena.ne.jp/mdgw/20101106/p1&quot;&gt;Wicketのコンポーネント追加先指定にHTMLのID属性を利用可能にするライブラリを作成してみた - まどぎわBLOG&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;ul&gt;&lt;li&gt;何か意外と簡単にできるらしい…これはやってみたいかも&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;WicketとFlexの連携 @&lt;a href=&quot;http://twitter.com/chimerast&quot;&gt;chimerast&lt;/a&gt;さん&lt;/h1&gt;
&lt;h2&gt;Wicketのajax系のコンポーネントとFlexの連携&lt;/h2&gt;
&lt;h2&gt;W→F&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;FlexのcreateComplete内でaddCallbackを呼び出し、jsリストに関数を追加&lt;/li&gt;&lt;li&gt;そしてWicketから呼び出す&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;F→W&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;AbstractDefaultBehavior#renderHead()をオーバライドしjs関数を追加&lt;/li&gt;&lt;li&gt;Flexから追加した関数を呼び出す&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;テキストエンコーディング&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;F→js&lt;ul&gt;&lt;li&gt;特に問題なし&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;js→W&lt;ul&gt;&lt;li&gt;endodeURIComponent()&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;感想とか二次会とか&lt;/h1&gt;
&lt;p&gt;大学時代に作ったWicketの遺産が発掘されたので、これ、1.5にあげてみたいと思うなど。何かLTのネタでもできるようにWicketを使っていきたい。&lt;/p&gt;
&lt;p&gt;その後の二次会では主にPHPとかWindowsとかOfficeがディスられてました。また、今回はATNDでのアテンドなのに出席率がめちゃめちゃ良かったとの事でした。&lt;/p&gt;
&lt;h1&gt;最後に&lt;/h1&gt;
&lt;p&gt;長い時間受付をして下さった&lt;a href=&quot;http://twitter.com/yoshioterada&quot;&gt;yoshioterada&lt;/a&gt;さん、会場を提供して下さった日本オラクルさんありがとうございました！&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>pixiv Tech Meetingに行ってきました</title>
   <link href="http://gosyujin.github.io/2010/12/21/1292940870"/>
   <updated>2010-12-21T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2010/12/21/1292940870</id>
   <content type="html">&lt;ul&gt;&lt;li&gt;詳細: &lt;a href=&quot;http://atnd.org/events/10866&quot;&gt;pixiv Tech Meeting : ATND&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;日頃からプレミアム会員として利用させていただいているシステムの裏側が見れる！　という事で、ATND見てから参加余裕でした。今回はなんとか時間通りに辿りつけました。一瞬GoogleMap先生が変な場所指すので迷子になったけど。&lt;/p&gt;
&lt;p&gt;内容としては、次々にアップされる画像ファイルの捌き方や一番いいインフラの運用法、画面はjsを使用しているって事で、普段自分が触った事のない分野の話が大半。リファクタリング話やiPhoneSafariでのjsゲーム作成など、自分が普段使っている分野から近い話は頭に入ってきやすかったのですが、インフラの話などはわからない用語が出たら適宜ググってました；&lt;/p&gt;
&lt;p&gt;以下メモ。&lt;/p&gt;
&lt;br /&gt;
&lt;h1&gt;VPとSPIDERを使ったMySQL運用 @kamipoさん - &lt;a href=&quot;http://www.slideshare.net/kamipo/vpspidermysql&quot;&gt;VPとSPIDERを使ったMySQL運用&lt;/a&gt;&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;VP+SPIDERでホスト間テーブル移動をやる&lt;ul&gt;&lt;li&gt;VPはカラムごとにテーブルを垂直分割&lt;/li&gt;&lt;li&gt;SPIDERはテーブルを複数ホストに水平分割&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;VP&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;vp_copy_tables()でaにあるテーブルの値をbにコピー出来る&lt;/li&gt;&lt;li&gt;vp_copy_tables()はPRIMARY_KEYがないと使えない&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;注意&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;COMMENTは60文字までしか書けない -&gt; MySQL5.5なら大丈夫！&lt;/li&gt;&lt;li&gt;MySQL5.0だと色々なクエリでエラーが起こるので、できるだけ最新版を使おう&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;質問&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;エクストラバックアップの方が早くね？&lt;ul&gt;&lt;li&gt;用途が違う。これは止めずに移動できるのがいい&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;br /&gt;
&lt;h1&gt;pixiv.js -4年目のサービスをきれいにしよう @&lt;a href=&quot;http://twitter.com/#!/yksk&quot;&gt;yksk&lt;/a&gt;さん&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;15億PV/月達成！　ソースを綺麗に&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;現在は、Prototype.js + jQueryで走っている&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;最終的にはjQueryに統一したい！&lt;/li&gt;&lt;li&gt;$.noConflict(jQuery)を使えば、衝突することなくjQueryで行ける！&lt;/li&gt;&lt;/ul&gt;
&lt;blockquote&gt;&lt;p&gt;この関数を実行すると、$関数の動作が先に定義されている動作に戻る。&lt;/p&gt;&lt;p&gt;$関数はprototype.jsなどをはじめ、多くのライブラリがそれぞれ拡張している関数である。&lt;/p&gt;&lt;p&gt;jQueryでも、核となるjQueryオブジェクトのショートカットして極めて頻繁に利用される。&lt;/p&gt;&lt;p&gt;このコマンドは、そのような$関数を定義する複数のライブラリを用いた際に衝突することを防ぐものである。&lt;/p&gt;&lt;cite&gt;&lt;a href=&quot;http://semooh.jp/jquery/api/core/jQuery.noConflict/_/&quot;&gt;http://semooh.jp/jquery/api/core/jQuery.noConflict/_/&lt;/a&gt;&lt;/cite&gt;&lt;/blockquote&gt;
&lt;h2&gt;名前空間をひとつに統一する&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;windows.pixiv.*に統一すればかぶる可能性は無くなる&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;html5を使う&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;記述がちょっと減る&lt;/li&gt;&lt;li&gt;scriptタグとか簡略化できる&lt;/li&gt;&lt;li&gt;プレースホルダーなどのUIの新機能が使える&lt;/li&gt;&lt;li&gt;data-*属性は要素に好きな名前をつけられるようになった&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;1ページ1ファイル、ページごとに読むjsを変更するのが大変&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;URLディスパッチャーで振り分ける&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;LABjs&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;非同期でスクリプトを読み込める、順番を指定できる&lt;/li&gt;&lt;li&gt;他のファイルの読み込みをブロックしない&lt;/li&gt;&lt;li&gt;Twitterでも使われている&lt;/li&gt;&lt;li&gt;実は、Loadの仕組みは標準化されていないので、ブラウザが新しくなるたびチェックする必要がある&lt;ul&gt;&lt;li&gt;将来的にはscript async/deferに移行するかも&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;QUnit&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;ブラウザを開けばテストできる、簡単！&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;まとめ&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;コアライブラリが2つあるのはまずいので1つに&lt;/li&gt;&lt;li&gt;URLディスパッチャーとLABjsで高速化、ソースも綺麗&lt;/li&gt;&lt;li&gt;QUnitでテスト！&lt;/li&gt;&lt;/ul&gt;
&lt;br /&gt;
&lt;h1&gt;エログロOK!? JavaScriptとCanvasで作るiPhone向け勝手ゲーム開発 @&lt;a href=&quot;http://twitter.com/#!/Moyashipan&quot;&gt;Moyashipan&lt;/a&gt;さん&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;もともとFLASHer&lt;/li&gt;&lt;li&gt;jsでゲームが作れるよ！　というデモ&lt;/li&gt;&lt;li&gt;実際にiPhoneを持っている人はiPhoneでデモページを見ながら話を聞く&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;jsでiPhone向けゲームを作成するメリット&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;アプリじゃないのでAppleの審査が不要&lt;/li&gt;&lt;li&gt;他プラットフォームでも動かせる&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;デメリット&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;描画性能がとても貧弱&lt;/li&gt;&lt;li&gt;画面固定ができない(iPhone自体で回転をロックしないとグルグルするゲームは厳しい)&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;表示と移動はDOM、Canvas(html5)でできる&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;Canvasで、FLASHのベジェ曲線同等&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;描画がとても遅い…&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;再描画範囲の固定&lt;ul&gt;&lt;li&gt;背景、キャラ、エフェクトとレイヤを分ける&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;縦に長いゲームにするとブラウザのスクロールを使える！(チョビのゲームのようにジャンプしていくヤツ)&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;webkit transformで回転・移動&lt;/h2&gt;
&lt;h2&gt;まとめ&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;iPhoneのブラウザゲームは素直につくるとすぐ重くなる&lt;/li&gt;&lt;li&gt;再描画は最小範囲に&lt;/li&gt;&lt;/ul&gt;
&lt;br /&gt;
&lt;h1&gt;pixivの画像アップロードシステム @cubicdaiyaさん - &lt;a href=&quot;http://www.slideshare.net/cubicdaiya/pixiv-6261780&quot;&gt;pixivの画像アップロードシステム&lt;/a&gt;&lt;/h1&gt;
&lt;h2&gt;従来のアップロードの問題&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;サムネイル生成が同期的に処理される&lt;ul&gt;&lt;li&gt;アクセスが集中するととても重くなった&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f1&quot; title=&quot;確かにアップにものすごい時間がかかっていた時期があったような？&quot; name=&quot;fn1&quot;&gt;*1&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;アップロードのフロー&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;ファイル選択→※→情報入力→完了画面&lt;ul&gt;&lt;li&gt;※でサムネを作っていた＝画面が切り替わるのを待たないといけないためユーザには遅く感じられる、というか実際遅かった&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;アップロード時の上記3画面の中では、情報入力画面が一番開かれている時間が長い&lt;ul&gt;&lt;li&gt;じゃあここで非同期でアップしよう！&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;サムネイル生成の非同期化を行う事によって処理性能がアップした！&lt;/li&gt;&lt;/ul&gt;
&lt;br /&gt;
&lt;h1&gt;pixivのリコメンデーションシステム @&lt;a href=&quot;http://twitter.com/#!/aopico&quot;&gt;aopico&lt;/a&gt;さん&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;チームラボのロゴを書いた&lt;/li&gt;&lt;li&gt;リコメンデーションシステム＝おすすめ機能の話&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;おすすめ機能を作ったわけ&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;古いイラストが埋もれる&lt;/li&gt;&lt;li&gt;趣味・趣向が多様&lt;/li&gt;&lt;li&gt;ロングテール&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;協調フィルタリングとは&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;以下のように5つのitemと4人のUserがいたとする。今回はAさんを基準にする&lt;/li&gt;&lt;/ul&gt;
&lt;table&gt;&lt;tr&gt;&lt;td&gt;　&lt;/td&gt;&lt;td&gt;item1&lt;/td&gt;&lt;td&gt;item2&lt;/td&gt;&lt;td&gt;item3&lt;/td&gt;&lt;td&gt;item4&lt;/td&gt;&lt;td&gt;item5&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;UserA&lt;/td&gt;&lt;td&gt;買&lt;/td&gt;&lt;td&gt;　&lt;/td&gt;&lt;td&gt;買&lt;/td&gt;&lt;td&gt;買&lt;/td&gt;&lt;td&gt;　&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;UserB&lt;/td&gt;&lt;td&gt;　&lt;/td&gt;&lt;td&gt;買&lt;/td&gt;&lt;td&gt;　&lt;/td&gt;&lt;td&gt;買&lt;/td&gt;&lt;td&gt;　&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;UserC&lt;/td&gt;&lt;td&gt;　&lt;/td&gt;&lt;td&gt;　&lt;/td&gt;&lt;td&gt;　&lt;/td&gt;&lt;td&gt;　&lt;/td&gt;&lt;td&gt;買&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;UserD&lt;/td&gt;&lt;td&gt;買&lt;/td&gt;&lt;td&gt;　&lt;/td&gt;&lt;td&gt;買&lt;/td&gt;&lt;td&gt;買&lt;/td&gt;&lt;td&gt;買&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;ol&gt;&lt;ol&gt;&lt;li&gt;Aさんと似ているユーザを探す…Dさん&lt;/li&gt;&lt;li&gt;CさんはAさんが買っているitem1, 3, 4の他にitem5を買っている&lt;/li&gt;&lt;li&gt;ならば、Aさんも5を買うのではないか？　…という推論&lt;/li&gt;&lt;/ol&gt;&lt;/ol&gt;
&lt;ul&gt;&lt;li&gt;実際にAmazonで使われている&lt;ul&gt;&lt;li&gt;Amazonのものは計算量が多い&lt;/li&gt;&lt;li&gt;なるべくサーバに不可をかけたくない&lt;ul&gt;&lt;li&gt;もっとシンプルにならないか？&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;ブックマークタグ*ユーザ&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;メカ好きのAopicoさんとエロス好きのAopicoさんは別と考える&lt;/li&gt;&lt;li&gt;同じブックマークタグを付けているユーザの数をカウントする&lt;/li&gt;&lt;li&gt;たくさんブックマークを付けている人は重みを下げる&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;実装&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;C++&lt;/li&gt;&lt;li&gt;メモリは5G&lt;/li&gt;&lt;li&gt;初回計算は12時間&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;今後&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;ユーザ間の類似度計算&lt;/li&gt;&lt;li&gt;ブックマークされていないイラストの救済&lt;/li&gt;&lt;li&gt;タグ揺れの解消&lt;/li&gt;&lt;/ul&gt;
&lt;br /&gt;
&lt;h1&gt;私事……&lt;/h1&gt;
&lt;p&gt;今回の発表は、全員床に座りながら聞くというスタイルでした。なかなかベストな座り方を見つけられず、このあたりで持病の腰痛と激しいバトルを繰り広げ始めたため、メモの量が著しく落ち……(; _ _)&lt;/p&gt;
&lt;br /&gt;
&lt;h1&gt;SSD+Squidで画像をキャッシュしなイカ？ @phji]さん - &lt;a href=&quot;http://www.slideshare.net/phji/ssdsquidika&quot;&gt;SSD+Squidで画像をキャッシュしなイカ？&lt;/a&gt;&lt;/h1&gt;
&lt;h2&gt;Squid&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;proxyサーバ、キャッシュサーバ、イカ&lt;/li&gt;&lt;li&gt;イカ娘、名前だけでも覚えて帰ってくださいねという感じ&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;SSDの用途&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;データベース&lt;/li&gt;&lt;li&gt;画像参照のキャッシュ&lt;ul&gt;&lt;li&gt;調査の結果、Sサイズの画像のリクエストが最も多かったので、SSDはまずSサイズ画像から&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;6GbpsをさばくオレオレCDN構築術 @semindさん - &lt;a href=&quot;http://www.slideshare.net/semind/20101220-pixiv-techmeeting-6267332&quot;&gt;20101220 pixiv tech_meeting&lt;/a&gt;&lt;/h1&gt;
&lt;h2&gt;画像にアクセスがくる&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;画像を保存しているサーバだけでは捌けない&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;CDN&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;コンテンツの配信を代わりにやってくれるもの&lt;/li&gt;&lt;li&gt;データセンタを借りて自分のCDNを&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;今年の初夏にトラフィックが頭打ち&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;構成なども限界だった&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;なのでデータセンタを借りる事に…&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;しかし、時間もないし経験者もいない&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;詳しいことは懇親会で！&lt;/h2&gt;
&lt;br /&gt;
&lt;h1&gt;PHPあるある話 @&lt;a href=&quot;http://twitter.com/#!/cocoitiban&quot;&gt;cocoitiban&lt;/a&gt;さん&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;なにか一つでも発見があれば&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;文化編&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;マニュアルはとても充実している&lt;/li&gt;&lt;li&gt;unset: nullへのキャストというものがある&lt;/li&gt;&lt;li&gt;コーディング規約がたくさん&lt;ul&gt;&lt;li&gt;PEARコーディング規約&lt;/li&gt;&lt;li&gt;ZendFramework規約&lt;/li&gt;&lt;li&gt;PEAR2コーディング規約&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;コーディング編&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;HttpClientは何を使うか…いっぱいある&lt;ul&gt;&lt;li&gt;PEAR Http_Request&lt;/li&gt;&lt;li&gt;PEAR2 Http_Request&lt;/li&gt;&lt;li&gt;Zend Http_Request&lt;/li&gt;&lt;li&gt;curl などなど&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;ul&gt;&lt;li&gt;REDHAD系ならRPMで構築するのがいい&lt;/li&gt;&lt;/ul&gt;
&lt;ul&gt;&lt;li&gt;短時間にデプロイをたくさんしたらメモリがあふれた&lt;ul&gt;&lt;li&gt;デプロイ時にApacheのメモリが倍になっている&lt;/li&gt;&lt;li&gt;xcache？&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;br /&gt;
&lt;h1&gt;phjosh(仮)プロジェクト @moriyoshitさん - &lt;a href=&quot;http://www.slideshare.net/moriyoshi/phjosh&quot;&gt;Phjosh(仮)プロジェクト&lt;/a&gt;&lt;/h1&gt;
&lt;h2&gt;jsでオブジェクト指向…あまり美しくない&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;既存言語から生成する&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;GWT&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;jsをJavaのソースコードから生成できる&lt;/li&gt;&lt;li&gt;IDEを使える&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;rb2js&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;Rubyからjsに&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;py2js&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;alpha quarity…どうなった？&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;PHPは？&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;PHPはjsと似ている&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;発表終了後&lt;/h1&gt;
&lt;p&gt;懇親会の会場へ歩いていたとき。たまたま一緒に話しながら歩いていた人が大学の研究室の先輩である事が判明。Σ(ﾟ口ﾟ;. 自分が学部3年の時、修士2年だったので、会っていた期間は僅かのはず…。いや～～……どこで、誰に会うかわからないもんですね。&lt;/p&gt;
&lt;p&gt;聞けば、同じ会社で働いていた人がpixivへ転職、今回のスピーカーだったためたまたま見にきたとの事。&lt;/p&gt;
&lt;p&gt;それだけでも偶然だと思ったのに、その先輩と@Moyashipanさんが同じ高校出身、同郷であったことも判明。どんだけ狭いのだ。&lt;/p&gt;
&lt;p&gt;そんな@Moyashipanさんは自分と同い年&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f2&quot; title=&quot;今まで参加した勉強会では1,2年上や1,2年下の割と世代の近しい方とはお会いした事があったのですが、完全に同じ年代の人は初めてあった。&quot; name=&quot;fn2&quot;&gt;*2&lt;/a&gt;&lt;/span&gt;なのに、既にpixivに様々なシステムを作りリリースしているという点で、尊敬と&lt;del&gt;もうExcelをこねくり回して共有サーバでファイル管理するお仕事は嫌だお&lt;/del&gt;自分も頑張らねばと。何か作りたい衝動に駆られます。&lt;/p&gt;
&lt;p&gt;今回はすごく勉強になりました、技術的な話意外にも色んな意味で来てよかった……。さしあたってjs系とQUnitはちょっと使ってみたいと思いました。会場を提供してくださったpixivさん、発表者の皆さんありがとうございました！！&lt;/p&gt;
&lt;h1&gt;こっそり&lt;/h1&gt;
&lt;p&gt;@aopicoさん…ブクマ0の人の寂しいレコメンデーションに救済を……。&lt;/p&gt;
&lt;div class=&quot;footnote&quot;&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn1&quot; name=&quot;f1&quot;&gt;*1&lt;/a&gt;: 確かにアップにものすごい時間がかかっていた時期があったような？&lt;/p&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn2&quot; name=&quot;f2&quot;&gt;*2&lt;/a&gt;: 今まで参加した勉強会では1,2年上や1,2年下の割と世代の近しい方とはお会いした事があったのですが、完全に同じ年代の人は初めてあった。&lt;/p&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>java-ja忘年会に参加しました2010</title>
   <link href="http://gosyujin.github.io/2010/12/11/1292077752"/>
   <updated>2010-12-11T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2010/12/11/1292077752</id>
   <content type="html">&lt;h1&gt;今年は渋谷。&lt;/h1&gt;
&lt;p&gt;定時までに終わるかなーと思っていたミーティングがまさかの2時間オーバー。そして人身事故によるりんかい線のダイヤ乱れ。北海道に着いたのは20:45くらいでした……。Tweetviteでは出席になっていたのに、会費は集計して足りなかったらでいいよ！　と言ってくれた名幹事やましろさん++　いつも取りまとめありがとうございます。&lt;/p&gt;
&lt;h1&gt;二次会は部隊編成&lt;/h1&gt;
&lt;p&gt;そして場所を変えて二次会。ハンター組とハンターじゃない組に別れて二次会が開催されました。僕はハンターじゃない組。二次会では主に食べてました。　＠&lt;a href=&quot;http://twitter.com/Ewigkeit&quot;&gt;Ewigkeit&lt;/a&gt;さんにいっぱいサービスしてもらった＞＜&lt;/p&gt;
&lt;p&gt;飯以外では、＠Ewigkeitさん、@&lt;a href=&quot;http://twitter.com/leather_sole&quot;&gt;leather_sole&lt;/a&gt;さん、@&lt;a href=&quot;http://twitter.com/kamekoopa&quot;&gt;kamekoopa&lt;/a&gt;さんとPHPの話、タバコの話&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f1&quot; title=&quot;途中でタバコの試供品を配るお姉ちゃんがきてたからだと思う……。&quot; name=&quot;fn1&quot;&gt;*1&lt;/a&gt;&lt;/span&gt;、staticおじさんや相互フォロー推進委員会suspendされた話で盛り上がりました。社内でstaticおじさんとか相互フォロー推進委員会なんて単語出した事ないなー&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f2&quot; title=&quot;おれは会社でなんの話をしているんだろう？&quot; name=&quot;fn2&quot;&gt;*2&lt;/a&gt;&lt;/span&gt;とか思いつつ……やっぱjava-jaいいわー。&lt;/p&gt;
&lt;p&gt;イベントに出ると、会った人の顔とTwitter idとTwitterアイコンを一致させるのが難しいですよねーという話も。「あれ？　この人会ったことある……idなんだっけ？」「idはタイムラインで見たことあるなぁ……」等々……。難しいですよね……。&lt;/p&gt;
&lt;h1&gt;終わりに&lt;/h1&gt;
&lt;p&gt;何とか滑り込みで2年連続2回目の出場をキメる事ができました…。来年も参加するぞ！　いや、その前に時間通りにイベントに参加できるようにだな…。&lt;/p&gt;
&lt;p&gt;一次会幹事の@&lt;a href=&quot;http://twitter.com/yamashiro&quot;&gt;yamashiro&lt;/a&gt;さん、ハンターじゃない方の二次会を取りまとめてくださった@&lt;a href=&quot;http://twitter.com/meso&quot;&gt;meso&lt;/a&gt;さん、java-jaの皆様お疲れさまでした！&lt;/p&gt;
&lt;div class=&quot;footnote&quot;&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn1&quot; name=&quot;f1&quot;&gt;*1&lt;/a&gt;: 途中でタバコの試供品を配るお姉ちゃんがきてたからだと思う……。&lt;/p&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn2&quot; name=&quot;f2&quot;&gt;*2&lt;/a&gt;: おれは会社でなんの話をしているんだろう？&lt;/p&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>RubyでTwitterのタイムラインを取得してみる</title>
   <link href="http://gosyujin.github.io/2010/12/07/1291733295"/>
   <updated>2010-12-07T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2010/12/07/1291733295</id>
   <content type="html">&lt;h1&gt;前回までのあらすじ&lt;/h1&gt;
&lt;ol&gt;&lt;li&gt;&lt;a href=&quot;2010-11-21-1290271210&quot;&gt;2010-11-21-1290271210&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;2010-11-30-1291125511&quot;&gt;2010-11-30-1291125511&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;
&lt;p&gt;前回までで、なんとかOAuth認証を突破する事ができました。目標は達成できたっちゃあできたんですが……せっかくなので、取得したアクセストークンを使ってTwitterからタイムラインを取得してみます！&lt;/p&gt;
&lt;h1&gt;タイムラインの取得方法&lt;/h1&gt;
&lt;ol&gt;&lt;li&gt;signatureを作成する&lt;/li&gt;&lt;li&gt;以下のパラメータをアルファベット順にxxx=yyy&amp;vvv=zzz……の形で連結した値を&lt;a href=&quot;http://api.twitter.com/1/statuses/home_timeline.json&quot;&gt;http://api.twitter.com/1/statuses/home_timeline.json&lt;/a&gt;のおしりにくっつけてGET or POST&lt;ol&gt;&lt;li&gt;oauth_consumer_key&lt;/li&gt;&lt;li&gt;oauth_nonce&lt;/li&gt;&lt;li&gt;oauth_signature&lt;/li&gt;&lt;li&gt;oauth_signature_method&lt;/li&gt;&lt;li&gt;oauth_timestamp&lt;/li&gt;&lt;li&gt;oauth_token&lt;/li&gt;&lt;li&gt;oauth_version&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;
&lt;p&gt;取得はこれで完了。&lt;/p&gt;
&lt;p&gt;signatureの作成方法は今までと同じで、&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;認証用の値を生成する(以下の3つの値を&amp;で連結する)&lt;ol&gt;&lt;li&gt;&quot;GET&quot;&lt;/li&gt;&lt;li&gt;&quot;&lt;a href=&quot;http://api.twitter.com/1/statuses/home_timeline.json&quot;&gt;http://api.twitter.com/1/statuses/home_timeline.json&lt;/a&gt;&quot;をエスケープしたもの&lt;/li&gt;&lt;li&gt;oauth_signature以外のパラメータ&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f1&quot; title=&quot;oauth_consumer_key, oauth_nonce, oauth_signature_method, oauth_timestamp, oauth_token, oauth_versionの6個っすねー。oauth_tokenを忘れずに。&quot; name=&quot;fn1&quot;&gt;*1&lt;/a&gt;&lt;/span&gt;をアルファベット順に並べてxxx=yyy&amp;vvv=zzz……の形で連結した値をエスケープしたもの&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;署名キーを生成する&lt;ol&gt;&lt;li&gt;&quot;consumer_secret&amp;oauth_token_secret&quot;&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;キーを元に値をHMAC-SHA1方式で暗号化した値をbase64形式でエンコードする&lt;/li&gt;&lt;/ol&gt;
&lt;p&gt;です。OAuth認証して獲得したアクセストークン、oauth_tokenとoauth_token_secretを随所で使います。そして作成したsignatureと他のパラメータを&lt;a href=&quot;http://api.twitter.com/1/statuses/home_timeline.json&quot;&gt;http://api.twitter.com/1/statuses/home_timeline.json&lt;/a&gt;のおしりにくっつけて(今回は)GETリクエスト。&lt;/p&gt;
&lt;h1&gt;戻ってきたタイムライン&lt;/h1&gt;
&lt;p&gt;タイムラインらしきものはjsonという形式のデータで戻って来ます。home_timeline.jsonのjson部分をxmlとかrssに変えるとxml形式のタイムライン、rss形式のタイムラインが返ってくるようですが今回はこのjsonを何とかしてみます。&lt;/p&gt;
&lt;p&gt;jsonの詳細は後にググるとして、一人当たりの情報はこんな感じ。&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f2&quot; title=&quot;本来は一行で取得します&quot; name=&quot;fn2&quot;&gt;*2&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;pre class=&quot;json&quot;&gt;.......},{
	\&amp;quot;coordinates\&amp;quot;:null,
	\&amp;quot;created_at\&amp;quot;:\&amp;quot;Tue Dec 07 13:50:49 +0000 2010\&amp;quot;,
.
(略)
.
	\&amp;quot;in_reply_to_screen_name\&amp;quot;:null,
	\&amp;quot;in_reply_to_status_id_str\&amp;quot;:null,
	\&amp;quot;id_str\&amp;quot;:\&amp;quot;99999999999999999\&amp;quot;,
	\&amp;quot;contributors\&amp;quot;:null,
	\&amp;quot;retweet_count\&amp;quot;:null,
	\&amp;quot;in_reply_to_user_id\&amp;quot;:null,
	\&amp;quot;in_reply_to_user_id_str\&amp;quot;:null,
	\&amp;quot;user\&amp;quot;:{
.
(略)
.
		\&amp;quot;screen_name\&amp;quot;:\&amp;quot;kk_Ataka\&amp;quot;,
		\&amp;quot;profile_sidebar_border_color\&amp;quot;:\&amp;quot;C0DEED\&amp;quot;,
		\&amp;quot;follow_request_sent\&amp;quot;:false,
		\&amp;quot;location\&amp;quot;:\&amp;quot;Kawasaki, Kanagawa, Japan\&amp;quot;,
.
(略)
.
		\&amp;quot;profile_link_color\&amp;quot;:\&amp;quot;0084B4\&amp;quot;},
	\&amp;quot;geo\&amp;quot;:null,
	\&amp;quot;retweeted\&amp;quot;:false,
	\&amp;quot;id\&amp;quot;:99999999999999999,
	\&amp;quot;text\&amp;quot;:\&amp;quot;test\&amp;quot;
},{......&lt;/pre&gt;
&lt;p&gt;初見だとこれ×20件のデータが改行なしでずらりと画面に並ぶので、面食らったのですが、よく見てみると見覚えがあるデータもちらほら……。&lt;/p&gt;
&lt;p&gt;例えば、userの中にあるscreen_nameはkk_Ataka……これ俺や！　あとは、text:testも、testってツイートした後だったので、ツイート内容なのかなと。&lt;/p&gt;
&lt;p&gt;リプライしたときはin_reply_to系のキーにリプライ相手のidやscreen_nameが入っていると思います。&lt;/p&gt;
&lt;p&gt;んで、このデータをどうやって解析しようか……と思ってググってみると、jsonをparseしてハッシュにしてくれるプログラムが。@webos_goodiesさんの&lt;a href=&quot;http://webos-goodies.jp/archives/51071565.html&quot;&gt;Ruby 用 JSON パーサーを更新、 JSON への変換も追加 - WebOS Goodies&lt;/a&gt;このプログラムをありがたく使わせていただきました。&lt;/p&gt;
&lt;p&gt;ソースはこんな感じ。上記のparserは下記のrbファイルと同じディレクトリ、もしくはパスの通っている場所にsimplejsonparser.rbとして配備しました。&lt;/p&gt;
&lt;pre class=&quot;ruby&quot;&gt;require &#39;openssl&#39;
require &#39;uri&#39;
require &#39;net/http&#39;
# http://webos-goodies.jp/archives/51071565.html
require &#39;simplejsonparser&#39;
require &#39;nkf&#39;
require &#39;time&#39;

# signature作成
def signature(method, consumer_secret, oauth_token_secret, url, oauth_header)
	# signature_keyの作成
	# リクエストトークン時は&amp;quot;CONSUMER_SECRET&amp;amp;&amp;quot;(アンドが入っている)
	# アクセストークン時は&amp;quot;CONSUMER_SECRET&amp;amp;OAUTH_TOKEN_SECRET&amp;quot;として使用
	signature_key = consumer_secret + &amp;quot;&amp;amp;&amp;quot;
	if !oauth_token_secret.nil? then
		signature_key += oauth_token_secret
	end

	# oauth_headerのパラメータをソートして連結
	param = sort_and_concat(oauth_header)

	# httpメソッドとURLとパラメータを&amp;amp;で連結する
	value = method + &amp;quot;&amp;amp;&amp;quot; + escape(url) + &amp;quot;&amp;amp;&amp;quot; + escape(param)
	# hmac_sha1
	sha1 = OpenSSL::HMAC.digest(OpenSSL::Digest::SHA1.new, signature_key, value)
	# base64
	base64 = [sha1].pack(&#39;m&#39;).gsub(/\n/, &#39;&#39;)
	return base64
end

# 文字列のエスケープ(: / = %をエスケープする。. _ -はそのまま)
def escape(value)
	URI.escape(value, Regexp.new(&amp;quot;[^a-zA-Z0-9._-]&amp;quot;))
end

# oauth_headerの情報をアルファベット順に並べ替え &amp;amp; で結合
def sort_and_concat(oauth_header)
	oauth_header_array = oauth_header.sort
	param = &amp;quot;&amp;quot;
	oauth_header_array.each do |params|
		for i in 1..params.length
			param += params[i-1]
			if i % params.length == 0
				param += &amp;quot;&amp;amp;&amp;quot;
			else
				param += &amp;quot;=&amp;quot;
			end
		end
	end
	param = param.slice(0, param.length-1)
end

# 自分のタイムライン取得用のURL
home_timeline_url = &amp;quot;http://api.twitter.com/1/statuses/home_timeline.json&amp;quot;

# Twitterで登録したらもらえる
consumer_key = &amp;quot;XXXXXXXXXXXXXXXXXXX&amp;quot;
consumer_secret = &amp;quot;YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY&amp;quot;

# Twitterからもらえるアクセストークン
oauth_token = &amp;quot;11111111-ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ&amp;quot;
oauth_token_secret = &amp;quot;VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV&amp;quot;

# oauthパラメータたち
oauth_header = {
	# Consumer Key
	&amp;quot;oauth_consumer_key&amp;quot; =&amp;gt; consumer_key,
	# 一意な値(今回は適当に実装)
	&amp;quot;oauth_nonce&amp;quot; =&amp;gt; &amp;quot;AAAAAAAA&amp;quot;,
	# 署名方式(HMAC-SHA1)
	&amp;quot;oauth_signature_method&amp;quot; =&amp;gt; &amp;quot;HMAC-SHA1&amp;quot;,
	# リクエスト生成時のタイムスタンプ(ミリ秒)
	&amp;quot;oauth_timestamp&amp;quot; =&amp;gt; Time.now.to_i.to_s,
	# バージョン(1.0)
	&amp;quot;oauth_version&amp;quot; =&amp;gt; &amp;quot;1.0&amp;quot;,

	# アクセストークン
	&amp;quot;oauth_token&amp;quot; =&amp;gt; oauth_token 
}

# signature作成
oauth_header[&amp;quot;oauth_signature&amp;quot;] = signature(&amp;quot;GET&amp;quot;, 
					consumer_secret, 
					oauth_token_secret, 
					home_timeline_url, 
					oauth_header)

# GETする
uri = URI.parse(home_timeline_url)
proxy_class = Net::HTTP::Proxy(ARGV[0], 8080)
http = proxy_class.new(uri.host)
http.start do |http|
	# oauth_headerのパラメータをソートして連結
	param = sort_and_concat(oauth_header)
	
	res = http.get(uri.path + &amp;quot;?#{param}&amp;quot;)
	if res.code == &amp;quot;200&amp;quot; then
		json = res.body
		# simplejsonparserでparseしてもらう
		jsonparse = JsonParser.new.parse(json)

		# 逆順にして古い物から取得する
		jsonparse = jsonparse.reverse

		for i in 0..jsonparse.length-1

			# 日付フォーマットを年/月/日 時間に変更
			time = Time.parse(jsonparse[i][&amp;quot;created_at&amp;quot;]).strftime(&amp;quot;%Y/%m/%d %X&amp;quot;)

			# SJIS変換(コマンドプロンプトで見る用)
			# print NKF.nkf(&#39;-s&#39;, &amp;quot;■#{jsonparse[i][&amp;quot;user&amp;quot;][&amp;quot;screen_name&amp;quot;]} (#{jsonparse[i][&amp;quot;user&amp;quot;][&amp;quot;name&amp;quot;]}) #{time}\n　#{jsonparse[i][&amp;quot;text&amp;quot;]}\n&amp;quot;)
			print &amp;quot;■#{jsonparse[i][&amp;quot;user&amp;quot;][&amp;quot;screen_name&amp;quot;]} (#{jsonparse[i][&amp;quot;user&amp;quot;][&amp;quot;name&amp;quot;]}) #{time}\n　#{jsonparse[i][&amp;quot;text&amp;quot;]}\n&amp;quot;
		end
	else
		print &amp;quot;#{res.code}\n&amp;quot;
	end
end&lt;/pre&gt;
&lt;p&gt;結果はこう。タイムラインゲットー！&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20101207233454&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20101207/20101207233454.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;Windows用……&lt;/h1&gt;
&lt;p&gt;ソースの最後、parseも終わってその中からほしいキーの値を取り出してるところで。&lt;/p&gt;
&lt;pre class=&quot;ruby&quot;&gt;			# SJIS変換(コマンドプロンプトで見る用)
			# print NKF.nkf(&#39;-s&#39;, &amp;quot;■#{jsonparse[i][&amp;quot;user&amp;quot;][&amp;quot;screen_name&amp;quot;]} (#{jsonparse[i][&amp;quot;user&amp;quot;][&amp;quot;name&amp;quot;]}) #{time}\n　#{jsonparse[i][&amp;quot;text&amp;quot;]}\n&amp;quot;)&lt;/pre&gt;
&lt;p&gt;SJIS変換してるところがあるんですが、これ、もともとWindowsのコマンドプロンプトで動かしたくて作っていたものなんです。でもコマンドプロンプトって文字コードがSJISのようでそのまま表示すると文字化け起こすのでこういう対応を。&lt;/p&gt;
&lt;p&gt;一応軽くググった感じだと、コマンドプロンプトでもUnicode文字を読めるようなのですが……。&lt;/p&gt;
&lt;div class=&quot;footnote&quot;&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn1&quot; name=&quot;f1&quot;&gt;*1&lt;/a&gt;: oauth_consumer_key, oauth_nonce, oauth_signature_method, oauth_timestamp, oauth_token, oauth_versionの6個っすねー。oauth_tokenを忘れずに。&lt;/p&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn2&quot; name=&quot;f2&quot;&gt;*2&lt;/a&gt;: 本来は一行で取得します&lt;/p&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>RubyでTwitterのOAuth認証をしてみる その2</title>
   <link href="http://gosyujin.github.io/2010/11/30/1291125511"/>
   <updated>2010-11-30T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2010/11/30/1291125511</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;http://d.hatena.ne.jp/kk_Ataka/20101121/1290271210&quot;&gt;前回のエントリ&lt;/a&gt; では、リクエストトークンまで発行してもらえました。だもんで今回は前回に続いてアクセストークンを発行してもらいます。アクセストークン発行の流れとしては、&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;今もらったリクエストトークンを付加して &lt;a href=&quot;http://twitter.com/oauth/authorize&quot;&gt;http://twitter.com/oauth/authorize&lt;/a&gt; へアクセスする&lt;/li&gt;&lt;li&gt;画面に表示されるPINコード(oauth_verifier)を控える&lt;/li&gt;&lt;li&gt;リクエストトークンとPINコードをを付加して &lt;a href=&quot;http://twitter.com/oauth/access_token&quot;&gt;http://twitter.com/oauth/access_token&lt;/a&gt; へアクセスする&lt;/li&gt;&lt;/ol&gt;
&lt;p&gt;行きます。&lt;/p&gt;
&lt;h1&gt;PINコードを発行してもらう&lt;/h1&gt;
&lt;p&gt;リクエストトークンを発行してもらうと、 &lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;oauth_token=XXXXXXXXXX&amp;amp;oauth_token_secret=YYYYYYYYYYYYYYYYYYYYYYYYYYYY&amp;amp;oauth_callback_confirmed=true&lt;/pre&gt;
&lt;p&gt;という文字列がbodyに埋まってきたはず。&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f1&quot; title=&quot;この時のoauth_tokenとoauth_token_secretは一時的なものらしいので、アクセストークンがもらえれば忘れても良いようです。&quot; name=&quot;fn1&quot;&gt;*1&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;この中から oauth_tokenを抜き出し、 &lt;a href=&quot;http://twitter.com/oauth/authorize&quot;&gt;http://twitter.com/oauth/authorize&lt;/a&gt; にパラメータとしてくっつけます。こんな感じ。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://twitter.com/oauth/authorize?oauth_token=XXXXXXXXXX&quot;&gt;http://twitter.com/oauth/authorize?oauth_token=XXXXXXXXXX&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;アドレスが正しければ、以下のような画面が出るはず。&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f2&quot; title=&quot;Twitterにログインしていなければ、ログイン画面がまず出たはず。&quot; name=&quot;fn2&quot;&gt;*2&lt;/a&gt;&lt;/span&gt;アプリケーションからのアクセスを許可しますか？　と尋ねられるので許可するを選択。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20101130220734&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20101130/20101130220734.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;許可すると、PINコードが画面に表示されるのでこれを控えておく。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20101130220731&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20101130/20101130220731.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;再度signatureを作成する&lt;/h1&gt;
&lt;p&gt;このPINコードを&quot;oauth_verify&quot;として。先ほどURLに貼っつけたoauth_tokenを&quot;oauth_token&quot;としてパラメータとして持たせます。&lt;/p&gt;
&lt;p&gt;そして、ここでもう一度signatureを作成を作成します。注意点としては、&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;今まで使っていたoauth_signatureは一旦消して、以下のパラメータで新たにつくり直す&lt;ol&gt;&lt;li&gt;oauth_consumer_key&lt;/li&gt;&lt;li&gt;oauth_nonce&lt;/li&gt;&lt;li&gt;oauth_signature_method&lt;/li&gt;&lt;li&gt;oauth_timestamp&lt;/li&gt;&lt;li&gt;oauth_version&lt;/li&gt;&lt;li&gt;oauth_token &lt;span style=&quot;color:#FF0000;&quot;&gt;New!&lt;/span&gt;&lt;/li&gt;&lt;li&gt;oauth_verifier &lt;span style=&quot;color:#FF0000;&quot;&gt;New!&lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;URLは&quot;&lt;a href=&quot;http://twitter.com/oauth/access_token&quot;&gt;http://twitter.com/oauth/access_token&lt;/a&gt;&quot;をエスケープしたもの&lt;/li&gt;&lt;li&gt;暗号化用のキーは&quot;consumer_secret&amp;oauth_token_secret&quot;&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f3&quot; title=&quot;リクエストトークンを作るときは&quot;consumer_secret&amp;&quot;でした&quot; name=&quot;fn3&quot;&gt;*3&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;
&lt;p&gt;この3点でしょうか。&lt;/p&gt;
&lt;p&gt;signatureが作成できたら、前回と同様にアルファベット順に並べて連結し、URLのおしりにくっつけます。URLはこんな感じになります。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20101130223243&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20101130/20101130223243.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;成功したら、oauth_token, oauth_token_secret,  user_id, screen_nameが返ってきます。これ俺や！！&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20101130220728&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20101130/20101130220728.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ここで返してもらったoauth_tokenとoauth_token_secretは本物なので大切にとっておく！　というわけで、次は自分のTimelineを取得します！&lt;/p&gt;
&lt;p&gt;ソースはこんな感じ。&lt;/p&gt;
&lt;pre class=&quot;ruby&quot;&gt;require &#39;openssl&#39;
require &#39;uri&#39;
require &#39;net/http&#39;

# signature作成
def signature(method, consumer_secret, oauth_token_secret, url, oauth_header)
	# signature_keyの作成
	# リクエストトークン時は&amp;quot;CONSUMER_SECRET&amp;amp;&amp;quot;(アンドが入っている)
	# アクセストークン時は&amp;quot;CONSUMER_SECRET&amp;amp;OAUTH_TOKEN_SECRET&amp;quot;として使用
	signature_key = consumer_secret + &amp;quot;&amp;amp;&amp;quot;
	if !oauth_token_secret.nil? then
		signature_key += oauth_token_secret
	end

	# oauth_headerのパラメータをソートして連結
	param = sort_and_concat(oauth_header)

	# httpメソッドとURLとパラメータを&amp;amp;で連結する
	value = method + &amp;quot;&amp;amp;&amp;quot; + escape(url) + &amp;quot;&amp;amp;&amp;quot; + escape(param)
	# hmac_sha1
	sha1 = OpenSSL::HMAC.digest(OpenSSL::Digest::SHA1.new, signature_key, value)
	# base64
	base64 = [sha1].pack(&#39;m&#39;).gsub(/\n/, &#39;&#39;)
	return base64
end

# 文字列のエスケープ(: / = %をエスケープする。. _ -はそのまま)
def escape(value)
	URI.escape(value, Regexp.new(&amp;quot;[^a-zA-Z0-9._-]&amp;quot;))
end

# oauth_headerの情報をアルファベット順に並べ替え &amp;amp; で結合
def sort_and_concat(oauth_header)
	oauth_header_array = oauth_header.sort
	param = &amp;quot;&amp;quot;
	oauth_header_array.each do |params|
		for i in 1..params.length
			param += params[i-1]
			if i % params.length == 0
				param += &amp;quot;&amp;amp;&amp;quot;
			else
				param += &amp;quot;=&amp;quot;
			end
		end
	end
	param = param.slice(0, param.length-1)
end

# リクエストトークン取得用のURL
request_token_url = &amp;quot;http://twitter.com/oauth/request_token&amp;quot;
# PINコード取得用URL
authorize_url = &amp;quot;http://twitter.com/oauth/authorize&amp;quot;
# アクセストークン取得用のURL
access_token_url = &amp;quot;http://twitter.com/oauth/access_token&amp;quot;

# Twitterで登録したらもらえる
consumer_key = &amp;quot;XXXXXXXXXXXXXXXXXXXXX&amp;quot;
consumer_secret = &amp;quot;YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY&amp;quot;

# Twitterからもらえるアクセストークン(最初は使わない)
oauth_token = &amp;quot;&amp;quot;
oauth_token_secret = &amp;quot;&amp;quot;

# oauthパラメータたち
oauth_header = {
	# Consumer Key
	&amp;quot;oauth_consumer_key&amp;quot; =&amp;gt; consumer_key,
	# 一意な値(今回は適当に実装)
	&amp;quot;oauth_nonce&amp;quot; =&amp;gt; &amp;quot;AAAAAAAA&amp;quot;,
	# 署名方式(HMAC-SHA1)
	&amp;quot;oauth_signature_method&amp;quot; =&amp;gt; &amp;quot;HMAC-SHA1&amp;quot;,
	# リクエスト生成時のタイムスタンプ(ミリ秒)
	&amp;quot;oauth_timestamp&amp;quot; =&amp;gt; Time.now.to_i.to_s,
	# バージョン(1.0)
	&amp;quot;oauth_version&amp;quot; =&amp;gt; &amp;quot;1.0&amp;quot;,
}

# signature作成
oauth_header[&amp;quot;oauth_signature&amp;quot;] = signature(&amp;quot;GET&amp;quot;, 
					consumer_secret, 
					nil, 
					request_token_url, 
					oauth_header)

# GETする
uri = URI.parse(request_token_url)
proxy_class = Net::HTTP::Proxy(ARGV[0], 8080)
http = proxy_class.new(uri.host)
http.start do |http|
	# oauth_headerのパラメータをソートして連結
	param = sort_and_concat(oauth_header)

	res = http.get(uri.path + &amp;quot;?#{param}&amp;quot;)

	if res.code == &amp;quot;200&amp;quot; then
		# 返ってきた値を分割
		params = res.body.split(&amp;quot;&amp;amp;&amp;quot;)
		params.each do |param|
			# さらに=で分割し前部分をkey、後方部分をvalueに格納
			key,value = param.split(&amp;quot;=&amp;quot;)

			# リクエストトークンを格納
			if (&amp;quot;oauth_token&amp;quot; == key) then
				oauth_token = value
			elsif (&amp;quot;oauth_token_secret&amp;quot; == key) then
				oauth_token_secret = value
			end
		end

		# プロンプトにPINコード取得用URL表示
		print &amp;quot;#{authorize_url}?oauth_token=#{oauth_token}\n&amp;quot;
		print &amp;quot;Input PIN Code. Input...\n&amp;quot;

		# PINコード入力待ち
		oauth_verifier = STDIN.gets
		# 改行コード(\n)取り除き
		oauth_verifier = oauth_verifier.slice(0, oauth_verifier.length-1)

		# ヘッダにアクセストークンとPINコード追加
		oauth_header[&amp;quot;oauth_token&amp;quot;] = oauth_token
		oauth_header[&amp;quot;oauth_verifier&amp;quot;] = oauth_verifier
		
		# いったんoauth_signature削除
		oauth_header.delete(&amp;quot;oauth_signature&amp;quot;)

		# 再びsignature作成
		oauth_header[&amp;quot;oauth_signature&amp;quot;] = signature(&amp;quot;GET&amp;quot;, 
							consumer_secret, 
							oauth_token_secret, 
							access_token_url, 
							oauth_header)

		# oauth_headerのパラメータをソートして連結
		param = sort_and_concat(oauth_header)

		# GETする
		uri = URI.parse(access_token_url)
		proxy_class = Net::HTTP::Proxy(ARGV[0], 8080)
		http = proxy_class.new(uri.host)
		http.start do |http|
			res = http.get(uri.path + &amp;quot;?#{param}&amp;quot;)
			if res.code ==&amp;quot;200&amp;quot; then
				print &amp;quot;#{res.code}\n&amp;quot;
				print &amp;quot;#{res.body}\n&amp;quot;
			else
				print &amp;quot;ERROR: #{res.code}\n&amp;quot;
			end
		end
	else
		print &amp;quot;ERROR: #{res.code}\n&amp;quot;
	end
end&lt;/pre&gt;
&lt;p&gt;処理の流れとしては、oauth_tokenを貼りつけた&lt;a href=&quot;http://twitter.com/oauth/authorize&quot;&gt;http://twitter.com/oauth/authorize&lt;/a&gt;のアドレスを出力するので、(お手数ですが)ブラウザからアクセスしてもらう。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20101130220736&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20101130/20101130220736.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ブラウザに表示されたPINコードを貼っつけてもらって、これをoauth_verifierとし、アクセストークンを発行してもらう。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20101130220728&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20101130/20101130220728.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;PINコードの所はいちいちブラウザから行かないようにすることもできそうなんですが……。&lt;/p&gt;
&lt;div class=&quot;footnote&quot;&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn1&quot; name=&quot;f1&quot;&gt;*1&lt;/a&gt;: この時のoauth_tokenとoauth_token_secretは一時的なものらしいので、アクセストークンがもらえれば忘れても良いようです。&lt;/p&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn2&quot; name=&quot;f2&quot;&gt;*2&lt;/a&gt;: Twitterにログインしていなければ、ログイン画面がまず出たはず。&lt;/p&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn3&quot; name=&quot;f3&quot;&gt;*3&lt;/a&gt;: リクエストトークンを作るときは&quot;consumer_secret&amp;&quot;でした&lt;/p&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>RubyでTwitterのOAuth認証をしてみる</title>
   <link href="http://gosyujin.github.io/2010/11/21/1290271210"/>
   <updated>2010-11-21T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2010/11/21/1290271210</id>
   <content type="html">&lt;p&gt;随分前にTwitterがベーシック認証からOAuth認証に切り替えたという事で。Java+Wicket+AppEngineでベーシック認証を駆使して作っていたTwitterサイトが見れなくなったもんで切り替えました。(&lt;a href=&quot;http://gihyo.jp/dev/feature/01/wicket&quot;&gt;特集：Wicketで始めるオブジェクト指向ウェブ開発｜gihyo.jp … 技術評論社&lt;/a&gt; を見つつ)&lt;/p&gt;
&lt;p&gt;一応出来たんですが、結局のところOAuthがどうなってるのかよくわからなかった……ので、ちょっと一から書いてみようと。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://d.hatena.ne.jp/Yoshiori/&quot;&gt;id:Yoshiori&lt;/a&gt; さんの&lt;a href=&quot;http://d.hatena.ne.jp/Yoshiori/20100929/1285727199&quot;&gt;やる夫と Python で学ぶ Twitter の OAuth - YoshioriのBlog&lt;/a&gt; と、 &lt;a href=&quot;http://d.hatena.ne.jp/yuroyoro/&quot;&gt;id:yuroyoro&lt;/a&gt; さんの&lt;a href=&quot;http://d.hatena.ne.jp/yuroyoro/20100506/1273137673&quot;&gt;OAuthプロトコルの中身をざっくり解説してみるよ - ( ꒪⌓꒪) ゆるよろ日記&lt;/a&gt;がとっても詳しかったので、参考にしました。&lt;/p&gt;
&lt;p&gt;大きな流れとしては、&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;consumer_keyとconsumer_secretを発行してもらう&lt;/li&gt;&lt;li&gt;リクエストトークンを発行してもらう&lt;/li&gt;&lt;li&gt;アクセストークンを発行してもらう&lt;/li&gt;&lt;/ol&gt;
&lt;p&gt;の3項目。今回はリクエストトークンを発行してもらうところまでやります。&lt;/p&gt;
&lt;h1&gt;準備 Twitterにアプリを登録し、consumer_keyとconsumer_secretを発行してもらう&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;Twitterにログイン &gt; 設定 &gt; 連携アプリ を選択&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20101120225746&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20101120/20101120225746.png&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;開発者の方へ &gt; こちら を選択&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20101120230042&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20101120/20101120230042.png&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;ページ下部の新しいアプリケーションを追加 を選択&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20101120230314&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20101120/20101120230314.png&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;後で編集もできるのでとりあえず入力しておく。下記の2項目はとりあえず&lt;/p&gt;
&lt;ol&gt;&lt;ul&gt;&lt;li&gt;アプリケーションの種類: クライアントアプリケーション&lt;/li&gt;&lt;li&gt;標準のアクセスタイプ: Read &amp; Write&lt;/li&gt;&lt;/ul&gt;&lt;/ol&gt;
&lt;p&gt;にしておく。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;登録したら、consumer_keyとconsumer_secretをもらえるので控えておく&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20101120232314&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20101120/20101120232314.png&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;フォローをリクエストしました。のURL、Access token URL、Authorize URLは認証時に使うのでこれも控えておく。&lt;/p&gt;
&lt;h1&gt;リクエストトークンを発行してもらう&lt;/h1&gt;
&lt;p&gt;こっからRuby。以下のパラメータを生成して&lt;a href=&quot;http://twitter.com/oauth/request_token&quot;&gt;http://twitter.com/oauth/request_token&lt;/a&gt;に送ります。POSTでもGETでもよいみたいなので、今回はGETを使ってURLのおしりにくっつけて送ります。&lt;/p&gt;
&lt;table&gt;&lt;tr&gt;&lt;th&gt;oauth_consumer_key&lt;/th&gt;&lt;td&gt;Twitterからもらったconsumer_key&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;oauth_nonce&lt;/th&gt;&lt;td&gt;一意な値(にする必要があるが、とりあえず適当でもよいみたい)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;oauth_signature&lt;/th&gt;&lt;td&gt;認証するための暗号&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;oauth_signature_method&lt;/th&gt;&lt;td&gt;認証方式(色々あるようだが、Twitterでは&quot;HMAC-SHA1&quot;固定)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;oauth_timestamp&lt;/th&gt;&lt;td&gt;今のタイムスタンプ(ミリ秒)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;oauth_version&lt;/th&gt;&lt;td&gt;バージョン(必須ではないが、付ける場合は&quot;1.0&quot;)&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;consumer_key, nonce, signature_method, timestamp, versionの生成は難しくないのですが、問題はsignature。signature生成は大きく3つの流れを踏む事になります。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;認証用の値を生成する(以下の3つの値を&amp;で連結する←この&amp;は&lt;span style=&quot;font-weight:bold;&quot;&gt;エスケープしない&lt;/span&gt;)&lt;/li&gt;&lt;/ul&gt;
&lt;ol&gt;&lt;ol&gt;&lt;li&gt;http_methodの種類(&quot;GET&quot;か&quot;POST&quot;。今回は&quot;GET&quot;)&lt;/li&gt;&lt;li&gt;&quot;&lt;a href=&quot;http://twitter.com/oauth/request_token&quot;&gt;http://twitter.com/oauth/request_token&lt;/a&gt;&quot;をエスケープしたもの&lt;/li&gt;&lt;li&gt;上記のパラメータから&lt;span style=&quot;font-weight:bold;&quot;&gt;oauth_signatureを抜かしたパラメータ&lt;/span&gt;を&lt;span style=&quot;font-weight:bold;&quot;&gt;アルファベット順&lt;/span&gt;に並べて&lt;span style=&quot;font-weight:bold;&quot;&gt;xxx=yyy&amp;vvv=zzz……&lt;/span&gt;の形で連結した値を&lt;span style=&quot;font-weight:bold;&quot;&gt;エスケープしたもの&lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/ol&gt;
&lt;ul&gt;&lt;li&gt;署名キーを生成する&lt;/li&gt;&lt;/ul&gt;
&lt;ol&gt;&lt;ol&gt;&lt;li&gt;リクエストトークンを発行してもらうときは&lt;span style=&quot;font-weight:bold;&quot;&gt;&quot;consumer_secret&amp;&quot;&lt;/span&gt;(consumer_secretのおしりに&amp;を連結する)&lt;/li&gt;&lt;/ol&gt;&lt;/ol&gt;
&lt;ul&gt;&lt;li&gt;キーを元に値をHMAC-SHA1方式で暗号化した値をbase64形式でエンコードする&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;……認証に失敗したとき、どこのステップで間違ってるのかわからなかったので非常に苦労しました。幸いsignatureを生成してくれるページ &lt;a href=&quot;http://cgi.geocities.jp/ydevnet/techblog/sample/signature.html&quot;&gt;OAuth Signature生成サンプル&lt;/a&gt; があるので、ここで作成した値と同じ状況を作って比較しました。&lt;/p&gt;
&lt;table&gt;&lt;tr&gt;&lt;th&gt;OAuth type&lt;/th&gt;&lt;td&gt;2-legged OAuth&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;URL&lt;/th&gt;&lt;td&gt;&lt;a href=&quot;http://twitter.com/oauth/request_token&quot;&gt;http://twitter.com/oauth/request_token&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;parameters&lt;/th&gt;&lt;td&gt;なし&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;consumer key&lt;/th&gt;&lt;td&gt;Twitterからもらったconsumer_key&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;consumer secret&lt;/th&gt;&lt;td&gt;Twitterからもらったconsumer_secret&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;version&lt;/th&gt;&lt;td&gt;1.0&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;timestamp&lt;/th&gt;&lt;td&gt;nowを押して発行されたtimestampをソースに逆移植する&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;nonce&lt;/th&gt;&lt;td&gt;randomを押して発行されたnonceをソースに逆移植する&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;signature method&lt;/th&gt;&lt;td&gt;HMAC-SHA1固定&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;これでsignして生成された値のうち、signature base stringが「認証用の値を生成する」で生成したかった値。signatureが「キーを元に値をHMAC-SHA1方式で暗号化した値をbase64形式でエンコードする」で生成したかった値となっている。あとはがんばる！&lt;/p&gt;
&lt;h1&gt;ソースコード&lt;/h1&gt;
&lt;p&gt;コードはこんな感じで…かなり泥臭く実装；　基本的に上から下に流れていきますが文字列のエスケープとoauthパラメータの並べ替えと結合は何回か使うのでメソッドにしました。&lt;/p&gt;
&lt;pre class=&quot;ruby&quot;&gt;require &#39;openssl&#39;
require &#39;uri&#39;
require &#39;net/http&#39;

# 文字列のエスケープ(: / = %をエスケープする。. _ -はそのまま)
def escape(value)
	URI.escape(value, Regexp.new(&amp;quot;[^a-zA-Z0-9._-]&amp;quot;))
end

# oauth_headerの情報をアルファベット順に並べ替え &amp;amp; で結合
def sort_and_concat(oauth_header)
	oauth_header_array = oauth_header.sort
	param = &amp;quot;&amp;quot;
	oauth_header_array.each do |params|
		for i in 1..params.length
			param += params[i-1]
			if i % params.length == 0
				param += &amp;quot;&amp;amp;&amp;quot;
			else
				param += &amp;quot;=&amp;quot;
			end
		end
	end
	param = param.slice(0, param.length-1)
end

# リクエストトークン取得用のURL
request_token_url = &amp;quot;http://twitter.com/oauth/request_token&amp;quot;

# Twitterで登録したらもらえる
consumer_key = &amp;quot;XXXXXXXXXXXXXXXXXXXXXX&amp;quot;
consumer_secret = &amp;quot;YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY&amp;quot;

# oauthパラメータたち
oauth_header = {
	# Consumer Key
	&amp;quot;oauth_consumer_key&amp;quot; =&amp;gt; consumer_key,
	# 一意な値(今回は適当に実装)
	&amp;quot;oauth_nonce&amp;quot; =&amp;gt; &amp;quot;AAAAAAAA&amp;quot;,
	# 署名方式(HMAC-SHA1)
	&amp;quot;oauth_signature_method&amp;quot; =&amp;gt; &amp;quot;HMAC-SHA1&amp;quot;,
	# リクエスト生成時のタイムスタンプ(ミリ秒)
	&amp;quot;oauth_timestamp&amp;quot; =&amp;gt; Time.now.to_i.to_s,
	# バージョン(1.0)
	&amp;quot;oauth_version&amp;quot; =&amp;gt; &amp;quot;1.0&amp;quot;,
}

# signature作成
# oauth_headerのパラメータをソートして連結
param = sort_and_concat(oauth_header)

# メソッドとURLとパラメータを&amp;amp;で連結する
value = &amp;quot;GET&amp;quot; + &amp;quot;&amp;amp;&amp;quot; + escape(request_token_url) + &amp;quot;&amp;amp;&amp;quot; + escape(param)

# sigunature_keyの作成
# リクエストトークン時は&amp;quot;CONSUMER_SECRET&amp;amp;&amp;quot;(アンドが入っている)
signature_key = consumer_secret + &amp;quot;&amp;amp;&amp;quot;

# hmac_sha1
sha1 = OpenSSL::HMAC.digest(OpenSSL::Digest::SHA1.new, signature_key, value)
# base64エンコード signatureを生成できたので、これをoauth_signatureとする
oauth_header[&amp;quot;oauth_signature&amp;quot;] = [sha1].pack(&#39;m&#39;).gsub(/\n/, &#39;&#39;)

# GETする
uri = URI.parse(request_token_url)
proxy_class = Net::HTTP::Proxy(ARGV[0], 8080)
http = proxy_class.new(uri.host)
http.start do |http|
	# oauth_headerのパラメータをソートして連結
	param = sort_and_concat(oauth_header)

	res = http.get(uri.path + &amp;quot;?#{param}&amp;quot;)

	if res.code == &amp;quot;200&amp;quot; then
		print &amp;quot;#{res.code}\n&amp;quot;
		print &amp;quot;#{res.body}\n&amp;quot;
	else
		print &amp;quot;ERROR: #{res.code}\n&amp;quot;
	end
end&lt;/pre&gt;
&lt;p&gt;結果はこんな感じで。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20101121013615&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20101121/20101121013615.png&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;成功するとbodyにoauth_token, oauth_token_secret他がくっついた値が帰ってきます。次はこれを使ってアクセストークンをもらいます！&lt;/p&gt;
&lt;p&gt;まだRubyも知らない事多すぎる！&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Hudson勉強会に行ってきました</title>
   <link href="http://gosyujin.github.io/2010/11/13/1289639385"/>
   <updated>2010-11-13T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2010/11/13/1289639385</id>
   <content type="html">&lt;p&gt;Hudson勉強会に行ってきました。名前は聞いたことがありますが、今まで使ってなかったのできっかけになればと思って。&lt;/p&gt;
&lt;p&gt;参考:&lt;a href=&quot;http://wiki.hudson-ci.org/pages/viewpage.action?pageId=46336352&quot;&gt;Hudsonåå¼·ä¼ - æ¥æ¬èª - Hudson Wiki&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;Hudson初心者向けデモ&lt;/h1&gt;
&lt;p&gt;@&lt;a href=&quot;http://twitter.com/cactusman&quot;&gt;cactusman&lt;/a&gt;さん&lt;/p&gt;
&lt;h2&gt;Hudsonって何ができるの&lt;/h2&gt;
&lt;ol&gt;&lt;li&gt;スケジューリング&lt;/li&gt;&lt;li&gt;SCMからチェックアウト&lt;/li&gt;&lt;li&gt;ビルドスクリプトの実行、結果のまとめ、通知&lt;/li&gt;&lt;/ol&gt;
&lt;p&gt;などできる！&lt;/p&gt;
&lt;h2&gt;起動・操作&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;起動は超簡単 「java -jar hudson.war」で一発 &gt; 導入する敷居がグッとさげられる！？　ほぼGUIから操作できるのも便利！&lt;/li&gt;&lt;li&gt;Javaのパスなどを入力し、ビルドを実行するだけ&lt;/li&gt;&lt;li&gt;スケジューリングはcronと同じように設定できる &gt; 毎分実行されるなど&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;Hudsonプロジェクトの現状と将来&lt;/h1&gt;
&lt;p&gt;@&lt;a href=&quot;http://twitter.com/kohsukekawa&quot;&gt;kohsukekawa&lt;/a&gt;さん&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;rpm/debもあるよ&lt;/li&gt;&lt;li&gt;インストール後の設定はGUI &gt; 便利！&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;Hudsonをおすすめできる理由&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;拡張性の高さ！ = Eclipse使われているのと同じ理由&lt;/li&gt;&lt;li&gt;Java以外の多言語でも利用されてる &gt; Python, Rubyも&lt;/li&gt;&lt;li&gt;他の競合ツールに比べて利用者が増加し続けている&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;日本Hudsonユーザ会発足！&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://build-shokunin.org&quot;&gt;http://build-shokunin.org&lt;/a&gt;&lt;/li&gt;&lt;li&gt;メーリスもあるよ&lt;/li&gt;&lt;li&gt;定期的に勉強会するよ&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;今後の展望&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;面白い拡張ポイントの実装 &gt; プラグインの作者が面白いように&lt;/li&gt;&lt;li&gt;プラグインも拡張ポイントを実装すべき！ &gt; 現状メッセンジャープラグインがたくさん &gt; しかし、プラグインごとに実装はバラバラ… &gt; メッセンジャー共通部分を作るとか！&lt;/li&gt;&lt;li&gt;分散ユニットテストなど計算機資源を豪勢に使う&lt;/li&gt;&lt;li&gt;ビルド環境を柔軟に&lt;/li&gt;&lt;li&gt;JRuby, Jythonなどでプラグイン開発ができるように&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;などなど……&lt;/p&gt;
&lt;h1&gt;Hudson活用事例&lt;/h1&gt;
&lt;p&gt;@&lt;a href=&quot;http://twitter.com/magnet88jp&quot;&gt;magnet88jp&lt;/a&gt;さん&lt;/p&gt;
&lt;p&gt;どのようにHudsonを活用しているか。実運用からのお話。&lt;/p&gt;
&lt;h2&gt;リリースが月に一度！&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;自動化テストの効率化がマスト！&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;テストケースの構成&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;Selenium IDE&lt;/li&gt;&lt;li&gt;Selenium AES(あまり使っていない)&lt;/li&gt;&lt;li&gt;JMeter&lt;/li&gt;&lt;li&gt;Subversion&lt;/li&gt;&lt;li&gt;Hudson&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;実運用で…&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;ダッシュボード機能 &gt; 失敗したジョブだけ表示、自分のジョブだけ表示など&lt;/li&gt;&lt;li&gt;繰り返しテストしやすいジョブ構成&lt;/li&gt;&lt;li&gt;Hudsonのおかけでかかる時間が18時間から30分くらいに&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;Ruby on Rails on Hudsonの活用事例&lt;/h1&gt;
&lt;p&gt;@&lt;a href=&quot;http://twitter.com/kirika_k2&quot;&gt;kirika_k2&lt;/a&gt;さん&lt;/p&gt;
&lt;h2&gt;Ruby on RailsでHudson&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;デイリービルドによる日々の成果物チェック &gt; Railsでは実行環境によって動かなくなったりする&lt;/li&gt;&lt;li&gt;テスト時間を省力化できる&lt;/li&gt;&lt;li&gt;テストコードを書くモチベーションが上がる&lt;/li&gt;&lt;li&gt;HudsonでRailsアプリをRPMに変換してRPMのインストールでデプロイ！&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;コンセプト&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;同じ環境が作れる&lt;/li&gt;&lt;li&gt;動作確認ができる&lt;/li&gt;&lt;li&gt;人手を減らせる&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;実運用で…&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;古いビルドの破棄&lt;/li&gt;&lt;li&gt;ソースコード管理システムはSubversion&lt;/li&gt;&lt;li&gt;ビルドトリガ &gt; 毎日5時&lt;/li&gt;&lt;li&gt;Version NumberPlugin &gt; rpmに日付を入れることができる &gt; モジュール管理に&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;注意点&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;マシンスペック重要！&lt;/li&gt;&lt;li&gt;トラブルが発生したときはSSHを使うことが多い&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;Hudsonを入れると色々捗る！&lt;/h2&gt;
&lt;h1&gt;Redmine + Hudson の連携について&lt;/h1&gt;
&lt;p&gt;@&lt;a href=&quot;http://twitter.com/haru_iida&quot;&gt;haru_iida&lt;/a&gt;さん&lt;/p&gt;
&lt;h2&gt;開発ツール三種の神器&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;BTS&lt;/li&gt;&lt;li&gt;リポジトリ&lt;/li&gt;&lt;li&gt;CIサーバ&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;BTSとCIサーバがつながりが疎なのでそこを強化する！&lt;/p&gt;
&lt;h2&gt;Redmine &gt; Hudson&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;Redmine上にHudsonのポータルを表示&lt;/li&gt;&lt;li&gt;チケットとビルドを関連付け&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;Hudson &gt; Redmine&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;プラグインあるよ！&lt;/li&gt;&lt;li&gt;失敗時にHudsonが発行するメールでRedmineにチケット登録ができる！&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;プラグインつくろう！&lt;/h2&gt;
&lt;h1&gt;エルシャダイで学ぶ、大丈夫な「ビルド通知」&lt;/h1&gt;
&lt;p&gt;@&lt;a href=&quot;http://twitter.com/ikikko&quot;&gt;ikikko&lt;/a&gt;さん&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;笑いすぎてメモ取るのほとんど忘れたｗ&lt;/li&gt;&lt;li&gt;一番いいビルド通知を頼む &gt; XFD(eXtreamFeedbackDevice)を使う！ &gt; ナバズタグでいろいろと&lt;ul&gt;&lt;li&gt;ナバズタグ参考:&lt;a href=&quot;http://robot.watch.impress.co.jp/docs/news/20090427_164003.html&quot;&gt;http://robot.watch.impress.co.jp/docs/news/20090427_164003.html&lt;/a&gt;&lt;/li&gt;&lt;li&gt;会場ではナバズタグが動かなかったので残念…&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;Hudsonを用いて適当に？テストする方法の紹介&lt;/h1&gt;
&lt;p&gt;@&lt;a href=&quot;http://twitter.com/wyukawa&quot;&gt;wyukawa&lt;/a&gt;さん&lt;/p&gt;
&lt;h2&gt;メンテナンス大変… &gt; なんで？&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;テストの粒度が細かい&lt;/li&gt;&lt;li&gt;失敗時の切り分けに時間がかかる&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;適当なテスト(スモークテスト)&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;assertなし&lt;/li&gt;&lt;li&gt;適当なので仕様変更に強い&lt;/li&gt;&lt;li&gt;そのレベルで失敗したら明らかにバグ&lt;/li&gt;&lt;li&gt;ただし、古いDBを使っていると成功してしまう &gt; 継続的データベースインテグレーションを行う！&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;スモークテストの語源は、何かマシンをテストするときにスイッチオン &gt; 煙モクモク &gt; もうその時点でそれ以降のテストしてる場合じゃないでしょ？　って事らしい。&lt;/p&gt;
&lt;h2&gt;とりあえず、適当なテストだけでも自動化してみては？&lt;/h2&gt;
&lt;h1&gt;モテるHudsonエンジニア&lt;/h1&gt;
&lt;p&gt;@&lt;a href=&quot;http://twitter.com/kiy0taka&quot;&gt;kiy0taka&lt;/a&gt;さん&lt;/p&gt;
&lt;h2&gt;どうすればHudsonでモテるか&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;GUIではなくCUI&lt;ul&gt;&lt;li&gt;TerminalPlugin作りました&lt;/li&gt;&lt;li&gt;killで自殺するデモ&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;説明欄にjavascriptも書けるので……合コン&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;日本語化のススメ&lt;/h1&gt;
&lt;p&gt;@&lt;a href=&quot;http://twitter.com/itouakihiro&quot;&gt;itouakihiro&lt;/a&gt;さん&lt;/p&gt;
&lt;h2&gt;プラグインの翻訳&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;現在374個あるプラグインのうち、日本語化されているのはたったの34個…&lt;/li&gt;&lt;li&gt;みんなで翻訳しよう！　翻訳したらモテる！&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;最後に、なぜ「Hudson」なの？&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;Hudsonには今まで人間がやった事をやってもらう &gt; チームの仲間と思っている &gt; それなら他人を助ける人の名前がいいな &gt; 執事(Hudson)からとろう！&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;というわけで&lt;/h1&gt;
&lt;p&gt;第一回目という事でかなり敷居が低く参加しやすい割に、なかなか濃い2時間でした。会場を提供してくださった法政大学さん。川口さん、cactusmanさん、発表者の皆さん、受付や案内をして下さった皆さんにありがとうございました！！　&lt;/p&gt;
&lt;p&gt;そして、Hudson使ってみたくなったので、これアップしたらHudson入れてみます！&lt;/p&gt;
&lt;h1&gt;Hudson関係ないけど&lt;/h1&gt;
&lt;p&gt;懇親会で &lt;a href=&quot;http://d.hatena.ne.jp/t_yano/&quot;&gt;id:t_yano&lt;/a&gt; さんにお会いしました。来月念願の&lt;del datetime=&quot;2010-11-13T18:13:58+09:00&quot;&gt;アイスソード&lt;/del&gt;第3回Wicket勉強会が開催されるようです。「詳しくはブログで！」との事だったのでブログをチェック！　僕もチェックします！&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>JVM勉強会に行ってきました</title>
   <link href="http://gosyujin.github.io/2010/08/11/1281453866"/>
   <updated>2010-08-11T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2010/08/11/1281453866</id>
   <content type="html">&lt;p&gt;ふむ、jojo勉強会以来…？　あれ、java-ja温泉の事って書いてなかったっけか。書いてなかったのか……。&lt;/p&gt;
&lt;p&gt;というわけで行ってまいりましたJVM勉強会。&lt;/p&gt;
&lt;p&gt;VMの中の人まで意識した設計をしたことがなく、ClassLoaderをサンプルでちょこちょこって動かした程度のレベルですが。&lt;/p&gt;
&lt;h1&gt;参考資料&lt;/h1&gt;
&lt;p&gt;とりあえず、会場で持ってる人が割といた、もしくは発表内で話題にあがった本など。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Java仮想マシン仕様&lt;/li&gt;&lt;li&gt;ガベージコレクションのアルゴリズムと実装&lt;/li&gt;&lt;li&gt;デコンパイリングJava&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;この辺りを読んでくると、より内容を楽しめた模様。&lt;/p&gt;
&lt;h1&gt;本編&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;@ashigeruさん クラスローダについて&lt;ul&gt;&lt;li&gt;クラスローダはfindClass()をオーバライドする&lt;/li&gt;&lt;li&gt;loadClass()を実行すると委譲先クラスを探しにいく。親から見ていって、なかったら自分でロード&lt;ul&gt;&lt;li&gt;親から見ていくので、親が古いライブラリを持っているとそれをロードしてしまう！&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;某アプリケーションサーバは親を最後に検索する = PARENT_LAST&lt;ul&gt;&lt;li&gt;その名のとおり自分のクラスローダを最初に検索するので、親のライブラリの影響を受けにくい&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;同じ名前のクラスでも定義ローダーが違えば別のもの。Class.getClassLoader()でどこから呼ばれたか確認できる。&lt;/li&gt;&lt;li&gt;PARENT_LASTの問題点としてドッペルゲンガーという現象。などなど……&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;ul&gt;&lt;li&gt;@skrbさん Stack on JavaVM&lt;ul&gt;&lt;li&gt;JVMとスタックについて&lt;/li&gt;&lt;li&gt;スタックを使用した逆ポーランド法のアニメーション（わかりやすい！）&lt;/li&gt;&lt;li&gt;JVMはスタック&lt;/li&gt;&lt;li&gt;スタックはThreadひとつにつきひとつ&lt;ul&gt;&lt;li&gt;中にはプログラムカウンタがひとつ&lt;/li&gt;&lt;li&gt;フレームの中にはローカル変数とオペランドスタック&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;JVMの中ではBooleanはIntとして扱われている&lt;/li&gt;&lt;li&gt;インスタンスはヒープにアロケーションされる&lt;/li&gt;&lt;li&gt;スタックは二段構え（JavaStackとオペランドスタック）&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;ul&gt;&lt;li&gt;@kmizuさん わかる！Javaバイトコード－30分でわからない？Javaバイトコード入門&lt;ul&gt;&lt;li&gt;Hello Worldの逆アセンブル&lt;/li&gt;&lt;li&gt;byte,short,char,boolean -&gt; すべてintとして扱われる&lt;/li&gt;&lt;li&gt;ロード/ストア命令…定数をオペランドスタックにロードする命令&lt;/li&gt;&lt;li&gt;ロード/ストア命令2…ローカル変数の値をオペランドスタックにロードする命令&lt;/li&gt;&lt;li&gt;型変換命令…キャストなどint -&gt;longなど&lt;/li&gt;&lt;li&gt;配列関係の命令&lt;/li&gt;&lt;li&gt;オブジェクトの生成・操作命令&lt;/li&gt;&lt;li&gt;モニタ命令&lt;/li&gt;&lt;li&gt;クラスファイルベリファイア&lt;ul&gt;&lt;li&gt;classファイルのフォーマットがJava仮想マシン仕様に従っているかどうかを該当クラスの初期化より前にチェックする。未初期化ローカル変数へのアクセス、型エラー、jasmin……この辺よくわかりませんした＞＜&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;ul&gt;&lt;li&gt;@cactusmanさん GCについて&lt;ul&gt;&lt;li&gt;GC&lt;ul&gt;&lt;li&gt;ルートを起点として参照できるオブジェクトは生きている&lt;/li&gt;&lt;li&gt;ルートに到達できないものがGCされる&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;GCを学ぶ意義としてメモリ領域の効率的な使い方を意識できる&lt;/li&gt;&lt;li&gt;マーク＆スイープ&lt;ul&gt;&lt;li&gt;ルートオブジェクトからたどれるオブジェクトをマークしていく&lt;/li&gt;&lt;li&gt;マークのないオブジェクトを回収&lt;/li&gt;&lt;li&gt;メリット：実装は簡単&lt;/li&gt;&lt;li&gt;デメリット：フラグメンテーション、アロケーション速度、停止時間が長い→マークしている期間&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;参照カウント&lt;ul&gt;&lt;li&gt;自信のオブジェクトが参照されているオブジェクトをカウント&lt;/li&gt;&lt;li&gt;0になった時点でGC&lt;/li&gt;&lt;li&gt;メリット：参照が停止されたタイミングで開放、停止時間が短い、参照をたどる必要がない&lt;/li&gt;&lt;li&gt;デメリット：循環参照を回収できない、カウンターの値の増減処理が重い、実装が難しい&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;コピー&lt;ul&gt;&lt;li&gt;メリット：スループットがいい、メモリ回収と同時にコンパクションを行える(フラグメンテーションが起きない)&lt;/li&gt;&lt;li&gt;デメリット：ヒープ領域を余分に取る&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;GCの種類 ScavengeGC - コピーGC&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;ul&gt;&lt;li&gt;@nekopさん クラスローダリークパターン なにそれおいしいの？&lt;ul&gt;&lt;li&gt;ThreadLocalで設定した値はThreadから強参照される&lt;/li&gt;&lt;li&gt;java.util.loggingのLevelを継承でリーク&lt;/li&gt;&lt;li&gt;既製ライブラリ　commons-logging&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;ul&gt;&lt;li&gt;日本オラクルたてのさん なれる！CL 5分間で分かる？ (OC4J)クラスローダ入門&lt;ul&gt;&lt;li&gt;OC4Jのおはなし。&lt;/li&gt;&lt;li&gt;人間クラスローダ養成講座 &lt;- なにこれすごい受けたい！&lt;/li&gt;&lt;li&gt;クラスローダは親子モデル、親からロードし子は最後。&lt;/li&gt;&lt;li&gt;基本は1JavaVM1アプリ1ライフサイクルなのだが、現在は多くのアプリ・多くのライブラリが乗っているので、依存やバージョン競合が起こりそう。&lt;/li&gt;&lt;li&gt;親子関係では足りなくなるのでloadClassの上書きという修羅の道を通った人もいる。&lt;/li&gt;&lt;li&gt;ポリシーを組み合わせる -&gt; テンプレートで設定。&lt;/li&gt;&lt;li&gt;OC4JはWebLogicServerへ…そして伝説へ…&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;GCの仕組みなど普段は中の人にやってもらっていたところが、どんな仕組みになっていたのかなんとなくイメージできたかな…。&lt;/p&gt;
&lt;p&gt;@skrbさんの逆ポーランド方を図示したスライドは超わかりやすかった！　逆ポーランドとスタックは絡めて説明すると感覚的にすごく頭に入ってきやすいと思いました。&lt;/p&gt;
&lt;p&gt;最後に、主催者の@yuroyoroさん、二次会を取りまとめてくださった@yamashiroさん、会場を提供してくださった日本Oracle社さんに感謝。&lt;/p&gt;
&lt;h1&gt;最後の最後に&lt;/h1&gt;
&lt;p&gt;Hello Worldをjavapしてみましょう。&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;public class HelloClassLoader {
        public static void main(String args[]) {
                System.out.println(&amp;quot;HelloWorld !!&amp;quot;);
        }
}&lt;/pre&gt;
&lt;pre class=&quot;&quot;&gt;MacBook:java kk_Ataka$ javap -c HelloClassLoader
Compiled from &amp;quot;HelloClassLoader.java&amp;quot;
public class HelloClassLoader extends java.lang.Object{
public HelloClassLoader();
  Code:
   0:	aload_0
   1:	invokespecial	#1; //Method java/lang/Object.&amp;quot;&amp;lt;init&amp;gt;&amp;quot;:()V
   4:	return

public static void main(java.lang.String[]);
  Code:
   0:	getstatic	#2; //Field java/lang/System.out:Ljava/io/PrintStream;
   3:	ldc	#3; //String HelloWorld !!
   5:	invokevirtual	#4; //Method java/io/PrintStream.println:(Ljava/lang/String;)V
   8:	return

}&lt;/pre&gt;</content>
 </entry>
 
 <entry>
   <title>java-ja勉強会に参加しました</title>
   <link href="http://gosyujin.github.io/2010/01/23/1264179525"/>
   <updated>2010-01-23T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2010/01/23/1264179525</id>
   <content type="html">&lt;p&gt;　今回のテーマはJOJO！　参考URL→&lt;a href=&quot;http://www.google.co.jp/search?q=java+jojo&amp;lr=lang_ja&amp;ie=utf-8&amp;oe=utf-8&amp;aq=t&amp;rls=org.mozilla:ja-JP-mac:official&amp;client=firefox-a&quot;&gt;java jojo - Google 検索&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;僕のJOJO予備知識&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;なんかジョジョっぽいアスキーアートは見た事がある&lt;/li&gt;&lt;li&gt;人名とか用語とか断片的に知ってる&lt;/li&gt;&lt;li&gt;FF6のやりこみ用語にバイツァ・ダストとキング・クリムゾンがある&lt;/li&gt;&lt;li&gt;エシディシは悟空の太陽拳で一撃&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f1&quot; title=&quot;ファミコンジャンプ的な意味で&quot; name=&quot;fn1&quot;&gt;*1&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;　初心者少なすぎです＞＜&lt;/p&gt;
&lt;p&gt;　昔から読むきっかけが欲しくて……これでもう明日から読めます。むしろ読みたくてたまらない＞＜　とりあえず実家からジョジョ全巻持ってきている剛の者を少なくとも二人知っているので手配しようっと。&lt;/p&gt;
&lt;h1&gt;三行でおさらいする今日の勉強会&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;人間讃歌&lt;/li&gt;&lt;li&gt;未来への遺産&lt;/li&gt;&lt;li&gt;才能と技術と成長の緊張関係&lt;/li&gt;&lt;/ul&gt;
&lt;div class=&quot;footnote&quot;&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn1&quot; name=&quot;f1&quot;&gt;*1&lt;/a&gt;: ファミコンジャンプ的な意味で&lt;/p&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>OracleMasterBronze 11g SQL基礎I(1Z0-051)を受験したよ</title>
   <link href="http://gosyujin.github.io/2009/12/27/1261847868"/>
   <updated>2009-12-27T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2009/12/27/1261847868</id>
   <content type="html">&lt;p&gt;　11gのSQL基礎受験してきました。&lt;/p&gt;
&lt;p&gt;　問題は55問で正答率60％以上で合格。解いてる内に（あーなんかダメだなー……16000円がー）とか思いながら全問解答したのですが、なんと正答率61％で合格でした。うはー。&lt;/p&gt;
&lt;p&gt;　とりわけ目を引いた問題が、&lt;/p&gt;
&lt;pre class=&quot;sql&quot;&gt;　こんな値が欲しいために、下記のSQL文を実行した。
　SELECT 列列, 列列 FROM テーブル WHERE なんたらかんたら

　結果を選べ。

　1.SQL文は実行され期待通りの結果が得られる。
　2.SQL文は実行されるが期待通りの結果は得られない。
　3.○○のためエラーが起こる。
　4.△△のためエラーが起こる。&lt;/pre&gt;
&lt;p&gt;　こんな感じの問題。この形式がすごく多かった印象。――って、インプレスジャパンの問題集(黒本？)にこんなんあったっけか！？　もう見るのも嫌だから見返さないけど、なかったような気がするぞ……。&lt;/p&gt;
&lt;p&gt;　DBAも受けないといけないけど、インプレスジャパンの本は買わないようにしよう……。&lt;/p&gt;
&lt;p&gt;　結局この本から得たものは何もない気がする。だから資格取得の勉強ってモチベーションあがんないんだよなーまだ一つも資格持ってないけど。&lt;/p&gt;
&lt;p&gt;　テンションあがる資格取得の勉強の仕方ってないもんかな。&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Logicool MX Revolutionの副ボタンでExpos&#233;とかSpacesを使いたい＠Snow Leopard</title>
   <link href="http://gosyujin.github.io/2009/12/26/1261792712"/>
   <updated>2009-12-26T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2009/12/26/1261792712</id>
   <content type="html">&lt;h1&gt;なんか対応されてるみたいです。&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://www.logicool.co.jp/index.cfm/428/4676&amp;hub=1&amp;cl=jp,ja?osid=9&quot;&gt;Support + Downloads: MX  1100 Cordless Laser Mouse - Logicool&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;　一生懸命やったのに＞＜　トラックバック先もちゃんとおけば良かった＞＜　もう～オバカ！(矢部的な意味で)　このエントリはMX Revolution自分設定備忘録として残しとこ。&lt;/p&gt;
&lt;h1&gt;とりあえず、&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;親指戻るボタン&lt;ul&gt;&lt;li&gt;クリック＞中央クリック&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20091226103507&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20091226/20091226103507.png&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;親指進むボタン&lt;ul&gt;&lt;li&gt;アプリケーションの切り替え＞次の右のアプリケーションに切り替える&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20091226103508&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20091226/20091226103508.png&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;One-Touch Searchボタン&lt;ul&gt;&lt;li&gt;キーストローク＞command+W&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20091226103509&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20091226/20091226103509.png&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;サムホイールボタン&lt;ul&gt;&lt;li&gt;画面のキャプチャ＞領域、ファイル&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20091226103510&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20091226/20091226103510.png&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;　この辺は設定できました。&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f1&quot; title=&quot;でも、Google Chromeだと中央クリックが効かないんだよなぁ……。&quot; name=&quot;fn1&quot;&gt;*1&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;　でも、サムホイール前回転と後回転にすべてのウィンドウ(Expoc&amp;#233;)とSpacesを割り当ててもうまく動いてくれなかった。。。どうもSnow Leopardには現段階で対応してない模様？&lt;/p&gt;
&lt;h1&gt;調べ中……&lt;/h1&gt;
&lt;p&gt;　そこで、&lt;a href=&quot;http://blog.livedoor.jp/perfectionist0519/archives/759441.html&quot;&gt;FINALIZE LIFE : Snow Leopard レビュー Logicool Control Centerの不具合解消編&lt;/a&gt;を参考にしてやってみました。&lt;/p&gt;
&lt;p&gt;　結論としては動いた！　ボタン設定に用意されているExpos&amp;#233;, Dashboard、およびSpacesを使用せずに、キーストロークでやってしまおうという考え。&lt;/p&gt;
&lt;p&gt;　まずすべてのウィンドウから。これってExpos&amp;#233;デフォルトだとF9になっているはず……。これをF9からずらす。F8がボタンかぶってる！　って言われてるけどすぐ直すからキニシナイ！&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20091226103511&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20091226/20091226103511.png&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;　移したらマウスの設定に戻り、&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;サムホイール前回転&lt;ul&gt;&lt;li&gt;キーストローク＞F9&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20091226103512&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20091226/20091226103512.png&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;　とする。&lt;/p&gt;
&lt;p&gt;　設定したら、Expos&amp;#233;のすべてのウィンドウをF9に戻す。こういう手順を踏まないとキーストロークでF9を入れる事ができないと思う。できるのかな？&lt;/p&gt;
&lt;p&gt;　Spacesも同じようにショートカットキーをいったん退避させて(デフォルトならF8のはず)、&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20091226103513&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20091226/20091226103513.png&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;サムホイール後回転&lt;ul&gt;&lt;li&gt;キーストローク＞F8&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;　とする。&lt;/p&gt;
&lt;p&gt;　できた！　けど、早く対応してくれないかなぁ。&lt;/p&gt;
&lt;div class=&quot;footnote&quot;&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn1&quot; name=&quot;f1&quot;&gt;*1&lt;/a&gt;: でも、Google Chromeだと中央クリックが効かないんだよなぁ……。&lt;/p&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>java-ja忘年会に参加しました</title>
   <link href="http://gosyujin.github.io/2009/12/17/1260981278"/>
   <updated>2009-12-17T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2009/12/17/1260981278</id>
   <content type="html">&lt;h1&gt;java-ja忘年会だ！&lt;/h1&gt;
&lt;p&gt;　絶対迷うとわかっていたので、かなり早めに新宿へ向かいました。到着後、iPhone片手に新宿アイランドタワーを探すも新宿の複雑さに若干オロオロ。田舎者に東京は難しすぎる……。それでもなんとか20時に着くことができました;;&lt;/p&gt;
&lt;p&gt;　暇を持て余してたらTwitterのTL上で着いたと投げていた&lt;a href=&quot;http://d.hatena.ne.jp/Ewigkeit/&quot;&gt;id:Ewigkeit&lt;/a&gt;さんを発見。すかさず合流してもいいですかと投げたら快諾してくれました。いい人＞＜　そしていい時代になったものだ＞＜&lt;/p&gt;
&lt;p&gt;　Ewigkeitさんの後ろを着いていき会場入り。結構早い方だった。&lt;/p&gt;
&lt;p&gt;　会場入りする人が増えてくると会話も増えて、会話の端々にTwitterIdのような単語が飛び出すと「あ～、あのアイコンの人じゃん！」と一人で盛り上がったり。&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f1&quot; title=&quot;僕はjava-ja初参加だったので、知ってる人は第二回wicket勉強会で発表していた人とか、その後の懇親会で一緒だった人くらいしかいなかったのです;;&quot; name=&quot;fn1&quot;&gt;*1&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;　忘年会が始まると、うちの区画はいきなり名刺交換な流れになっていたので乗り遅れないように交換。&lt;a href=&quot;http://d.hatena.ne.jp/t-wada/&quot;&gt;id:t-wada&lt;/a&gt;さんも同じ区画だった！　ちょっと遠かったけど。&lt;/p&gt;
&lt;p&gt;　今回初参加だったので、皆さん何されてるんですか？　くらいの話しか出来なかったのが悔やまれる;;&lt;/p&gt;
&lt;p&gt;　しかし、嬉しかった事もあります。前回のwicket勉強会でお話した人が僕を記憶に残しててくれたこと。これは嬉しかった……。&lt;a href=&quot;http://d.hatena.ne.jp/t_yano/&quot;&gt;id:t_yano&lt;/a&gt;さんも僕のこと覚えててくださったのが驚き！　今年始めのwicket勉強会で非常に良い経験をさせて頂いたため、お礼も兼ねてどうしても挨拶だけしたくて、終わりがけに恐る恐る訪ねたら……！　少ししか話せませんでしたが機会があったらまたお話したい＞＜　wicketも触りたい＞＜&lt;/p&gt;
&lt;p&gt;　まだTwitter上でしかあったことがない人もいるので、次回会えたらと思います。&lt;/p&gt;
&lt;p&gt;　主催の&lt;a href=&quot;http://d.hatena.ne.jp/Yamashiro0217/&quot;&gt;id:Yamashiro0217&lt;/a&gt;さんお疲れさまです。ありがとうございました！　他の皆さんもお疲れさまでした！&lt;/p&gt;
&lt;p&gt;　これで僕もjava-jaですっ。&lt;/p&gt;
&lt;h1&gt;P.S.&lt;/h1&gt;
&lt;p&gt;　t-wadaさんがブログラマーたるものジョジョを知らねばならん！　と、ジョジョ勉強会を開催するという噂を耳にしたのですが……。最初Java勉強会の空耳かと思った。&lt;/p&gt;
&lt;div class=&quot;footnote&quot;&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn1&quot; name=&quot;f1&quot;&gt;*1&lt;/a&gt;: 僕はjava-ja初参加だったので、知ってる人は第二回wicket勉強会で発表していた人とか、その後の懇親会で一緒だった人くらいしかいなかったのです;;&lt;/p&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>Mac OS X 再インストール(クリーンインストール)手順</title>
   <link href="http://gosyujin.github.io/2009/12/12/1260621685"/>
   <updated>2009-12-12T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2009/12/12/1260621685</id>
   <content type="html">&lt;p&gt;　やり方忘れたのでメモ。&lt;/p&gt;
&lt;h1&gt;言語選択&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;主に日本語を使用する&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;ディスク初期化&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;上のユーティリティ＞ディスクユーティリティ&lt;/li&gt;&lt;li&gt;ディスクを選択＞消去タブ&lt;ul&gt;&lt;li&gt;フォーマットはMac OS 拡張(ジャーナリング)&lt;/li&gt;&lt;li&gt;名前はデフォルトでいいや&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;消去...ボタン&lt;/li&gt;&lt;li&gt;消去が終了したら閉じる&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;Mac OS X インストール&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;続ける&lt;/li&gt;&lt;li&gt;規約に同意&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;インストールする前にカスタマイズ！&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;インストールするディスクを選択&lt;/li&gt;&lt;li&gt;カスタマイズ&lt;ul&gt;&lt;li&gt;プリンタサポート、追加フォント、言語環境のチェックをすべて外す&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;その後でインストール……20分くらい？&lt;/li&gt;&lt;li&gt;インストールが完了したら再起動&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;　ここから先は個人的なメモ。&lt;/p&gt;
&lt;a name=&quot;seemore&quot;&gt;&lt;/a&gt;
&lt;h1&gt;ようこそ&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;日本を選択&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;キーボード入力環境を選択&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;ことえりを選択&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;すでにMacをお持ちですか？&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;情報を今すぐ転送しない&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;インターネットの接続方法&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;AirMacワイヤレス&lt;/li&gt;&lt;li&gt;コンピュータをインターネットに接続しないを選択した場合は一個飛ばし&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;ワイヤレスネットワークを選択&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;ネットワークを選択してKEYを入力&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;ユーザ登録の情報&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;そのまま続ける&lt;/li&gt;&lt;li&gt;警告が出ても続ける&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;ローカルアカウントの作成&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;フルネーム、アカウント名、パスワードと確認を入力し続ける&lt;/li&gt;&lt;li&gt;ヒントを入力しなくても～と出るが続ける&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;このアカウントのピクチャを選択&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;とりあえず雪の結晶の気分&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;MobileMeのフリートライアル(ネット接続時のみ？)&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;今はフリートライアルを利用しない&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;時間帯の設定&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;最も近い都市を入力し続ける&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;登録を忘れずに...&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;完了&lt;/li&gt;&lt;/ul&gt;</content>
 </entry>
 
 <entry>
   <title>Macの日本語入力で数字を入力するときに最初から半角にしたい＋α</title>
   <link href="http://gosyujin.github.io/2009/12/09/1260354373"/>
   <updated>2009-12-09T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2009/12/09/1260354373</id>
   <content type="html">&lt;p&gt;　僕はMac＠日本語入力に&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;l行(la, li, lu, le, lo)でぁぃぅぇぉが出てほしい&lt;/li&gt;&lt;li&gt;？/キーで・(なかぐろ)が出てほしい&lt;/li&gt;&lt;li&gt;数字をうったら半角で12345みたいに出てほしい&lt;/li&gt;&lt;/ol&gt;
&lt;p&gt;　こういう事を求めたいので、これらの設定方法をメモ。使うてないと完全に忘れますな……。ずっと違うところ探してて時間無駄にした。&lt;/p&gt;
&lt;p&gt;　まず、画面上のバー&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f1&quot; title=&quot;何バー？　タスクバー？&quot; name=&quot;fn1&quot;&gt;*1&lt;/a&gt;&lt;/span&gt;の「あ」とか「A」とかなってる場所をクリック。環境設定を表示という項目を選択。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20091209192432&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20091209/20091209192432.png&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;　入力操作では、「Windows風のキー操作」という項目があるのでチェック。&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f2&quot; title=&quot;意識して使ったことないけど、Windowsではかな入力中にshift押すと英字モードに切り替わるらしい。Macだとない？　これに拘りがある人は設定いじれないかも……。&quot; name=&quot;fn2&quot;&gt;*2&lt;/a&gt;&lt;/span&gt;することで、一つ目のl行でぁぃぅぇぉが満たせます。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20091209192433&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20091209/20091209192433.png&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;　次に入力文字。/キーで入力する文字という項目を・(なかぐろ)に。数字を全角で入力という項目のチェックを外す。これで残り二つも満たせました！&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20091209192435&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20091209/20091209192435.png&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;footnote&quot;&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn1&quot; name=&quot;f1&quot;&gt;*1&lt;/a&gt;: 何バー？　タスクバー？&lt;/p&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn2&quot; name=&quot;f2&quot;&gt;*2&lt;/a&gt;: 意識して使ったことないけど、Windowsではかな入力中にshift押すと英字モードに切り替わるらしい。Macだとない？　これに拘りがある人は設定いじれないかも……。&lt;/p&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>Macの"書類"とか"ライブラリ"みたいに日本語化されているフォルダを英語化する</title>
   <link href="http://gosyujin.github.io/2009/12/08/1260268590"/>
   <updated>2009-12-08T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2009/12/08/1260268590</id>
   <content type="html">&lt;p&gt;　※この作業を行うことによるデメリットはわかんないです。トーシロだからとりあえずガンガン消してみるよ！&lt;/p&gt;
&lt;p&gt;　Macの/Users/ユーザ直下のフォルダ&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f1&quot; title=&quot;Macってフォルダっていうんだっけ？　ディレクトリ？&quot; name=&quot;fn1&quot;&gt;*1&lt;/a&gt;&lt;/span&gt;って&quot;書類&quot;とか&quot;ライブラリ&quot;とか日本語化されてるくせに、ターミナルから見ると&quot;Document&quot;とか&quot;Library&quot;になっててすごい気になる。でも、言語自体を英語にするのもちょっと……。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20091208193648&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20091208/20091208193648.png&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;　ということで、なんとかこの日本語フォルダだけ英語表記にできないもんだろうかと思って調べてみた。原因(？)としては、日本語化されているフォルダには「.localized」っていうファイルがあるようで、こいつが日本語にしている模様。&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f2&quot; title=&quot;消してしまったので、どんなファイルだったのかわからな；&quot; name=&quot;fn2&quot;&gt;*2&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;　消します！&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20091208193649&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20091208/20091208193649.png&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;　消し消し……。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20091208193650&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20091208/20091208193650.png&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;　全部英語になった！&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20091208193651&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20091208/20091208193651.png&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;footnote&quot;&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn1&quot; name=&quot;f1&quot;&gt;*1&lt;/a&gt;: Macってフォルダっていうんだっけ？　ディレクトリ？&lt;/p&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn2&quot; name=&quot;f2&quot;&gt;*2&lt;/a&gt;: 消してしまったので、どんなファイルだったのかわからな；&lt;/p&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>OracleにおけるWHERE句、BETWEEN句、IN句、LIKE句、ORDER BY句のまとめ</title>
   <link href="http://gosyujin.github.io/2009/11/16/1258300637"/>
   <updated>2009-11-16T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2009/11/16/1258300637</id>
   <content type="html">&lt;p&gt;　まずは基本的な句のまとめから。&lt;/p&gt;
&lt;h1&gt;論理演算子の優先順位&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;NOT &gt; AND &gt; OR&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;　本当はもっと演算子の優先順位はあるけど、とりあえず引っかかったところだけ。ANDの方がORよりも早いです。&lt;/p&gt;
&lt;h1&gt;WHERE句&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;文字、日付は&#39;(シングルクォーテーション)で囲む&lt;/li&gt;&lt;li&gt;文字列の大文字小文字は区別される&lt;/li&gt;&lt;li&gt;日付データのデフォルト値はDD-MON-RR&lt;/li&gt;&lt;li&gt;WHERE句では列別名は使えない！&lt;ul&gt;&lt;li&gt;ただし、ORDER BY句では使用できる！&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f1&quot; title=&quot;これなんでなんだろう？　処理の順番とか優先順位的なものがあるのかな？&quot; name=&quot;fn1&quot;&gt;*1&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;　例。普通のSQL文です。。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20091106011618&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20091106/20091106011618.png&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;　id列をXYZと名前付けてこいつをWHERE句で使おうとすると…。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20091106011755&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20091106/20091106011755.png&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;　エラーになります。しかし、name列をXYZと名前付けてORDER BY句で使おうとすると…。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20091106011756&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20091106/20091106011756.png&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;　使えます！&lt;/p&gt;
&lt;h1&gt;BETWEEN &#39;○&#39; AND &#39;△&#39;&lt;/h1&gt;
&lt;p&gt;　○～△で合致するものを探す。こんなテーブルで…&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20091106010119&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20091106/20091106010119.png&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;　nameが1から9で合致するものを探す。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20091106010120&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20091106/20091106010120.png&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;　1から2で合致するもの。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20091106010121&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20091106/20091106010121.png&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f2&quot; title=&quot;何か、文字列でBETWEEN使ってるシーンをどこかで見た事ある気がするんだけど幻覚かなぁ。&quot; name=&quot;fn2&quot;&gt;*2&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h1&gt;name (NOT) IN(&#39;AA&#39;, &#39;BB&#39;)&lt;/h1&gt;
&lt;p&gt;　AA、BBいずれかに合致すれば取得します。下図の場合はname列の中からY&#39;s IかY&#39;s II&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f3&quot; title=&quot;以前使ったシングルクォーテーション重ねと代替引用符を使用しています。&quot; name=&quot;fn3&quot;&gt;*3&lt;/a&gt;&lt;/span&gt;に合致する値を探してくるので、&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20091116003449&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20091116/20091116003449.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;　こうなります。&lt;/p&gt;
&lt;p&gt;　一方、NOTは合致しないものを取得します。Y&#39;s IとY&#39;s II以外の値を取得します。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20091116003450&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20091116/20091116003450.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;name LIKE &#39;%AA%&#39;&lt;/h1&gt;
&lt;p&gt;　(任意の文字列)AA(任意の文字列)に合致するものを探します。他には_(アンダーバー)があります。&lt;/p&gt;
&lt;p&gt;　NAME = &#39;%AA%&#39;のように=で比較してしまうと完全なる%AA%この文字列と合致するものを探します。&lt;/p&gt;
&lt;h1&gt;name LIKE &#39;%A\_A%&#39; ESCAPE &#39;\&#39;&lt;/h1&gt;
&lt;p&gt;　(任意の文字列)A_A(任意の文字列)を探したい時にname LIKE &#39;%A_A%&#39;としてしまうと、_はワイルドカードと判断されてしまうのでエスケープ。&lt;/p&gt;
&lt;h1&gt;name &gt;= &#39;SQL&#39;&lt;/h1&gt;
&lt;p&gt;　指定文字よりも文字コードが前のものに合致(？)。SQLは満たすとして、○SQK、○SP、○S、×SQM、×SR、×Tとなります。&lt;/p&gt;
&lt;h1&gt;name IS (NOT) NULL&lt;/h1&gt;
&lt;p&gt;　name = NULLではUNKNOWNが返ってくるのでNULLは取得できません。また、値が設定されていないカラムはNULLとされるので、検索するにはIS NULLしかありません。=で比較してしまうと結果は不定となってしまうようです。&lt;/p&gt;
&lt;p&gt;　例。id1から5までのtimstaが値なし、つまりNULLとなっています。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20091116001633&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20091116/20091116001633.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;　timsta IS NULLでNULLの行を選択すると…。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20091116001634&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20091116/20091116001634.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;　逆に、timsta IS NOT NULLでは…。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20091116001636&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20091116/20091116001636.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;　では、timsta = NULLだと…。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20091116001635&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20091116/20091116001635.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;　なぜ=NULLがダメなのかは&lt;a href=&quot;http://www.geocities.jp/mickindex/database/idx_database.html&quot;&gt;リレーショナル・データベースの世界&lt;/a&gt;＞NULLにまつわる諸問題にとても詳しく書かれています。一回読んだだけじゃふーん…？　くらいにしかならなかったけど＞＜&lt;/p&gt;
&lt;h1&gt;ORDER BY&lt;/h1&gt;
&lt;p&gt;　SELECT文の最後に記述。ASC(昇順)、DESC(降順)でソート可能。デフォルトはASC。&lt;/p&gt;
&lt;p&gt;　ちなみに、1, 2, 3…とかa, b, c…が昇順のはず。昇順と降順が全然覚えられなかった僕です。が！&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://detail.chiebukuro.yahoo.co.jp/qa/question_detail/q1315415703&quot;&gt;昇順と降順が覚えられません。何か良い覚え方はありますか？ - Yahoo!知恵袋&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;　階段を1階、2階…と昇るように昇順！　これで忘れない！&lt;/p&gt;
&lt;h1&gt;ソート時のNULLの扱い&lt;/h1&gt;
&lt;p&gt;　NULLはどうやら∞と見なされるようなので、昇順では1, 2…∞となり最後。降順では∞…2, 1となり最初ということに。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20091116003451&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20091116/20091116003451.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;　一応 NULLS [ FIRST | LAST ] というものがあって指定は可能です。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20091116003452&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20091116/20091116003452.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;　みたいな感じで。こうすると昇順でもNULLは最初に来るようにできます。&lt;/p&gt;
&lt;div class=&quot;footnote&quot;&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn1&quot; name=&quot;f1&quot;&gt;*1&lt;/a&gt;: これなんでなんだろう？　処理の順番とか優先順位的なものがあるのかな？&lt;/p&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn2&quot; name=&quot;f2&quot;&gt;*2&lt;/a&gt;: 何か、文字列でBETWEEN使ってるシーンをどこかで見た事ある気がするんだけど幻覚かなぁ。&lt;/p&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn3&quot; name=&quot;f3&quot;&gt;*3&lt;/a&gt;: 以前使ったシングルクォーテーション重ねと代替引用符を使用しています。&lt;/p&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>Oracle Database 10g Express Editionの日本語版を導入します</title>
   <link href="http://gosyujin.github.io/2009/11/05/1257433826"/>
   <updated>2009-11-05T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2009/11/05/1257433826</id>
   <content type="html">&lt;p&gt;　実は、前回のこのOracleを選択するページにて&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20091101015331&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20091101/20091101015331.png&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;　上から二つ目のUniversal版を選択しておけば日本語版を導入できました；；　なんでこっち落とさなかったんだ。Multi-byte Unicode database for all language deploymentって書いてあるしっ！&lt;/p&gt;
&lt;h1&gt;インストール&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20091106000343&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20091106/20091106000343.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20091106000344&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20091106/20091106000344.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20091106000345&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20091106/20091106000345.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20091106000436&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20091106/20091106000436.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20091106000437&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20091106/20091106000437.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20091106000438&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20091106/20091106000438.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;アプリ&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20091106000639&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20091106/20091106000639.png&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;　完全に日本語ですどうもありがとうございました。さーいじってみようかなっ！&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Oracle Database 10g Express Editionを導入します</title>
   <link href="http://gosyujin.github.io/2009/11/01/1257053470"/>
   <updated>2009-11-01T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2009/11/01/1257053470</id>
   <content type="html">&lt;ul&gt;&lt;li&gt;Windows XP Home Edition SP3&lt;/li&gt;&lt;li&gt;Oracle Database 10g Express Edition&lt;/li&gt;&lt;li&gt;Firefox 3.5.4&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;　環境下でOracleスタートさせます。&lt;/p&gt;
&lt;h1&gt;Oracleを入手する&lt;/h1&gt;
&lt;p&gt;　何はなくともOracleを入手する所から。まず&lt;a href=&quot;http://www.oracle.com/index.html&quot;&gt;Oracle公式&lt;/a&gt;へ。Oracle Database ○○というリンクをクリック。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20091101015327&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20091101/20091101015327.png&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;　Express Editionリンクをクリック。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20091101015328&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20091101/20091101015328.png&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;　Download Oracle Database 10g Express Editionリンクをクリック。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20091101015329&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20091101/20091101015329.png&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;　プラットフォームを選択。今回はWindowsなので下で。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20091101015330&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20091101/20091101015330.png&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;　規約に同意してダウンロード。上から三つの違いはシングルバイトかマルチバイトかクライアントのみ…？&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20091101015331&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20091101/20091101015331.png&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;　Oracleのアカウントを持っていない場合このページに飛んでくる。sign up now.リンクをクリック。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20091101015332&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20091101/20091101015332.png&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;　お客様プロファイル(Oracle.com)を作成リンクをクリック。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20091101015333&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20091101/20091101015333.png&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;　メールアドレスとパスワードを記入し、名前や所属などの情報を記入していく。&lt;span style=&quot;font-weight:bold;&quot;&gt;このメールアドレスがそのままusernameになるので注意&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20091101015334&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20091101/20091101015334.png&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;　以上がダウンロードの手順。次にインストール。&lt;/p&gt;
&lt;h1&gt;インストールする&lt;/h1&gt;
&lt;p&gt;　基本的には次へ次へ。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20091101015335&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20091101/20091101015335.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20091101015336&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20091101/20091101015336.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20091101015337&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20091101/20091101015337.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;　ここでパスワード入力。&lt;span style=&quot;font-weight:bold;&quot;&gt;このパスワードを使用するユーザはSYS, SYSTEM！&lt;/span&gt;(これ読み飛ばしてて後で詰まった；)&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20091101015338&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20091101/20091101015338.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20091101015339&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20091101/20091101015339.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;実行まで持っていく&lt;/h1&gt;
&lt;p&gt;　実行まで持っていく。あと少し。FIGHT!　まずスタートアップにOracle Database 10g Express Edition &gt; Go To Database Home Pageというリンクがあるのでこれをクリック。もしくはブラウザを起動し&lt;a href=&quot;http://127.0.0.1:8080/apex/&quot;&gt;http://127.0.0.1:8080/apex/&lt;/a&gt;と入力&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20091101015340&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20091101/20091101015340.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;　ログイン画面が出るので、Usernameに&lt;span style=&quot;font-weight:bold;&quot;&gt;system&lt;/span&gt;、Passwordに&lt;span style=&quot;font-weight:bold;&quot;&gt;インストール時に入力したパスワード&lt;/span&gt;を入力。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20091101015341&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20091101/20091101015341.png&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;　ログインが成功するとこんな画面に。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20091101015342&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20091101/20091101015342.png&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;　まずは軽くテーブルを作成してみる。Object Browser &gt; Create &gt; Tableをクリック。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20091101015343&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20091101/20091101015343.png&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;　ここで、テーブル情報を入力。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20091101015344&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20091101/20091101015344.png&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;　以下三つは、Primary Key, Foreign Key, Constraintsの入力。今回はそのままNextで。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20091101015345&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20091101/20091101015345.png&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20091101015346&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20091101/20091101015346.png&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20091101015347&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20091101/20091101015347.png&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;　確認が出るので良ければCreate!　実際のSQL文も出る模様。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20091101015348&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20091101/20091101015348.png&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;　Object Browser &gt; Browse &gt; Tablesで確認。sampleテーブルができている！&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20091101015349&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20091101/20091101015349.png&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;　最後に、データを突っ込んで見てみる。SQL &gt; SQL Commands &gt; Enter Command&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20091101015350&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20091101/20091101015350.png&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;　INSERT中…。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20091101015351&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20091101/20091101015351.png&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;　SELECT中…。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20091101015352&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20091101/20091101015352.png&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;　以上！&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>文字リテラルで'を使用する場合</title>
   <link href="http://gosyujin.github.io/2009/10/31/1257000092"/>
   <updated>2009-10-31T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2009/10/31/1257000092</id>
   <content type="html">&lt;p&gt;　シングルクォーテーションがクセモノな&#39;&lt;span style=&quot;font-weight:bold;&quot;&gt;Y&#39;s II&lt;/span&gt;&#39; をきちんと挿入・表示させる。&lt;/p&gt;
&lt;h1&gt;シングルクォーテーションを重ねる&lt;/h1&gt;
&lt;pre class=&quot;&quot;&gt;insert into sample values(2, &#39;Y&#39;&#39;s II&#39;)&lt;/pre&gt;
&lt;p&gt;　まず基本。シングルクォーテーションを重ねればOK。&lt;/p&gt;
&lt;h1&gt;代替引用符を使用する&lt;/h1&gt;
&lt;p&gt;　もしくは、Oracle 10gからサポートされた代替引用符(q or Q)で、任意の文字を引用符として使用する。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;insert into sample values(3, q&#39;aY&#39;s IIa&#39;)
insert into sample values(3, q&#39;%Y&#39;s II%&#39;)&lt;/pre&gt;
&lt;p&gt;　上はaで挟がった中がリテラルになり、下は%で挟がった中がリテラルになる。ちなみに任意の文字と指定文字が重なってしまった場合でも、&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;insert into sample values(3, q&#39;sY&#39;s IIs&#39;)&lt;/pre&gt;
&lt;p&gt;　問題ない。頭とおしりできちんと見とるんかな。&lt;/p&gt;
&lt;h1&gt;091117追記&lt;/h1&gt;
&lt;p&gt;　どうやら、&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;insert into sample values(3, q&#39;[Y&#39;s II]&#39;)
insert into sample values(3, q&#39;(Y&#39;s II)&#39;)&lt;/pre&gt;
&lt;p&gt;　こういう表記も良いらしい。(というか、こっちが主流？)文字や記号だと同じもので挟まないといけないのに、かっこは開きと閉じで対応させる様子。また、&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;insert into sample values(3, q&#39;YY&#39;s IIY&#39;)&lt;/pre&gt;
&lt;p&gt;　これはダメだった。多分イースのイーの部分(Y&#39;)が終わりと見なされているから？　記号系では、&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;insert into sample values(3, q&#39;&amp;amp;Y&#39;s II&amp;amp;&#39;)&lt;/pre&gt;
&lt;p&gt;　アンパサンドにすると、置換を求められた。&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>PL/SQLとSQLの種類</title>
   <link href="http://gosyujin.github.io/2009/10/19/1255949562"/>
   <updated>2009-10-19T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2009/10/19/1255949562</id>
   <content type="html">&lt;p&gt;　OracleM@sterを目指すためにちょっとずつOracle（というかSQL）のエントリを増やしていく。超にわかなところから徐々にOracleM@sterをコーナーに追い詰めていこうと思います。&lt;/p&gt;
&lt;p&gt;　というわけで題名の件。&lt;/p&gt;
&lt;h1&gt;PL/SQL&lt;/h1&gt;
&lt;p&gt;　OracleのOracleによるOracleのための&lt;span style=&quot;font-weight:bold;&quot;&gt;プログラミング言語&lt;/span&gt;。SQLに変数宣言やif文、for文exceptionなどを記述可能にしたプログラミング言語なのでSQLに分類されない。&lt;/p&gt;
&lt;p&gt;　記述的にはこんな感じになる。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;DECLARE
	宣言
BEGIN
	IF (条件) THEN
		処理
	END IF
EXCEPTION
	WHEN 例外条件 THEN
		処理
END&lt;/pre&gt;
&lt;p&gt;　次にSQLの種類。&lt;/p&gt;
&lt;h1&gt;SQLの種類&lt;/h1&gt;
&lt;p&gt;　SQLの操作は大きく四つに分けられて、&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;データを&lt;span style=&quot;font-weight:bold;&quot;&gt;定義&lt;/span&gt;する言語: DDL(Data &lt;span style=&quot;font-weight:bold;&quot;&gt;Definition&lt;/span&gt; Language)&lt;/li&gt;&lt;li&gt;データを&lt;span style=&quot;font-weight:bold;&quot;&gt;操作&lt;/span&gt;する言語: DML(Data &lt;span style=&quot;font-weight:bold;&quot;&gt;Manipulation&lt;/span&gt; Language)&lt;/li&gt;&lt;li&gt;データを&lt;span style=&quot;font-weight:bold;&quot;&gt;制御&lt;/span&gt;する言語: DCL(Data &lt;span style=&quot;font-weight:bold;&quot;&gt;Control&lt;/span&gt; Language)&lt;/li&gt;&lt;li&gt;トランザクション制御&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;　となっている。全部読んで字のごとくなんだけど初見だと略称から意味が出てこない；　あと、若干略称からコマンドが出てこない事がある。コマンドは、&lt;/p&gt;
&lt;table&gt;&lt;tr&gt;&lt;th&gt;DDL&lt;/th&gt;&lt;td&gt;CREATE(作成)&lt;/td&gt;&lt;td&gt;ALTER(変更)&lt;/td&gt;&lt;td&gt;DROP(削除)&lt;/td&gt;&lt;td&gt;&lt;span style=&quot;font-weight:bold;&quot;&gt;TRUNCATE(切捨て)&lt;/span&gt;&lt;/td&gt;&lt;td&gt;　&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;DML&lt;/th&gt;&lt;td&gt;SELECT(問い合わせ)&lt;/td&gt;&lt;td&gt;INSERT(挿入)&lt;/td&gt;&lt;td&gt;UPDATE(更新)&lt;/td&gt;&lt;td&gt;DELETE(削除)&lt;/td&gt;&lt;td&gt;&lt;span style=&quot;font-weight:bold;&quot;&gt;MERGE(挿入更新)&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;DCL&lt;/th&gt;&lt;td&gt;&lt;span style=&quot;font-weight:bold;&quot;&gt;GRANT(権限付与)&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span style=&quot;font-weight:bold;&quot;&gt;REVOKE(権限削除)&lt;/span&gt;&lt;/td&gt;&lt;td&gt;　&lt;/td&gt;&lt;td&gt;　&lt;/td&gt;&lt;td&gt;　&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;トランザクション&lt;/th&gt;&lt;td&gt;COMMIT(コミット)&lt;/td&gt;&lt;td&gt;ROLLBACK(取り消し)&lt;/td&gt;&lt;td&gt;SAVEPOINT(RB位置指定)&lt;/td&gt;&lt;td&gt;　&lt;/td&gt;&lt;td&gt;　&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;　こんな感じ。&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Firefoxに入れるアドオンめも</title>
   <link href="http://gosyujin.github.io/2009/10/10/1255182752"/>
   <updated>2009-10-10T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2009/10/10/1255182752</id>
   <content type="html">&lt;p&gt;　久しぶりすぎて、はてなの使い方忘れてる。&lt;/p&gt;
&lt;p&gt;　さて、今回は久々なので自分がFirefoxに入れるアドオンを箇条書きしていきます。というか、今年の春に引越しして以来素のFirefoxを半年近く使い続けてたのが驚き。慣れって怖い。&lt;/p&gt;
&lt;dl&gt;&lt;dt&gt;FireGestures&lt;/dt&gt;&lt;dd&gt;マウスジェスチャ&lt;/dd&gt;&lt;dt&gt;IE Tab&lt;/dt&gt;&lt;dd&gt;IEの確認&lt;/dd&gt;&lt;dt&gt;Tab Mix Plus&lt;/dt&gt;&lt;dd&gt;タブ拡張&lt;/dd&gt;&lt;dt&gt;テキストリンク&lt;/dt&gt;&lt;dd&gt;URI文字列の読み込み&lt;/dd&gt;&lt;dt&gt;Hatena Bookmark&lt;/dt&gt;&lt;dd&gt;はてブのFirefox拡張&lt;/dd&gt;&lt;dt&gt;はてなスクリーンショット拡張&lt;/dt&gt;&lt;dd&gt;はてなフォトライフのFirefox拡張？&lt;/dd&gt;&lt;/dl&gt;
&lt;p&gt;　今のところこんなところ。……えーもっと使ってたはずなんだけど、全然思い出せないｗ&lt;/p&gt;
&lt;p&gt;　使ってたアドオンの設定ですら覚えてない。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;FireGestures&lt;/li&gt;&lt;li&gt;IE Tab&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;　この辺は入れとく。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Tab Mix Plus&lt;ul&gt;&lt;li&gt;イベント＞タブを閉じる＞最後のタブを閉じたとき、ウィンドウ自体は閉じないにチェック&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;　これも定番。上記の設定はctrl+F4でウィンドウが死んでしまわないように。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;テキストリンク&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;　テキストリンクは、aタグで囲まれてないURIの文字列をクリックで読み込めるというアドオン。URIをこぴぺする手間が省けます。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Hatena Bookmark&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;　復ッ活ッ！　はてなブックマーク復ッ活ッ！&lt;/p&gt;
&lt;p&gt;　これが多分これからしばらく生きていく上で一番重要なアドオンかとッ！　調べ物をしていて役に立ったサイトやブログをここでブックマークしておいて、困ったら見るッ！　何時ッ！　何時ッ！　何の調べ物であってもッッッ！&lt;/p&gt;
&lt;p&gt;　勉強した事をまとめておく場って言うものが社会人になった自分の中でまだ作れてなくて。&lt;/p&gt;
&lt;p&gt;　自宅なら自分の環境があるのでいいんですが、業務中の調べものが……。社外秘じゃないフッツーのJava/Swingで○○するにはどうするみたいな情報すらまとめておく場がないので。&lt;/p&gt;
&lt;p&gt;　4月から今日まで、勉強したこと全て右から左に流れていきました。多分この半年でそうとうバカになっているはず。&lt;/p&gt;
&lt;p&gt;　という事で、サイトやブログはメモる！（物理的に）　そして帰ってきてはてブに流し込む！　そうすればいつでも引き出せる。こう書いとけばやるっしょ。（北海道弁）&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;はてなスクリーンショット拡張&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;　なんか便利そうだったから衝動的に入れた。評価は未知数。スクリーンショット取る時に便利か――ってこれブラウザ上しか取れない？　Eclipseとかは……。&lt;/p&gt;
&lt;p&gt;　今回はこんな感じで。あーあとWeb Developerがあったか。&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>社会人になって三ヶ月がたちました</title>
   <link href="http://gosyujin.github.io/2009/07/01/1246377981"/>
   <updated>2009-07-01T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2009/07/01/1246377981</id>
   <content type="html">&lt;p&gt;　Twitterではやれアイマスがどうだロックマンがどうだとほぼ毎日ポストしてるけどこっちは放置しすぎ。&lt;/p&gt;
&lt;p&gt;　現在は、シンプルにjsp/サーブレットのみ使用のwebアプリケーションの作成をしています。webアプリ構築というより、どちらかというと開発プロセスに重きを置いて、様々なドキュメントや仕様書を書く毎日。ここ数日ようやくコーディングとあいなりました（´ω｀）&lt;/p&gt;
&lt;p&gt;　ここで、とりあえずエクセルとワードとパワーポイントの三重葬で泣きを見た僕が通りますよっと……。&lt;/p&gt;
&lt;p&gt;　プログラミングに関しては、使用可能武器にIDEがないという事でIDEを封印して初期装備で戦っています。とりあえず「いつ、なんどき、誰の挑戦でも受ける」ストロングスタイルの精神で開発環境が揃わない状況でも、「作って」って言われたらがんぶって作ることができるかを意識してやっています。&lt;/p&gt;
&lt;p&gt;　今までeclipseに任せていたことも自分でやらなくてはいけなくなったので、また少し深みに入り込んだ気分。さしあたって実はクラスパスとかの概念が全部eclipseに頼りっきりで全然理解していなかったのには泣いた。コンパイル通んないんだもんなぁー！&lt;/p&gt;
&lt;p&gt;　今勉強してることをまとめて、いつかメモ帳&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f1&quot; title=&quot;とJDKとTomcatとDB……。&quot; name=&quot;fn1&quot;&gt;*1&lt;/a&gt;&lt;/span&gt;でできる！　webアプリケーションまとめみたいなエントリを残してごきげんようさようならしたい。&lt;/p&gt;
&lt;div class=&quot;footnote&quot;&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn1&quot; name=&quot;f1&quot;&gt;*1&lt;/a&gt;: とJDKとTomcatとDB……。&lt;/p&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>社会人になって一ヶ月半がたちました</title>
   <link href="http://gosyujin.github.io/2009/05/22/1242925613"/>
   <updated>2009-05-22T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2009/05/22/1242925613</id>
   <content type="html">&lt;p&gt;　見出しどおり。色々感じたこともあるので、後日アウトプットしてみよう。&lt;/p&gt;
&lt;p&gt;　最近、全然Wicketも触ってないし、むしろJSP/サーブレットの復習をやっている感じです。そこで痛感したのが実は僕はIDEがないと超弱いということ。聖衣のない聖闘士みたいなものでした；&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f1&quot; title=&quot;龍星座とか聖衣ない方が強い人もいるけど；；&quot; name=&quot;fn1&quot;&gt;*1&lt;/a&gt;&lt;/span&gt;　かなりの部分でIDEに依存していたんだなぁ。。。&lt;/p&gt;
&lt;p&gt;　もっと本質を理解したい＞＜&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f2&quot; title=&quot;もっとおもろなりたい＞＜＠駿河学&quot; name=&quot;fn2&quot;&gt;*2&lt;/a&gt;&lt;/span&gt;　と、えらいうっすらとした向上心を持ちつつあります。そこで、自分の中でのプログラムに対するテンションを上げるために、いや、あげあげするためにjava-jaに参加しました。都合がついたらイベントにも行きたい＞＜　Wicket-jaにも継続して参加中デス。&lt;/p&gt;
&lt;div class=&quot;footnote&quot;&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn1&quot; name=&quot;f1&quot;&gt;*1&lt;/a&gt;: 龍星座とか聖衣ない方が強い人もいるけど；；&lt;/p&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn2&quot; name=&quot;f2&quot;&gt;*2&lt;/a&gt;: もっとおもろなりたい＞＜＠駿河学&lt;/p&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>MacbookからCDが取り出せなくなったときの対処法</title>
   <link href="http://gosyujin.github.io/2009/03/30/1238392970"/>
   <updated>2009-03-30T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2009/03/30/1238392970</id>
   <content type="html">&lt;p&gt;　Macbookが起動画面&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f1&quot; title=&quot;グレーの画面＝ジャーン♪　ってなる所&quot; name=&quot;fn1&quot;&gt;*1&lt;/a&gt;&lt;/span&gt;からウンともスンともいわなくなった！　起動ディスクがCDドライブに入っているんだけどそいつも取り出せなくなった！　強制排出ボタン的なものもない！&lt;/p&gt;
&lt;p&gt;　むりくり取り出す前に、色々調べてみると、起動時に色々なオプションをつけることができるのね＞Mac&lt;/p&gt;
&lt;dl&gt;&lt;dt&gt;起動時にマウスボタンを押しっぱなしにする&lt;/dt&gt;&lt;dd&gt;CDがイジェクトされる(らしい)&lt;/dd&gt;&lt;dt&gt;起動時にoptionキーを(ry&lt;/dt&gt;&lt;dd&gt;MacとかWindowsとか起動するボリュームを選択できる&lt;/dd&gt;&lt;dt&gt;起動時にcキー&lt;/dt&gt;&lt;dd&gt;CDから起動できる(らしい)&lt;/dd&gt;&lt;dt&gt;起動時にxキー&lt;/dt&gt;&lt;dd&gt;強制的にMac OS Xを起動できる(らしい)&lt;/dd&gt;&lt;dt&gt;起動時にshiftキー&lt;/dt&gt;&lt;dd&gt;セーブモードで起動できる(らしい)&lt;/dd&gt;&lt;/dl&gt;
&lt;p&gt;　他にもいっぱいあったけど、とりあえず試したのはこのくらい。(らしい)とついているのは今回初めて使用したコマンド。でも効果は上がらず……。&lt;/p&gt;
&lt;p&gt;　Mac OSは起動しないわ、ボリューム選択もできないわ、CD排出もできないわで、グレー画面を出したまま←(ここ重要)数分間途方にくれていたら、突然ウィ、ウィ、ウィーンとCDを排出しだした！　排出したらいつも通りMac OSが起動した！&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f2&quot; title=&quot;Macを起動させたまま放置してたら勝手に吐き出すのだろうか？&quot; name=&quot;fn2&quot;&gt;*2&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;　こんなん知らんわ！&lt;/p&gt;
&lt;div class=&quot;footnote&quot;&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn1&quot; name=&quot;f1&quot;&gt;*1&lt;/a&gt;: グレーの画面＝ジャーン♪　ってなる所&lt;/p&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn2&quot; name=&quot;f2&quot;&gt;*2&lt;/a&gt;: Macを起動させたまま放置してたら勝手に吐き出すのだろうか？&lt;/p&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>Eclipseで優先順位の低いパッケージを補完候補から除外してみた</title>
   <link href="http://gosyujin.github.io/2009/03/26/1238002057"/>
   <updated>2009-03-26T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2009/03/26/1238002057</id>
   <content type="html">&lt;p&gt;　&lt;a href=&quot;http://d.hatena.ne.jp/Yamashiro0217/&quot;&gt;id:Yamashiro0217&lt;/a&gt;さんのエントリ&lt;a href=&quot;http://d.hatena.ne.jp/Yamashiro0217/20090322/1237707686&quot;&gt;Eclipse のコード補完 (Complete) で java.awt.List とかを補完候補から除外したい場合の設定 - Yamashiro0217の日記&lt;/a&gt;を試した。……確かに、Eclipseの文にも&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;For example &#39;java.awt.*&#39; will hide all types from the awt packages.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;　って書かれてますね。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20090326020054&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20090326/20090326020054.png&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;　↑早速java.awt.*を足してみたら、確かにListがフィルタリングされて除外されてました。すごい！　あとLabelとかも。個人的には、WicketでWebアプリケーションを書いていくなら、java.awt.*の他にjavax.swing.*もフィルタリングすると良いと思います。&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;「ListViewでエラーが起こる＞＜」&lt;/p&gt;&lt;p&gt;「ListView listView = new ListView(&quot;list&quot;, list) {...。別に間違ってないと思うけど、何ていうエラーが出てるの？」&lt;/p&gt;&lt;p&gt;「コンストラクタにこんな引数はない……かな」&lt;/p&gt;&lt;p&gt;「？？」&lt;/p&gt;&lt;p&gt;.&lt;/p&gt;&lt;p&gt;.&lt;/p&gt;&lt;p&gt;.&lt;/p&gt;&lt;p&gt;「あーこれWicketのListViewじゃなくてSwingのListViewをインポートしてますね！」&lt;/p&gt;&lt;p&gt;ちゃんちゃん&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;　こんな事を自分も何回かやりましたが、周りでも僕の知る限り何人&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f1&quot; title=&quot;初めのうちはですけど、初めのうちだからこそ無意識にひっかかるというか。&quot; name=&quot;fn1&quot;&gt;*1&lt;/a&gt;&lt;/span&gt;かやっていたので。&lt;/p&gt;
&lt;p&gt;　フィルタリングを追加するだけでもかなり教育コストや開発時間を削減できると思うんですよね。&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f2&quot; title=&quot;あんまりフィルタしすぎるのも考えものですが；&quot; name=&quot;fn2&quot;&gt;*2&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;footnote&quot;&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn1&quot; name=&quot;f1&quot;&gt;*1&lt;/a&gt;: 初めのうちはですけど、初めのうちだからこそ無意識にひっかかるというか。&lt;/p&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn2&quot; name=&quot;f2&quot;&gt;*2&lt;/a&gt;: あんまりフィルタしすぎるのも考えものですが；&lt;/p&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>チェックボックスの(中略)続き</title>
   <link href="http://gosyujin.github.io/2009/03/17/1237297925"/>
   <updated>2009-03-17T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2009/03/17/1237297925</id>
   <content type="html">&lt;p&gt;　もういいかと思うけど、CheckGroupの初期値についてさらに続き。&lt;/p&gt;
&lt;p&gt;　自分より遥か前に打開している方の記事を見つけました。&lt;a href=&quot;http://d.hatena.ne.jp/yuripop/20090105&quot;&gt;http://d.hatena.ne.jp/yuripop/20090105&lt;/a&gt;の小さい発見 - CheckGroupの初期値。自分はモバイルではないのですが、モバイルもPCもやっている事は同じだと思います。&lt;/p&gt;
&lt;p&gt;　どうやって初期値を認識させたものかかなり躓いたところだったので、もう少し早く見つけていれば……。でも、CheckGroupとかDropDownChoiceの初期値って結構「？？」ってなる場所なのかも。&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f1&quot; title=&quot;TextField系には突っ込めば行けるけどCheckGroup……って所まで同じだったので；&quot; name=&quot;fn1&quot;&gt;*1&lt;/a&gt;&lt;/span&gt;矢野さんの本ではフォローされているのかな？　確認してみようっと。&lt;/p&gt;
&lt;div class=&quot;footnote&quot;&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn1&quot; name=&quot;f1&quot;&gt;*1&lt;/a&gt;: TextField系には突っ込めば行けるけどCheckGroup……って所まで同じだったので；&lt;/p&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>Wicketでn行m列で折り返すリストを作る</title>
   <link href="http://gosyujin.github.io/2009/03/16/1237134252"/>
   <updated>2009-03-16T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2009/03/16/1237134252</id>
   <content type="html">&lt;p&gt;　Wicket本が未だに入荷しないので一つ書く。Wicket奮闘記第二弾。困り度的には、最悪1列表示で妥協すれば良かったのでそんなに高くない。&lt;/p&gt;
&lt;p&gt;　ただのリストじゃなくて、要素が何個か横に続き、n個で折り返す……というサンプル。イメージとしては、mixiのマイミクとかマイコミュニティみたいな感じかなぁ。相変わらずバージョンは1.3なのです。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20090316004745&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20090316/20090316004745.png&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;　こんな感じ。横に2つで折り返し。&lt;/p&gt;
&lt;p&gt;　どういう風に実現するかすごい困ったけれど、調べてみるとGridViewというコンポーネントがあったのでこれは使えそうだと。以下Javaソース。&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;//	テーブルのcolspanに設定する数
	private int column;
	private List&amp;lt;SampleObjectModelBean&amp;gt; selected;
	
	public SampleGridView() {
//		行の設定
		column = 2;
//		DBから何らかのリスト一覧を持ってきたという体で
		final List&amp;lt;SampleObjectModelBean&amp;gt; list = GenerateBeanUtility.GenerateSampleObjectModelBean();
//		自分が取得している項目という体で
		selected = new ArrayList&amp;lt;SampleObjectModelBean&amp;gt;();
		selected.add(list.get(2));
		selected.add(list.get(5));
		
//		DataProvider 規則的に回すもの
		IDataProvider dataProvider = new IDataProvider() {
			private static final long serialVersionUID = -9120134891423038532L;
			public Iterator&amp;lt;SampleObjectModelBean&amp;gt; iterator(int first, int count) {
				return list.iterator();
			}
			public int size() {
				return list.size();
			}
			public IModel model(Object object) {
				return new Model((Serializable)object);
			}
			public void detach() {
			}
		};
		
		final Form form = new Form(&amp;quot;form&amp;quot;);
		this.add(form);

		final CheckGroup checkGroup = new CheckGroup(&amp;quot;checkGroup&amp;quot;, new PropertyModel(this, &amp;quot;selected&amp;quot;));
		form.add(checkGroup);

		final WebMarkupContainer colspanWMC = new WebMarkupContainer(&amp;quot;colspanWMC&amp;quot;);
//		テーブルのcolspan属性を動的にしてやる
		colspanWMC.add(new SimpleAttributeModifier(&amp;quot;colspan&amp;quot;, String.valueOf(column)));
		checkGroup.add(colspanWMC);

		final GridView gridView = new GridView(&amp;quot;rows&amp;quot;, dataProvider) {
			private static final long serialVersionUID = 3658408852637870671L;
//			ListViewと同様のpopulateItem
			@Override
			protected void populateItem(Item item) {
				SampleObjectModelBean bean = (SampleObjectModelBean)item.getModelObject();
				item.add(new Check(&amp;quot;check&amp;quot;, item.getModel()));
				item.add(new Label(&amp;quot;value&amp;quot;, bean.getName()));
			}
//			空だった場合
			@Override
			protected void populateEmptyItem(Item item) {
				item.add(new Check(&amp;quot;check&amp;quot;).setVisible(false));
				item.add(new Label(&amp;quot;value&amp;quot;, &amp;quot;Empty&amp;quot;));
			}
		};
//		カラムの数をセット
		gridView.setColumns(column);
		checkGroup.add(gridView);

		final WebMarkupContainer listWMC = new WebMarkupContainer(&amp;quot;listWMC&amp;quot;);
		listWMC.setOutputMarkupId(true);
		this.add(listWMC);

//		選択したものを表示
		ListView listView = new ListView(&amp;quot;resultList&amp;quot;, selected) {
			private static final long serialVersionUID = 2797947925339607450L;
			@Override
			protected void populateItem(ListItem listItem) {
				SampleObjectModelBean bean = (SampleObjectModelBean)listItem.getModelObject();
				listItem.add(new Label(&amp;quot;name&amp;quot;, bean.getName()));
				listItem.add(new Label(&amp;quot;outline&amp;quot;, bean.getOutline()));
			}
		};
		listWMC.add(listView);

//		選択決定ボタン
		AjaxButton button = new AjaxButton(&amp;quot;button&amp;quot;) {
			private static final long serialVersionUID = 7635585733674755967L;
			@Override
			protected void onSubmit(AjaxRequestTarget target, Form form) {
				target.addComponent(listWMC);
			}
		};
		form.add(button);
		
//		列を増やしてみる
		AjaxLink incLink = new AjaxLink(&amp;quot;incLink&amp;quot;) {
			private static final long serialVersionUID = 7734634038402851693L;
			@Override
			public void onClick(AjaxRequestTarget target) {
				if (column &amp;lt; list.size()) {
					column++;
				}
				colspanWMC.add(new SimpleAttributeModifier(&amp;quot;colspan&amp;quot;, String.valueOf(column)));
				gridView.setColumns(column);
				target.addComponent(form);
			}
		};
		this.add(incLink);
		
//		列を減らしてみる
		AjaxLink decLink = new AjaxLink(&amp;quot;decLink&amp;quot;) {
			private static final long serialVersionUID = -3611671121498659140L;
			@Override
			public void onClick(AjaxRequestTarget target) {
				if (column &amp;gt; 1) {
					column--;
				}
				colspanWMC.add(new SimpleAttributeModifier(&amp;quot;colspan&amp;quot;, String.valueOf(column)));
				gridView.setColumns(column);
				target.addComponent(form);
			}
		};
		this.add(decLink);
	}
	
	public List&amp;lt;SampleObjectModelBean&amp;gt; getSelected() {
		return selected;
	}
	public void setSelected(List&amp;lt;SampleObjectModelBean&amp;gt; selected) {
		this.selected = selected;
	}&lt;/pre&gt;
&lt;p&gt;　で、html。&lt;/p&gt;
&lt;pre class=&quot;html&quot;&gt;	&amp;lt;h1&amp;gt;GridViewを用いてテーブルをn列で折り返した選択フォーム(例:mixiのコミュニティ一覧みたいな)&amp;lt;/h1&amp;gt;
	&amp;lt;form wicket:id=&amp;quot;form&amp;quot;&amp;gt;
		&amp;lt;input type=&amp;quot;submit&amp;quot; wicket:id=&amp;quot;button&amp;quot; /&amp;gt;
		&amp;lt;table cellspacing=&amp;quot;0&amp;quot; cellpadding=&amp;quot;2&amp;quot; border=&amp;quot;1&amp;quot;&amp;gt;
			&amp;lt;span wicket:id=&amp;quot;checkGroup&amp;quot;&amp;gt;
				&amp;lt;tr&amp;gt;
					&amp;lt;th wicket:id=&amp;quot;colspanWMC&amp;quot;&amp;gt;なんとか一覧&amp;lt;/th&amp;gt;
				&amp;lt;/tr&amp;gt;
				&amp;lt;tr wicket:id=&amp;quot;rows&amp;quot;&amp;gt;
					&amp;lt;td wicket:id=&amp;quot;cols&amp;quot;&amp;gt;
						&amp;lt;input type=&amp;quot;checkbox&amp;quot; wicket:id=&amp;quot;check&amp;quot; /&amp;gt;
						&amp;lt;span wicket:id=&amp;quot;value&amp;quot; /&amp;gt;
					&amp;lt;/td&amp;gt;
				&amp;lt;/tr&amp;gt;
			&amp;lt;/span&amp;gt;
		&amp;lt;/table&amp;gt;
	&amp;lt;/form&amp;gt;
	&amp;lt;h1&amp;gt;(おまけ)列を動的に変えてみる&amp;lt;/h1&amp;gt;
	&amp;lt;ul&amp;gt;
		&amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;#&amp;quot; wicket:id=&amp;quot;decLink&amp;quot;&amp;gt;列減らす&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
		&amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;#&amp;quot; wicket:id=&amp;quot;incLink&amp;quot;&amp;gt;列増やす&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
	&amp;lt;/ul&amp;gt;
	&amp;lt;h1&amp;gt;選択したもの&amp;lt;/h1&amp;gt;
	&amp;lt;span wicket:id=&amp;quot;listWMC&amp;quot;&amp;gt;
		&amp;lt;dl wicket:id=&amp;quot;resultList&amp;quot;&amp;gt;
			&amp;lt;dt wicket:id=&amp;quot;name&amp;quot;&amp;gt;&amp;lt;/dt&amp;gt;
			&amp;lt;dd class=&amp;quot;recital&amp;quot; wicket:id=&amp;quot;outline&amp;quot;&amp;gt;&amp;lt;/dd&amp;gt;
		&amp;lt;/dl&amp;gt;
	&amp;lt;/span&amp;gt;&lt;/pre&gt;
&lt;p&gt;　列を変えるボタンのソースとかはおいといて……、とりあえず&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20090316004745&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20090316/20090316004745.png&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;　の画面は実現できます。普通のListViewでコレクションを表示していくのと違う点は、&lt;/p&gt;
&lt;ol&gt;&lt;ol&gt;&lt;li&gt;ListViewがGridView&lt;/li&gt;&lt;li&gt;--表示するオブジェクトがModel(かList)ではなく、DataProvider&lt;/li&gt;&lt;li&gt;--populateEmptyItemの処理&lt;/li&gt;&lt;li&gt;--カラム数をセット&lt;/li&gt;&lt;li&gt;wicket:idでちょこっと&lt;/li&gt;&lt;/ol&gt;&lt;/ol&gt;
&lt;p&gt;　このくらいです。&lt;/p&gt;
&lt;p&gt;　まず、ListViewがGridView。これはそういうコンポーネントがあるのかぁ的な感じでゴリゴリ変えていきます。&lt;/p&gt;
&lt;p&gt;　次に、GridViewに変えた事で引数にModelとかListが使えなくなりました……。代わりにDataProviderというものを突っ込んでやらないといけないらしい……。DataProviderはこんな感じ。listはDBから取得してきたという体で生成した選択項目全部のリストです。&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;		IDataProvider dataProvider = new IDataProvider() {
			private static final long serialVersionUID = -9120134891423038532L;
			public Iterator&amp;lt;SampleObjectModelBean&amp;gt; iterator(int first, int count) {
				return list.iterator();
			}
			public int size() {
				return list.size();
			}
			public IModel model(Object object) {
				return new Model((Serializable)object);
			}
			public void detach() {
			}
		};&lt;/pre&gt;
&lt;p&gt;　とりあえずこんな感じで動きました。iteratorメソッドには引数が二つあったりするんですが、次回は使います。今回は使わなくても動いた……。&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f1&quot; title=&quot;不都合が起こるパターンもあるのだろうか？&quot; name=&quot;fn1&quot;&gt;*1&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;　これで、回すのに必要なものは揃ったので、populateItemをオーバライドしますが、populateItemとは別にpopulateEmptyItemというメソッドもオーバライドしないといけません。理由は後述。&lt;/p&gt;
&lt;p&gt;　次にテーブルを何列で折り返したいかをsetColumnsメソッドで指定します。今回は頭の方で2に設定しているので、n行2列のテーブルに出来るはずです。しかし、列を指定した事でテーブルに空白が出来る可能性が起こってしまいます。2列のテーブルなら、リストが奇数の場合最後の行が1列しか埋まりません；&lt;/p&gt;
&lt;p&gt;　ここでpopulateEmptyItemの出番です。テーブルがまだ全部埋まっていないのに要素が終わってしまった場合、これが呼ばれます。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20090316004745&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20090316/20090316004745.png&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;　Emptyと表示しているところがpopulateEmptyItemが呼ばれている箇所です。めでたしめでたし。&lt;/p&gt;
&lt;p&gt;　最後にwicket:id。&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;		final GridView gridView = new GridView(&amp;quot;rows&amp;quot;, dataProvider) {
			private static final long serialVersionUID = 3658408852637870671L;
//			ListViewと同様のpopulateItem
			@Override
			protected void populateItem(Item item) {
				SampleObjectModelBean bean = (SampleObjectModelBean)item.getModelObject();
				item.add(new Check(&amp;quot;check&amp;quot;, item.getModel()));
				item.add(new Label(&amp;quot;value&amp;quot;, bean.getName()));
			以下略&lt;/pre&gt;
&lt;p&gt;　JavaでWicket:idを生成しているのは、&lt;/p&gt;
&lt;ol&gt;&lt;ul&gt;&lt;li&gt;GridViewのrows&lt;ul&gt;&lt;li&gt;-populateItem内のCheckのcheck&lt;/li&gt;&lt;li&gt;-populateItem内のLabelのvalue&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ol&gt;
&lt;p&gt;　の三つなんですが、この三つをListView的な感じでバインドしていっても、&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;WicketMessage: Unable to find component with id &#39;check&#39; in [MarkupContainer [Component id = 1, page = sampleWicket.view.gridView.SampleGridView, path = 2:form:checkGroup:rows:1.Item, isVisible = true, isVersioned = false]]. This means that you declared wicket:id=check in your markup, but that you either did not add the component to your page at all, or that the hierarchy does not match.&lt;/pre&gt;
&lt;p&gt;　checkがない！　と怒られてしまいます。&lt;/p&gt;
&lt;p&gt;　なんで＞＜　と調べてみると、どうも、&lt;/p&gt;
&lt;pre class=&quot;html&quot;&gt;				&amp;lt;tr wicket:id=&amp;quot;rows&amp;quot;&amp;gt;
					&amp;lt;td wicket:id=&amp;quot;cols&amp;quot;&amp;gt;
						&amp;lt;input type=&amp;quot;checkbox&amp;quot; wicket:id=&amp;quot;check&amp;quot; /&amp;gt;
						&amp;lt;span wicket:id=&amp;quot;value&amp;quot; /&amp;gt;
					&amp;lt;/td&amp;gt;
				&amp;lt;/tr&amp;gt;&lt;/pre&gt;
&lt;p&gt;　rows(=GridView)の下にcolsというidを振らないといけないらしい。GridViewクラスの中にも&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;		Item rowItem = newRowItem(newChildId(), row);
		RepeatingView rowView = new RepeatingView(&amp;quot;cols&amp;quot;);
		rowItem.add(rowView);
		add(rowItem);&lt;/pre&gt;
&lt;p&gt;　こんな記述があって、どうもcolsを振っているらしい！　振れば動く！&lt;/p&gt;
&lt;p&gt;　最後はらしいらしいが続いてますが、一応これでmixiのマイピクみたいなテーブルも作れそうです。&lt;/p&gt;
&lt;p&gt;　この記事を書くに当たって、&lt;a href=&quot;http://hamachan.info/excel/gyoretu.html&quot;&gt;行と列の覚え方&lt;/a&gt;で行と列のわかりやすい覚え方を知りました。&lt;/p&gt;
&lt;p&gt;　行と列わからないんです＞＜　でもこれで忘れない！&lt;/p&gt;
&lt;div class=&quot;footnote&quot;&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn1&quot; name=&quot;f1&quot;&gt;*1&lt;/a&gt;: 不都合が起こるパターンもあるのだろうか？&lt;/p&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>CheckBoxMultipleChoiceとChoiceRendererを使用したチェックボックスの比較</title>
   <link href="http://gosyujin.github.io/2009/03/12/1236788607"/>
   <updated>2009-03-12T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2009/03/12/1236788607</id>
   <content type="html">&lt;p&gt;　早速あげあげ。基本はいただいたコメントのソースのまま、項目のBeanなんかは自分が作っていたもの＋Wicket1.3仕様にあわせて……。&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;	private List&amp;lt;SampleObjectModelBean&amp;gt; selected;
	public SampleChoiceRenderer() {
//		自分が取得している項目
		selected = new ArrayList&amp;lt;SampleObjectModelBean&amp;gt;();
		selected.add(GenerateBeanUtility.GenerateSampleObjectModelBean(2));
		selected.add(GenerateBeanUtility.GenerateSampleObjectModelBean(5));
		
		Form form = new Form(&amp;quot;form&amp;quot;);
		add(form);
		
//		選択項目全て
		final List&amp;lt;SampleObjectModelBean&amp;gt; all = GenerateBeanUtility.GenerateSampleObjectModelBean();
//		チェックボックス
		final CheckBoxMultipleChoice multiChoice = 
			new CheckBoxMultipleChoice(&amp;quot;list&amp;quot;, 
						new PropertyModel(this, &amp;quot;selected&amp;quot;), 
						all, 
						new ChoiceRenderer(&amp;quot;name&amp;quot;, &amp;quot;outline&amp;quot;));
//		表示用ラベル
		final Label label = new Label(&amp;quot;label&amp;quot;, &amp;quot;最初&amp;quot;);
		
		form.add(multiChoice);
		form.add(new Button(&amp;quot;next&amp;quot;) {
			private static final long serialVersionUID = -1359417135623629179L;
//		選択したものを連結してLabelにセット
			@Override
			public void onSubmit() {
				List&amp;lt;SampleObjectModelBean&amp;gt; list = 
					(List&amp;lt;SampleObjectModelBean&amp;gt;)multiChoice.getModelObject();
				String value = &amp;quot;&amp;quot;;
				for (SampleObjectModelBean bean : list) {
					value += bean.getOutline() + &amp;quot;, &amp;quot;;
				}
				label.setModelObject(value);
			}
		});
		this.add(label);
    }&lt;/pre&gt;
&lt;p&gt;　こんな感じにさせてもらいました。ちょっと前回のCheckGroupとCheckのゴリ押しより長く見えるけど、チェック以外のコンポーネントも入っているからで、肝は、&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;//		チェックボックス
		final CheckBoxMultipleChoice multiChoice = 
			new CheckBoxMultipleChoice(&amp;quot;list&amp;quot;, 
						new PropertyModel(this, &amp;quot;selected&amp;quot;), 
						all, 
						new ChoiceRenderer(&amp;quot;name&amp;quot;, &amp;quot;outline&amp;quot;));&lt;/pre&gt;
&lt;p&gt;　ここだけ。あと、&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;		selected.add(GenerateBeanUtility.GenerateSampleObjectModelBean(2));
		selected.add(GenerateBeanUtility.GenerateSampleObjectModelBean(5));&lt;/pre&gt;
&lt;p&gt;　ここで、みかんとなしをユーザが取得しているものにaddしています。そして、&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;		final List&amp;lt;SampleObjectModelBean&amp;gt; all = GenerateBeanUtility.GenerateSampleObjectModelBean();&lt;/pre&gt;
&lt;p&gt;　こっちで項目全てを取得しています。で、htmlはこう。&lt;/p&gt;
&lt;pre class=&quot;html&quot;&gt;	&amp;lt;h1&amp;gt;ChoiceRendererを使用したチェックボックス&amp;lt;/h1&amp;gt;
	&amp;lt;p&amp;gt;by id:hayasshさん&amp;lt;/p&amp;gt;
	&amp;lt;form wicket:id=&amp;quot;form&amp;quot;&amp;gt;
		&amp;lt;input type=&amp;quot;submit&amp;quot; wicket:id=&amp;quot;next&amp;quot; /&amp;gt;
		&amp;lt;table cellspacing=&amp;quot;0&amp;quot; cellpadding=&amp;quot;2&amp;quot; border=&amp;quot;1&amp;quot;&amp;gt;
			&amp;lt;tr&amp;gt;
				&amp;lt;th&amp;gt;なんとか一覧&amp;lt;/th&amp;gt;
			&amp;lt;/tr&amp;gt;
			&amp;lt;tr&amp;gt;
				&amp;lt;td&amp;gt;&amp;lt;span wicket:id=&amp;quot;list&amp;quot; /&amp;gt;&amp;lt;/td&amp;gt;
			&amp;lt;/tr&amp;gt;
		&amp;lt;/table&amp;gt;
	&amp;lt;/form&amp;gt;
	&amp;lt;p wicket:id=&amp;quot;label&amp;quot; /&amp;gt;&lt;/pre&gt;
&lt;p&gt;　すると、何とチェックが！　→&lt;a href=&quot;http://samplewicket.kkataka.staxapps.net/?wicket:bookmarkablePage=:sampleWicket.view.choiceRenderer.SampleChoiceRenderer&quot;&gt;http://samplewicket.kkataka.staxapps.net/?wicket:bookmarkablePage=:sampleWicket.view.choiceRenderer.SampleChoiceRenderer&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;　ソースコードも減るし、いい事ずくめでしたとさ。わーい。&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>チェックボックスの初期値の続き</title>
   <link href="http://gosyujin.github.io/2009/03/11/1236776769"/>
   <updated>2009-03-11T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2009/03/11/1236776769</id>
   <content type="html">&lt;p&gt;　&lt;a href=&quot;2009-03-09-1236590120&quot;&gt;2009-03-09-1236590120&lt;/a&gt;の続き。&lt;/p&gt;
&lt;p&gt;　&lt;a href=&quot;http://d.hatena.ne.jp/hayassh/&quot;&gt;id:hayassh&lt;/a&gt;さんからCheckBoxMultipleChoiceを使用してみては？　というご指摘があったので使ってみたところ、これは超便利でした。しかも、Labelタグのfor属性もつけてくれるという……。&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f1&quot; title=&quot;CheckGroupとCheckではそこまでできるのかな？&quot; name=&quot;fn1&quot;&gt;*1&lt;/a&gt;&lt;/span&gt;力技でかわしてた自分の強引さに乾杯。hayasshさんありがとうございました。&lt;/p&gt;
&lt;p&gt;　あと、書き忘れていたのですが、自分が使っているWicketのバージョンは1.3です。なのでソースにジェネリクスがなかったり、他諸々1.4とは相違点があります。1.4は矢野さんの本を買ってから勉強しようっと。&lt;/p&gt;
&lt;div class=&quot;footnote&quot;&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn1&quot; name=&quot;f1&quot;&gt;*1&lt;/a&gt;: CheckGroupとCheckではそこまでできるのかな？&lt;/p&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>自作のWicketサンプルを上げてみる</title>
   <link href="http://gosyujin.github.io/2009/03/11/1236706056"/>
   <updated>2009-03-11T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2009/03/11/1236706056</id>
   <content type="html">&lt;p&gt;　ようそこsampleWicket→&lt;a href=&quot;http://samplewicket.kkataka.staxapps.net/&quot;&gt;http://samplewicket.kkataka.staxapps.net/&lt;/a&gt;&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f1&quot; title=&quot;サイドメニュー＞プロフィール＞自作Wicketサンプルからも行けます。&quot; name=&quot;fn1&quot;&gt;*1&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;　色々使ってみたいコンポーネントを使って動かしてみたサンプルです。CheckGroup, RadioGroup, ListViewの入れ子, GridView, PagingNavigatorなどなど……。&lt;/p&gt;
&lt;p&gt;　必要になったんだけど、これってどうやって実現するんだろう？　と思ったものを形にしてみました。&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f2&quot; title=&quot;例: mixiのマイミクとかマイコミュニティ表示のようなn行m列のリストとか。&quot; name=&quot;fn2&quot;&gt;*2&lt;/a&gt;&lt;/span&gt;特に入力チェックもしていないので、空欄でも余裕で通ったりします。&lt;/p&gt;
&lt;p&gt;　まず上げてみただけなので、今はソースは見れません……。&lt;/p&gt;
&lt;p&gt;　あ、Developmentモードで上げてしまった；；&lt;/p&gt;
&lt;div class=&quot;footnote&quot;&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn1&quot; name=&quot;f1&quot;&gt;*1&lt;/a&gt;: サイドメニュー＞プロフィール＞自作Wicketサンプルからも行けます。&lt;/p&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn2&quot; name=&quot;f2&quot;&gt;*2&lt;/a&gt;: 例: mixiのマイミクとかマイコミュニティ表示のようなn行m列のリストとか。&lt;/p&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>チェックボックスに初期値（デフォルトでチェック）を入れる方法</title>
   <link href="http://gosyujin.github.io/2009/03/09/1236590120"/>
   <updated>2009-03-09T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2009/03/09/1236590120</id>
   <content type="html">&lt;p&gt;　Wicket奮闘記第一弾。とりあえず、Wicket開発で一番困った所、CheckGroupとCheckコンポーネントを使用したチェックボックスに初期値＝チェックを入れておく処理です。&lt;/p&gt;
&lt;p&gt;　何かユーザ情報を登録するフォームがあってー、入れましたー、編集ボタンを押して編集画面に行きましたー、すると、&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20090309171545&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20090309/20090309171545.png&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;　最初からこう、チェックが入っていてほしいという状況です。&lt;/p&gt;
&lt;p&gt;　テキストのフォーム(TextField)なら、第二引数にDBから引っ張ってきたものを突っ込んでやればこんな感じで表示できるのですが、&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20090309162050&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20090309/20090309162050.png&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;　チェックボックスはもう少しやらなきゃいけないことがあるみたい……。&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;//第二引数がユーザが持っている値
CheckGroup checkGroup = new CheckGroup(&amp;quot;checkGroup&amp;quot;, /*ユーザが持っているもののリスト*/);
//第二引数が選択項目の値
ListView listView = new ListView(&amp;quot;list&amp;quot;, /*選択肢のリスト*/) {
	private static final long serialVersionUID = 2972646917485688487L;
	@Override
	protected void populateItem(ListItem listItem) {
		listItem.add(new Check(&amp;quot;check&amp;quot;, listItem.getModel()));
    		listItem.add(new Label(&amp;quot;value&amp;quot;, listItem.getModelObjectAsString()));
	}
};&lt;/pre&gt;
&lt;p&gt;　Javaはこう。で、htmlはこうしてみました。&lt;/p&gt;
&lt;pre class=&quot;html&quot;&gt;&amp;lt;table&amp;gt;
	&amp;lt;span wicket:id=&amp;quot;checkGroup&amp;quot;&amp;gt;
		&amp;lt;tr&amp;gt;
			&amp;lt;th&amp;gt;なんとか一覧&amp;lt;/th&amp;gt;
		&amp;lt;/tr&amp;gt;
		&amp;lt;tr wicket:id=&amp;quot;list&amp;quot;&amp;gt;
			&amp;lt;td&amp;gt;
				&amp;lt;input type=&amp;quot;checkbox&amp;quot; wicket:id=&amp;quot;check&amp;quot; /&amp;gt;
				&amp;lt;span wicket:id=&amp;quot;value&amp;quot; /&amp;gt;
			&amp;lt;/td&amp;gt;
		&amp;lt;/tr&amp;gt;
	&amp;lt;/span&amp;gt;
&amp;lt;/table&amp;gt;&lt;/pre&gt;
&lt;p&gt;　これらから生成されるページはこうなります。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://f.hatena.ne.jp/kk_Ataka/20090309171545&quot;&gt;&lt;img src=&quot;http://f.hatena.ne.jp/images/fotolife/k/kk_Ataka/20090309/20090309171545.png&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;　このように、チェックボックスにデフォルトでチェックを入れる方法がわからなかったので、色々試してみました。まず、CheckGroupの第二引数にはユーザが選択した値が入ります。上の図で言うと、りんご・もも・すいか・めろん・つくねがユーザが選択しているものです。チェックが入っているから。&lt;/p&gt;
&lt;p&gt;　次に、ListViewの第二引数には、選択項目の一覧が入ります。りんご・みかん・もも・すいか・なし・めろん・かき・ぐれーぷふるーつ・つくねがpopulateItemのCheckコンポーネントに一つずつbindされます。&lt;/p&gt;
&lt;p&gt;　どうも、このCheckコンポーネントがbindされる時に、&quot;CheckGroupの第二引数のリストとequalsをとっている&quot;ようです。equalsならチェックと。&lt;/p&gt;
&lt;p&gt;　populateItem内では、まずりんごbindする時に、ユーザが持っている{りんご・もも・すいか・めろん・つくね}と比較します。ユーザはりんごを持っているのでチェック。次にみかんを{りんご・もも・すいか・めろん・つくね}と比較します。みかんは持っていないのでチェックは入らない……という事を繰り返します。&lt;/p&gt;
&lt;p&gt;　なので、CheckGroupに入っているリストのオブジェクトと、Checkでbindするオブジェクトは同じでなければチェックは入らないと思います。最初、DBから選択項目をとってきーの、次にユーザが持っているものをとってきーのして比較したら当然チェックが入らず。仕方ないので、選択項目をまるっととってきて、ユーザが選択した項目はそこからコピーしてequalsが成立するようにしました……。&lt;/p&gt;
&lt;p&gt;　とりあえず、チェックが入るようにはなったけど、絶対もっといい方法があると思うなぁ。暫定的な解決方法という事で。&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>追記</title>
   <link href="http://gosyujin.github.io/2009/03/05/1236590811"/>
   <updated>2009-03-05T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2009/03/05/1236590811</id>
   <content type="html">&lt;p&gt;　行ってきました。羽田に着陸した瞬間に雨どしゃ降りだったり、時間つぶしで入った喫茶店が半端じゃなく寒かったり、会場一番乗りした特典として設営のお手伝いをさせて頂いたり、二次会で朝6時までお話させて頂いたり、とても有意義な時間を過ごさせて頂きました。&lt;/p&gt;
&lt;p&gt;　個人的には、もっと早い段階でこういう場に出て行けば良かったと思っています。学生の、もっと言うと就職前に行っておくべきだった……。技術的な話以上に、業界の傾向の話がガンガン聞けたのが今後のためになりました。&lt;/p&gt;
&lt;p&gt;　場所を提供して下さったグリー株式会社、最高！&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>再開します</title>
   <link href="http://gosyujin.github.io/2009/03/05/1236256429"/>
   <updated>2009-03-05T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2009/03/05/1236256429</id>
   <content type="html">&lt;p&gt;　明日行われる、第2回Wicket勉強会に出席させて頂くのを期に再開します。これからはこの半年で培ったWicketの事でも書きたいな。&lt;/p&gt;
&lt;p&gt;　とりあえず明日は俺より強い奴に会いにいく！　寝坊しないように……。&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>sara</title>
   <link href="http://gosyujin.github.io/2000/01/01/1288149401"/>
   <updated>2000-01-01T00:00:00+09:00</updated>
   <id>http://gosyujin.github.io/2000/01/01/1288149401</id>
   <content type="html">&lt;p&gt;emacsのメモ&lt;/p&gt;
&lt;h1&gt;環境&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;CentOS&lt;ul&gt;&lt;li&gt;Mac OS からSSHする&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Emacs23.4&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;ダウンロード&lt;/h1&gt;
&lt;pre class=&quot;&quot;&gt;$ wget http://ftp.jaist.ac.jp/pub/GNU/emacs/emacs-23.4.tar.gz
$ tar zxvf emacs-23.4.tar.gz
$ cd emacs-23.4/
$ ./configure --without-x  # GUIがない場合はx要らない
$ make
$ sudo make install&lt;/pre&gt;
&lt;br /&gt;
&lt;h1&gt;構成&lt;/h1&gt;
&lt;p&gt;特にインストール先を指定しなければ/usr/local/share/の下にemacsディレクトリができた。&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;emacs

┣23.4
┃┣etc          # NEWやライセンス等
┃┣leim        # EmacsのIM
┃┣lisp         #  Elispが格納、Emacsの全て
┃┗site-lisp   # ユーザのElispをインストールする場所(バージョン依存？)
┗site-lisp      # Emacsのバージョン関係なく使える？&lt;/pre&gt;
&lt;h1&gt;設定ファイル&lt;/h1&gt;
&lt;p&gt;設定ファイルは以下のファイルのうち、優先順位に従って一つ読み込まれる&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;~/.emacs.el &gt; ~/.emacs &gt; ~/.emacs.d/init.el &gt; ~/.emacs.d/init&lt;/li&gt;&lt;/ul&gt;
&lt;h1&gt;前準備&lt;/h1&gt;
&lt;h2&gt;キーバインド&lt;/h2&gt;
&lt;p&gt;本とかネットなどに書いてある書式。この通りに押すとミニバッファに出力される&lt;/p&gt;
&lt;table&gt;&lt;tr&gt;&lt;th&gt;キー&lt;/th&gt;&lt;th&gt;意味&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;C-x&lt;/td&gt;&lt;td&gt;Control(Ctrl)を押しながらxを押す&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;C-x C-c&lt;/td&gt;&lt;td&gt;Controlを押しながらxを押した後、Controlを押しながらcを押す&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;C-x →&lt;/td&gt;&lt;td&gt;Controlを押しながらxを押した後、右矢印キーを押す&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;M-x&lt;/td&gt;&lt;td&gt;メタキー(Alt)を押しながらxを押す&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;C-M-v&lt;/td&gt;&lt;td&gt;ControlとAltを押しながらvを押す&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;table&gt;&lt;tr&gt;&lt;td&gt;C-x RET f&lt;/td&gt;&lt;td&gt;Controlを押しながらxを押した後、Return(Enter)を押し、fを押す&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;C-SPC&lt;/td&gt;&lt;td&gt;Controlを押しながらSpaceを押す&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;h2&gt;最重要コマンド&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;C-x C-c(脱出)&lt;ul&gt;&lt;li&gt;使い方がわからん時にEmacsでファイルを開かれると、もうターミナルごと落とすしかなくなるので脱出するコマンドだけ覚えておく。なにかあったらC-x C-c！&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;C-g(操作キャンセル)&lt;ul&gt;&lt;li&gt;よくわからん状態になったらこれ。だいたい元の画面に戻れる&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;h2&gt;Mac OSのターミナルを使っている場合&lt;/h2&gt;
&lt;p&gt;EmacsではAltキーをMetaキーとして使う(事が多い)。ただし、Max OSのターミナルは設定を変えないとAltをメタキーとして使う事ができない。&lt;/p&gt;
&lt;p&gt;例えば&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;C-v 次の画面に進む&lt;/li&gt;&lt;li&gt;M-v 前の画面に戻る&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;というコマンドがあり、C-vは普通に使えるが、M-vを押すと「&amp;#402;」を出してしまう。&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f1&quot; title=&quot;一応、デフォルトでもescを押してからvとすると前の画面に戻るができるが、連打もできないししんどい。&quot; name=&quot;fn1&quot;&gt;*1&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;メタキーとして使うにはターミナルの環境設定 =&gt; 設定 =&gt; キーボードタブの「メタキーとしてoptionキーを使用」にチェックを入れる&lt;/p&gt;
&lt;h1&gt;ファイル操作&lt;/h1&gt;
&lt;p&gt;$ emacs FILE_NAME でもファイルを作る&amp;開く事はできるが、ここはemacsを起動した状態からファイルを開く。&lt;/p&gt;
&lt;table&gt;&lt;tr&gt;&lt;th&gt;キー&lt;/th&gt;&lt;th&gt;動作&lt;/th&gt;&lt;th&gt;備考&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;C-x C-f&lt;/td&gt;&lt;td&gt;ファイルを開く&lt;/td&gt;&lt;td&gt;ミニバッファからファイル名を入力できる(Tabで補完もきく)。&lt;span class=&quot;footnote&quot;&gt;&lt;a href=&quot;#f2&quot; title=&quot;存在しないファイル名を指定した場合はバッファが作成される。&quot; name=&quot;fn2&quot;&gt;*2&lt;/a&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;C-x C-s&lt;/td&gt;&lt;td&gt;ファイルを保存&lt;/td&gt;&lt;td&gt;変更を実際のファイルに書き込む&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;C-x s&lt;/td&gt;&lt;td&gt;開いている全てのファイルを保存&lt;/td&gt;&lt;td&gt;変更を実際のファイルに書き込むy/n等で1つずつ確認して保存できる&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;C-x C-w&lt;/td&gt;&lt;td&gt;ファイルを別名保存&lt;/td&gt;&lt;td&gt;ファイルを別名保存する&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;C-x i&lt;/td&gt;&lt;td&gt;別ファイルの内容を流し込む&lt;/td&gt;&lt;td&gt;指定した別ファイルの内容を流し込む&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;C-x RET f&lt;/td&gt;&lt;td&gt;文字コード、改行コード変換&lt;/td&gt;&lt;td&gt;ミニバッファから文字コード、改行コードを変更できる、後述&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;C-x b&lt;/td&gt;&lt;td&gt;バッファ切替&lt;/td&gt;&lt;td&gt;現在保持しているバッファの中から開くファイルを切り替える&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;C-x →&lt;/td&gt;&lt;td&gt;バッファ切替&lt;/td&gt;&lt;td&gt;順番にバッファのファイルを切り替える&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;C-x ←&lt;/td&gt;&lt;td&gt;バッファ切替&lt;/td&gt;&lt;td&gt;順番にバッファのファイルを切り替える&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;C-x k&lt;/td&gt;&lt;td&gt;バッファ消去&lt;/td&gt;&lt;td&gt;現在保持しているバッファの中から消去するファイルを選択する&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;h2&gt;文字コード、改行コード操作&lt;/h2&gt;
&lt;p&gt;C-x RET f で文字コード、改行コードを変更できる。ミニバッファに&lt;/p&gt;
&lt;pre class=&quot;&quot;&gt;Coding system for saving file (default:nil):&lt;/pre&gt;
&lt;p&gt;と表示されるので、文字コードと改行コードを選択する。Tab補完がきく。その中で(自分が)使いそうなものを幾つか。&lt;/p&gt;
&lt;table&gt;&lt;tr&gt;&lt;th&gt;コマンド&lt;/th&gt;&lt;th&gt;動作&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;utf-8&lt;/td&gt;&lt;td&gt;utf-8に変換&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;utf-8-dos&lt;/td&gt;&lt;td&gt;utf-8に変換し、改行コードをCR+LF(Windows)に変換&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;utf-8-unix&lt;/td&gt;&lt;td&gt;utf-8に変換し、改行コードをLFに変換&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;utf-8-mac&lt;/td&gt;&lt;td&gt;utf-8に変換し、改行コードをCRに変換&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;sjis&lt;/td&gt;&lt;td&gt;sjisに変換&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;sjis-dos&lt;/td&gt;&lt;td&gt;sjisに変換し、改行コードをCR+LF(Windows)に変換&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;sjis-unix&lt;/td&gt;&lt;td&gt;sjisに変換し、改行コードをLFに変換&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;sjis-mac&lt;/td&gt;&lt;td&gt;sjisに変換し、改行コードをCRに変換&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;h1&gt;カーソル操作&lt;/h1&gt;
&lt;p&gt;ファイル内を移動する。&lt;/p&gt;
&lt;table&gt;&lt;tr&gt;&lt;th&gt;キー&lt;/th&gt;&lt;th&gt;動作&lt;/th&gt;&lt;th&gt;備考&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;C-f&lt;/td&gt;&lt;td&gt;一文字進む&lt;/td&gt;&lt;td&gt;-&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;C-b&lt;/td&gt;&lt;td&gt;一文字戻る&lt;/td&gt;&lt;td&gt;-&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;C-n&lt;/td&gt;&lt;td&gt;一行進む&lt;/td&gt;&lt;td&gt;-&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;C-p&lt;/td&gt;&lt;td&gt;一行戻る&lt;/td&gt;&lt;td&gt;-&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;C-a&lt;/td&gt;&lt;td&gt;行頭へ&lt;/td&gt;&lt;td&gt;-&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;C-e&lt;/td&gt;&lt;td&gt;行末へ&lt;/td&gt;&lt;td&gt;-&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;C-v&lt;/td&gt;&lt;td&gt;一画面下へ&lt;/td&gt;&lt;td&gt;-&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;M-v&lt;/td&gt;&lt;td&gt;一画面上へ&lt;/td&gt;&lt;td&gt;-&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;M-&lt;(M-S-,)&lt;/td&gt;&lt;td&gt;バッファの先頭へ&lt;/td&gt;&lt;td&gt;-&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;M-&gt;(M-S-.)&lt;/td&gt;&lt;td&gt;バッファの終端へ&lt;/td&gt;&lt;td&gt;-&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;M-g M-g&lt;/td&gt;&lt;td&gt;指定した行番号へ&lt;/td&gt;&lt;td&gt;Goto line: と表示され、入力した行番号へジャンプする&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;pre class=&quot;&quot;&gt;--
M-&amp;lt;(M-S-,)

--

M-v
--
           C-p
C-a    C-b  _  C-f      C-e
           C-n
--
C-v

--

M-&amp;gt;(M-S-.)
--&lt;/pre&gt;
&lt;br /&gt;
&lt;h1&gt;文字列操作&lt;/h1&gt;
&lt;p&gt;文字をコピーしたり。&lt;/p&gt;
&lt;table&gt;&lt;tr&gt;&lt;th&gt;キー&lt;/th&gt;&lt;th&gt;動作&lt;/th&gt;&lt;th&gt;備考&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;C--&lt;/td&gt;&lt;td&gt;アンドゥ？リドゥ？&lt;/td&gt;&lt;td&gt;何か動作原理がよくわからんけど、とりあえずアンドゥはしてくれる？&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;C-x u&lt;/td&gt;&lt;td&gt;アンドゥ？リドゥ？&lt;/td&gt;&lt;td&gt;何か動作原理がよくわからんけど、とりあえずアンドゥはしてくれる？&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;C-d&lt;/td&gt;&lt;td&gt;一文字Delete&lt;/td&gt;&lt;td&gt;-&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;C-k&lt;/td&gt;&lt;td&gt;一行消去&lt;/td&gt;&lt;td&gt;空行は残る(カーソルが文末にある場合のみ改行を消去)、カーソルが行頭にない場合そこから改行を除く文末まで消去&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;M-;&lt;/td&gt;&lt;td&gt;コメントアウト系&lt;/td&gt;&lt;td&gt;空行だと# 挿入、コメント行だと文頭へジャンプ、部通の行だと文末に# 挿入&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;table&gt;&lt;tr&gt;&lt;th&gt;キー&lt;/th&gt;&lt;th&gt;動作&lt;/th&gt;&lt;th&gt;備考&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;C-SPC&lt;/td&gt;&lt;td&gt;マーク&lt;/td&gt;&lt;td&gt;文字列操作の起点。現在の位置を記録(マーク)する。カーソルを動かすとマークからのカーソルの位置まで選択される(リージョン)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;C-w&lt;/td&gt;&lt;td&gt;カット&lt;/td&gt;&lt;td&gt;リージョン部分をカット&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;M-w&lt;/td&gt;&lt;td&gt;コピー&lt;/td&gt;&lt;td&gt;リージョン部分をコピー&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;C-y&lt;/td&gt;&lt;td&gt;ペースト&lt;/td&gt;&lt;td&gt;コピー、カットした内容をペースト&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;h1&gt;ウィンドウ操作&lt;/h1&gt;
&lt;p&gt;画面を分割したり。&lt;/p&gt;
&lt;table&gt;&lt;tr&gt;&lt;th&gt;キー&lt;/th&gt;&lt;th&gt;動作&lt;/th&gt;&lt;th&gt;備考&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;C-x 2&lt;/td&gt;&lt;td&gt;ウィンドウ水平分割&lt;/td&gt;&lt;td&gt;今の画面を水平に分割&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;C-x 3&lt;/td&gt;&lt;td&gt;ウィンドウ垂直分割&lt;/td&gt;&lt;td&gt;今の画面を垂直に分割&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;C-x o&lt;/td&gt;&lt;td&gt;ウィンドウ移動&lt;/td&gt;&lt;td&gt;カレントから他の画面に移動&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;C-x 1&lt;/td&gt;&lt;td&gt;自分以外のウィンドウを閉じる&lt;/td&gt;&lt;td&gt;-&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;C-x 0&lt;/td&gt;&lt;td&gt;自分のウィンドウを閉じる&lt;/td&gt;&lt;td&gt;-&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;h1&gt;ディレクトリ操作&lt;/h1&gt;
&lt;p&gt;Emscsを開いたままディレクトリを操作できる&lt;/p&gt;
&lt;table&gt;&lt;tr&gt;&lt;th&gt;キー&lt;/th&gt;&lt;th&gt;動作&lt;/th&gt;&lt;th&gt;備考&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;C-x d&lt;/td&gt;&lt;td&gt;ディレクトリを開く&lt;/td&gt;&lt;td&gt;ディレクトリ操作の起点。ファイルを開く(C-x f)のと同じようにディレクトリを指定してディレクトリを開く&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;h2&gt;ディレクトリ操作モード&lt;/h2&gt;
&lt;table&gt;&lt;tr&gt;&lt;th&gt;キー&lt;/th&gt;&lt;th&gt;動作&lt;/th&gt;&lt;th&gt;備考&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;q&lt;/td&gt;&lt;td&gt;ディレクトリモードを抜ける&lt;/td&gt;&lt;td&gt;-&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;C--&lt;/td&gt;&lt;td&gt;直前の作業を戻す&lt;/td&gt;&lt;td&gt;-&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;+&lt;/td&gt;&lt;td&gt;ディレクトリ作成&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;RET またはf&lt;/td&gt;&lt;td&gt;現在行のファイルを選択&lt;/td&gt;&lt;td&gt;ファイルならオープンしようとする、ディレクトリなら中に入る&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;R&lt;/td&gt;&lt;td&gt;ファイル(ディレクトリ)名リネーム&lt;/td&gt;&lt;td&gt;現在カーソルがある行がリネーム対象※&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;D&lt;/td&gt;&lt;td&gt;ファイル(ディレクトリ)削除&lt;/td&gt;&lt;td&gt;現在カーソルがある行が削除対象※&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;C&lt;/td&gt;&lt;td&gt;ファイル(ディレクトリ)コピー&lt;/td&gt;&lt;td&gt;現在カーソルがある行がコピー対象※&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;※後で覚える: マーク (一応消し方だけ *-!)&lt;/p&gt;
&lt;div class=&quot;footnote&quot;&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn1&quot; name=&quot;f1&quot;&gt;*1&lt;/a&gt;: 一応、デフォルトでもescを押してからvとすると前の画面に戻るができるが、連打もできないししんどい。&lt;/p&gt;&lt;p class=&quot;footnote&quot;&gt;&lt;a href=&quot;#fn2&quot; name=&quot;f2&quot;&gt;*2&lt;/a&gt;: 存在しないファイル名を指定した場合はバッファが作成される。&lt;/p&gt;&lt;/div&gt;</content>
 </entry>
 
 
</feed>
