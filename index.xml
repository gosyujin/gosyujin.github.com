<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>kk_Atakaの日記</title>
    <link>/</link>
    <description>Recent content on kk_Atakaの日記</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>jp</language>
    <lastBuildDate>Sat, 01 Jan 2000 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>SQL Serverでの照合順序の確認方法</title>
      <link>/2019/04/15/sqlserver-collation-name/</link>
      <pubDate>Mon, 15 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/04/15/sqlserver-collation-name/</guid>
      <description>あらすじ SQLServerでは文字コード、照合順序は特に指定がなければ「規定値」が設定されるらしい。
 サロゲートペア文字とDB設計を考える | デーコムラボ SQL ServerにUnicodeの文字列を格納する方法 - 大人になったら肺呼吸 SQLServerへのデータ格納時の文字コード（コードページ）について - 大人になったら肺呼吸 SQL Server で照合順序 Japanese_CI_AS どこ消えた？あった。 | 技術的な何か。 SQL Serverにおける日本語文字列の取り扱いで躓いた話 - ShouN-7&amp;rsquo;s tech blog  とりわけAzure環境下で英語→日本語切り替えとかすると躓く模様。
でも、そもそも規定値ってどこで確認するのという話。
環境  SQL Server 14.0.1000.169  まとめ  特に指定なしでDB/テーブルを作成する場合は規定値の照合順序(Collation)を使う 照合順序を変更しても、既に作成済のユーザーデータベースのテーブルの照合順序は変わらない  システムテーブル内は変わる ユーザーテーブルはALTER DATABASEで別途変更する必要がある  確認はINFORMATION_SCHEMA.COLUMNSビューで行う  手順A(SQL Serverのシステム情報スキーマビューから確認する) INFORMATION_SCHEMA.COLUMNSビューに欲しい情報全部あった。
SELECT TABLE_CATALOG , TABLE_SCHEMA , TABLE_NAME , COLUMN_NAME , DATA_TYPE , CHARACTER_MAXIMUM_LENGTH , CHARACTER_OCTET_LENGTH , CHARACTER_SET_NAME , COLLATION_NAME FROM INFORMATION_SCHEMA.COLUMNS;    TABLE_CATALOG TABLE_SCHEMA TABLE_NAME COLUMN_NAME DATA_TYPE CHARACTER_MAXIMUM_LENGTH CHARACTER_OCTET_LENGTH CHARACTER_SET_NAME COLLATION_NAME     SAMPLE_INSTANCE SAMPLE_SCHEMA SAMPLE_TABLE ID varchar 3 3 cp932 Japanese_CI_AS   SAMPLE_INSTANCE SAMPLE_SCHEMA SAMPLE_TABLE NAME nvarchar 10 20 UNICODE Japanese_CI_AS   SAMPLE_INSTANCE SAMPLE_SCHEMA SAMPLE_TABLE ADDRESS nvarchar 25 50 UNICODE Japanese_CI_AS   SAMPLE_INSTANCE SAMPLE_SCHEMA SAMPLE_TABLE UPDATE_DATE date        手順B(頑張る場合) とあるユーザーテーブルのカラムの照合順序を調べる いきなりカラム(sys.</description>
    </item>
    
    <item>
      <title>ニコレポの仕様が変わったので一覧情報の取得方法を調査した</title>
      <link>/2017/06/30/nicorepo/</link>
      <pubDate>Fri, 30 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/06/30/nicorepo/</guid>
      <description>あらすじ ニコレポの情報を http://www.nicovideo.jp/my/top/all?innerPage=1&amp;amp;mode=next_page から取得していたが、仕様変更によりこのパラメータが無効？になっていた。
ので、またニコレポを取得できるように色々調査。
調査ログ  http://www.nicovideo.jp/my/top/all をGoogle Chromeのデベロッパーツールを開いた状態でアクセスしてみる nicorepo.js 内でfetch http://www.nicovideo.jp/api/nicorepo/timeline/my/all?client_app=pc_myrepo&amp;amp;_=1234567890123 している？  上記に直接アクセスしてみる パラメータは固定？( _ はユーザー毎に固定？)  以下のようなレスポンスが返ってくる  { &amp;#34;meta&amp;#34;: { &amp;#34;status&amp;#34;: 200, &amp;#34;maxId&amp;#34;: &amp;#34;1499861535479-b3ec9...&amp;#34;, &amp;#34;minId&amp;#34;: &amp;#34;1499754804677-da9ff...&amp;#34;, &amp;#34;impressionId&amp;#34;: &amp;#34;c218734f-bff7-497f-b41c-48071c013111&amp;#34;, &amp;#34;clientAppGroup&amp;#34;: &amp;#34;nicorepo&amp;#34;, &amp;#34;_limit&amp;#34;: 25 }, &amp;#34;data&amp;#34;: [ { &amp;#34;id&amp;#34;: &amp;#34;1499861535479-b3ec9...&amp;#34;, (略) &amp;#34;video&amp;#34;: { &amp;#34;id&amp;#34;: &amp;#34;so31557548&amp;#34;, &amp;#34;status&amp;#34;: &amp;#34;PUBLIC&amp;#34;, &amp;#34;thumbnailUrl&amp;#34;: { &amp;#34;normal&amp;#34;: &amp;#34;http://tn-skr1.smilevideo.jp/smile?i=31557548&amp;#34; }, &amp;#34;title&amp;#34;: &amp;#34;洲崎西 第211回放送（2017.07.11）&amp;#34;, &amp;#34;videoWatchPageId&amp;#34;: &amp;#34;1499858531&amp;#34; } }, (略) { &amp;#34;id&amp;#34;: &amp;#34;1499754804677-da9ff...&amp;#34;, (略) }, ], &amp;#34;errors&amp;#34;: [], &amp;#34;status&amp;#34;: &amp;#34;ok&amp;#34; }  data.</description>
    </item>
    
    <item>
      <title>Android StudioでAndroid Lint</title>
      <link>/2017/05/31/android-lint/</link>
      <pubDate>Wed, 31 May 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/05/31/android-lint/</guid>
      <description>あらすじ Android Lintを使ってみる。
参考  Android Lint - Android Studio Project Site Android Lint Checks - Android Studio Project Site Android Tips #11 ADT revision 17のLintの機能追加について ｜ Developers.IO  Android Lintって  ADT 16から導入されたツール ソースに潜在するバグをチェックしてくれる  Missing translations (and unused translations) Layout performance problems (all the issues the old layoutopt tool used to find, and more) Unused resources Inconsistent array sizes (when arrays are defined in multiple configurations) Accessibility and internationalization problems (hardcoded strings, missing contentDescription, etc) Icon problems (like missing densities, duplicate icons, wrong sizes, etc) Usability problems (like not specifying an input type on a text field) Manifest errors   使用例 コマンドラインから使う事ができる。</description>
    </item>
    
    <item>
      <title>Dropboxをコマンドラインで使用する方法</title>
      <link>/2017/04/30/dropbox-cli/</link>
      <pubDate>Sun, 30 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/04/30/dropbox-cli/</guid>
      <description>あらすじ  LinuxサーバーでもDropboxを起動させたい  参考サイト  インストール - Dropbox  Ubuntu(.deb), Fedora(.rpm), Debian(.deb)パッケージが提供されている。ソースからコンパイルもできる  DropboxをLinuxで利用する方法 - maruko2 Note. Dropbox を Linuxサーバでも使うときにやるべき設定 - Qiita Using the Official Dropbox Command Line Interface (CLI) - The Unofficial Dropbox Wiki  手順  インストール - Dropbox の コマンド ラインを使った Dropbox のヘッドレス インストール に沿ってDropboxデーモンをインストールする  wget -O – &amp;#34;https://www.dropbox.com/download?plat=lnx.x86_64&amp;#34; | tar zxf -  .dropbox-dist というディレクトリができるので、その中の dropboxd を実行後、アカウントと紐付ける  $ ~/.dropbox-dist/dropboxd このコンピュータは Dropbox アカウントにリンクされていません... このデバイスをリンクするには、https://www.</description>
    </item>
    
    <item>
      <title>rbenvを最新にして新しいバージョンのRubyをインストールできるようにする</title>
      <link>/2017/03/30/rbenv-update/</link>
      <pubDate>Thu, 30 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/03/30/rbenv-update/</guid>
      <description>あらすじ  git cloneでインストールしたrbenvを最新にして新しいRubyをインストールする  ちょくちょく忘れるので
手順 Basic GitHub Checkout に沿ってインストールすると、カレントディレクトリ直下に ~/.rbenv と ~/.rbenv/plugins/ruby-build があるはず。ここを最新にする。
$ cd ~/.rbenv $ git pull $ cd ~/.rbenv/plugins/ruby-build $ git pull $ rbenv install -l を実行してインストールできるRubyのバージョンを確認みる。
好きなバージョンをインストールする。</description>
    </item>
    
    <item>
      <title>GradleのresValueで値をリソースに設定する</title>
      <link>/2017/02/28/gradle_res_value/</link>
      <pubDate>Tue, 28 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/02/28/gradle_res_value/</guid>
      <description>あらすじ FacebookのAPIを使うために facebookAppId を取得したが、このAPI Keyを設定ファイル( AndroidManifest.xml )外に追い出すのに苦労した。
Gradle力が低いので、もっと良いやり方があるかもしれない。
 スタートガイド - Android SDK   1.strings.xmlファイルを開きます。パスの例:/app/src/main/res/values/strings.xml。 2.新しい文字列を、facebook_app_idの名前とFacebookアプリIDとともに追加します。
 やりたいこと  facebookAppId を gradle.properties に定義したい AndroidManifest.xml に gradle.properties から参照した文字列を埋め込みたい ただし、プロパティに定義したKeyは数値のみ(文字数値入り混じったKeyなら問題ない)  manifestPlaceholdersに登録して参照(うまくいかなかった)  gradle.properties  キーを書いた   facebookAppId=123456711111111  build.gradle  productFlavors に getProperty(&amp;quot;facebookAppId&amp;quot;) と記載し、 gradle.properties から値を呼び出した   productFlavors { develop { manifestPlaceholders = [ facebook_app_id: getProperty(&amp;#34;facebookAppId&amp;#34;)] 略 } }  AndroidManifest.xml  &amp;lt;meta-data android:name=&amp;#34;com.facebook.sdk.ApplicationId&amp;#34; android:value=&amp;#34;${facebook_app_id}&amp;#34; /&amp;gt; これ、確かに参照はできるんだけどFacebookSDKの中でKeyが数値とみなされて applicationId cannot be null となってしまった。</description>
    </item>
    
    <item>
      <title>localhost:xxxxにはてブしてるコメントを収集してみた</title>
      <link>/2017/01/11/localhost-hateb/</link>
      <pubDate>Wed, 11 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/01/11/localhost-hateb/</guid>
      <description>あらすじ localhost:8080のはてブを見ると、なんか面白いコメントがいっぱいあったので全部のポートに対してどんなコメントがあるのかさらってみた。
2015年7月時点のもの。
http://localhost:25 No Title - 1user  あらまー。  http://localhost:53 No Title - 1user  ばっか  http://localhost:80 はてなブックマーク - ソーシャルブックマーク - 1user  劇場版銭維  http://localhost:25 No Title - 1user  あらまー。  http://localhost:53 No Title - 1user  ばっか  http://localhost:80 はてなブックマーク - ソーシャルブックマーク - 1user  劇場版銭維  http://localhost:445 No Title - 1user  (´Д｀)ねもい〜  http://localhost:631 ホーム - CUPS 1.2.4 - 28user  ぼくの作ったホームページを見に来てください！ プリンタの設定に使う。 プリンター 設定 管理  http://localhost:901 Samba Web Administration Tool - 2user  なし  http://localhost:1337 localhost:1337 - 1user  sails lift  http://localhost:2000 localhost:2000 - 2user  nekotools server -h localhost  http://localhost:2469 localhost:2469 - 0user  なし  http://localhost:2534 localhost:2534 - 0user  なし  http://localhost:2605 localhost:2605 - 1user  なし  http://localhost:2700 localhost:2700 - 0user  なし  http://localhost:3000 localhost:3000 - 175user  BrowserSyncなう haskell+scottyからきました railsからきました 自分しか見れないサイトにブクマとかいいよね 気づいてしまったので記念ブクマ VagrantでRails環境を立ち上げたものの、接続できない… これはワロタ 気付いた。わろたw 記念にw 記念 browserSync経由です ブクマ大量についててウケる gulpの窓からこんにちは。 ずっとはてブついてるの気になってたので私もしておこうｗ gulp -&amp;gt; BrowserSyncより BrowserSyncからきますた なんでこんなとこにはてブがwwwww test \祝/ Hello World!</description>
    </item>
    
    <item>
      <title>Gmail経由でのstmp送信でUsername and Password not accepted 534-5.7.14</title>
      <link>/2016/12/31/gmail_smtp_username_and_password_not_accepted/</link>
      <pubDate>Sat, 31 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>/2016/12/31/gmail_smtp_username_and_password_not_accepted/</guid>
      <description> あらすじ Rubyスクリプト内にてGmail経由でsmtp送信しようとしたら Username and Password not accepted と表示されてしまった。
何度も施行していると、「ログイン試行をブロックしました」というメールが届き、エラーも 534-5.7.14 &amp;lt;https://accounts.google.com/ContinueSignIn(以下略) と変わった。
smtp.rb の check_auth_response メソッドでauthに失敗している模様。(該当メソッドでメールアドレスとパスワードを puts してみたけど、あってる=これを使用してブラウザログインはできる)
解決策 二段階認証設定をオンにし、アプリパスワードを発行。
自分のメールアドレスとアプリパスワードで認証するとメール送信できた。
 【メール送信エラー】Net::SMTPAuthenticationError - 534-5.7.14 &amp;lt;https://accounts.google.com/ContinueSignIn &amp;hellip; - Qiita  ちょっと古いが、二段階認証かつアプリパスワード使用でも、そもそも無理という話もある。
 Gmail 経由での SMTP メール送信が出来ない時の解決法 (ユーザー名とパスワードは合っているのに。。) - Qiita  </description>
    </item>
    
    <item>
      <title>PyConJP 2016 in TokyoでSphinxハンズオンのTAをしてきた #pyconjp</title>
      <link>/2016/11/30/pyconjp-sphinx-handson-kpt/</link>
      <pubDate>Wed, 30 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>/2016/11/30/pyconjp-sphinx-handson-kpt/</guid>
      <description>あらすじ さる9/20のPyConJP 2016 Tutorial day(1日目)にて行われたSphinxハンズオンにTAとして参加しました。
 Sphinx ハンズオン ｜ PyCon JP 2016 in TOKYO  講師: @usaturnさん TA: @takuan_oshoさん、自分   振り返り  参加者は6名  OSはWindows 3人Mac 3人  参加動機など  仕事でドキュメントが残ってない、まとめるにあたってツール選定していたらSphinxを知った 重いWordファイルを操作するのが困難、別のフォーマットで簡単に扱いたい Pythonでデータ解析をするにあたって使用しているツールのドキュメントがほぼSphinx製だったので、Sphinxとは何なのか知っておきたい   簡単にメモ。</description>
    </item>
    
    <item>
      <title>Software Design 2016年11月号にSphinxの記事を執筆しました #sphinxjp</title>
      <link>/2016/10/31/software-design-2016-11/</link>
      <pubDate>Mon, 31 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>/2016/10/31/software-design-2016-11/</guid>
      <description>あらすじ Software Designで連載している「Sphinxで始めるドキュメント作成術」の記事をかかせていただきました。
 Software Design 2016年11月号｜技術評論社  内容 Sphinxで文章を作成するにあたって知っておくと便利なツールなどの紹介をしています。</description>
    </item>
    
    <item>
      <title>Androidのapkの総メソッド数を調べてMulti-dexを導入するか否かを判断する</title>
      <link>/2016/09/30/android_multi_dex/</link>
      <pubDate>Fri, 30 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>/2016/09/30/android_multi_dex/</guid>
      <description> あらすじ  Androidではapkのメソッド総数が65536を超える場合、ビルド/インストール時にエラーが発生する  Multi-dexを導入して対応しなければならないらしい  しかし、メソッド総数はどう判断すればよい？  参考  mihaip/dex-method-counts: Command-line tool to count per-package methods in Android .dex files Multi-dex Support を使おう - Qiita Androidでメソッド数が65536を超えた時の対処方法 - Qiita [Android] アプリのメソッド数を知るには ｜ Ys&amp;rsquo; Library ｜ プログラミング・ガジェット徒然日記  手順  dex-method-countsを使用する  git clone https://github.com/mihaip/dex-method-counts.git cd dex-method-counts/ ./gradlew assemble ./dex-method-counts hogehoge-debug.apk Processing hogehoge-debug.apk Read in x method IDs. Read in xxx method IDs. &amp;lt;root&amp;gt;: xxx android: x app: x content: x res: x net: x os: x util: x widget: x com: x android: x tools: x fd: x common: x runtime: x dalvik: x system: x java: xxx io: x lang: x ref: x reflect: x math: x security: x util: x logging: x zip: x Overall method count: xxx</description>
    </item>
    
    <item>
      <title>Rubyの変数DATABASE_URLでハマった話</title>
      <link>/2016/08/31/ruby-database-url/</link>
      <pubDate>Wed, 31 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>/2016/08/31/ruby-database-url/</guid>
      <description>あらすじ  一台のサーバーに複数のRailsアプリケーションがある 新しく一つRailsアプリケーションを作成した config/database.yml を見るとこんなコメントアウトがあった  # On Heroku and other platform providers, you may have a full connection URL# available as an environment variable. For example:## DATABASE_URL=&amp;#34;mysql2://myuser:mypass@localhost/somedatabase&amp;#34;## You can use this database configuration with:## production:# url: &amp;lt;%= ENV[&amp;#39;DATABASE_URL&amp;#39;] %&amp;gt;#  こんな変数があるのね。 database.yml で使ってみた  production:url:&amp;lt;%=ENV[&amp;#39;DATABASE_URL&amp;#39;]%&amp;gt;  変数を .bash_profile あたりに定義  export DATABASE_URL=&amp;#34;mysql2://myuser:mypass@localhost/somedatabase&amp;#34;  結果、同じサーバーに存在している全部のRailsアプリケーションが上記の接続先を見に行った！  原因 コメントでも DATABASE_URL を使用してね、とあるが、環境変数に ENV[&#39;DATABASE_URL&#39;] が存在すると active_record/connection_handling.rb で DATABASE_URL がマージされてしまう模様。
 Rails アプリケーションを設定する Rails ガイド #データベースを設定する  以下、引用。</description>
    </item>
    
    <item>
      <title>Gatlingを使用してみた</title>
      <link>/2016/07/30/gatling-helloworld/</link>
      <pubDate>Sat, 30 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>/2016/07/30/gatling-helloworld/</guid>
      <description>あらすじ サーバーにリクエストをいっぱい投げて負荷をかけたい。(いわゆる弾投げ)
 WEB+DB-PRESS-Vol.83 Javaの鉱脈 Gatlingによる多彩で柔軟な負荷テスト 便利すぎる負荷試験テストツールGatlingの使い方~自力ソース編~ - Qiita Scala 初心者が Gatling をぶっ放して負荷テストをやってみました - SHANON　Engineer&amp;rsquo;s　Blog  Gatlingとは  負荷テストツール 2011年頃から作成 Scalaで実装されている Scalaでテストケースを書く ライバルはJMeter  実際に使う  Gatling Project, Stress Tool  からダウンロードできる。今回はzipでDLした。
 DLしたzipファイルを解凍、ディレクトリに移動し、適当なテストケースを作成する  cd gatling-charts-highcharts-bundle-2.2.1 vi user-files/simulations/computerdatabase/advanced/Sample.scala  テストコードはサンプルを見ながら…scalaやったことないからちょっと難しい  import io.gatling.core.Predef._ import io.gatling.http.Predef._ import scala.concurrent.duration._ class Sample extends Simulation { // プロトコルの定義  val httpConf = http .baseURL(&amp;#34;http://localhost:8080&amp;#34;) // シナリオの定義  val scn = scenario(&amp;#34;Sample&amp;#34;) .</description>
    </item>
    
    <item>
      <title>Rubyで自然言語っぽくcrontab管理できるwheneverを使う</title>
      <link>/2016/06/05/whenever-helloworld/</link>
      <pubDate>Sun, 05 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>/2016/06/05/whenever-helloworld/</guid>
      <description>あらすじ  cronタスクを書きたいけど、そのままctontabを書きかえたりするのはめんどいし怖い( crontab -r とか) Rubyでcrontab管理をできるライブラリwheneverを使う  javan/whenever: Cron jobs in Ruby
 Whenever is a Ruby gem that provides a clear syntax for writing and deploying cron jobs.
 参考  Wheneverは導入が超簡単なcrontab管理ライブラリGemです！[Rails4.2 x Ruby2.3] - 酒と泪とRubyとRailsと Railsで定期的にバッチ回す「Whenever」 - Qiita  環境  Ruby 2.3.0 Rails 4.1.6  手順  Gemfile に以下を追記し、 bundle install  gem &amp;#39;whenever&amp;#39;, require: false  bundle exec wheneverrize . でスケジュール記述するファイルを作成する  $ bundle exec wheneverize .</description>
    </item>
    
    <item>
      <title>ProGuardでAndroidアプリを難読化していく手順(良い方法があったら知りたい)</title>
      <link>/2016/05/29/android-apply-proguard/</link>
      <pubDate>Sun, 29 May 2016 00:00:00 +0000</pubDate>
      
      <guid>/2016/05/29/android-apply-proguard/</guid>
      <description>あらすじ  Androidアプリの難読化作業を最後にまとめて実施しようとしたら思いがけずハマった しかし「こうすれば全部OK」という定石はなく、ライブラリの情報を読み、実際にアプリを実行していくしか方法がなさそう？ ベストプラクティスなどあれば教えて下さい…  参考  ProGuard設定まとめ - Qiita Proguardメモ - Qiita ProGuardのメモ - Qiita android - AndroidStudio disable &amp;ldquo;Expected resource of type string&amp;rdquo; - Stack Overflow  手順 最後に一気にやろうとすると、とにかくまずビルドが通らない。
まっさらなプロジェクトを用意して一つずつライブラリを入れてくのが良さそう。
BUILD SUCCESSFULになるまで  まっさらなプロジェクト(以下、確認用プロジェクト)を作る  その状態でProGuardを適用するように設定変更する リリースビルド( gradlew assembleRelease など)が成功する事を確認する  本プロジェクトで使用しているライブラリ( build.gradle に定義されているものなど)を確認用プロジェクトに追加していく  一つ追加してはビルドが失敗しない事を確認する 失敗した場合はエラーメッセージを確認する 恐らく追加したライブラリに関連するエラーが出ているはずなので、該当ライブラリREADME/GitHub IssueにProGuardに関する記載があるか確認する 記載があった場合、ProGuard設定を追加し再度ビルドする …以上の手順を全ライブラリに対して行う  並行して、ビルド成功した場合は本プロジェクトにProGuard設定を転記していっても良いかも  BUILD SUCCESSFULになったあと 難読化の影響で 処理呼び出し時にコケる 、というパターンもある。これは実際にapkを叩いてみるまでわからない模様。
 PCとAndroid端末をUSBで接続する リリース用apkをインストールする( adb install など) adb logcat でログを確認できるようにしておく 実機でコケる操作を行う logcatからエラーを確認する  コケているライブラリのREADME/GitHub IssueにProGuardに関する記載があるか確認する   …という感じの繰り返しで確認していく。</description>
    </item>
    
    <item>
      <title>AndroidのAccountManagerをとりあえず動かすところまで</title>
      <link>/2016/04/30/android-minimum-account-manager/</link>
      <pubDate>Sat, 30 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>/2016/04/30/android-minimum-account-manager/</guid>
      <description>あらすじ  Androidでアカウントに関連する情報をアプリ内に持ちたくない  Android側でAccountManagerという仕組みを用意してくれている  しかし、説明を読んでもイマイチピンとこなかった 実際に動きを確認できるところまでサンプル作ってみた  参考  Android Security 安全なアプリケーションを作成するために 11.2章 Android におけるアカウント管理 – Gunosy Tech Blog AccountManagerを利用する - Qiita AccountManagerでアカウントを管理する - Qiita  AccountManagerの概念 AndroidSecurity安全なアプリケーションを作成するために P267より抜粋
環境  Android Studio 1.5.1 Minimum SDK API 19: Android 4.4(KitKat) Emulator Nexus 5 API 19 Android 4.4.4, API 19  動くもの  こんな感じで動く  ソース: MinimumAccountManagerSample   ハマり AccountManager Authenticator ともにサンプル通り作ってみようと思ったらエラーの切り分けができなかった
 Android的に×なのか AccountManager的に×なのか 使おうとしたGoogle APIのお作法的に×なのか(多分これが一番有力)  Android Security(2012/2/21 第二版)のサンプルが古めのGoogle APIを使っていたため、これを最新に置き換えて〜という作業も発生していた   空の Authenticator を作って、とりあえず登録できる口だけ用意する事で一気通貫通す事ができた！</description>
    </item>
    
    <item>
      <title>Golangで作ったスクリプトをbrew install&amp;brew updateできるようにする</title>
      <link>/2016/03/05/go-bin-install-from-homebrew/</link>
      <pubDate>Sat, 05 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>/2016/03/05/go-bin-install-from-homebrew/</guid>
      <description>あらすじ Golangでスクリプトを作ったので、バイナリにしてhomebrewでインストール/アップデートできるようにしてみた。
細かく色々できるけど、とりあえず今回は最小で。
参考  HomeBrewで自作ツールを配布する ｜ SOTA Go言語でつくったツールをHomebrewで配布する · THINKING MEGANE Mackerel  mackerelio/homebrew-mackerel-agent mackerelio/mackerel-agent   環境  MacOS X El Capitan 10.11.3 go version go1.5.3 darwin/amd64 ruby 2.1.4p265  要件  GitHubに上げたスクリプトをbrew install xxxでインストールできるようにしたい でもたまにはgo get github.com/xxxでもインストールしたい  ブツ まずはブツを作った。
 gosyujin/bulkrenamer  引数にディレクトリ与えたら、最下層のファイルを直前のディレクトリ名にリネームするっ的なスクリプト。こちらは特に意識する必要はない。
なんとなく動くようになったら、go buildして作ったファイルをGitHubのReleasesからv0.1として追加した。(割愛/今回は配布先のPCにgoコマンドがない前提なので、実行ファイルをそのまま配る)
 実行ファイルのUrlを覚えておく  https://github.com/gosyujin/bulkrenamer/releases/download/v0.1/bulkrenamer  sha1のハッシュ値を取っておく  Homebrew用設定 Formulaの作成  gosyujin/homebrew-bulkrenamer  brew createで作れるみたいだけど、とりあえず手打ち。
リポジトリの名前はhomebrew-APPNAMEとするルール。今回はbulkrenamerなのでhomebrew-bulkrenamerリポジトリを作った。
ファイルはAPPNAME.rb。今回はbulkrenamer.rb
class Bulkrenamer &amp;lt; Formula desc &amp;#34;BulkRenamer&amp;#34; homepage &amp;#34;https://github.</description>
    </item>
    
    <item>
      <title>El Capitan上に古いpumaをインストールすると失敗する</title>
      <link>/2016/02/17/bundle-install-old-version-puma-for-el-capitan/</link>
      <pubDate>Wed, 17 Feb 2016 00:00:00 +0000</pubDate>
      
      <guid>/2016/02/17/bundle-install-old-version-puma-for-el-capitan/</guid>
      <description>あらすじ El Capitan上に bundle install で古い puma を入れようとしたらエラーになった。
 Need to specify --with-opt-dir on OSX 10.11 El Capitan. · Issue #718 · puma/puma  環境  Mac OS X El Capitan 10.11.3 Ruby 2.1.4p265  解決策 EL Capitanに古い 2.14 より低い puma を入れるには --with-opt-dir でopensslのパスを指定する必要がある。
$ bundle config build.puma --with-opt-dir=/usr/local/opt/openssl$ cat ~/.bundle/config --- BUNDLE_BUILD__PUMA: &amp;#34;--with-opt-dir=/usr/local/opt/openssl&amp;#34; 指定しないとエラー。
Gem::Ext::BuildError: ERROR: Failed to build gem native extension. /Users/ataka/.rbenv/versions/2.1.4/bin/ruby extconf.rb checking for BIO_read() in -lcrypto.</description>
    </item>
    
    <item>
      <title>PyLadiesTokyo #8でSphinxハンズオンのTAをしてきた #sphinxjp</title>
      <link>/2016/01/19/pyladiestokyo-08-sphinx-handson-kpt/</link>
      <pubDate>Tue, 19 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>/2016/01/19/pyladiestokyo-08-sphinx-handson-kpt/</guid>
      <description>あらすじ さる1/16に開催されたPyLadies TokyoにてSphinxのハンズオンが開催されたのでTAしてきました。
 PyLadies Tokyo Meetup #8 - connpass  Sphinx hands-on in PyLadies Tokyo Meetup#8 !! #sphinxjp #PyLadiesTokyo pic.twitter.com/hfwwMZb6hA
&amp;mdash; sphinx-users.jp (@sphinxjp) 2016, 1月 16 
振り返りKPT Keep  PyLadies Tokyo – Official Site は、現在別のCMSで構築されているがこれを機会にSphinxに乗り換える案が出ているようです！ナイスですね  Problem  特に大きな問題もなく、もしもの時のために小さい電源タップを持参すると助かる時があるかも？  Try  ハンズオン質問あるあるみたいなものがまとめられるといいかも  ハンズオン資料( sphinxjp / handson — Bitbucket )とかSphinx-Users.jpのサイトを見てくと書いてあったりするけど   ハンズオンあるある エディタ編  半角スペース、全角スペース、タブを可視化できるエディタだとエラーに気づきやすい…かも！？  不意に混同するとハマっちゃう   アウトプット編(html)  テーマ、適用されてない？  (1.3以降の)デフォルトテーマである alabaster はそういう見た目なのだ ブラウザの横幅を変えるとメニューバーが目に見えて変化するのでわかりやすい  default があるのになんでデフォルトがこれじゃないの？(定番になりつつある質問)  Sphinx 1.</description>
    </item>
    
    <item>
      <title>golangでニコ動の動画をパトロールするツール「nicony」を作った</title>
      <link>/2016/01/12/golang-nicony/</link>
      <pubDate>Tue, 12 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>/2016/01/12/golang-nicony/</guid>
      <description>あらすじ 年末年始にかけてgolangをまたさわってみた。半年以上触ってないと全部忘れてる。
作ったもの  gosyujin/nicony  デモ できること/やりたいこと  ニコレポページに上がる動画一覧をチェックして、コメントと動画をパトロールできる id指定で単一動画でも同じ事ができる マイリストID指定でマイリストの動画を順番にパトロールしたい  学んだこと  コマンドオプションのパース(flagパッケージ) 標準以外のロガー(seelog cihub/seelog)  ログレベル分け、ローテートとかできるやつを探してみた  ファイル操作など(os, pathパッケージ) 構造体フィールドタグ(Goのencoding/xmlを使いこなす - Qiita) goqueryでWebページのスクレイピング(Big Sky :: Go言語で jQuery ライクな操作が出来る goquery を試した。) ニコニコAPIの仕様を少し  あとやりたいこと  我流で書きまくってるから、goのお作法を知ったらそっちに寄せる テスト作る  とりあえず(30分位で作った)ロゴがあるとテンション上がる。ロゴ駆動開発。</description>
    </item>
    
    <item>
      <title>SphinxCon JP 2015 で雑用してきた #sphinxjp</title>
      <link>/2015/12/01/sphinxconjp-2015-kpt/</link>
      <pubDate>Tue, 01 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>/2015/12/01/sphinxconjp-2015-kpt/</guid>
      <description>あらすじ さる11/24にSphinxCon JP 2015が開催されました。
今年はそっこうで枠が埋まったので、発表枠ではなくなんかあった時にフォローに回れるよう雑用枠で参加。(去年は発表枠もらってた SphinxCon JP 2014 で発表してきました #sphinxjp - kk_Atakaの日記)
connpassに資料、Toggeterに当日の様子がまとまっています。
 SphinxCon JP 2015 - connpass SphinxCon JP 2015 #sphinxjp - Togetterまとめ  個人的には、鹿野さんの基調講演でまとめられていたドキュメントの歴史がSphinxに限らずものすごく貴重だと思った。
昔に遡れば遡るほど知らない名前の技術が使われており、またそれが少なからず後世のツールに影響があるというのを知っておくと色々楽しい。
振り返りKPT 雑用枠的な振り返り。
Keep  1枠あると安心、雑用枠  スタッフ/発表者は当日諸々の作業に追われる事態も想定して、1人暇な人が待機してるとリカバリ効いていい感じ   Problem  オープニングにちょっと手間取った  会場が開場する前に到着している人が結構多くて入り口でワチャワチャしてて肩身が狭かった… 開場が遅れそうな場合は「開場するまで近場で時間つぶしてて」ってアナウンスするとよかったかも 主催/発表者/お手伝いの人は何時までに、参加者は開場アナウンス出てから入れるとスムーズだけどうまくいくかな？  会場の飲食、電源、WiFi情報の周知  Try  デリバリー業とスイーパー業をもくもくとやってた  ゴミの分別とかは予め極めておく  クロージングと平行して、忘れ物チェックとゴミはゴミ集め場に  今回忘れ物はなかったみたい  SphinxCon 2016開催決定！？  #sphinxjp SphinxCon 2016開催の暗示だ！ pic.twitter.com/h3KVQR7oWv
&amp;mdash; ごしゅじん (@kk_Ataka) 2015, 11月 24</description>
    </item>
    
    <item>
      <title>Sphinxワークショップ@関西で事例紹介とハンズオンTAをしてきた #sphinxjp</title>
      <link>/2015/11/01/sphinx-workshop-kansai-kpt/</link>
      <pubDate>Sun, 01 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>/2015/11/01/sphinx-workshop-kansai-kpt/</guid>
      <description>あらすじ さる10/31に開催された Sphinxワークショップ@関西 にて事例紹介とハンズオンTAをしてきた。
ので振り返りメモ。PyConJPのkptは活かされたのか。
スライド   JUS関西 Sphinxワークショップ@関西 Sphinx事例紹介  from kk_Ataka 
#sphinxjp ワークショップ@関西で、 @kk_Ataka の事例紹介中 pic.twitter.com/LWPFjZLKyf
&amp;mdash; Takayuki Shimizukawa (@shimizukawa) 2015, 10月 31 
振り返りKPT Keep  会場には遅刻せず余裕を持って到着できた 質問への対応、割とスムーズだった(と思う/アツい自画自賛)  PyConJPの経験が活きたな！  Sphinx Tシャツ持っていった  Problem  MacのDisplayPort忘れた  持ち物チェックリストに追加しよう  移動時間をちゃんと見積もるべし  帰り際のドタバタ。危うく帰れなくなる所だった(一応、みんな無事に帰れた)   やばい新幹線ぎりぎりかも
&amp;mdash; ごしゅじん (@kk_Ataka) 2015, 10月 31  新大阪着いた瞬間セブンセンシズに目覚めないとまずい
&amp;mdash; ごしゅじん (@kk_Ataka) 2015, 10月 31  @kk_Ataka 新幹線逃した！
&amp;mdash; Takayuki Shimizukawa (@shimizukawa) 2015, 10月 31</description>
    </item>
    
    <item>
      <title>PyConJP 2015 in TokyoでSphinxハンズオンのTAをしてきた #pyconjp</title>
      <link>/2015/10/13/pyconjp-sphinx-handson-kpt/</link>
      <pubDate>Tue, 13 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>/2015/10/13/pyconjp-sphinx-handson-kpt/</guid>
      <description>あらすじ さる10/9のPyConJP 2015 Tutorial day(1日目)にて行われたSphinxハンズオンにTAとして参加しました。
ので振り返りメモ。
 プレゼンテーション：Sphinxハンズオン ｜ PyCon JP 2015 in TOKYO  講師: 清水川さん TA: 渋川さん、自分   Sphinx hands-on!! at #PyConJP by #sphinxjp (@ プラザ平成 in 江東区, 東京都 w/ @takanory) https://t.co/0xK38ataBA pic.twitter.com/zkC4ZJJ5zf
&amp;mdash; Takayuki Shimizukawa (@shimizukawa) 2015, 10月 9 
振り返りKPT Keep  会場には遅刻せず余裕を持って到着できた  会場が開場する前に着いちゃって途方に暮れてるところ、@takanoryさんに拾ってもらった。ありがとうございました りんかい線？が遅れてたみたい  教室設営も余裕を持ってできた  …が、1点確認漏れあり、詳しくはpで   Problem  教室設営の時間でPCとプロジェクタの接続確認までやっておけばよかった  ハンズオン開始後にプロジェクタに接続したらまったく映らず スタッフの方が早急に代替機を用意してくれたので無事オンタイムで進められた  質問にパッと答えるのが難しかった  質問は過去に自分がググった記憶があるものも多かった そのため、解決するためのググるワードおよびサイト(sphinx-users.jpの逆引きページに書いてあったな、とか)はおぼろげにわかる しかし、すぐ出てこない あせる  Sphinx Tシャツ持っていくの忘れた  去年のSphinxCon JPで買ったTシャツ、ここで着なくていつ着るんだ！清水川さんが着替えてるのを見て後悔   Try  準備はプロジェクタつなげるまで  まあありがち  もっとSphinxを使おう PyConJPの別日も参加してみたい  その他の感想  ハンズオン参加者の方は大きく分けて「プロダクトガンガン作っているがドキュメントがない=書ける(良い)環境を作りたい」「Officeつらいので代替ツールの導入を考えたい」という2派が多かった  1GBのWordというすさまじいドキュメントの修正をしているという話も…  こんな機能もあるよ Sphinxウェブサポート — Sphinx 1.</description>
    </item>
    
    <item>
      <title>Ansible Meetup in Tokyo 2015.09でLTしてきました #ansiblejp</title>
      <link>/2015/09/24/ansible-meetup-201509/</link>
      <pubDate>Thu, 24 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>/2015/09/24/ansible-meetup-201509/</guid>
      <description>あらすじ MacBookに豚汁こぼしたらWi-Fi認識しなくなった…
&amp;mdash; ごしゅじん (@kk_Ataka) 2015, 9月 10 
スライド完成直前に、Macbookへ豚汁こぼしたkk_Atakaです。
Ansible Meetup in Tokyo 2015.09 - connpassでLT発表をしてきたので、まとめておきます。
当日の内容はきちんとまとめられているようなのでそちらも。
 Ansible Meetup in Tokyo 2015.09 - Togetterまとめ Ansible Meetup in Tokyo 2015.09レビュー 〜Ansible 2.0の機能紹介、Ansible 2.0で組むKubernetesクラスタなど - 無印吉澤  覚えて帰りたい事  Ansible 2.0は後方互換100%を目指す！(目指そうとしている) Ansible = アンスィボー 特定のAnsibleモジュール(shellなど)に関しては、サーバ側にPython(2.4〜)すら不要  ただしゴリゴリ書けるという点に限る。冪等性とか意識しだすとちょっとつらい   スライド   SIerでもAnsibleを導入したい！  from kk_Ataka 
FAQ  発表時と資料が違うよ？  上記の通り、本番前にMacbookに豚汁をこぼしてしまい、Deckset(Macアプリ)が使えなくなった…… なので、あわててreveal.jsを使って本番に臨みました。そのためデザインだけちょっと違う  内容自体はMarkdownで書いてGitHubに上げてて助かった…  reveal.js版は gosyujin/slideshare · GitHubにあります   反応 豚汁に関して 豚汁…… #ansiblejp</description>
    </item>
    
    <item>
      <title>Jekyllで出力するタグをソートする 解決編</title>
      <link>/2015/08/06/jekyll-tag-sort/</link>
      <pubDate>Thu, 06 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>/2015/08/06/jekyll-tag-sort/</guid>
      <description>あらすじ 1年半前の記事Jekyllプロジェクトへpull requestを行う手順(したとは言っていない) - kk_Atakaの日記でこんな事をやりたがってた。
 Jekyll でかき集められた tags (タグのリスト) がバラバラのため、 tags.html ページから探すのがつらいのでソートをしたい。
 で、こうした。
 Jekyll のソースを追っていった結果、 jekyll/lib/jekyll/site.rb 内の一行をいじるだけでいけた。
 その後、悩んだりもした。
  一応、 「 Liquid の領域」で頑張ればできる かも という情報は見つけた
 しかし、そもそもこの「タグをソートする」という機能が、どの領域で受け持つのが妥当なのかわからない( Liquid？ Jekyll？)
 ソースを読んでいった結果、「タグの value (記事自体)のソート」を Jekyll でやっていたので、 key もここでやればいいんじゃね？と思った    解法 Liquidでもできました。
{% raw %} {% assign sorted_tags = site.tags | sort %} {% for tag in sorted_tags %} {% assign t = tag[0] %} &amp;lt;code&amp;gt;&amp;lt;a href=&amp;#34;/tags.</description>
    </item>
    
    <item>
      <title>軽量マークアップ言語の歴史をゆるく調べた #sphinxjp</title>
      <link>/2015/07/13/lightweight-markup-language-history/</link>
      <pubDate>Mon, 13 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>/2015/07/13/lightweight-markup-language-history/</guid>
      <description>はじめに reSTの成り立ちが気になったので、Sphinx+翻訳 Hack-a-thon 2015.07 - connpassを利用して調べてみた。
reST以外にも軽量マークアップ言語MarkdownとWikiもいくつかピックアップ。
 reStructuredText  structuredText(reSTの系譜を辿って見つけた) setext(reSTの系譜を辿って見つけた)  Markdown  CommonMark(Markdownの現状を辿って見つけた)  Wiki  YukiWiki(代表的っぽい、かつデッドリンクじゃなかった和製Wiki) MediaWiki(Wikipediaで使われている)  はてな記法(国産)  このあたり。
調べた人 MarkdownとreStructuredTextとWikiの一利用者。
なので、込み入った話(時代背景とかその当時のMLとか)は全然知らない。
まとめ 年表 それぞれができた年。
   年 月 出来事(md, rst, wiki) それ以外の出来事 html的な出来事     1991    html1.0   1992 Aug？ setextリリース     1993       1994    W3C発足   1995 Mar Wikiリリース Javadocリリース        html2.</description>
    </item>
    
    <item>
      <title>Hugoを使ってみた</title>
      <link>/2015/06/30/hugo-helloworld/</link>
      <pubDate>Tue, 30 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>/2015/06/30/hugo-helloworld/</guid>
      <description>あらすじ 自分がローカルで取りためているメモをいい感じで見るために使用する静的サイトジェネレータを選別してみた。
要望とか環境とか。
 PCの外には出さない  ローカルで作成して、出力して、ローカルで見る  プレーンテキストでバージョン管理したい タグとかカテゴリである程度ジャンル分けしたい (できれば)Windowsでも(苦労せず)動かしたい  こんなことができそうな静的サイトジェネレータを探してみる…。
 Jekyll Middleman Pelican Sphinx Hugo あとはJavascript系からいくつか…  結果、Hugoにした 公式に書かれていることを信じて。
 Make the Web Fun Again Run Anywhere Fast &amp;amp; Powerful Flexible  Windowsでも結構使うので、個人的にはRun Anywhareがいいかなと思った。
Fast &amp;amp; Powerfulに関しては、他のサイトジェネレータから乗り換えた人が感じているようだけど、そんなに記事数増えない予定だからな～…と思っていた。
が、ビルド速度意外と大事だった。(後述)
インストール手順 公式のQuickstartガイドより。
Hugoインストール 割愛。バイナリファイルもあるので、それを持ってきてパス通す。hugoコマンドが実行できればOK。
&amp;gt;hugo version Hugo Static Site Generator v0.13 BuildDate: 2015-05-12T10:43:12+09:00 サイト新規作成 &amp;gt;hugo new site mysite こんな感じの階層でファイルができる。
C:. │ config.toml │ ├─archetypes ├─content ├─data ├─layouts └─static これがデフォルトの構造っぽい。</description>
    </item>
    
    <item>
      <title>実行ユーザの違いでJenkinsのホームディレクトリが変わって困った話</title>
      <link>/2015/05/26/jenkins-environment-path/</link>
      <pubDate>Tue, 26 May 2015 00:00:00 +0000</pubDate>
      
      <guid>/2015/05/26/jenkins-environment-path/</guid>
      <description>あらすじ 結構昔にWindows 7上において、以下の2通りのSeleniumスクリプト実行結果が違ってすごく困っていた。
前提条件としては、Seleniumスクリプトは同じ。実行コマンドも bundle exec ruby hoge.rb で同じ。違うのは実行の仕方だけ。
 コマンドプロンプトで実行  Seleniumスクリプト コマンドプロンプトからコマンド実行 正常終了  Jenkinsで実行  Seleniumスクリプト(「Windowsバッチコマンドの実行」でジョブに登録) リモートビルドから実行 ＼エラー／   原因の切り分け方とかもわからなかったのでかなり苦戦…。
環境  Windows 7 Jenkins 1.581 Ruby 1.9.3  bundler (1.3.5) pit (0.0.7) selenium-webdriver (2.43.0)   結論 原因はJenkinsとコマンドプロンプトでの実行時の 環境変数の違い だった。環境変数をいじって解決。
具体的に何が起こっていたかというと…。
 Seleniumスクリプトの中で pit (https://github.com/cho45/pit) というアカウントのID、パスワードを外出しできるGemを使用していた  pitの挙動は、 ~/.pit 直下にあるyamlファイルを探して、IDとパスワードを取得するというもの   コマンドプロンプトで実行したとき  実行ユーザは「今Windowsにログオンしている自分」 pitは ~/.pit = C:\Users\USER\.pit を見に行っていた  ホームディレクトリにはアカウント定義しているyamlがあるので正常に動作。まあこれはそうだよね。問題は次。
Jenkinsで実行したとき  実行ユーザは「Jenkins自体？」(コンソール出力を見るとリモートホスト127.</description>
    </item>
    
    <item>
      <title>golangでサーバのファイルをゆっくりダウンロードするツール作ってみた</title>
      <link>/2015/04/30/golang-helloworld/</link>
      <pubDate>Thu, 30 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>/2015/04/30/golang-helloworld/</guid>
      <description>あらすじ golangやるやる詐欺してたので、ようやくさわってみた。
参考サイト  golang.jp - プログラミング言語Goの情報サイト  を中心に、いろいろググりつつ。
バージョン  go version go1.4.2  やりたいこと  サーバに負荷がかからないようにちょっとずつ落とせる ネットワークに負荷がかからないようにゆっくり落とせる 落とし切る前に終了→再実行したら途中から落とせる  作ったもの gosyujin/yukkuri-downloader
 byte-rangeリクエストを投げて(初めて知った)ちょっとずつ落とせる  StatusPartialContentでレスポンスくれないサーバでは一気に落としてしまう  インターバルを指定できてゆっくり落とせる レジュームできる  他、
 設定ファイル(jxon)から設定を読み込める コマンドライン引数から設定を読み込める(設定ファイルより強い) proxyは環境変数HTTP_PROXYとHTTPS_PROXYを読み込める(使わない事もできる) WindowsとCentOSで動かせる  ビルドして実行すると
$ ./yukkuri-downloader -h [go-tran] 2015/04/30 19:17:47 Initialize. [go-tran] 2015/04/30 19:17:47 Read setting file: /home/kk_Ataka/go-tran.json Usage of ./yukkuri-downloader: -i=0: download interval(sec) -no-proxy=false: NOT use proxy -proxy=false: use proxy -r=0: getRange(byte) -u=&amp;#34;&amp;#34;: download file $ .</description>
    </item>
    
    <item>
      <title>Jekyllがデフォルトでは外部から繋がらなくなってたよ</title>
      <link>/2015/03/14/jekyll-changed-bindaddress/</link>
      <pubDate>Sat, 14 Mar 2015 00:00:00 +0000</pubDate>
      
      <guid>/2015/03/14/jekyll-changed-bindaddress/</guid>
      <description>あらすじ しばらく触っていなかったJekyllをアップデートしたときに他のPCからアクセスできなくてちょっとハマった。
Ruby - Sinatraがデフォルトでは外部から繋がらなくなってたよ - Qiita (タイトルはリスペクト)
解決策(暫定) _config.ymlにhost: 0.0.0.0を定義するか、起動時に--host 0.0.0.0オプションを指定すればいいんだけどそれがもっともよいんだろうか。
常時あげっぱなしにはしないんだけど、どうしても一瞬別のPCで起動してそこに向けて(ローカルからだったり外からだったり)アタックしたい時があるので困っていた。
環境 $ bundle show Gems included by the bundle: * RedCloth (4.2.9) * blankslate (2.1.2.4) * bundler (1.6.1) * celluloid (0.15.2) * classifier (1.3.4) * coffee-script (2.3.0) * coffee-script-source (1.7.1) * colorator (0.1) * execjs (2.2.1) * fast-stemmer (1.0.2) * ffi (1.9.3) * hparser (0.4.0 dc35f05) * jekyll (2.1.1) * jekyll-coffeescript (1.0.0) * jekyll-gist (1.1.0) * jekyll-paginate (1.</description>
    </item>
    
    <item>
      <title>rubyXLを使ってExcelを操作したい</title>
      <link>/2015/02/28/excel-by-ruby/</link>
      <pubDate>Sat, 28 Feb 2015 00:00:00 +0000</pubDate>
      
      <guid>/2015/02/28/excel-by-ruby/</guid>
      <description>あらすじ ExcelファイルをRubyで操作したい。
以前WIN32OLEから直接触ってみたけど、ライブラリを使って簡単に触ってみたい。
環境  Windows 7 Ruby 2.1.5  rubyXL 3.3.4  Microsoft Office 2010  参考  Ruby - RailsでExcelを扱うGemまとめ - Qiita RubyでExcelファイルを扱うライブラリの比較 - Qiita [Ruby]RubyでExcelをつかう[Rails] - Qiita RubyからExcelを操作する方法について ｜ Futurismo ※WIN32OLE使用  意外とある。
が、開きたいファイル、保存したいファイルが何なのか(xlsなのかxlsxなのか)によって使うライブラリを選定する必要あり。
xlsx読めない！とかxlsで書きこめない！とかある。
やりたいこと  共有サーバの中にあるExcelファイルを開く 特定のセル(B3みたいな)に値が入っているか確認する  入っていれば次の処理へ 入っていなければn個下のセル(B6みたいな)に値が入っているか確認する…の繰り返し  空いているセルに値を挿入 保存して終わり  よくありがちな「定期的に台帳の一番下に定型文を挿入したい」系の話。
ソース Gistにあげた。
 今回はrubyXLというライブラリを使ってみた。
わりと簡単に書けて、やりたいこと(開く、値読む、値書く、保存する)がすぐできたのでこれで。
これで便利。(^ー^)</description>
    </item>
    
    <item>
      <title>2014年kpt</title>
      <link>/2015/01/25/kpt-2014/</link>
      <pubDate>Sun, 25 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>/2015/01/25/kpt-2014/</guid>
      <description> もう1月終わっちゃうよ！
今年学んだこと 今年はなんかあんまり学んでないような…。
 Ruby  Kawasaki.rbに顔を出すようになった 初LT、初発表、いろいろ。良い環境です(会場も)  Jekyll  勢いでドキュメントを翻訳してみた 継続するのが難しい！だからいろいろ簡略化しようね！って結論を出したにも関わらず、最近滞っているので2015年はなんとかしなくては；；；  Sphinx  8月くらいにタイミング、規模、人員ふくめて奇跡的に導入できそうなプロジェクトに遭遇したので、勢いで導入したら(プレーンテキストでドキュメントしあげるのが)すげーよかった その経験を10月にSphinxCon JP 2014で発表させてもらった  Ansible  上記のSphinx導入したプロジェクトで小さく運用してみた その辺をまとめてスライド作って発表した(Kawasaki.rb、他) 今年のAdvent Calendarはその発表をまとめたものを公開した ホッテントリ入りした ギリギリ2年連続入れてうれしい   LT初め、ガチ発表初め、GitHubでプルリクエスト飛ばし初めで、初めていろいろ。
ブログの記事も「これ、どうやるといいのかな～」的なポエムが多かった。(いいかわるいかはさておき)
Keep  作ったものたちは育ってる(いや、なにもいじらずに現状維持)  勤怠入力とかメンドクサイ処理は Jenkins + Selenium で自動化して祝 2 周年 今年は残業申請(Excel)の提出も自動化した   Problem  新しいものに触れなかったなあ…気になってるけどまださわってもいないやつ  golang docker   書くのは自由！
Try  翻訳  Jekyll追いつくのもだけど、Pro Gitとか他の翻訳文化圏にも…  なんか調べて、なんか発表  また発表できるとよい  社内布教活動  Sphinxは難しそうだけど、Ansibleは少しいけそうな感触が…   </description>
    </item>
    
    <item>
      <title>Ansibleを使ったことない人に、ゆるくAnsibleを紹介してみた</title>
      <link>/2014/12/23/kawasakirb-019/</link>
      <pubDate>Tue, 23 Dec 2014 00:00:00 +0000</pubDate>
      
      <guid>/2014/12/23/kawasakirb-019/</guid>
      <description>はじめに この記事はAnsible Advent Calendarの23日目の記事です。
今回は、Ansible(というか構成管理ツール全般)を知らない人向けにゆるくAnsibleを紹介してみたので、報告します。
12/17のKawasaki.rb+αでの発表です。
発表者の構成管理ツール歴  Ansible  軽く2, 3回Playbookを作った程度 大勢にバラまくのはやったことない(2台くらい)  Chef  Chef系の本を買っていろいろ試したことはある けど、小さい規模で使うにはオーバースペック感、縛りがきつい環境で使うには政治が必要で、けっこうくじけた Chefがつらい人のためのAnsibleのはなし - ゆううきブログ もうちょっとシンプルに行けそう   聴講者の構成管理ツール歴  初見の人 Chef使ったことある(聞いたことある)人 Ansible使ったことある(聞いたことある)人  上から順に多かった。つまりChefはちょこっと知られてたけどそれ以外の人にはあんまりしられていない。
Ansibleはさらに知名度が低かった。(Chefを知ってる人に、どこでChefを知ったのかを聞くのは忘れた)
スライド  雑感 けっこうゆるふわな感じでまとめたのだけど、今まで手動(+シェルスクリプト)でやってた人からすると以下の点に関して好感触が得られたみたい。
 べきとう性を意識しなくてイイネという話  設定ファイルへの記述追加、サービスの制御などおまかせできる点で  SSHが通るだけでOK(とPython2.4-)でイイネという話  また、Ansible使ったことある人の使用事例として、「毎日テストをする時間だけ起動しておきたいプロセスをPlaybookで用意して、時間になったら数十台のサーバに対して一気に送る」とかいう用途に使われている話も。
確かにこれも構成管理だよね。この発想はなかった。
これから 感触はよかったので、もうちょっとAnsibleを広めてみたい。
JDocみたいな感じで、playbookからドキュメント生成できるツールってないんだろうか…。(調査不足？)</description>
    </item>
    
    <item>
      <title>kawasaki.rb #018 でJekyllドキュメント翻訳のLTをしてきた</title>
      <link>/2014/11/30/kawsakirb-018/</link>
      <pubDate>Sun, 30 Nov 2014 00:00:00 +0000</pubDate>
      
      <guid>/2014/11/30/kawsakirb-018/</guid>
      <description>あらすじ kawasaki.rb #018 でTokyuRuby会議08のLTの素振りをしたんだけど、都合によりTokyu本番で発表できなかったため、素振りが最終形になってしまった。
発表内容   Jekyllドキュメント翻訳活動振り返り  from kk_Ataka 
本家の更新についていくのがめんどくさいよねという事で、そこをどうするかについてまとめました。
が、5分におさめるのは難しい…。</description>
    </item>
    
    <item>
      <title>SphinxCon JP 2014 で発表してきました #sphinxjp</title>
      <link>/2014/10/27/sphinxconjp-2014/</link>
      <pubDate>Mon, 27 Oct 2014 00:00:00 +0000</pubDate>
      
      <guid>/2014/10/27/sphinxconjp-2014/</guid>
      <description> あらすじ ここしばらくいろいろSphinx関連であがいていた成果をSphinxCon JP 2014で発表してきましたよ。
自分視点からの感想。
概要 SphinxCon JP 2014 - connpass
資料のところから発表者の人の資料も全部確認できるよ。
発表内容は以下の通り。見よこのメンバー。ガチだよ！
 Welcome to Sphinx-1.3 (清水川) SIerでもSphinxを使いたい！総括 (kk_Ataka) SphinxとLaTeXで作る英文マニュアル (力武 健次) Markdownもはじめよう (高橋征義) Sphinx拡張 探訪 2014 (小宮 健 (@tk0miya)) 検索エンジンOktavia (渋川よしき) Sphinx HTML Theme Hacks (shkumagai)  (connpassより抜粋 / 敬称略)
自分のスライド   SIerでもSphinxを使いたい！総括  from kk_Ataka 
感想  さすがに40人近くいる会場だと大緊張 あんまり定量的な評価ではないので、そのあたりを期待されていたらごめんなさい 一応、SIer(元を含む)でSphinx導入に挑戦した方からは「あるあるですねー」という感想をいただけた 気になることがあったら適当にリプライとかください  懇親会、ビアバッシュ  渋川さんに会えた  Jekyllドキュメントの翻訳ってどーすればいいのかなーと困っている時に、 Shibu&amp;rsquo;s Diary: エンジニアは翻訳をやるとお得 に出会って自分の中にあるもやを解消してくれたすごい人  版管理+自動組版 - connpass @tk0miya さんより SphinxCon(Python)でJekyll(Ruby)のLTの練習した(TokyuRubyKaigi08用) VOYAGE GROUPさんありがとうございました  </description>
    </item>
    
    <item>
      <title>WEB&#43;DB PRESS vol.82を参考にHubotと戯れてみた</title>
      <link>/2014/09/24/hubot-helloworld/</link>
      <pubDate>Wed, 24 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>/2014/09/24/hubot-helloworld/</guid>
      <description>あらすじ 最近よくHubotという単語を聞くのでちょっといじってみたかったが、要素技術的に普段全然使わないものが多くてけっこう敷居が高かった。
そんな折、WEB+DB PRESS vol.82にちょうどHubot特集が掲載されていたのでこれ幸いと読み進めてみた。
というわけで、以下の内容は「Hubotの環境を整えてHerokuにデプロイ、idobataに常駐させる」ところまでの作業備忘録。
idobataに云々以外の詳しい説明はWEB+DB PRESSのほうがくわしいよ。
環境構築 node.jsとnpm(Node Package Manager)をインストールする。
$ sudo yum install nodejs npm (略) $ node -v v0.10.29 $ npm -v 1.3.6 npmでhubotとcoffee-scriptをインストールする。
オプションの-gはグローバルなパスにインストール。
$ sudo npm install -g hubot coffee-script (略) /usr/bin/hubot -&amp;gt; /usr/lib/node_modules/hubot/bin/hubot coffee-script@1.8.0 /usr/lib/node_modules/coffee-script └── mkdirp@0.3.5 hubot@2.8.1 /usr/lib/node_modules/hubot ├── optparse@1.0.4 ├── log@1.4.0 ├── scoped-http-client@0.9.8 ├── coffee-script@1.6.3 └── express@3.3.4 (methods@0.0.1, fresh@0.1.0, cookie-signature@1.0.1, range-parser@0.0.4, buffer-crc32@0.2.1, cookie@0.1.0, mkdirp@0.3.5, debug@2.0.0, commander@1.2.0, send@0.1.3, connect@2.8.4) $ hubot -v 2.</description>
    </item>
    
    <item>
      <title>kawasaki.rb #015 でSphinx導入事例の発表をしてきました #kwskrb #sphinxjp</title>
      <link>/2014/08/28/kawasakirb-015/</link>
      <pubDate>Thu, 28 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>/2014/08/28/kawasakirb-015/</guid>
      <description>あらすじ kawasaki.rb #015 で発表してきたので、まとめ。
 Kawasaki.rb #015  あわせて読みたい
 kawasaki.rb #013 でSphinx導入事例の発表をしてきました と #011 #012 参加記録 #kwskrb #sphinxjp - kk_Atakaの日記  本当は14回で発表したかったのだけど、病欠してしまった…。
発表内容 以下のスライドを元に発表しました。
  SIerでもSphinxを使いたい！ 後編  from kk_Ataka 
結論 結論としては、
 やはり納品物にするには(歴史的経緯などから)厳しい  社内ドキュメントにする分には問題なし SphinxからOutputを出すのはいいけど、顧客に巻き取られた後変更に耐えうる形式じゃないとつらい  チームで適用するには一人ではつらい(個人的なパワー不足)  最低でも一人賛同者がほしい   こんな感じ。もっとパワフルな人ならうまくやれるかもしれないが、自分では厳しかった。
以下かいつまんで。
導入にあたり  実際にSphinxを導入するための壁  自分とプロジェクトのメンバー reST記法覚えに注力してもらうために、雑用(お膳立て)は全部やる プロジェクトと顧客 Officeで書かないよという宣言をする必要があると思う   納品にあたり 納品後、顧客に巻き取られる場合のいい案がない。
 どうやって納品するの？  rstのまま(rst -&amp;gt; make) 保守も自分たちでできるならそれでもいいかも 顧客にmakeしてもらうの敷居高すぎ Outputを提出 html, pdf 見た目はきれい、だけど修正が発生した場合どうすれば word きれいに出すの難しい(個人的に) / あまり需要がない？   つまるところ「よし、いこう！いこうぜ、みんな！」状態を作るのがかなり難しい。</description>
    </item>
    
    <item>
      <title>jekyllrb-ja キックオフを実施しました</title>
      <link>/2014/07/26/jekyllrb-ja-meetupmd/</link>
      <pubDate>Sat, 26 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>/2014/07/26/jekyllrb-ja-meetupmd/</guid>
      <description>あらすじ Jekyllドキュメントの初版翻訳が終わりまして。
初版はえいや！でやれば進むもので、大変なのはそれを継続させていく事。
今後の進め方とかどこかで一回詰めたいな〜と思っていたら@yandodさんに集まる場所を提供していただきました！(がJekyllなのだ)
Engine Yardさんありがとうございます！
詳細は以下。
日時  7/18 19:30-21:00  場所  株式会社 Engine Yard  参加者(名前順)  @chezou @gosyujin @harupong @melborne @tmkoikee @yandod  自己紹介をしたら業務でJekyllを使いこんでいる人、ガチで翻訳している人などなど経歴がハンパなかった…。
やったこと  v2.0の進め方  ブランチ戦略 本家への追従の仕方 翻訳ワークフロー   v2.0の進め方 ブランチ戦略  ドキュメントなので特に分ける必要はないのではないか  progitでもテストがこけなければメンテナが即マージ、表示崩れなどを発見したら適宜直す方針  とりあえずmasterブランチ一本で masterブランチに対してhttps://teatro.io/ 使ってみよう  masterで適用してみてダメそうだったらdevelopブランチきってみよう  writerの権限わける プルリクをマージする基準を決めたい  LGTMされてx時間たって何もなかったらマージするなど このあたりの操作は最終的にはbot(hubot)に任せたい   本家への追従の仕方  Engine Yardではオリジナルをpullしてきてmergeしている @melborne さんのgh-diffのデモが大好評  差分からIssueをたてる機能もあり、cron等で定期的に実行すれば「Issue=翻訳残」とわかりやすい  rakeタスク化して誰でも実行できるようにしたい   gh-diffを使用した運用フロー案  Contributerの誰かがdiffをとって .</description>
    </item>
    
    <item>
      <title>kawasaki.rb #013 でSphinx導入事例の発表をしてきました と #011 #012 参加記録 #kwskrb #sphinxjp</title>
      <link>/2014/07/13/kawasakirb-011-012-013/</link>
      <pubDate>Sun, 13 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>/2014/07/13/kawasakirb-011-012-013/</guid>
      <description>あらすじ kawasaki.rb に参加したものの記録を取っていなかったのでまとめて。
13回目ではSphinxを話をしたのでその備忘録。Ruby系の勉強会だけどRuby以外の発表でも大丈夫。
 Kawasaki.rb #011  kawasaki.rb #011 を開催しました #kwskrb  Kawasaki.rb #012  kawasaki.rb #012を開催しました #kwskrb  Kawasaki.rb #013  kawasaki.rb #013を開催しました #kwskrb   発表内容 以下のスライドを元にLTしました。
  SIerでもSphinxを使いたい！ 前編  from kk_Ataka 
Sphinxを使用したドキュメント作成をする機会を探っていて、ようやくドンピシャで導入できるプロジェクトをこの手で手繰り寄せたのでそこで得た知見をまとめました。
大体の内容はこの辺から参照してます。
 「Sphinxをはじめよう」を読んで導入したいと思ったので色々考えてみた - kk_Atakaの日記 「Sphinxをはじめよう」を読んで導入したいと思ったので色々考えてみた2 - kk_Atakaの日記  ねらい  「なんとか設計書_日付_リビジョン(だれそれ更新分)(最新版).xls」 とかいう差分取りづらい伝説のファイルが共有サーバ上に量産されるの辛い… 共有サーバに上記のようなファイルがちらかるのでどこに何があるかわかりにくい ミリ単位のレイアウト調整に苦心するのやだ  という事で
 プレーンテキストで文書を作成できる 文書を体系立てて管理できる デザインなどはアウトプット時におまかせ  できるSphinxを導入しようというもの。
なぜSphinxがいいのかというところを競合するツールと比較してみたところまでを発表しました。
次の発表で「導入する際、導入した後に気をつけた事」とか発表する予定です。
おまけ 11回目、12回目で起こったこと  ロゴができた kawasaki.rbのGitHub Pagesができた(Powered by Jekyllだ！) kawasaki.</description>
    </item>
    
    <item>
      <title>Jekyllドキュメントを翻訳してなんとなくわかってきたもの</title>
      <link>/2014/06/22/translated-jekyllrb/</link>
      <pubDate>Sun, 22 Jun 2014 00:00:00 +0000</pubDate>
      
      <guid>/2014/06/22/translated-jekyllrb/</guid>
      <description>あらすじ Jekyllドキュメントの翻訳リポジトリを作成して約3ヶ月くらいたちまして。
 Jekyllドキュメントの日本語翻訳リポジトリ「jekyllrb.com.jp」を作成しました - kk_Atakaの日記 kawasaki.rb #010 で発表してきました #kwskrb - kk_Atakaの日記  現状報告と、今までの知見のまとめを。
とりあえず自分の中でたまっているものを整理したいのでとりとめもなく書き出していくメソッド。
現状 Jekyll &amp;bull; シンプルで、ブログのような、静的サイト
 翻訳当時のリビジョンの Documentation 全翻訳が完了しました！(historyなど一部を除く)  翻訳期間中、本家の更新に追従できていないのでこれから猛追モードに入ります  プロジェクトを Organization に昇格させました  jekyllrb-ja/jekyllrb-ja.github.io もともとは.br版の翻訳をしている人のリポジトリをお手本にしていたので個人リポジトリで細々とやっていた が、協力していただける方が増えたのもあり Org 化   知見とか 翻訳開始時に悩んでいた事は以下の3点。
それに対しての答えは、現時点で少しずつ見えてきた気がする。
少なくとも、今の自分の中で納得できる答えは見つけられた。
意訳 or 直訳？  色々な人の意見をもとに「日本人が読みやすいように意訳していく」のが良いではという結論に至った 結局のところ翻訳した文書は誰が読むかを考えると、自分(日本人)だろう、という話が一番腑に落ちたので…以下、感銘を受けた記事など  Python界隈の翻訳プロジェクト エンジニアは翻訳をやるとお得 - 渋日記@shibu.jp 翻訳のススメ - Elliptium ドキュメントの翻訳にSphinxを使う (i18n非利用) - Sphinx-Users.jp  なんという Python 率。「ドキュメント 翻訳 なんとか」でググると Python 界隈の方の活動がすごい引っかかるのはそれだけ盛んであるということなんだろうか(Ruby 方面へのアンテナの感度が低いだけとも思う) 直訳でもフツーに間違うから固い文より、読みやすい文の方がよいのではないか(誤訳しない努力はする)  原文はどうしよう？  これについては「更新の追従」で書く Jekyllrb-jaでは「原文(英語)はコメントアウトで残す」方式を採用した  誰が、どこで、どう管理するか？  これに関しては、結局プロジェクトによりけりとしかいえないかな プロジェクトの舵を取る人が「入れよう！」といったら入れればいいし、「分けよう！」といったら分ければよいと思う  「分けよう！」はこのプロジェクト(jekyll)だし、「入れよう！」は progit とか sinatra かな   こんな感じなことが多いのかな〜。まあ、こんな綺麗に二分割はできないけどだいたいの方向性として。</description>
    </item>
    
    <item>
      <title>WindowsにSphinxのlatexpdfjaができる環境を整えるのに苦戦した話</title>
      <link>/2014/05/28/sphinx-latexpdfja-for-windows/</link>
      <pubDate>Wed, 28 May 2014 00:00:00 +0000</pubDate>
      
      <guid>/2014/05/28/sphinx-latexpdfja-for-windows/</guid>
      <description>あらすじ Windows に Sphinx から pdf を出力する環境を作成したが、 make latexpdfja コマンドを打つと途中で失敗する。
 for f in *.pdf *.png *.gif *.jpg *.jpeg; do extractbb $f; done
f の使い方が誤っています。
make: *** [all-pdf-ja] Error 255
 環境  Windows 7 Python 2.7.6 Sphinx 1.2.2 e-pTeX 3.1415926-p3.4-110825-2.6 (sjis) (TeX Live 2013/W32TeX)  kpathsea version 6.1.1 ptexenc version 1.3.1   結論  PYTHON_HOME\Lib\site-packages\SPHINX_HOME\sphinx\texinputs の下に make.bat がなく、 Makefile しかない場合エラーが出るかもしれない [Sphinx-Users 276] Re: LaTeX経由でのPDF作成手順をアップデートしました にある make.bat をコピーする 上記の texinputs 下に配置して再度 make latexpdfja を実行する  これでうまくいくかもしれない。</description>
    </item>
    
    <item>
      <title>「Sphinxをはじめよう」を読んで導入したいと思ったので色々考えてみた2</title>
      <link>/2014/05/19/sphinx-recommend2/</link>
      <pubDate>Mon, 19 May 2014 00:00:00 +0000</pubDate>
      
      <guid>/2014/05/19/sphinx-recommend2/</guid>
      <description>前回のあらすじ  「Sphinxをはじめよう」を読んで導入したいと思ったので色々考えてみた - kk_Atakaの日記  かなり期間があいてしまったが、次に考えるは、実際にどうやって「導入」して「運用」するか。
「納品」するに当たってどんな問題があるか。
このあたり、良い前例があったら知りたいところ。
課題 課題はとりあえず2段階あると思っている。
第1段階: 対開発工程の課題  プロジェクトに対しての導入・運用方法  どうやって運用していくか。
ルール決め大事。
第2段階: 対納品工程の課題  納品形式 納品後修正が発生した場合どうするか  顧客(※)に対してどうやって納品するか、またそれをなおすのは誰？
(※) 顧客とは、納品したドキュメントを読む、使う、なおす人。社内の人かもしれないし、社外の人かもしれない。
一つずつ考えていく。
対開発工程 登場人物 以下、架空の登場人物とする。
 リーダー : Sphinx を導入したい側  Sphinx 導入に燃えている人  メンバー : 導入した Sphinx を使う側  Sphinx および reST は知らない   プロジェクト内での運用方法  reST は覚えてもらう  マスト。これがないと書けないから 一応「 reST 記法書き方」的なページは リーダー が事前に作って教えてあげることが前提 実はマストではなかった Markdownとかがよければ、 Pandoc を経由して Markdown -&amp;gt; reST -&amp;gt; OUTPUT というのもありかも ドキュメンテーションツール「Sphinx」をチーム運用するまでの道のり - Librabuch  とりあえず メンバー にはドキュメント作成に注力してもらい、ファイル生成などは リーダー が整備する 運用はできるだけ git push または svn commit してもらうだけにしたい  ただし、いきなりファイルを push してもらうのはちょっと嫌で、 Sintax error くらいは メンバー のローカルでも確認してもらいたいんだけど そうすると Python インストール必須だよなぁ… ローカルで reST プレビューとかできるのかなぁ… GitHub とか使えばプレビューできるんだけど… バージョン管理ツールの使い方は割愛 アウトライン(雛形？ / タイトルとか目次とか)はあらかじめ定めておき、空ファイル(ひな形)は リーダー が事前に用意しておく  コミット後は、コミットをフックして make (Jenkins などで)して Apache の下とかに展開する  http://xx.</description>
    </item>
    
    <item>
      <title>kawasaki.rb #010 で発表してきました #kwskrb</title>
      <link>/2014/04/01/kawasakirb-010/</link>
      <pubDate>Tue, 01 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>/2014/04/01/kawasakirb-010/</guid>
      <description>あらすじ 詳細は主催者の @chezou さんのまとめから。
 Kawasaki.rb #010 - Kawasaki.rb ｜ Doorkeeper kawawaki.rb #010 を開催しました #kwskrb ｜ once upon a time,  kawasaka.rb というコミュニティを知り、参加。
はじめて LT した！
流れ  今回予定されていた LT の 1 本が @chezou さんの「はじめて翻訳記事を書いたら300ブクマ超えた話」  ブログ記事とソフトウェアのドキュメントの違いこそあれ、方向は大分近いかも  流れで 次枠の LT に入れてもらった  スライドなど用意していなかったため、 自分のエントリ をもとにやったことと、困っていることを発表した   初めての LT だったので緊張したが、得るものがたくさんあった。
以下あまりまとまってない内容 当該記事の中で、自分が困っていると思った項目のうち、「原文はどうしよう？」というところに焦点を当てた。
困っている項目はこんな感じ。
 意訳 or 直訳？ 原文はどうしよう？ 誰が、どこで、どう管理するか？  ※ 「誰が、どこで、どう管理するか？」に関しては、プロジェクトの方針を決める人たちが「こうしたい」と決めたら、それを尊重するのが一番よいかと。 Jekyll ( jekyllrb.com )の場合は「 本家では他言語のドキュメントは管理したくない 」という方針のため、日本語用リポジトリ jekyllrb.</description>
    </item>
    
    <item>
      <title>Jekyllドキュメントの日本語翻訳リポジトリ「jekyllrb.com.jp」を作成しました</title>
      <link>/2014/03/13/jekyll-make-jekyllrb-com-jp/</link>
      <pubDate>Thu, 13 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>/2014/03/13/jekyll-make-jekyllrb-com-jp/</guid>
      <description>あらすじ Jekyll プロジェクトに対していろいろやった。
 Jekyll プロジェクトのリポジトリルートにある README.markdown と CONTRIBUTING.markdown を日本語訳してプルリクした！ 人生初のプルリクエストをささげ、マージしてもらえた。やった！ いきなりカットインしてきた PR に対してすごく親身に対応してもらえた あわせて Jekyllドキュメントの日本語翻訳リポジトリ を作成した！ 手伝ってくれる人募集中です！お願いします！ 推敲、翻訳してくれる人の募集(切実) · Issue #14 · gosyujin/jekyllrb.com.jp  所感 今回のやり取りを通じて、ドキュメントに対して以下のような観点で考える力が足りないと感じた。
まだ明確な答えは出ていないので、これからドキュメントを育てつつ答えを探していきたい。
 意訳 or 直訳？ 若干意味が通らない文章になってもいいから、出てくる単語を全て愚直に訳す？ 経験(実際にライブラリを使うと、「このコマンドはこう動くから、この文章ではこう言いたいのだろう」的なニュアンスはわかったりする)をもとに意訳する？  前者だと文章がごちゃっとなりそうで、後者だと大事な表現を落としてしまう事が多そう 他プロジェクトなどで翻訳された文章を読んでいると、前者が多いような気がする… もちろんおそろしくカッコよくて読みやすい文章に訳せるならば、それに越したことはない  原文はどうしよう？ 原文(英語)の扱い  残す？残さない？また、残す場合はコメントアウト？ 文章を比較する場合や本家の更新に追従する場合、原文がないとわけわからなくならない？ diff とかとるのに  本家への追従の仕方  本家のドキュメントにどうやってついていく？  誰が、どこで、どう管理するか？ Author と Committer が読めない(管理できない)ブツはどのように管理すべきなのか  本家のリポジトリに jp とか en みたいにディレクトリ切ってそこで管理していく 翻訳したドキュメントは、その言語を取り扱える別の人が所有し、本家はそこをフォークしておく   この辺、他のプロジェクトではどうやっているんだろう。
プルリクに至るまでの思考と行動の流れ 以下、おまけ。
いかにして Jekyll にプルリクするに至ったかの経緯。</description>
    </item>
    
    <item>
      <title>Redmine 2.x でテストを実行するとエラーになってしまう</title>
      <link>/2014/02/24/redmine-test/</link>
      <pubDate>Mon, 24 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>/2014/02/24/redmine-test/</guid>
      <description>あらすじ Redmine 2.x でプラグインだけをテストするにはどうしたらいいのか。
と、実行するとエラーになってしまった。
環境  Windows 7 Redmine 2.x  参考サイト  テストの実行 — Redmine.JP tail -f pinzo.log: Redmine プラグインのテストが実行できるまで Haru&amp;rsquo;s blog: Redmine 2.0.xにプラグインを移植する  手順 公式には rake test:engines:units とか rake test:engines:functionals でいけるって書いてあるけどだめだった。昔のバージョンから変わってるっぽい。
タスクを見てみると…。
rake redmine:plugins:test # Runs the plugins tests rake redmine:plugins:test:functionals # Run tests for {:function... rake redmine:plugins:test:integration # Run tests for {:integrat... rake redmine:plugins:test:units # Run tests for {:units=&amp;gt;&amp;#34;... rake redmine:send_reminders # Send reminders about iss.</description>
    </item>
    
    <item>
      <title>Jekyllプロジェクトへpull requestを行う手順(したとは言っていない)</title>
      <link>/2014/01/28/pull-request-to-jekyll/</link>
      <pubDate>Tue, 28 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>/2014/01/28/pull-request-to-jekyll/</guid>
      <description>あらすじ  Jekyll に一点気になるところがあったのでなおしかたを調べた せっかくなのでプルリクエストしてみたい！ …が、知らないこと多すぎて頓挫 とりあえず、今わかったところまでまとめた ← 今ここ  なおした内容 Jekyll でかき集められた tags (タグのリスト) がバラバラのため、 tags.html ページから探すのがつらいのでソートをしたい。
修正内容 Jekyll のソースを追っていった結果、 jekyll/lib/jekyll/site.rb 内の一行をいじるだけでいけた。
def post_attr_hash(post_attr) # Build a hash map based on the specified post attribute ( post attr =&amp;gt; # array of posts ) then sort each array in reverse order. hash = Hash.new { |hsh, key| hsh[key] = Array.new } self.posts.each { |p| p.send(post_attr.to_sym).each { |t| hash[t] &amp;lt;&amp;lt; p } } hash.</description>
    </item>
    
    <item>
      <title>2013年kpt</title>
      <link>/2013/12/31/kpt-2013/</link>
      <pubDate>Tue, 31 Dec 2013 00:00:00 +0000</pubDate>
      
      <guid>/2013/12/31/kpt-2013/</guid>
      <description>今年学んだこと いろいろ作ってみた系。
 Ruby  自分で使う用のなにかを書いてみた gosyujin/nico_cui · GitHub  ニコ動をパトロールするスクリプト thor 使ってコマンドをカッコよくしたり、 mechanize でサイトパースしたり  QR-Sina Heroku  QRコード作成。 sinatra で起動   Redmine  決まった時間に Redmine のバックアップを取るプラグインを作った gosyujin/auto_backup · GitHub  Jekyll  1年間 Jekyll + Markdown でブログ書いた Liquid ではてな記法の注釈的な事ができるプラグインを作ってみた reference.rb · GitHub   いろいろ調べてみた系。
 iOS, Android  必要にせまられて調べ物 iOSのバックアップ/リストアで残るもの/消えるもの それを編集する手段 - kk_Atakaの日記 Androidアプリのインストール、起動方法によってIntentのフラグが微妙に変わる件 - kk_Atakaの日記 Androidの自動テストツール、今(2013年)から使うなら何がよいのか - kk_Atakaの日記  Sphinx  「Sphinxをはじめよう」を読んでどうやったら導入に持っていけそうか策を練ったり   Android のテストツールに関しては、</description>
    </item>
    
    <item>
      <title>RubyでQRコードを生成してみる</title>
      <link>/2013/12/24/ruby-qr/</link>
      <pubDate>Tue, 24 Dec 2013 00:00:00 +0000</pubDate>
      
      <guid>/2013/12/24/ruby-qr/</guid>
      <description>あらすじ この記事は Ruby Advent Calendar 2013 - Qiita [キータ] の 24 日目の記事です。
 23 日目: mrknさん 24 日目: ここ 25 日目: aerealさん  とりあえず、私用で URL から QR コードを生成したいので、 Ruby で実現できるか調べてみた。
成果物 とりあえず、以降の手順の QR コード作成方をもう少しゴチャゴチャやって Heroku にデプロイ。
 tycoon-qr-sina gosyujin/qr_sina · GitHub  課題  特にエラーチェックとかしてない 日本語がうまく読み取れない  今回使った rqrcode の Issue の中にこんなものを発見した。 UTF8 strings under Ruby 1.9.2 · Issue #3 · whomwah/rqrcode · GitHub
で、やってみると、確かに日本語を QR コードに落とす事ができた！
ただし、ここでさらにわからないことが増えた…。
 UTF-8 文字列を安全に CP852 に変換する方法(今は force_encoding で無理やり変換している) なんで CP852 なのか そもそも CP852 とは  参考サイト  toretore/barby · GitHub Example Embed barcode - ThinReports - Matsukei Open Source Center Railsの画面にQRコードを表示 - 技術メモ的なモノと気になるモノ RubyでQRコードを作るには - まめ畑 rubyでQRコード生成 - harry’s memorandum  環境  Windows 7 Ruby 1.</description>
    </item>
    
    <item>
      <title>Gitの.git/objectsの中身を追ってみる</title>
      <link>/2013/12/14/git-dotgit-objects/</link>
      <pubDate>Sat, 14 Dec 2013 00:00:00 +0000</pubDate>
      
      <guid>/2013/12/14/git-dotgit-objects/</guid>
      <description>あらすじ この記事は Git Advent Calendar 2013 の 14 日目の記事です。
 12 日目: @ton1517さん - gitのサブコマンドを自分で作る - ton-tech-ton 13 日目: @horimislimeさん - git mergeでコンフリクトが発生するか前もって調べる方法 - Qiita [キータ] 14 日目: ここ 15 日目: kyanroさん - git - rebase 直後に、自分が修正していたファイルが変更されたかどうかを調べる - Qiita [キータ]  とりあえず 12 日目へつなげておきますね。
最近 Subversion を使うことが多く、めっきり Git を使っていないので、復習として .git/objects の中身を追ってみた。
参考  Pro Git 9章 Git - Gitの内側 アリスとボブのGit入門レッスン Chapter 14 Dive into .git 日本語版 - SlideShare 見えないチカラ: 【翻訳】Gitをボトムアップから理解する  結論 とりあえず add さえしていれば 、ファイルを救える。</description>
    </item>
    
    <item>
      <title>Jekyllのプラグイン作成で複数ファイルにまたがったタグをどう扱えばいいのかわからない話</title>
      <link>/2013/11/25/jekyll-plugin-reference/</link>
      <pubDate>Mon, 25 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>/2013/11/25/jekyll-plugin-reference/</guid>
      <description>あらすじ Jekyll ではてなダイアリーのような脚注をつけられるプラグインを作った。
 gosyujin.github.com/_plugins/gosyujin.github.com/reference.rb  文中に登場した ref タグの引数を集めて ref_anchor タグが打たれた箇所にリスト出力する、というもの。
こう書くと、
- 超スタンダード {{ &amp;#34; {% ref といわれている &amp;#34; }} %} - 誰の PC にも入っている {{ &amp;#34; {% ref といわれている &amp;#34; }} %} - 誰でも簡単に使える {{ &amp;#34; {% ref といわれている &amp;#34; }} %} - きめ細かいデザインが可能 - 画像やフローの挿入も簡単 (略) {{ &amp;#34; {% ref_anchor &amp;#34; }} %} こうなる。
(略)
一応、やりたいことはできたんだけど、以下のようなことができなくて力技でなんとかした。
できる 同じ .md ファイル内に ref タグと ref_anchor タグを書くと問題なくいける。
上記あらすじの例がそう。
できない ref タグは .</description>
    </item>
    
    <item>
      <title>「Sphinxをはじめよう」を読んで導入したいと思ったので色々考えてみた</title>
      <link>/2013/10/25/sphinx-recommend/</link>
      <pubDate>Fri, 25 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>/2013/10/25/sphinx-recommend/</guid>
      <description>あらすじ 今までちびちび触ってきたが「Sphinx をはじめよう」を読んで、改めて Sphinx を導入したいと考えた。
そこで、今の環境でどうやったら導入できるのか色々考えてみたが、相談できる人もいないのでここにアップしてみる。
本当は説得材料をつらつらと上げて「だから試してみよう」ってところに持って行きたかったんだけど、そこまでは行けていない。ダラダラ書いている。
テーマ  適材適所  決して Office ディスではなく。色々なツールが適材適所で LET US CLING TOGETHER できる道を考えたい。
結論  ドキュメント  Sphinx  複雑な表や表計算が必要な資料  Excel で別添資料扱い？  その他こまい文書  Redmine とかの Wiki に書き換え   って分けられると、幸せになれると考えている。。
Word は…思いっきり Sphinx と競合する気が…。
現在の己の認識 Office スタイル 今の主流。
長所  超スタンダード(といわれている) 誰の PC にも入っている(といわれている) 誰でも簡単に使える(といわれている) きめ細かいデザインが可能 画像やフローの挿入も簡単  (「きめ細かい」とか「簡単」とかの定義がすごいめんどくさいんで、ここはふわっとした感じで)
これに加えて、下記のようなメンドクサイ作業をなんとな〜く作成可能なのは Office が一番有名なので他のツールへの移行がしづらいんではないかと個人的に思っている。
 複雑な箇条書き  1.1.章を作ってかなり間が空いてから 1.2.章(直前のリストの続き)とかを挿入したい  エグい表 / テーブル  結合、分割超使う。ヘタに行など追加すると死んでしまう  値の計算  Excel の独壇場。上のエグい表に「A列とB列を足した値をC列に追加」とか   短所  ちょっとしたメモから何まで Word, Excel で作成され共有フォルダに量産される  これは人にもよるか  どのドキュメントに何が書いてあるか探せない  みんなどうやって探し当てるの？  設計書の修正前と後で diff がとりづらい、把握しづらい  変更点を「変更履歴シートに書くことで履歴管理」するのが難しい。確実に忘れる。差分の確認むずい。運用で回避無理…  誰かが誤ってレイアウトをいじるといろいろグチャグチャになる  リストの高さとかすぐいじっちゃう フォーマットは壊さないというチームの結束がないと、あっという間にレイアウトにバラつきが出ると思うんだけどどうなんだろう  だいたい開くのに重い  Excel は メモや設計書ではなく 表計算部門などで活躍できるのはわかるが…。</description>
    </item>
    
    <item>
      <title>Sphinxのプラグインの作り方を学ぶ</title>
      <link>/2013/10/02/sphinx-plugin/</link>
      <pubDate>Wed, 02 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>/2013/10/02/sphinx-plugin/</guid>
      <description>あらすじ Sphinx のタグを拡張してみたい。具体的には打ち消し記法がほしい。
という事で Sphinx 拡張に手を出す。
ただし、 Python は Hello World くらい…。
参考サイト  Sphinx拡張 Sphinx v1.0.6 documentation Sphinx拡張 Sphinx 1.2b1 documentation  打ち消し線は既に実例があったので、これを写経する方針で。
 Sphinxで打ち消し線を使う - TIM Labs  環境  Windows XP Python 2.7.3 Sphinx 1.1.3  と、
 Windows 7 Python 2.7.4 Sphinx 1.2b.1  Sphinxの拡張の仕方 Sphinx 1.1.3 時に調べていた感じでは、拡張には大きく3通りある模様。
 新出力形式対応やパース時のアクションサポート(ビルダー追加で実現) reSTのマークアップ拡張 いろいろなフックポイントで諸処理を記述  今回はreSTのマークアップ拡張が該当するかな。
拡張は基本的にPythonで記述する。(setup関数を呼び出す)
作成した拡張機能は conf.py の中で読み込むように設定を変更する。
以下、打ち消し線を導入しつつ何してるのか写経してみる。
作成 conf.py(修正) sys.path.append(os.path.abspath(&amp;#39;exts&amp;#39;)) extensions += [&amp;#39;sphinxcontrib_roles&amp;#39;] # configuration case.</description>
    </item>
    
    <item>
      <title>iOSのUIWebViewのキャッシュがどういうタイミングでリセットされているのかわからんという話</title>
      <link>/2013/09/25/ios-uiwebview-cache/</link>
      <pubDate>Wed, 25 Sep 2013 00:00:00 +0000</pubDate>
      
      <guid>/2013/09/25/ios-uiwebview-cache/</guid>
      <description>あらすじ とあるWebサーバのファイルの内容を変えたとき、 UIWebView 経由でアクセスすると更新が反映されない現象が起こった。
また、戻るボタンも更新ボタンもなにもつけていなかったため、その状況でどうやったらキャッシュを捨てて新しいファイルを取得できるかわからなかった。
環境  サーバ  apache バージョン失念  クライアント  iOS 6.0 と 5.1 の UIWebView と Safari   サーバの内容 変更したファイル index.html
- &amp;lt;p&amp;gt;Hell World&amp;lt;/p&amp;gt; + &amp;lt;p&amp;gt;Hello World&amp;lt;/p&amp;gt; とりあえず更新がわかるようにテキトウな文言で。
上記 index.html にアクセスした結果  iPhone Safari  更新された  iPhone 独自アプリ内の UIWebView  更新されない場合があった  上記とは別の iPhone Safari  更新された  おまけ: PCからアクセスした場合(IEだったかな)  更新された   試行回数が不十分なため完全ではなさそうだが、とりあえず UIWebView でのアクセス時は更新されたりされなかったり。(アプリのタスクを切ったり、電源ON/OFFしたりも試した)
Safari は確実に更新されたため、恐らく UIWebView が Safari とは違う風にキャッシュを持っていて、それが悪さをしているんじゃなかろうかと推測。</description>
    </item>
    
    <item>
      <title>Jekyllバージョンアップの際に思いのほか手こずった話 てっく煮さん製プラグインの更新に追従したい編</title>
      <link>/2013/09/07/jekyll-maintenance-2/</link>
      <pubDate>Sat, 07 Sep 2013 00:00:00 +0000</pubDate>
      
      <guid>/2013/09/07/jekyll-maintenance-2/</guid>
      <description>前回までのあらすじ  Jekyllバージョンアップの際に思いのほか手こずった話 Jekyll Bootstrapの更新に追従したい編  結論 fork していれば、だいたいなんとかなる。
環境  Ruby 1.9.3  RedCloth (4.2.9) bundler (1.3.5) classifier (1.3.3) colorator (0.1) commander (4.1.4) directory_watcher (1.4.1) fast-stemmer (1.0.2) highline (1.6.19) hparser (0.4.0 dc35f05) jekyll (1.0.0 9f94eaf) kramdown (0.14.2) liquid (2.5.1) maruku (0.6.1) posix-spawn (0.3.6) pygments.rb (0.4.2) rake (10.1.0) rdiscount (2.1.6) redcarpet (2.2.2) safe_yaml (0.7.1) syntax (1.0.0) yajl-ruby (1.1.0)   参考サイト  Git で複数のリポジトリをまとめたり、逆に切り出したりする - Qiita [キータ]  やりたい事: てっく煮プラグイン編 @nitoyon さんが公開しているリポジトリ( https://github.</description>
    </item>
    
    <item>
      <title>Subversionのproxy設定でいつもハマるやつ</title>
      <link>/2013/09/05/svn-proxy-error-by-git-svn/</link>
      <pubDate>Thu, 05 Sep 2013 00:00:00 +0000</pubDate>
      
      <guid>/2013/09/05/svn-proxy-error-by-git-svn/</guid>
      <description>あらすじ git svn しようとしたらエラー。
$ git svn rebase Malformed file: /c/Users/xxx/.subversion/servers:68: Option expected at /usr/lib/perl5/site_perl/Git/SVN/Ra.pm line 81 環境  Windows  svn バージョン等は失念。まあ、多分バージョンはあまり関係ないと思われる？
結論 git-svn の問題ではなく proxy 環境下 においての svn 設定ミスだった。
原因 .subversion/server の該当部分を見に行くとこうなっている。
[global] # http-proxy-exceptions = *.exception.com, www.internal-site.org http-proxy-host = proxy.xxx.jp http-proxy-port = 8080 proxy 設定を追加するためにコメントアウトを消したが。
 コメントアウト # を 一文字 消しただけではダメ(上記の状態) スペース も消さなければならない  ただしくはこう。
[global] # http-proxy-exceptions = *.exception.com, www.internal-site.org http-proxy-host = proxy.xxx.jp http-proxy-port = 8080 これ、毎回設定する時にひっかかってるような気がする。</description>
    </item>
    
    <item>
      <title>Ruby1.9.3のWebrickで出るCould not determine content-length...エラーを消す方法(2.0.0では解決済)</title>
      <link>/2013/09/03/redmine-content-length-error/</link>
      <pubDate>Tue, 03 Sep 2013 00:00:00 +0000</pubDate>
      
      <guid>/2013/09/03/redmine-content-length-error/</guid>
      <description>あらすじ Redmineを起動している時に以下のようなログが大量に吐かれコンソールが埋め尽くされて困った。
[yyyy-mm-dd ...] WARN Could not determine content-length of response body. Set content-length of the response or set Response#chunked = true 環境  Ruby 1.9.3 Redmine 2.3.1  Rails 3.2.13 WEBrick 1.3.1   参考サイト  Railsのログから&amp;rdquo;Could not determine content-length &amp;hellip;&amp;ldquo;とかでてるのを消す - Qiita [キータ] Webrickが出す大量のログを抑止するには？ - QA@IT Ruby - Railsサーバーの WARN Could not determine content-length… のログを表示しないようにする - Qiita [キータ] rails 3.1.1.rc1 emits warning for each assets when using ruby-1.</description>
    </item>
    
    <item>
      <title>Androidの自動テストツール、今(2013年)から使うなら何がよいのか</title>
      <link>/2013/08/28/android-test-tools/</link>
      <pubDate>Wed, 28 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>/2013/08/28/android-test-tools/</guid>
      <description>あらすじ Androidのテストを自動化したいので、テストツールの選定をしてみたが、昔の記事がヒットする事が多く、何を使えばいいのかよくわからん。
とはいっても、明確に「どんなテストがしたい」という方針もなく、とっかかりとしてどんなツールがあってどのくらい盛り上がってるのかが知りたかった。
環境  Windows 7 AndroidDeveloperTools Build: v21.1.0-569685  とりあえず Win メインで。
とっかかり ロジックまわりのテスト ロジック的なものは、 JUnit 拡張の TestCase クラスを使えば何とか書けそうというのはわかった。
 Androidアプリ開発テスト入門（2）：Android SDKでビジネスロジックのテストを自動化するには (1/3) - ＠IT  2011 年の記事だけど、 JUnit で書くという大前提は崩れていないはず…。
画面遷移やGUIまわりのテスト 困ったのはこっち。どう書けばいいんだろう。
「Android 自動テスト ツール」 とかで調べてみた結果、以下のような記事が引っ掛かった。
 Androidアプリの自動テストツールで最も有望か - 「NativeDriver」，Google製「WebDriver」の拡張　（公式のAndroid版Selenium） - 主に言語とシステム開発に関して  これも 2011 年の記事だが、この中では NativeDriver , robotium , Scirocco の 3 ツールでは最終的に NativeDriver に集約されていくだろうという結論になっている。
…が、 2013 年現在においても本当にそうなのか？
結論 2013 年 08 月の時点ではこんな感じ。
   ツール ソース Android iOS テスト記述可能な言語 備考     NativeDriver svn - - - 開発終了   robotium GitHub 1.</description>
    </item>
    
    <item>
      <title>ソースコード中に0xC2A0(UTF-8のNO-BREAK SPACE)が混ざり実行できなくて困った話</title>
      <link>/2013/08/26/utf8-space-c2a0/</link>
      <pubDate>Mon, 26 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>/2013/08/26/utf8-space-c2a0/</guid>
      <description>あらすじ あるソースコードをコピペして実行しようとしたところ、なんか動かない。(正確にはパッチファイルを適用しようとした)
目grep してみたところ、おかしいところはなさげである。
参考サイト  ＆nbsp； は半角スペースではないというお話 (フェンリル デベロッパーズブログ) UTF-8の0xC2A0問題 【ブログ掲載のソースをコピペして、動作しないときに疑うべきこと】 某氏の猫空 文字コードC2A0（UTF-8の半角空白）なんてあるんですね at softelメモ Trimでも消えないスペースって？ 文字コードC2A0 サイトスパイラル(Sitespiral) UTF-8の半角スペースについて - とりあえず落ち着け ノーブレークスペース - Wikipedia  調査 動かないファイルを色々調べてみると以下のようなことがわかった。
 ソースコード上の「半角スペースらしき空白」(A) を「半角スペース」(B) (キーボードのスペースキーで出した空白)で検索しても 引っかからない この (A) と (B) は別ものらしく :s/(A)/(B)/ とかすると置換が実行される また、 (A) を (B) に置換した状態だとエラーが出ずに実行できるようになった  「半角スペースらしき空白」が半角スペースではない何かのため、実行できなくなっていた模様。
ということで、この「半角スペースらしき空白」を抽出してバイナリエディタで見てみた。
a b c 一応テキトウな文字で挟んでみる。
 a と b の間 が「半角スペースらしき空白」 b と c の間 が「半角スペース」  とした。
見てみると…。
61 C2 A0 62 20 63 61 62 63 はそれぞれ a b c で、 20 は 半角スペース であるというところまではOK。</description>
    </item>
    
    <item>
      <title>Sphinxをインストールしようとしたら全然関係ないproxy周りでハマった話 続き</title>
      <link>/2013/08/23/sphinx-install-python-proxy2/</link>
      <pubDate>Fri, 23 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>/2013/08/23/sphinx-install-python-proxy2/</guid>
      <description>前回までのあらすじ  Sphinxをインストールしようとしたら全然関係ないproxy周りでハマった話  easy_install で見に行く proxy の順番はこんな感じだった。
 引数に明示的に指定した場合は引数を使う ↑を満たさず、環境変数 xxxx_proxy が設定されている場合はそこから読み込む ↑を満たさない場合、 Windows ではレジストリ( IE の proxy 設定)を見にいく  で、なぜか環境変数 HTTP_PROXY を読み込んだ場合は失敗して、 HTTP_PROXY をクリアしてレジストリの proxy 設定を使ったら DL が成功しちゃったという話。
なんでか気になったので調べた。
結論 http 以外 の proxy 設定をしていなかったから。というマヌケなオチ。
次から気をつけよう。
レジストリ( IE の設定)から IE の 設定では、 ツール &amp;gt; インターネットオプション &amp;gt; 接続 &amp;gt; LAN の設定 &amp;gt; 詳細設定 の Secure にも proxy の設定が入れていた。
すべてのプロトコルに同じプロキシサーバーを使用する にチェックを入れていたので。
レジストリから読み込んだ場合、 Python 実行中に取得した変数 proxies (使用する proxy をしまっておく変数)の値はこんな感じだった。
[(&amp;#39;http&amp;#39;, &amp;#39;http://PROXY:PORT/&amp;#39;), (&amp;#39;https&amp;#39;, &amp;#39;https://PROXY:PORT/&amp;#39;), (&amp;#39;ftp&amp;#39;, &amp;#39;ftp://PROXY:PORT&amp;#39;)] 環境変数から 一方、環境変数には HTTP_PROXY しか指定していなかった。 proxies を出力するとこう。</description>
    </item>
    
    <item>
      <title>Sphinxをインストールしようとしたら全然関係ないproxy周りでハマった話</title>
      <link>/2013/08/21/sphinx-install-python-proxy/</link>
      <pubDate>Wed, 21 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>/2013/08/21/sphinx-install-python-proxy/</guid>
      <description>あらすじ Sphinx を導入しようとして Python周りの環境を整えていたら easy_install がやたら失敗したりして困った。
環境  Windows 7 Python 2.7  Python インストール …は、以前入れるだけ入れていた 2.7 があったので割愛。
Sphinx-Users.jp のインストール手順では 2.6 が使われていたので、 2.7 でも大丈夫そう。
環境変数 PATH に以下のパスを追加。
 C:\Python27  Pythonのコマンドが含まれるフォルダ  C:\Python27\Scripts  次に説明するeasy_installコマンドや、Sphinxのコマンドが格納されるフォルダ   easy_install インストール(distribute_setup.py) Ruby でいうところの Bundler のようなもの？
 setuptools - 清水川Web  setuptoolsの互換パッケージを導入。
 python-distribute.org から distribute_setup.py をDLし実行。  $ python distribute_setup.py Downloading http://pypi.python.org/packages/source/d/distribute/distribute-0.6.49.tar.gz Extracting in c:\users\USER\appdata\local\temp\tmp00_lbf Now working in c:\users\USER\appdata\local\temp\tmp00_lbf\distribute-0.6.49 Installing Distribute Before install bootstrap.</description>
    </item>
    
    <item>
      <title>Rails3のログ出力にANSIカラーコードを使用しない設定</title>
      <link>/2013/08/20/rails3-log-not-colorize/</link>
      <pubDate>Tue, 20 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>/2013/08/20/rails3-log-not-colorize/</guid>
      <description>あらすじ WindowsでRails(Redmine)を実行した時のログが超見づらいのはなんで？
こんな風になる。helloと表示されるはずの場合。
[31mhello[0m 何とかしたい。
環境  Windows 7 Rails 3.2  参考サイト ANSIカラーというコードを使用されている  RubyでANSIカラーシーケンスを学ぼう！ 謎のC言語ブログ: ANSI標準エスケープシーケンス  この現象自体を止めるには  Ruby - Rails3でログの色分けを止める - Qiita [キータ] 設定ファイル(config) - Railsドキュメント  Windows(コマンドプロンプト)でもANSIカラー(未実施)  WindowsのコマンドプロンプトでRailsのログをカラー表示する - yyamasakの日記 - Rubyist Windows ansi.sys WindowsのコマンドプロンプトでもANSIカラーを使いたい「wac」｜オープンソース・ソフトウェア、ITニュースを毎日紹介するエンジニア、デザイナー向けブログ  ANSIカラー  ターミナルにおいて、文字に色を付けるためのエスケープシーケンスみたい ソースコード上には print &amp;quot;\e[31mhello\e[0m&amp;quot; こう記載されている  \e[xxm がコード 31 は文字色を赤に 0 は終われ コードによって文字色、背景色、装飾をいじることができる   で、Rail3はこれに対応しているので、UnixとかMacとかだとログが色分けされ美しく表示されるようになっている。(あとCygwinでもいけるっぽい)
そういえば、さくらVPS上(CentOS)でRailsを実行している時は奇麗だったんだよな思い出してみれば。
無効化するには Windowsでも色つけができる(参考サイト参照)ようだが、めんどいので無効化する方向で。
REDMINE/config/application.rb に以下の記述を追加。
config.colorize_logging = false 特定環境のみとかの設定もできるが、とりあえずオールオフで。</description>
    </item>
    
    <item>
      <title>WindowsにRedmine2.3をインストールする手順と、プラグイン作成用メモ</title>
      <link>/2013/08/09/redmine2/</link>
      <pubDate>Fri, 09 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>/2013/08/09/redmine2/</guid>
      <description>あらすじ Redmine 2.0台におけるインストール方法〜起動方法とプラグインの作り方のメモ。
環境  Windows 7 32bit Ruby 1.9.3  Bundler 1.3.5 導入済 DevKit 導入済  Redmine 2.3.1 MySql 5.6.12.1  参考サイト  Redmineのインストール — Redmine Guide 日本語訳 Hooks - Redmine Hooks List - Redmine プラグイン ホック - r-labs ビュー(view) - Railsドキュメント  Redmineインストール手順 まずは準備。
MySQL 実はMySQLさわるのはじめてかもしれない。
 MySQL :: Download MySQL Installer からインストーラをDL。Oracleのアカウントが必要 基本的にPathなどの設定はそのまま。  Choosing a Setup Type: Developer Default を選択 MySQL Server Configuration: Server Configuration Type は Development Machine ポートは 3306 root のパスワードを入力 Windows Service Details の Start the MySQL Server at System Startup のチェックだけ KILL そんなに使わないしPCがしょぼいので常時起動させておくこともない   全部終わると MySQL Workbench が立ち上がる。</description>
    </item>
    
    <item>
      <title>Jekyllバージョンアップの際に思いのほか手こずった話 Jekyll Bootstrapの更新に追従したい編</title>
      <link>/2013/08/07/jekyll-maintenance-1/</link>
      <pubDate>Wed, 07 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>/2013/08/07/jekyll-maintenance-1/</guid>
      <description>あらすじ forkとか、fetchとか、本で読んでるだけじゃ実際やりたい時にどうやりゃいいかわからん…という話。
Github Pagesで運用しているJekyllのバージョンアップをする時に死んだ
 原因は、他の人が公開しているプラグインやcssをほいほい コピペ していたため  公開先ではもちろんJekyllの更新に追従しており、更新を怠った己が自爆しているだけ)  なんとか自分のリポジトリでも追従したい。でもコピペはやだ  追従したいのは、主に Jekyll Bootstrap ファイル全般と @nitoyon さんのてっく煮ブログで使われているプラグイン。(特にはてな系)
パッパとやって手順だけメモするかーと思ったら凄まじくてこずったので、今回はBootstrapだけ。
環境  Ruby 1.9.3  RedCloth (4.2.9) bundler (1.3.5) classifier (1.3.3) colorator (0.1) commander (4.1.4) directory_watcher (1.4.1) fast-stemmer (1.0.2) highline (1.6.19) hparser (0.4.0 dc35f05) jekyll (1.0.0 9f94eaf) kramdown (0.14.2) liquid (2.5.1) maruku (0.6.1) posix-spawn (0.3.6) pygments.rb (0.4.2) rake (10.1.0) rdiscount (2.1.6) redcarpet (2.2.2) safe_yaml (0.7.1) syntax (1.0.0) yajl-ruby (1.1.0)   参考サイト  Git - サブモジュール Git で複数のリポジトリをまとめたり、逆に切り出したりする - Qiita [キータ] gitでforkしたrepoにoriginalのrepoをmergeする手順 - memo.</description>
    </item>
    
    <item>
      <title>Androidアプリのインストール、起動方法によってIntentのタイプが微妙に変わる件</title>
      <link>/2013/08/04/android-install-intent/</link>
      <pubDate>Sun, 04 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>/2013/08/04/android-install-intent/</guid>
      <description>あらすじ Androidアプリにおいて、Eclipseからビルドしていた時は想定通り動いていたのに、リリース署名をしたアプリ(apkファイル)をインストールした場合だけ動作が想定していないものになった。
具体的には、Activityがむちゃくちゃたまる現象が起こるということで非常に困った。
結論 起動のさせ方により、起動時のIntentフラグが変わる。これはAndroid内部で知らぬ間にやられてしまう。
onCreate時などでIntentのフラグをチェックして何とかするしかない。
環境  AndroidDeveloperTools Build: v21.1.0-569685  ソースの中身  メインのActivityには action.Main と category.LAUNCHER しか設定していない。  AndroidManifest.xmlはプロジェクト作成時ほぼそのまま   &amp;lt;uses-sdk android:minSdkVersion=&amp;#34;13&amp;#34; android:targetSdkVersion=&amp;#34;14&amp;#34; /&amp;gt; &amp;lt;application android:allowBackup=&amp;#34;true&amp;#34; android:icon=&amp;#34;@drawable/ic_launcher&amp;#34; android:label=&amp;#34;@string/app_name&amp;#34; android:theme=&amp;#34;@style/AppTheme&amp;#34; &amp;gt; &amp;lt;activity android:name=&amp;#34;com.example.testproject.MainActivity&amp;#34; android:label=&amp;#34;@string/app_name&amp;#34; &amp;gt; &amp;lt;intent-filter&amp;gt; &amp;lt;action android:name=&amp;#34;android.intent.action.MAIN&amp;#34; /&amp;gt; &amp;lt;category android:name=&amp;#34;android.intent.category.LAUNCHER&amp;#34; /&amp;gt; &amp;lt;/intent-filter&amp;gt; &amp;lt;/activity&amp;gt; (略)  FLAG設定は特に記載せず  メインのActivity(MainActivity.java)もほぼそのまま   public class MainActivity extends Activity { @Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); } @Override public boolean onCreateOptionsMenu(Menu menu) { getMenuInflater().</description>
    </item>
    
    <item>
      <title>iOSのバックアップ/リストアで残るもの/消えるもの それを編集する手段</title>
      <link>/2013/07/18/ios-backup-restore/</link>
      <pubDate>Thu, 18 Jul 2013 00:00:00 +0000</pubDate>
      
      <guid>/2013/07/18/ios-backup-restore/</guid>
      <description>あらすじ iOSのバックアップ/リストア周りでえらいハメられたので、まとめてみた。
iOS 7 が出るとどうなってしまうのか…。
バックアップの方式 iTunesの「概要」画面から選べる
 iCloudにバックアップ このコンピュータにバックアップ  そのまま ローカルのバックアップを暗号化   あまり意識していなかったんだけど、iCloudバックアップは以下の条件を満たす時に実行される模様
 Wi-Fi 経由でインターネットに接続されている(MUST) 電源に接続されている 画面がロックされている  中でも、Wi-Fiだけは確実に満たす必要がある。(3G回線では、手動でiCloud同期もできない)
iOS：コンテンツのバックアップと復元方法
バックアップされる内容 SandboxとKeyChainの大きく2つに分けられる
Sandboxの内容  Cocoaの日々: [Info] 特定のファイルをiCloudバックアップ対象外にする [XCODE] iPhone iOSのディレクトリ構成について学んだ - YoheiM技術やらずに終われまテン アプリケーションディレクトリの構造とアクセス方法 - プログラミングノート
 /var/mobile/Applications/01234567-890A-BCDE-FGHI-JKLMNOPQRSTU(ランダム文字列)/ 下のファイルがバックアップマシンに保存されたりされなかったり、 基本的には 以下の階層のバックアップと定義してあるものがそのまま保存される
 Documents/ バックアップ、アプリに関わる重要なファイル置き場 Library/ Caches/ 非バックアップ、アプリで使用するが消えても大丈夫(また作れる)なファイル置き場 Preferences/ バックアップ、アプリの設定ファイル置き場 tmp/ 非バックアップ、一時ファイル置き場  基本的 じゃない場合が、 このコンピュータにバックアップ ローカルのバックアップを暗号化 した時
 「ローカルのバックアップを暗号化」を選んだ時にユーザが入力したパスワードで暗号化され、保存される   どんなファイルが入っているかはXcodeの Organizer =&amp;gt; 任意の端末 =&amp;gt; Applications =&amp;gt; 任意のアプリケーション の Data file in Sandboxで確認できる。</description>
    </item>
    
    <item>
      <title>Over-the-Airという形式でiOSアプリのインストールを試みるが失敗する場合がある</title>
      <link>/2013/06/05/ios-over-the-air/</link>
      <pubDate>Wed, 05 Jun 2013 00:00:00 +0000</pubDate>
      
      <guid>/2013/06/05/ios-over-the-air/</guid>
      <description>あらすじ iOSアプリをサーバに置いてそこからインストールできるようにしたかった。
 結果、Over-the-Airという方式でインストール環境を作り、インストールできるようなったので手順のメモ と、なぜか失敗する端末もあるので、後半にその調査メモ(とりあえず、インストールはできたが、根本原因がわからん)  インストール環境構築手順 参考サイト  iOS用アプリのAdHoc版を作る（Xcode） ｜ MUSHIKAGO APPS MEMO iPadな日記 : AdHoc配布のやり方 iOSアプリのAd-Hoc install (Over-the-Air, HTTP経由) がなんかよくわからんけど失敗する、という時はとにかくログを見るべしという話 - 愛と勇気と缶ビール  前提  iOS端末実機にXcode経由でアプリがビルドができる状態になっている事 Webサーバ構築済で It works!! できる事  まだよくわかってないところもあるので、以下は必要ない手順、ファイルも多いかも。。。
別の作業と混同している可能性も。
前準備 CertificateSigningRequest.certSigningRequest 準備 はじめに CertificateSigningRequest.certSigningRequest をMac上で作成する
 キーチェインアクセス を起動 キーチェインアクセス -&amp;gt; 証明書アシスタント -&amp;gt; 認証局に証明書を要求... を選択  メールアドレス: メアド入力 通称: (なんでもいい？) 要求の処理: ディスクに保存 にチェック、 鍵ペア情報を指定 にチェック  そのまま続ける(鍵ペア情報はデフォルトのまま)  鍵のサイズ: 2048ビット アルゴリズム: RSA  CertificateSigningRequest.certSigningRequest が作成される(次で使う)  Destribution用Certificates 作成 実機にインストールできるという事は、Developer用のCertificateは作成済のはず。今回はDestribution用を作る。</description>
    </item>
    
    <item>
      <title>Jekyll@GitHub Pagesの運用形態を変えたのでAnalyticsの設定が効かなくなっていた</title>
      <link>/2013/05/27/jekyll-githubpages-analytics-setting/</link>
      <pubDate>Mon, 27 May 2013 00:00:00 +0000</pubDate>
      
      <guid>/2013/05/27/jekyll-githubpages-analytics-setting/</guid>
      <description>あらすじ Jekyllで指定していたGoogle Analyticsの設定が効かなくなっていた。
他のGitHub Pages@Jekyllでは正しくGoogle Analyticsが動いているのに…。
結論  前回 GitHub Pages の運用形態を変えていた &amp;hellip; GitHub PagesでJekyllプラグインを使えるようにするには…  変更前: master ブランチにコンテンツを配備し、GitHubにデプロイしてもらう 変更後: source ブランチを作成しコンテンツを移動。ローカルでビルドした静的ファイルを master ブランチにpush  それによる オプション指定の凡ミス  おぉ…。
参考サイト  WordPressよりjekyllで本格的ブログを作りたくなる、かもしれないまとめ ｜ ゆっくりと… 30分のチュートリアルでJekyllを理解する Jekyll ｜ CSS Radar ｜ Little Books For Front End Developers Liquid for Designers · Shopify/liquid Wiki · GitHub plusjade/jekyll-bootstrap · GitHub  ハマり 前提: GitHub Pagesの運用形態 指定のブランチに以下のようなファイル群を置いておく事で、GitHub Pagesができる。
 Jekyllのコンテンツ  Jekyllに必要なファイルをpushしておけば、GitHubがよろしくデプロイしておいてくれる  静的ファイル  そのまま表示される   Jekyllのコンテンツをpushして、後はおまかせするだけの運用は便利だけど、 自作プラグインが動かない という問題がある。</description>
    </item>
    
    <item>
      <title>記事の目次を出力するJekyllプラグインの改良</title>
      <link>/2013/05/23/jekyll-liquid-plugin2/</link>
      <pubDate>Thu, 23 May 2013 00:00:00 +0000</pubDate>
      
      <guid>/2013/05/23/jekyll-liquid-plugin2/</guid>
      <description>前回までのあらすじ Jekyll(Liquid)で記事の目次を出力するプラグインを作ってみた
これの続き。昔の話すぎて、忘れないようにメモ。
前回の疑問  …あれ？　別の環境でやったら hタグに section , section-1 , section-2 … って連番が振られてる！？　なんで！
 これは原因がわかった。 使っているMarkdownパーサが違うだけだった。
 rdiscount … idなし kramdown … idにsection-xが振られる  今回やったこと  kramdownで動くようにkramdownいじったりtree_list.rbいじったり プラスバグ修正   目次から記事へのリンク
(略) めんどいので自動で振ってほしい
 kramdownのidの振り方 kramdownがhタグにidを振っている方法を調べてみると、
 半角文字はそれが そのままid になる スペースは ハイフン になる 全角文字は なくなる 全部全角文字だった場合 section と振られる 2度目以降のsectionは順に section-x と振られる  こんな感じになっているっぽい。以下は一例。
   見出しの内容 hタグのid     ほげいち &amp;lt;h2 id=&amp;ldquo;section&amp;rdquo;&amp;gt;ほげ   ほげに &amp;lt;h2 id=&amp;ldquo;section-2&amp;rdquo;&amp;gt;ほげに   ほげさん &amp;lt;h2 id=&amp;ldquo;section-3&amp;rdquo;&amp;gt;ほげさん   hoge &amp;lt;h2 id=&amp;ldquo;hoge&amp;rdquo;&amp;gt;hoge   piyoとは &amp;lt;h2 id=&amp;ldquo;piyo&amp;rdquo;&amp;gt;piyoとは   ほげよん &amp;lt;h2 id=&amp;ldquo;section-4&amp;rdquo;&amp;gt;ほげよん    ソース 実際にソースを見てみよう。 kramdown-0.</description>
    </item>
    
    <item>
      <title>GitHub PagesでJekyllプラグインを使えるようにするには…</title>
      <link>/2013/05/21/jekyll-plugin-githubpages/</link>
      <pubDate>Tue, 21 May 2013 00:00:00 +0000</pubDate>
      
      <guid>/2013/05/21/jekyll-plugin-githubpages/</guid>
      <description>あらすじ Jekyll＠GitHub Pagesの場合、Liquidで(自分で)作ったプラグインは使えないという事が判明した。(ローカルで起動した場合/safeモードじゃない場合は関係ない)
 俺の最強ブログシステムも火を噴いてたぜ - Webtech Walker  これを回避するには
 GitHub Pages をやめる(レンタルサーバを借りてデプロイ) GitHub Pages に 静的ファイル としてhtml自体をデプロイ  する方法がありそう。今回はGitHub Pagesを使い続けたいので後者で頑張ってみる。
参考サイト  github:help  そもそもGitHub Pagesとはなんぞや  User &amp;amp; Organization Pages User &amp;amp; Organization Pages はPagesファイル専用のスペシャルリポジトリとして生きている。このリポジトリはaccount nameを使用する。例えば、defunkt/defunkt.github.com
 このリポジトリは username/username.github.com というnaming schemeを使わなければならない master ブランチからのコンテンツはビルドとパブリッシュに使用される
 &amp;hellip;
  Project Pages Project Pages は同じリポジトリからプロジェクトとして維持される。これらのページはUser PageとOrg Pagesほとんど正確に同じである。いくつかのわずかな違いはある。
 gh-pages ブランチはビルドとパブリッシュに使用される カスタムドメインを使っていないなら、Project PagesはUser Pageのサブパスの下で使われる。 username.github.com/projectname &amp;hellip;   ということは まず、GitHub Pagesは2種類ある。</description>
    </item>
    
    <item>
      <title>BPStudy#68に参加しました #bpstudy</title>
      <link>/2013/04/27/bpstudy68/</link>
      <pubDate>Sat, 27 Apr 2013 00:00:00 +0000</pubDate>
      
      <guid>/2013/04/27/bpstudy68/</guid>
      <description>詳細  BPStudy#68 - connpass  テーマはChef。
入門からChefの実運用例まで。
所感  入門Chef Solo - Infrastructure as Code を読みながらChef Soloで遊べるようになるまで で入門していたので復習も兼ねて  Chef Server / Chef Clientはまだ試していない  レシピのテストってうまい事できないのかな？  文法チェック以上、Serverspec未満の事は今のところ直接実行して確認してる vagrantでvm作る、実行、壊すを繰り返し  iptablesとか、SELinuxあたりの設定は会社によって or 案件によって固定で、かつそんなに変更がないと思うので、ここだけでも速やかにChefで管理したいな  第1部 明日からはじめる Chef 入門  tk0miyaさん    明日から始める Chef 入門 #bpstudy  from Takeshi Komiya 
サーバ、どうやって構築している？ 手順書？Wikiを見て？職人がやってる？
よくある話  手順書通りにやってもうごかない サーバごとに設定がちがう 手順を飛ばしちゃって事故る  手作業で複数だいは辛い クロスチェック欄など…   自動化しよう！ どうやってやる？
 シェルスクリプト PXE + kickstart sed/awk  PHP  オレオレパッケージ  環境構築について、継続的デリバリーにはこう書かれている。</description>
    </item>
    
    <item>
      <title>Jekyllのバージョンを 0.12.0 にあげた</title>
      <link>/2013/04/11/jekyll-0120/</link>
      <pubDate>Thu, 11 Apr 2013 00:00:00 +0000</pubDate>
      
      <guid>/2013/04/11/jekyll-0120/</guid>
      <description>あらすじ ぼちぼちJekyllのバージョンを上げてみる。
参考サイト  Jekyll の 0.12.0 でシンタックス ハイライトが便利になった - てっく煮ブログ  手順 Gemfile をちょっと修正。redcarpetを追加する、のとpygmentsのバージョンをアップ。
gem &amp;#39;rake&amp;#39; gem &amp;#39;jekyll&amp;#39;, :git =&amp;gt; &amp;#39;git://github.com/mojombo/jekyll.git&amp;#39; gem &amp;#39;RedCloth&amp;#39; -gem &amp;#39;rdiscount&amp;#39; +gem &amp;#39;redcarpet&amp;#39; +#gem &amp;#39;rdiscount&amp;#39; gem &amp;#39;hparser&amp;#39;, :git =&amp;gt; &amp;#39;git://github.com/hotchpotch/hparser.git&amp;#39; -gem &amp;#39;pygments.rb&amp;#39;, &amp;#39;=0.2.12&amp;#39; +gem &amp;#39;pygments.rb&amp;#39;, &amp;#39;=0.3.2&amp;#39; そして bundle install 。
オプションもだいぶ変わってるみたい。
昔。
$ jekyll --help bundle exec jekyll --help Jekyll is a blog-aware, static site generator. Basic Command Line Usage: jekyll # . -&amp;gt; .</description>
    </item>
    
    <item>
      <title> 入門Chef Solo - Infrastructure as Code を読みながらChef Soloで遊べるようになるまで</title>
      <link>/2013/04/01/chef-helloworld/</link>
      <pubDate>Mon, 01 Apr 2013 00:00:00 +0000</pubDate>
      
      <guid>/2013/04/01/chef-helloworld/</guid>
      <description>あらすじ Chefを触ってみたいと思いつつ、取っ掛かりを作るにはかなり用語が多いなーとウダウダしていたら、3/11にこんな本が出版されており。
 Amazon.co.jp： 入門Chef Solo - Infrastructure as Code eBook: 伊藤直也: Kindleストア  早速購入。
本書のはじめにはこんな事が書かれていました。
 公式ドキュメントがあまりにしっかり書かれすぎていることもあって「はじめの一歩」としてどの辺りを知ればいいのか、つまり「普通に使う分にはこの程度知っていればOK」というのがどの辺りなのかを掴むのが難しい…というのが筆者の個人的な印象です。
 はじめの一歩をどうしようか迷ってる場合オススメと……。
ではHello Worldしてみよう。
環境(Windows編)  Windows XP Ruby 1.9.3 Rubygems 1.8.24  手順 Chef インストール ネットワークに繋がっていないぼっち環境のため、vendor/cacheディレクトリに必要なGemをありったけ放り込んでbundle install。
$ bundle install --local --path vendor/bundle Installing erubis (2.7.0) Installing highline (1.6.16) Installing json (1.7.7) Installing mixlib-log (1.4.1) Installing mixlib-authentication (1.3.0) Installing mixlib-cli (1.3.0) Installing mixlib-config (1.1.2) Installing win32-api (1.4.8) Installing windows-api (0.4.2) Installing windows-pr (1.</description>
    </item>
    
    <item>
      <title>Selenium WebDriverでFirefoxがロードできなくなった</title>
      <link>/2013/03/18/selenium-firefox-loaderror/</link>
      <pubDate>Mon, 18 Mar 2013 00:00:00 +0000</pubDate>
      
      <guid>/2013/03/18/selenium-firefox-loaderror/</guid>
      <description>あらすじ Selenium IDE でテストケースを作成し、WebDriver形式でエクスポートしたRSpecファイルを Firefox で実行すると、 invalid byte sequence エラーが表示されるようになった。
どこさわったからこうなったのかわからん……。
(以下では、WebDriver.for時にテスト用のprofileを指定している)
$ rspec test.rb F Failures: 1) test Failure/Error: @driver = Selenium::WebDriver.for :firefox, :profile =&amp;gt; profile ArgumentError: invalid byte sequence in UTF-8 # ./test.rb:13:in `block (2 levels) in &amp;lt;top (required)&amp;gt;&amp;#39; profileの中かな？　とか思っていたけど。
環境  Ruby 1.9.3  RubyGems 2.0.1 bundler (1.3.1) childprocess (0.3.9) diff-lcs (1.2.1) ffi (1.4.0) multi_json (1.6.1) rspec (2.13.0) rspec-core (2.13.0) rspec-expectations (2.13.0) rspec-mocks (2.13.0) rubyzip (0.</description>
    </item>
    
    <item>
      <title>IEとかiPhoneWebView上でSeleniumを走らせる</title>
      <link>/2013/03/07/selenium-ie-iphone-browser/</link>
      <pubDate>Thu, 07 Mar 2013 00:00:00 +0000</pubDate>
      
      <guid>/2013/03/07/selenium-ie-iphone-browser/</guid>
      <description>あらすじ  Firefoxのアドオンである Selenium IDE で作ったテストケースをWebDriver, RSpec形式でエクスポート このソースは、デフォルトではFirefoxでテストが開始されるようになっている これを、 IE でテストするようにしたり、 iPhoneWebView (内部ブラウザ)を起動してテストするようにしたい 結果としては、どちらもテスト可能だが、準備が若干めんどい  IEでテストをするには 環境  IE 9  手順 基本的には、 Selenium IDE で生成したテストコードの「何のブラウザを開くか」ってところを変えればいいはず……。
- @driver = Selenium::WebDriver.for :firefox + @driver = Selenium::WebDriver.for :ie ……が、それだけではダメ。実行すると以下のようなエラーが出る。
Failures: 1) MailcheckSpec test_mailcheck_spec Failure/Error: @driver = Selenium::WebDriver.for :ie Selenium::WebDriver::Error::WebDriverError: Unable to find standalone executable. Please download the IEDriverServer from http://code.google.com/p/selenium/downloads/list and place the executable o n your PATH. # ./mailcheck_spec.rb:10:in `block (2 levels) in &amp;lt;top (required)&amp;gt;&amp;#39; Finished in 0.</description>
    </item>
    
    <item>
      <title>自作EvernoteスクリプトをOAuth対応する</title>
      <link>/2013/03/03/evernote-oauth/</link>
      <pubDate>Sun, 03 Mar 2013 00:00:00 +0000</pubDate>
      
      <guid>/2013/03/03/evernote-oauth/</guid>
      <description>あらすじ 結構前に、Evernoteの認証方法がOAuthになるので、変更してくださいねーというメールがEvernoteからきていた。
ユーザ名とパスワードによる認証から OAuth 認証への移行 - Evernote Developers
そのまま従来のスクリプトを動かしていると、認証エラーになるので、OAuth認証ができるように修正した。
主に自分用メモ。
環境  Ruby 1.8.7  注: Evernoteスクリプトは自分しか使っていない。
参考サイト  認証 - Evernote Developers  手順  サンドボックス用のデベロッパトークンを取得 » ログイン必要 テストの完了後、プロダクション用のデベロッパトークンを取得 » ログイン必要  他の人が使っていない、自分だけで使っている場合は以降の箇所だけ修正すればよい。
修正箇所 上記のDeveloperTokenをソース上で取得できるようにする。(今まで使っていたuserid、パスワードはいらない)以下では、Pitを使ってtokenなどを別出ししているので、そこを修正。
user = Pit.get(&amp;#34;evernote&amp;#34;, :require =&amp;gt; { + &amp;#34;developerToken&amp;#34; =&amp;gt; &amp;#34;your evernote token.&amp;#34;, }) 従来は、 userStore.authenticate() で認証を通して、 authenticationToken を使うようにしていたが、このくだりを まるまるカット 。
この authenticationToken を developerToken に置き換えてやる。
# 認証 - @auth = auth(user, userStore) - @authToken = @auth.</description>
    </item>
    
    <item>
      <title>Ruby 2.0.0 をpikとrvm経由でインストール&amp;環境構築</title>
      <link>/2013/02/25/ruby200-helloworld-pik-rvm/</link>
      <pubDate>Mon, 25 Feb 2013 00:00:00 +0000</pubDate>
      
      <guid>/2013/02/25/ruby200-helloworld-pik-rvm/</guid>
      <description>あらすじ Ruby 2.0.0 がリリースされたので、インストールしつつ、新機能を使ってみる。
…と思ったけど、意外とてこずったので、とりあえずインストールと準備だけ。
後途中にGemの作り方めも。
環境1  Windows XP Ruby 2.0.0 pik  インストール まずはインストール。pikなので pik install で。
$ pik install ruby 2.0.0 ** Downloading: http://rubyforge.org/frs/download.php/76807/ruby-2.0.0-p0-i386-mingw32.7z to: C:\Documents and Settings\user\.pik\downloads\ruby-2.0.0-p0-i386-mingw32.7z ruby-2.0.0-p0-i386-mingw32.7z: 100% |oooooooooo| 8.9MB/ 8.9MB Time: 00:00:57 ** Extracting: C:\Documents and Settings\user\.pik\downloads\ruby-2.0.0-p0-i386-mingw32.7z to: C:\rubies\Ruby-200-p0 done ** Adding: 200: ruby 2.0.0p0 (2013-02-24) [i386-mingw32] Located at: C:\rubies\Ruby-200-p0\bin あっさり。
$ pik default $ ruby -v bundler is found: bundle exec ruby -v ruby 1.</description>
    </item>
    
    <item>
      <title>すごいHaskellたのしく学ぼうでHaskellことはじめ4</title>
      <link>/2013/02/19/haskell-helloworld5/</link>
      <pubDate>Tue, 19 Feb 2013 00:00:00 +0000</pubDate>
      
      <guid>/2013/02/19/haskell-helloworld5/</guid>
      <description>前回までのあらすじ すごいHaskellたのしく学ぼうでHaskellことはじめ3
なんとなーく再帰は書けたかなー？というレベル。
この先生きのこれるのか……。
参考  すごいHaskellたのしく学ぼう  5章 高階関数 カリー化  Haskellでは すべての関数が引数を一つだけとる 事になっている。  ……んでも今まで普通に二つとか引数とってなかったっけ？ max とか   max関数 本書より、 max 4 5 の場合……。
 はじめに max 4 が適用される max 4 の返り値は 5 に適用するための別の関数 別の関数 5 が適用され、最終的な値が返る  ふーむ……？
max関数の型はこう。
Prelude&amp;gt; :t max max :: Ord a =&amp;gt; a -&amp;gt; a -&amp;gt; a こう書く事もできる。 a型の値を引数にとり、a型の値を返す
max :: Ord a =&amp;gt; a -&amp;gt; ( a -&amp;gt; a ) 関数を本来より少ない引数で呼び出すことを 部分適用する という。 部分適用 すると、関数をその場で作りだし、それを他の関数に渡せる。</description>
    </item>
    
    <item>
      <title>すごいHaskellたのしく学ぼうでHaskellことはじめ3</title>
      <link>/2013/02/04/haskell-helloworld4/</link>
      <pubDate>Mon, 04 Feb 2013 00:00:00 +0000</pubDate>
      
      <guid>/2013/02/04/haskell-helloworld4/</guid>
      <description>前回までのあらすじ すごいHaskellたのしく学ぼうでHaskellことはじめ2
参考  すごいHaskellたのしく学ぼう  4章 再帰 リストの中の最大値を取得するmax&amp;rsquo;関数を実装する。
max&amp;rsquo;関数 手順  動作原理はP53の図の通り。max&amp;rsquo;をずーっと掘っていく max&amp;rsquo;にリストを渡すと、ずーっと3番目のmax&amp;rsquo;が実行されるが、最後の一回だけは要素一つのリストになっているので、2番目の式が実行される 最後までいったらさかのぼる  max&amp;#39; [] = error &amp;#34;empty&amp;#34; -- 1番目 max&amp;#39; [x] = x -- 2番目 max&amp;#39; (x:xs) = max x (max&amp;#39; xs) -- 3番目 実行結果 *Main&amp;gt; max&amp;#39; [1,4,3,2,5,6] 6 *Main&amp;gt; max&amp;#39; [2] 2 *Main&amp;gt; max&amp;#39; [] *** Exception: empty 他の再帰 残りの再帰例も写経してみる+一部いじってみる。
replicate&amp;#39; n x | n &amp;lt;= 0 = [] | otherwise = x:concat where concat = replicate&amp;#39; (n-1) x take&amp;#39; n _ | n &amp;lt;= 0 = [] take&amp;#39; _ [] = [] take&amp;#39; n (x:xs) = x:concat where concat = take&amp;#39; (n-1) xs reverse&amp;#39; [] = [] reverse&amp;#39; (x:xs) = reverse&amp;#39; xs ++ [x] zip&amp;#39; [] _ = [] zip&amp;#39; _ [] = [] zip&amp;#39; (x:xs) (y:ys) = (x,y):concat where concat = zip&amp;#39; xs ys 写経してみれば、なんとなく書きっぷりはわかってくるな。</description>
    </item>
    
    <item>
      <title>すごいHaskellたのしく学ぼうでHaskellことはじめ2</title>
      <link>/2013/01/24/haskell-helloworld3/</link>
      <pubDate>Thu, 24 Jan 2013 00:00:00 +0000</pubDate>
      
      <guid>/2013/01/24/haskell-helloworld3/</guid>
      <description>前回までのあらすじ すごいHaskellたのしく学ぼうでHaskellことはじめ
GitHub Pagesの方にリンクを貼ってみよう。
参考  すごいHaskellたのしく学ぼう  3章 関数の構文 パターンマッチ  関数の場合分け 上から順番に調べられる 全てに合致するパターンを最後に入れておくと吉  lucky 7 = &amp;#34;SEVEN !&amp;#34; lucky x = &amp;#34;Other Number&amp;#34;*Main&amp;gt; lucky 1 &amp;#34;Other Number&amp;#34; *Main&amp;gt; lucky 7 &amp;#34;SEVEN !&amp;#34; *Main&amp;gt; lucky 9 &amp;#34;Other Number&amp;#34; 上から順番なので、一行目と二行目をひっくり返すと、引数に7を渡しても &amp;ldquo;SEVEN !&amp;rdquo; が出力されなくなる。
タプルのパターンマッチ addVectors (x1, y1) (x2, y2) = (x1 + x2, y1 + y2)*Main&amp;gt; addVectors (1,3) (5,9) (6,12) リストのパターンマッチ x:xs … リストの先頭要素xと残りのxs(リスト [1,2,3] は 1:2:3:[] と表せる)</description>
    </item>
    
    <item>
      <title>すごいHaskellたのしく学ぼうでHaskellことはじめ</title>
      <link>/2013/01/21/haskell-helloworld2/</link>
      <pubDate>Mon, 21 Jan 2013 00:00:00 +0000</pubDate>
      
      <guid>/2013/01/21/haskell-helloworld2/</guid>
      <description>あらすじ Halkellを学ぶにあたってのメモやわからない所を以下に時系列でつらつらと。
参考  すごいHaskellたのしく学ぼう  2章 型を信じろ！  Haskellでは、すべての式の型がコンパイル時にわかっている また、自分で書かなくても型推論でなんとかしてくれる 式の型は :t コマンドで調べられる  *Main&amp;gt; :t &amp;#34;Hello&amp;#34; &amp;#34;Hello&amp;#34; :: [Char] *Main&amp;gt; :t [1,2,3] [1,2,3] :: Num t =&amp;gt; [t] *Main&amp;gt; :t (True, &amp;#34;Hello&amp;#34;) (True, &amp;#34;Hello&amp;#34;) :: (Bool, [Char]) *Main&amp;gt; :t 4 == 5 4 == 5 :: Bool  :: は の型を持つ の意味  &amp;ldquo;Hello&amp;rdquo;はChar型のリスト(文字列)を持つ   こんな関数を作る。
removeNonUppercase :: [Char] -&amp;gt; [Char] removeNonUppercase st = [c | c &amp;lt;- st, c `elem` [&amp;#39;A&amp;#39;.</description>
    </item>
    
    <item>
      <title>プログラミングHaskellでHaskellことはじめ</title>
      <link>/2013/01/09/haskell-helloworld/</link>
      <pubDate>Wed, 09 Jan 2013 00:00:00 +0000</pubDate>
      
      <guid>/2013/01/09/haskell-helloworld/</guid>
      <description>あらすじ やりたいことがあるのだけど、調べていたらHaskellでやってみました系の記事が多い気がしたので読めるようになりたい！
参考  プログラミングHaskell  ※ とても良書だと思うのだけど、超初心者が挑むには早すぎたので、以下の簡単なライブラリを使用してみた後は「すごいHaskell」にいったん移行しました。
(本の中の記述が数学記号で書かれているのが予想外にキツい。記号の意味はわかるんだけど、 Haskellでの書き方が わからないので脳内で数学記号をHaskellに戻して…をやっていると全く進まなかった…。一周目はまず無心で写経しないとダメなタイプ)
インストール Haskell入門 5ステップ - HaskellWiki によると、HaskellはGHCかHugsのどちらかで行けるよう。
ただし、Hugsはもうメンテナンスされていないみたい。
Hugs Downloading Hugs からDL。Windows版は.exeなのでそのままインストール。
GHC The Glasgow Haskell Compiler からDL。これもWindows版は.exeがあるのでそのままインストールできる。
※ これよりもHaskellPlatformも入れた方が良いらしい。オールインワン的な？
Downloadページには Bundled packages and cabal-install と書かれている。cabalとは
 Cabal is a system for building and packaging Haskell libraries and programs.
 パッケージを作る…とかはまだ必要ないと思うけど。The Haskell Cabal からDLできるのだが、setupファイルが.hsで、Haskellファイルのようなので、Haskellを入れてからsetupする感じか。まだいらない。
ghciのコマンド コロンから始まるいろいろなコマンドでファイルをロードしたり、ghciを終了したりできる。まずは脱出できるように。
変数 小文字から始まればよいみたい。意外なのはシングルクォーテーションが使えること。まじか。
test.hsとして、関数をこう定義する。
double x&amp;#39; = x&amp;#39; + x&amp;#39; ghciから呼ぶ。
Prelude&amp;gt; :load test.hs [1 of 1] Compiling Main ( test.</description>
    </item>
    
    <item>
      <title>2012年KPT</title>
      <link>/2012/12/31/kpt-2012/</link>
      <pubDate>Mon, 31 Dec 2012 00:00:00 +0000</pubDate>
      
      <guid>/2012/12/31/kpt-2012/</guid>
      <description>今年学んだこと  Ruby  Jekyll ブログをGitHub Pagesに移そうかなーと目論み、色々運用法などを試行錯誤 それに伴い、Markdown書式も勉強 Selenium Seleniumスクリプトを書いてみた  社内の勤怠管理システム(Web)に毎日毎日毎日手動で時刻をポチポチ入れてると体調が崩れそうになるので、時刻を取得してぶっこむ！(使い方がアレかもしれない……)   Git  git-svnを実践に投入してみた  Jenkins  勉強会や書籍などで便利さはかなり情報として頭に入ってきた。が、なかなか導入する機会がなかった そんなあなたに っ続・CI超入門〜Jenkinsのススメ2 CI導入の壁を越えろ〜 に行ってきました。 - ser1zw&amp;rsquo;s blog CIからはじめないJenkinsということで、かなり目から鱗。たしかにCIにしか使っちゃダメとは誰も言っていない！　自分で可能性を狭めていたのだ……   Keep  引き続きGitを使う  さしあたり、もう少しsvnプロジェクトをgit-svnで使っていく  Jenkinsは「CIに使わなければならない」という(思い込みの)呪縛から解き放たれたということで、ドンドン使っていく  Redmineに登録されている不具合チケットをぶっこぬいて社内標準の不具合管理表に流し込む作業や、プロジェクトでやり取りしてるメールの添付ファイルだけをぶっこぬいて共有サーバの「受領ファイル」フォルダに突っ込む作業や上述のSeleniumスクリプトを毎日動かす程度に使い倒している あとはAntの実行にも  去年のTryに挙げていたブログ月一更新は達成できた − とりあえずはてなダイアリーをはじめてようやく達成 Advent Calendarは二年連続二回目の投稿  Problem  Objective-C復習  一時期必要に迫られたので、少し本で勉強しイケるようになった……と思ったのに、数ヶ月ブランクがあくとまったく読めなくなっていた  gemを作れるようになれなかった  去年のTryの残件を引き続き  社内スクリプトの汎用化→GitHubへ  これも去年のTry  Dropbox、EvernoteのAPIをもう少し使えるようになる  Try  新しい言語を学ぶ  候補はHaskell 今、自分がやりたいことを実現している記事がWeb上に多い言語→見ても何しているのかさっぱりわからん…… なので、学びはじめる  TDDやるやる詐欺からの脱却  TDDBCに参加し、ちょっとずつ書くように意識はできるようになったのでもう少し  Advent Calendar以外でも何か発表したい！(去年と同じ) 友達をつくる  社内にGitとかJekyllとかの話が出来る人がおらんのよ   来年もがんばろう。</description>
    </item>
    
    <item>
      <title>メモ化を知った</title>
      <link>/2012/12/25/ruby-memo/</link>
      <pubDate>Tue, 25 Dec 2012 00:00:00 +0000</pubDate>
      
      <guid>/2012/12/25/ruby-memo/</guid>
      <description>この投稿はRuby Advent Calendar 2012の16日目の記事としてQiitaに投稿したものです。
はじめに あんまりRuby関係ないんですが、一応、The RSpec Bookを読んでいて知ったのがきっかけなので…。
あらすじ The RSpec Book のletの解説には以下のように記述されています。
describe &amp;#34;テストコードはてきとう&amp;#34; do let(:test) { &amp;#34;TEST&amp;#34; } it &amp;#34;test let&amp;#34; do test.should == &amp;#34;TEST&amp;#34; end end  メソッドが最初に呼び出されたときに戻り値がキャッシュされ、それ以降、同じスコープ内でメソッドが呼び出されるたびにキャッシュされた値が返されることを意味します。
 これをメモ化というそうです。で、メモ化って？
一番簡単なメモ化 調べてみると、だいたいフィボナッチ数を求める例が多い。なのでn番目のフィボナッチ数を求めるメソッドを書いてみる。
普通に書いた場合 def f(n) if n &amp;lt;= 1 then n else f(n-1) + f(n-2) end end 実行していくと、己のPCスペックではf(30) = 832040 くらいからマシンがもたついてきた。
これを メモ化 してみる。
メモ化した場合 # こっちは変わらず def f(n) if n &amp;lt;= 1 then n else f(n-1) + f(n-2) end end def f_memo(n) @cache ||= [] @cache[n] ||= f(n) end 実行すると、最初の一発目は同じくらい遅いんだけど、一回実行すればキャッシュとして @cache に格納されるので二回目以降はバク速で求められる。</description>
    </item>
    
    <item>
      <title>git-svnインストールからgit svn dcommit完了までの手順</title>
      <link>/2012/12/12/git-svn-dcommit/</link>
      <pubDate>Wed, 12 Dec 2012 00:00:00 +0000</pubDate>
      
      <guid>/2012/12/12/git-svn-dcommit/</guid>
      <description>あらすじ CentOSのインストール時に入れたGitにはgit-svnが入っていない(？)ので、一から入れようとしたが、ネットに繋がっていない環境だと結構依存とかがめんどくさかったのでメモ。
環境  CentOS 6.2 Git 1.7.1  git は入っているが、git svnは実行できない console $ git svn git: &#39;svn&#39; is not a git command. See &#39;git --help&#39;.   svn 1.6.11 (r934486) ネットにつながっていないぼっち環境  yumとかで入れられると一発っぽいんだけどなー。
手順 まずは、git-svnのrpmをDLしてくる。
 RPM resource git-svn  インストールしたいPCに持ってきて、rpmコマンド。 perl(SVN::Core) と、 perl(Term:ReadKey) がないと言われる。
# rpm -ivh git-svn-1.7.1-2.el6_0.1.noarch.rpm 警告: git-svn-1.7.1-2.el6_0.1.noarch.rpm: ヘッダ V3 RSA/SHA256 Signature, key ID c105b9de: NOKEY エラー: 依存性の欠如: perl(SVN::Core) は git-svn-1.7.1-2.el6_0.1.noarch に必要とされています perl(Term::ReadKey) は git-svn-1.7.1-2.el6_0.1.noarch に必要とされています perl(SVN::Core) SVN::Coreは subversion-perl というパッケージから入れられるよう。</description>
    </item>
    
    <item>
      <title>はてなダイアリーのエントリをJekyllへ移行する</title>
      <link>/2012/11/12/from-hatena-to-jekyll/</link>
      <pubDate>Mon, 12 Nov 2012 00:00:00 +0000</pubDate>
      
      <guid>/2012/11/12/from-hatena-to-jekyll/</guid>
      <description>あらすじ はてなダイアリーからJekylに移行したいんだけど、完全に移行し切るには過去の遺産(はてなダイアリーのエントリ)も移したいよ。
はてなのエントリ取得 何はなくともエントリをエクスポートしてこない事には始まらない。管理画面から データ管理 =&amp;gt; インポート/エクスポート =&amp;gt; はてなの日記データ形式 をDL。
はてな =&amp;gt; Jekyll どうやるか はてなのエントリをJekyllで見るためには、恐らく2通りの方法がある。
 はてなエントリをMarkdown記法に変換して、Jekyllに突っ込む はてなエントリから記事を作れるようにJekyllにパーサを突っ込む  さて…。
てっく煮ブログさんのJekyll 俺の最強ブログ システムが火を噴くぜ - てっく煮ブログ
自分がどうすればいいのかなーと悩んでいる時、ものすごくタイムリーに移行なされており(タイムリーでした)、かつ自分のやりたい事(はてなエントリの移行など)を全てプラグインなどで実現されていたためすぐにGitHubを見に行きました。
nitoyon/tech.nitoyon.com ・ GitHub
$ git clone https://github.com/nitoyon/tech.nitoyon.com.git ぐ…中身は結構複雑。
ソースを見る前にローカルで動くか見せてもらおうっと。
$ vi Gemfile gem &amp;#39;jekyll&amp;#39; gem &amp;#39;hparser&amp;#39; gem &amp;#39;sass&amp;#39; gem &amp;#39;RedCloth&amp;#39; gem &amp;#39;rdiscount&amp;#39; これで bundle exec jekyll --server で行けるかと思ったけど、なんか色々ないって言われる。
どうやらまだgemが最新版になっていないらしい(gemからJekyllを持ってくると、多分 JEKYLL_HOME/lib/jekyll/tags/post_url.rbがないとか言われる)ので、GitHubから最新版を持ってくる。
$ git clone git://github.com/mojombo/jekyll.git # fa8400ab61cb8df176f9fb2ec52d85f93c7418a7より新しければ大丈夫そう $ git clone git://github.com/hotchpotch/hparser.git # 4fbeefc8becc45ed18bf374bec9a2d862db473d5より以下同文 Jekyllとhparserはこれに置き換え。これで実行すると…おお、自分のローカルでてっく煮ブログが…！</description>
    </item>
    
    <item>
      <title>Jekyll(Liquid)で記事の目次を出力するプラグインを作ってみた</title>
      <link>/2012/10/10/jekyll-liquid-plugin/</link>
      <pubDate>Wed, 10 Oct 2012 00:00:00 +0000</pubDate>
      
      <guid>/2012/10/10/jekyll-liquid-plugin/</guid>
      <description>あらすじ Jekyllのプラグイン作成の練習。エントリから見出しを抽出して目次を出力してみたい。
参考サイト  最近作った Jekyll (Liquid) のプラグイン - @yuumi3のお仕事日記  ソース  gosyujin.github.com/_plugins/tree_list.rb at master · gosyujin/gosyujin.github.com · GitHub  まだできてない事  記事中に h1 (#) タグがあるとうまく生成されない  記事タイトルが h1 (#) なので、 h2 (##) 以下の見出しを集めてくるようにしている  目次から記事へのリンク  Markdownでは ## &amp;lt;a name=&amp;quot;section&amp;quot;&amp;gt; hoge と記載すればnameを振ってくれるようだけど、めんどいので自動で振ってほしい むしろ今はaタグを入れているとレイアウトが崩れる …あれ？　別の環境でやったら hタグに section , section-1 , section-2 &amp;hellip; って連番が振られてる！？　なんで！   作り方 最小単位はこうなるみたい。(何もしないプラグイン)
module Jekyll class SampleTag &amp;lt; Liquid::Tag def initialize(tag_name, xxx, tokens) super end def render(context) end end end Liquid::Template.</description>
    </item>
    
    <item>
      <title>bundle execを省略したいのでバッチを作った(Windows版)</title>
      <link>/2012/10/01/bundle-exec-bat/</link>
      <pubDate>Mon, 01 Oct 2012 00:00:00 +0000</pubDate>
      
      <guid>/2012/10/01/bundle-exec-bat/</guid>
      <description>あらすじ Bundler、非常によいツールなんだけど、bundle exec がめんどい。
ググってみたところ gemset を使う方法 rvmのgemsetを使ってbundlerと賢く付き合う方法 - Hello, world! - s21g と、 bundler-exec.sh というツールを使う bundle exec を省略する - おもしろWEBサービス開発日記 方法があるみたい。
Windowsでこれを実現したいんだけど、gemsetはちょっと大げさな気がするので、bundler-exec.shを参考にバッチファイルを作成できないかな。
参考サイト  コマンドのエイリアス設定(DOSKEY) whichコマンドを作る  コマンドプロンプトを使ってみよう！　－バッチファイル－ Windows 2000 コマンドライン徹底活用 コマンド別/for UNIXライクなパス操作をwindowsのcmd.exeのバッチファイルのみで実現 Windowsのコマンドプロンプトは変態（一部）  調査 ソースを読む限り、やっている処理は
 ruby とかrspec とかbundle exec hogehogeしたいコマンドにaliasをはる(rubyならbundler-exec.sh rubyとなるように) bundle コマンドが使えるのか探してみる。使えない場合はそのままコマンドを実行する bundle が使える場合、今いるパスに Gemfile ファイルがあるのか調べる。ない場合は一つ階層を上がってまた Gemfile があるか探す 上記をを繰り返す。 Gemfile がない場合はそのままコマンドを実行する Gemfile があった場合、 bundle exec を付加してコマンドを実行する  という感じになっている。
ソース で、作ってみた。
gosyujin/bundler-exec-bat
使い方 aliasをはる コマンドプロンプトの場合にはaliasがないようなので、マクロ定義ファイルを作成し、それを起動時に読むようにバッチファイルを作る。または起動オプションを変更する必要があるらしい。(レジストリに登録などでもいい)</description>
    </item>
    
    <item>
      <title>Pygmentsを使ってJekyll内記事のコードハイライトを実現する</title>
      <link>/2012/09/21/jekyll-pygments/</link>
      <pubDate>Fri, 21 Sep 2012 00:00:00 +0000</pubDate>
      
      <guid>/2012/09/21/jekyll-pygments/</guid>
      <description>あらすじ Jekyllではデフォルトでコードにハイライトをつける事はできないようなので、Pygmentsという拡張を入れる。
環境  Python 2.7.3 (2.6以上が必要)  easy_install   easy_installはhttp://peak.telecommunity.com/dist/ez_setup.pyからDLし $ (sudo) python ez_setup.py でインストールする。
※ 後に以下のようなエラーが出るかもしれない。
 Liquid error: undefined method &amp;lsquo;Py_IsInitialized&amp;rsquo; for RubyPython::Python:Module
 これはRubyからPythonを呼びに行くRubypythonというライブラリの中で、libpython2.7.soというファイルを探しに行くが、見つからないとすぐあきらめるようなので？　--enable-shared オプションつけてのインストールが吉。
また、以下の様なエラーが出た場合、libpython2.7.so.1.0が見つからなくてpythonコマンドが実行できなくなった。
$ python &amp;gt; python: error while loading shared libraries: libpython2.7.so.1.0: cannot open shared object file: No such file or directory $ ldd python linux-vdso.so.1 =&amp;gt; (0x00007fff9cf94000) libpython2.7.so.1.0 =&amp;gt; not found libpthread.so.0 =&amp;gt; /lib64/libpthread.so.0 (0x000000343d600000) libdl.so.2 =&amp;gt; /lib64/libdl.so.2 (0x000000343ce00000) libutil.</description>
    </item>
    
    <item>
      <title>JekyllをGitHub Pagesに上げるための準備</title>
      <link>/2012/09/20/jekyll/</link>
      <pubDate>Thu, 20 Sep 2012 00:00:00 +0000</pubDate>
      
      <guid>/2012/09/20/jekyll/</guid>
      <description>GitHub Pagesに登録 GitHubより New Repository を選択。
Repository Name を GitHubのID.github.com と入力しリポジトリ作成。
前回の記事で作成していたJekyll Bootstrapのプッシュ先を追加し、プッシュ。
$ git remote add origin git@github.com:gosyujin/gosyujin.github.com.git $ git push -u origin master http://gosyujin.github.com にアクセスしても多分404なので。気長に待つ。
その間にSite Urlに上のUrlでも入れとく。
そんなこんなでサイトが表示されるようになっているはず。(メールが来たら？)
色々な設定 まずは _config.yml 。
デフォルトのmarkdownパーサの maruku は日本語をうまくパースしてくれないみたいなので(日本語でリスト表記ができなかった)、 kramdown に変更する。以下の記述を追加。
markdown:kramdown 他、タイトルや名前、TwitterIDなどを編集。
title:kk_Atakaの日記tagline:author:name:kk_Atakaemail:kk_ataka@ring.skr.jpgithub:gosyujintwitter:kk_Atakafeedburner:feedname production_urlをGitHub Pagesに。
production_url:http://gosyujin.github.com ここから先はJekyll Bootstrapでインストールした時に入ったコメント機能とかアクセス解析の設定。
コメント機能 デフォルトでは DISQUS というツールを使用している。まずDISQUS - Elevating the discussionでユーザ登録をする必要がある。(TwitterID等でも可能)
アカウントを作ったら自分のサイトを登録。
ここで入力する shortname を控えておく。
_config.yml にさっきの shortname を記述する。 provider もDISQUSになっている事を確認する。
comments:provider:disqusdisqus:short_name:kkataka(略) これでいけるはず。(だめならUniversalコードを _includes/JB/comments-providers/disqus に貼り付けてみる？) 自分のサイトにコメントが書き込まれると、こんな感じでDISQUSに表示される。</description>
    </item>
    
    <item>
      <title>JekyllとJekyll Bootstrapでかんたん静的サイト生成…するための準備</title>
      <link>/2012/09/14/1347595853/</link>
      <pubDate>Fri, 14 Sep 2012 00:00:00 +0000</pubDate>
      
      <guid>/2012/09/14/1347595853/</guid>
      <description>[Ruby][StartUp][Jekyll]JekyllとJekyll Bootstrapでかんたん静的サイト生成…するための準備 あらすじ  はてな記法、綺麗に出力できて今までお気に入りだったんだけど、欠点として、はてなでしか使わないという問題が 他にも文章書く時にreSTとかMarkdownを使うと捗るが、結局アウトプットするのは個人でははてなが多い……[1] そもそもはてな記法は基本はてなじゃなきゃ見れない なら最初から…？  うーん。他の記法使う時がきたのか。
Jekyllとは  Jekyll is a simple, blog aware, static site generator.
https://github.com/mojombo/jekyll/wiki
 静的サイトのジェネレーターなのね。 HTML, Markdown, textile なんでもござれ。
参考サイト  [https://github.com/mojombo/jekyll:title] http://mattn.kaoriya.net/software/lang/ruby/20090409185248.htm:title http://melborne.github.com/2012/05/13/first-step-of-jekyll/:title http://tokkonopapa.github.com/blog/2011/12/28/easy-usage-of-jekyll-on-github/:title http://d.hatena.ne.jp/yuum3/20120620/1340180894:title http://d.hatena.ne.jp/takuti/20110724/1311464070:title http://dsuket.hatenablog.com/entry/2012/03/06/191459:title http://d.hatena.ne.jp/seinzumtode/20120426/1335402322:title  環境  CentOS 6.2 と、WindowsXP Ruby 1.9.2  Bundler 1.1.4  Git 1.7.9.6 Jekyll 0.11.2 RedCloth 4.2.9  いきなり動かす 本来は決まったディレクトリを作ったり、コンフィグファイルを作ったり、レイアウトファイルを作ったりしていく……のだけど、Jekyll Bootstrapを使えばいきなりフルセットで動かす事ができる。
取得はGitで。
$ git clone http://github.com/plusjade/jekyll-bootstrap.git JEKYLL_HOME JekyllはBundlerでインストールするので移動してGemfileを作成。そしてjekyllコマンドで実行！
$ cd JEKYLL_HOME $ vi Gemfile $ cat Gemfile source :rubygems source &amp;#34;http://rubygems.</description>
    </item>
    
    <item>
      <title>Fluentdの自作プラグインがロードできないのでソースの中身を追ってみる…</title>
      <link>/2012/09/13/1347508570/</link>
      <pubDate>Thu, 13 Sep 2012 00:00:00 +0000</pubDate>
      
      <guid>/2012/09/13/1347508570/</guid>
      <description>[Ruby][備忘録][Fluentd]Fluentdの自作プラグインがロードできないのでソースの中身を追ってみる… あらすじ [http://d.hatena.ne.jp/kk_Ataka/20120817/1345209899:title=前回]までに簡単なプラグインを作成する事はできた。
次はプラグインをGem化しようかなと思って色々いじってたら、実行時になんかうまくプラグインが読めない……。なんで？
参考サイト  [https://github.com/fluent/fluentd:title] http://d.hatena.ne.jp/tagomoris/20120715/1342368392:title http://blog.ksauzz.com/?p=37:title  今できてる事とできてない事 BundlerでFluentdをインストールし、
$ bundle exec fluentd -c /hoge/fluent.conf -p /hoge/plugin  を実行した時……
 gem installで入れたfluentdのプラグインはちゃんとロードできる  Gemにしちゃえばロードできる  プラグインディレクトリ直下(-p /hoge/plugin)にササッと作ってみたプラグインもロードでき、動いた  直下に放り込めばロードできる   /hoge/plugin └in_hoge.rb # これはロードできる  gem未満、ササッと作った以上のプラグインがロードできない  fluent-pluginっぽいディレクトリ構成にした程度のもの。まだローカルに置いてあるだけでgemには成り切れていない   /hoge/plugin ├in_hoge.rb # これはロードできる └fluent-plugin-hogehoge ├lib │└fluent │　└plugin │　└in_hogehoge.rb # これがロードできない ├fluent-plugin-hogehoge.gemspec └他 調査結果と(暫定)解決策 fluentdのプラグインロード順番 fluentdコマンドを実行すると、 なんやかんやあって プラグインをロードしにいく。ソースは$FLUENTD_HOME/lib/fluent/plugin.rb
 $FLUENTD_HOME/lib/fluent/plugin/直下のrbファイルをロードする  in_exec.rbとか  gem_pluginをロードする  これは今回空だった  /etc/fluent/plugin/直下のrbファイルをロードする  デフォルトのプラグイン置き場 デフォルトの設定は$FLUENTD_HOME/lib/fluent/env.</description>
    </item>
    
    <item>
      <title>Git add, commitをした時、中でどんな事が起こっているのか</title>
      <link>/2012/08/29/1346242547/</link>
      <pubDate>Wed, 29 Aug 2012 00:00:00 +0000</pubDate>
      
      <guid>/2012/08/29/1346242547/</guid>
      <description>[Git][備忘録]Git add, commitをした時、中でどんな事が起こっているのか あらすじ いまだにファイルがどういうタイミングでリポジトリ、インデックス、ワーキングエリア間を行き来しているのかわからんので色々調べてみることに。
参考資料、サイト  実用Git http://www8.atwiki.jp/git_jp/pub/Documentation.ja/tutorial-2.html:title http://keijinsonyaban.blogspot.jp/2011/05/git.html:title http://git-scm.com/book/ja/Git%E3%81%AE%E5%86%85%E5%81%B4-Git%E3%82%AA%E3%83%96%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88:title  やってみる まずは、空のREADMEファイルを作ってFirst commit。
$ git init Initialized empty Git repository in /tmp/repos/.git/ $ touch README $ git add README $ git commit -m &amp;#34;first commit&amp;#34; [master (root-commit) b0d99b3] first commit 0 files changed create mode 100644 README $ git log --graph --date-order --all --date=short -C -M --pretty=format:&amp;#34;%h&amp;#34;\ %t\ %ad\ %Cblue%cn%Creset\ %Cgreen%d%Creset\ %s * b0d99b3 543b9be 2012-08-29 kk_Ataka (HEAD, master) first commit 色々確認 ※確認スクリプト</description>
    </item>
    
    <item>
      <title>Fluentdのプラグインを作成してみる(練習用)</title>
      <link>/2012/08/17/1345209899/</link>
      <pubDate>Fri, 17 Aug 2012 00:00:00 +0000</pubDate>
      
      <guid>/2012/08/17/1345209899/</guid>
      <description>[Fluentd][備忘録][Ruby]Fluentdのプラグインを作成してみる(練習用) 前回までのあらすじ http://d.hatena.ne.jp/kk_Ataka/20120712/1342098141:title で、confファイルのコメントアウトを外してとりあえず動くっていうところまではいけた。今度は簡単なプラグインを作ってみる。
参考サイト  http://fluentd.org/doc/:title http://d.hatena.ne.jp/erukiti/20120205/1328452455:title http://d.hatena.ne.jp/tagomoris/20120221/1329815126:title  ひたすら何かを吐き続けるプラグイン Inputプラグインの場合 Fluent::Inputクラスを継承する。
class SimpleInput &amp;lt; Fluent::Input # 第一引数がプラグインの名前、&amp;lt;source&amp;gt; typeに指定される Fluent::Plugin.register_input(&amp;#34;simple_in&amp;#34;, self) def start @thread = Thread.new(&amp;amp;method(:run)) end def run loop do # emitメソッドの第一引数が &amp;lt;match **.**&amp;gt; の**に該当すればその形式で出力される # fluent.confでdebug.**はstdoutで出力すると定義されている Fluent::Engine.emit(&amp;#34;debug.debug&amp;#34;, Fluent::Engine.now, {&amp;#34;simple&amp;#34; =&amp;gt; &amp;#34;debudebu&amp;#34;}) # fluent.confに&amp;lt;match simple.output&amp;gt; type simple_outを定義したので、以下のOutput形式で出力される Fluent::Engine.emit(&amp;#34;simple.output&amp;#34;, Fluent::Engine.now, {&amp;#34;simple&amp;#34; =&amp;gt; &amp;#34;simout&amp;#34;}) sleep(1) end end end 上のソースには書かれていないけど、他にもメソッドがいくつか。(公式サイトより)
 configure メソッド  スタート前に呼び出される confハッシュにパラメータを入れられる？ エラーはFluent::ConfigErrorを投げる  start メソッド  スタート時に呼ばれる ここでスレッドを作ったりファイルをオープンしたり  shutdown メソッド  シャットダウン時に呼ばれる スレッドやファイルのクローズはここで。  イベントをsubmitするためにはFluent::Engine.</description>
    </item>
    
    <item>
      <title>Sphinxの見出しについて学びなおし</title>
      <link>/2012/08/16/1345124098/</link>
      <pubDate>Thu, 16 Aug 2012 00:00:00 +0000</pubDate>
      
      <guid>/2012/08/16/1345124098/</guid>
      <description>[備忘録][reST][Sphinx]Sphinxの見出しについて学びなおし 前回までのあらすじ  [http://d.hatena.ne.jp/kk_Ataka/20111202/1322839748:title]で見出しの理解が間違っている事をSphinx 初心者 さんに教えてもらった もう一度ドキュメントを見なおしてみる事に  参考サイト  http://sphinx.shibu.jp/rest.html#id9:title http://docutils.sourceforge.net/docs/user/rst/quickstart.html#sections:title  見出し周辺を読み直し  セクションのヘッダは、セクションのタイトルを句読点などの記号の文字でアンダーラインを引くことで設定します。必要に応じてでオーバーラインも併用することができます。
使用していない種類のアンダーラインが出てくると、見出しのレベルが一段変わる、というルールになっています。
. These are a single line of text (one or more words) with adornment: an underline alone, or an underline and an overline together, in dashes &amp;ldquo;&amp;mdash;&amp;ndash;&amp;rdquo;, equals &amp;ldquo;======&amp;rdquo;, tildes &amp;ldquo;~~~~~~&amp;rdquo; or any of the non-alphanumeric characters = - ` : &amp;lsquo; &amp;ldquo; ~ ^ _ * + # &amp;lt; &amp;gt; that you feel comfortable with.</description>
    </item>
    
    <item>
      <title>Windows版Redmineをサービスに登録してブート時に起動させる(宿題あり)</title>
      <link>/2012/07/17/1342535044/</link>
      <pubDate>Tue, 17 Jul 2012 00:00:00 +0000</pubDate>
      
      <guid>/2012/07/17/1342535044/</guid>
      <description>[Ruby][備忘録][Windows][Redmine]Windows版Redmineをサービスに登録してブート時に起動させる(宿題あり) あらすじ タイトル通り、サービスに登録してよろしく起動してほしい。mongrelを使えばサービスから起動できる……らしいが、名前は聞いたことあるけど、mongrelが何かは知らない……。
 Ruby + C(拡張ライブラリ) で書かれた httpd。
http://d.hatena.ne.jp/keyword/mongrel
 なるほど。
環境  Windows XP Ruby 1.9.3  Bundler 1.0.21 Mongrel 1.2.0.pre2  Redmine 1.4  手順 前提  Redmineの環境構築が完了している事  bundle exec ruby script/server -e production で起動できる事   インストールから起動まで  まずはRedmineデフォルトのGemfileにmongrelを追加し、bundle install  gem &amp;#34;mongrel&amp;#34; $ bundle install Fetching source index for http://rubygems.org/ Using rake (0.9.2.2) Using activesupport (2.3.14) Using rack (1.1.3) Using actionpack (2.3.14) Using actionmailer (2.</description>
    </item>
    
    <item>
      <title>Fluentdというログ収集ツールを使ってApacheのログを取得するまで</title>
      <link>/2012/07/12/1342098141/</link>
      <pubDate>Thu, 12 Jul 2012 00:00:00 +0000</pubDate>
      
      <guid>/2012/07/12/1342098141/</guid>
      <description>[Fluentd][備忘録][Ruby]Fluentdというログ収集ツールを使ってApacheのログを取得するまで あらすじ  Twitterで@[https://twitter.com/tosikawa:title=tosikawa]さんにこんなツールあるよ、と教えてもらった …が、未見だったためすぐググる とりあえずどんなものか動かしてみる事に  Fluentdとは  Log everything in JSON
http://fluentd.org/
 Oh&amp;hellip;シンプルイズベスト…。
 Fluentd is a log collector daemon written in Ruby. Fluentd receives logs as JSON streams, buffers them, and sends them to other systems like MySQL, MongoDB, or even other instances of Fluentd.
 Rubyで作られたログ収集ツール。ただし、JSONで……？
参考サイト  http://fluentd.org/:title  公式のDocumentationがSphinx  http://d.hatena.ne.jp/viver/20110929:title http://d.hatena.ne.jp/wyukawa/20120207/1328625443:title http://d.hatena.ne.jp/zakihaya/20120616/1339856226:title http://d.hatena.ne.jp/fat47/20120426/1335428063:title http://shinobra.com/2012/02/sawanoboly/gluent_getting_start:title  環境  CentOS 6.2 Ruby 1.9.3 RubyGems 1.</description>
    </item>
    
    <item>
      <title>JenkinsでAdmin権限を持つユーザのパスワードを全て忘れた時の復旧方法</title>
      <link>/2012/06/19/1340106125/</link>
      <pubDate>Tue, 19 Jun 2012 00:00:00 +0000</pubDate>
      
      <guid>/2012/06/19/1340106125/</guid>
      <description>[Jenkins][備忘録]JenkinsでAdmin権限を持つユーザのパスワードを全て忘れた時の復旧方法 あらすじ  ローカルで動かしているJenkinsでAdministrator権限を持っているユーザ、およびそのパスワードを忘れたので、色々な事ができなくなった また、Administrator権限を持つユーザがいない = Jenkinsの管理画面が開けなくなった事で権限復旧もできなくなった  環境  Windows XP Jenkins 1.470  ユーザ情報: Jenkinsのユーザデータベース 権限管理: 行列による権限設定 ローカルで運用している JenkinsはWindowsサービスに登録している   原因と解決手順 気づき  プラグインを入れようと思ったら、なんでかJenkinsの管理リンクが見当たらなくなった 管理画面のアドレスは /manage なので直にアクセスしてみる Firefoxだとこんなエラーが出た[1]  ！　内容符号化 (Content-Encoding) に問題があります 不正または不明な形式で圧縮されているため、ページを表示できません。 ・この問題を Web サイトの管理者に報告してください。 [再試行]  試しにChromeでもやってみたがこう  このウェブページにアクセスできません http://localhost:8080/manage のウェブページは一時的に停止しているか、 新しい http://localhost:8080/manage に移動した可能性があります。 エラー 330 (net::ERR_CONTENT_DECODING_FAILED): 不明なエラーです。  まさかのIE6。ログイン画面からレイアウト崩れてて(さすがにサポートしてないよなぁ)とか思いつつアクセスすると…  アクセスできません kk_Ataka には、Administer パーミッションがありません。 なんだと！？　…でも管理画面にいけないんだから、権限も振れないよ。どうしよう。
解決策  とりあえず、Jenkinsのディレクトリをユーザ名(kk_Atakaなど)で検索してみた…[2] すると引っかかったのはJenkinsのルートにある config.xml と大量の build.</description>
    </item>
    
    <item>
      <title>TDD Boot Camp 大阪 1.0( #tddbc ) に参加しました</title>
      <link>/2012/06/03/1338724924/</link>
      <pubDate>Sun, 03 Jun 2012 00:00:00 +0000</pubDate>
      
      <guid>/2012/06/03/1338724924/</guid>
      <description>[TDD][RSpec][Ruby][イベント]TDD Boot Camp 大阪 1.0( #tddbc ) に参加しました 概要  http://atnd.org/events/28762:title なかなかスケジュールの都合がつかず、近場で開催されても参加できないことが多かったので、「次こそは！」と思った矢先の大阪開催だったので参加しました  まとめ  楽天カフェテリア＠大阪、非常に素晴らしい会場でした。素晴らしい会場でした！  カフェテリアは木製の椅子のため、半日近いイベントの場合腰が悪い人は座布団を持って行ったほうがいいですね  TDDとペアプロに関しての経験をつむことができた  よしおかさん、関さん、和田さんを独占していたRubyのテーブル…  その中でも恐れ多くも関さんと和田さんを独占してしまった。会場撮影されていた様子^^; http://via.me/-1nhb1te:title  成果物はStep3のはじめまで[https://github.com/gosyujin/tddbc:title=GitHub]にあげました  他の言語でどう書くか、書き方などを見て、自分のメイン言語のテスティングフレームワークでも出来るかな？　と調べる事が大事 ねんがんのグリーンバンドを手に入れたぞ！ TDDは一人でも出来るので、どんどん書いて量を質に転化させていく！ 主催の@[https://twitter.com//bufferings:title] さん、TAの皆さん、スピーカーである@[https://twitter.com/t_wada:title] さん、@[https://twitter.com//hyoshiok:title] さん、@[https://twitter.com//m_seki:title] さん、Ruby島の皆さんお疲れ様でした！  以下、時系列にそったまとめ
TDDのこころ @[https://twitter.com//t_wada:title] さん BootCampとは  新兵に教官が優しく教える しかしスライドの画像[1]は2012年現在もはや厳しい…  今日やること  ペアプログラミングを体験してみる コードレビュー大会  同じコードを同僚と解くという機会はほぼない 同じお題を他の人はどう考えるのか、他の言語ではどうなるのか   ふりかえり  KPT形式でフィードバック  ソフトウェア開発の三本柱  バージョン管理、テスティング、自動化  RPGのノーセーブクリア＝バージョン管理なしの開発 今コードが動いているのか動いていないのか＝テスティング 人間が手作業でやっているものをシェル化、Jenkinsで回したりで機械に任せる＝自働化、自動化  機械がうまくいってない時だけ教えてくれる    「テスト」とは  誰が、なんのためにテストをするのかで簡単に分類  Developer Testing  開発者が開発促進のため  Customer Testing  顧客が進捗管理のため(受入テストとか)  QA Testing  品質保証担当者が品質保証のため    「TDD」とは  テスト駆動開発入門 ケント・ベック 動く、きれいなコードへ  そこに至るための道へは？  きれいな設計をして、それを実装して、それが動作する…きれいな設計とは？   動かすことで初めてわかることがソフトウェア開発にはとても多い  なら早く超えよう(ただしここで止まると技術的負債になる)   TDDのサイクル  テストを書き テストを実行して失敗させ(Red) 目的のコードを書き テストを成功させ(Green) そのテスト通るまま中を綺麗にしていく(Refactor) これを繰り返す  TDDのやり方  大きな問題は切り分けて1つずつ たくさんの問題も1つずつ 何をテストすればよいのか  開発を進めにくくする要因→何かわからないもの、不安   TDDをすることにより  即座にフィードバックを得る 書いたコードへの自信持つ これから書くコードに自信を持つ  TDDの真の目的  不安の克服 健康  コードの健康=仕様変更に対応できる チームの健康=仕様変更に備える事ができる   ペアプロ デモ(FizzBuzz)  ゴールから書く！  Fizzの場合  何がゴール？ Fizzが返る どうなった時Fizz？ …としていく   テストコードのテストってどうするの？  テストコードと実装コードを互いにテストしあう！  そのタイミングは実装する前にやってしまう、仮実装してしまう   実際にペアプロのデモを第三者視点で見て、以下のようなことを思った  文化の違いをどう解決していくか  エディタ、キーバインド、などなど  細かなTipsが共有されていく  「xxはyyっていうショートカットで出せますよ」「知らんかった…」  ナビゲータって一人で仕事をしているときはやる事がないので結構難しそう…   ペアプロ  Ruby島は4人でした  @[https://twitter.</description>
    </item>
    
    <item>
      <title>Jenkins,Redmine使いこなし勉強会に参加しました と、ちょっとプラグイン作ってみた #jen_red</title>
      <link>/2012/05/28/1338209339/</link>
      <pubDate>Mon, 28 May 2012 00:00:00 +0000</pubDate>
      
      <guid>/2012/05/28/1338209339/</guid>
      <description>[Ruby][イベント][Jenkins][Redmine]Jenkins,Redmine使いこなし勉強会に参加しました と、ちょっとプラグイン作ってみた #jen_red 概要  http://connpass.com/event/500/:title  前半は発表のメモ。後半は実際にプラグイン作ったりインストールしたりのメモ。
Redmineプラグイン活用入門 - @[http://twitter.com/Kokawa_Takashi:title]さん 注意:Redmine開発環境が安定していないので、すぐ陳腐化してしまう事がある！
Redmineにおける問題  Redmineの設定で解決 運用で解決 ツール自体を拡張して解決  プラグインの探し方・おすすめ REST APIを使って外部から プラグインを作る   プラグインの探し方・おすすめ  http://www.r-labs.org/projects/r-labs/wiki/Redmine%E3%83%97%E3%83%A9%E3%82%B0%E3%82%A4%E3%83%B3%E9%9B%86:title http://www.redmine.org/plugins:title 一つだけおすすめを… Wiki Extensions Plugin  オートプレビュー 任意のページをメニューに 任意のページを埋め込み 等々…  他のおすすめ  CodeRevirew Backlogs TimeTracker   REST API  自動でチケットを作ったりできる チケット一覧を取得できたり この一連の流れができたらJenkinsに任せる事ができる  期日が間近のチケットのメール通知などもできる   プラグインを作る  Redmine1.4 or 2.0が対象(Ruby1.9,Bundler対応している/これ以前はしていない) プラグイン開発環境構築がつらいので  Ruby環境  WindowsならRubyInstaller + DevKit MacならRVM  自分でも少しまとめている http://d.</description>
    </item>
    
    <item>
      <title>SlideShareのAPIを叩いてスライドをDLするRubyスクリプトをHerokuにデプロイした</title>
      <link>/2012/05/21/1337605575/</link>
      <pubDate>Mon, 21 May 2012 00:00:00 +0000</pubDate>
      
      <guid>/2012/05/21/1337605575/</guid>
      <description>[SlideShare][Heroku][Ruby][API]SlideShareのAPIを叩いてスライドをDLするRubyスクリプトをHerokuにデプロイした あらすじ slideshareを社内から閲覧する事を禁じられているので、ワンクッションおいてスライドのpptを落とせるようにしたい
参考サイト  http://www.slideshare.net/developers/documentation#get_slideshow:title  とりあえず公式サイトを抑えておけばいけそう。
流れ API申請  slideshare -&amp;gt; Developer &amp;amp; APIのページからApply for API keyに移動 ログイン or 新規アカウント作成 Name、E-Mail、How do you want to use the API?を入力し送信。頑張って英文書く。  I want to get slideshare&amp;#39;s slide from API.  送信されたメールに貼られているAPI KeyとShared Secretを控える  パラメータ  slideshare -&amp;gt; Documentationを見ながら必要なパラメータを調べる  |*api_key|さっきのAPI Key|
|*ts|タイムスタンプ[1]|
|*hash|さっきのShared Secretとこれから取得するtsでハッシュを作る[2]|
|*(username)|登録ID|
|*(password)|パスワード|
全然関係ないけど、Documentationのページ内にあるi.e.って単語を初めて見たのでググってみた。http://www.masahiko.info/life/archives/000799.html:title that is &amp;hellip; すなわちとかそういう意味らしい。e.g.で例えば、for example的な。
ソース ソースはこんな感じ。
require &amp;#39;openssl&amp;#39; require &amp;#39;uri&amp;#39; require &amp;#39;net/http&amp;#39; url = &amp;#39;http://www.</description>
    </item>
    
    <item>
      <title>BPStudy#57に参加しました #bpstudy</title>
      <link>/2012/04/28/1335575351/</link>
      <pubDate>Sat, 28 Apr 2012 00:00:00 +0000</pubDate>
      
      <guid>/2012/04/28/1335575351/</guid>
      <description>[Jenkins][Sphinx][イベント]BPStudy#57に参加しました #bpstudy 詳細: http://connpass.com/event/365/:title  例の特許庁最適化計画プロジェクトを通してITビジネスの仕方を変えよう  というなかなかに興味深い内容だったので参加。
第一部 新たな価値観へのITビジネス視点での転換 萩本順三さん  政治的な話は無し 私が技術顧問として最適化計画を見た時、「古いな～」と思った  問題があるプロジェクトに入り込んで、どうするかというのが仕事  火を吹いた時に入り込んでいく =&amp;gt; はじめにオフィスへ入り込んで資料を見た時「これやめないんですか？」と聞いたほど   かなりはじめの段階からダメと周りの人にも言っていたが……  何が問題か？  技術を特許庁の業務にどう活かすかの具体性がない  xml使ったからどうなんの？  業務モデルを1000名で書いてどうすんの？ むしろ主役は特許庁なのでは？ =&amp;gt; 放り投げ主義 業務モデルは発注者の理解と覚悟の元作成するはずなのに！  根底の問題は？  IT業界の負のビジネス慣習  ユーザ、開発両者のスキル不足  お客さんに教えながらモデル化をしていくものなのに   コスト配分が開発者寄りになり、たとえいいものを作ったとしてもユーザさんが使いこなせない うまく要件を引き出せないと、正しくないシステムができてしまう 是正しなければ  意識改革 コタツモデル  ユーザから話を聞いてシステム開発に入るが、ユーザは必ず正しいのか 以下の3つから&amp;rdquo;将来&amp;rdquo;の価値を取りに行く視点を持つ  戦略的視点(偉い人) 業務問題解決の視点(業務担当の偉い人) IT活用の視点(開発の出来る人)  しかし、偉い人は現在の価値を取りに行きがちだし、業務担当の偉い人は業務問題解決の視点しか持っていないことが多い 戦略的視点から業務解決、IT活用をしていくと、偉い人も「あ、俺業務知らなかったな」と感じで同じコタツに入ってくれる =&amp;gt; 要求が収束する Howの手探り  ビジネス戦略から  Howの突き上げ  テクノロジーを使うともしかしたら業務がいらなくなるかもしれない =&amp;gt; 戦略に結びつける  最適化  切ってつなげて並行でスピーディに走らせる  常に価値で問う  設計ドキュメントなどは誰に対して価値があるのかを問う。説明できなければいらないじゃない？(ただし、技術的に説明できない場合もある)  自分が持っている知識をお客さんに魅力的に見えるものとする 自分のやりたいこと(How)を実現していこう(What)  自動車メーカ、ファッション業界ではできているのになぜソフトウェア業界でできない システム要求の牢屋に閉じ込められていたらできっこない   5年後のIT業界  巨大システムの開発(一枚岩)からアクセサリ化に  コーディネート化する必要がある 開発者が一番強い。なぜならHowを握っているから  ピラミッド型組織から分散自立型組織に  優秀な人は残して優秀じゃない人は返す、返された人は価値に敏感になれるように  学び、勇気を持って行動してください  第二部 執筆プロジェクトの継続的ビルド [https://twitter.</description>
    </item>
    
    <item>
      <title>Pro Gitと入門Gitと入門gitと実用GitでGitの復習 無名ブランチ(detached HEAD)からの復活編</title>
      <link>/2012/04/24/1335270486/</link>
      <pubDate>Tue, 24 Apr 2012 00:00:00 +0000</pubDate>
      
      <guid>/2012/04/24/1335270486/</guid>
      <description>[Git][Windows][備忘録]Pro Gitと入門Gitと入門gitと実用GitでGitの復習 無名ブランチ(detached HEAD)からの復活編 前回までのあらすじ  http://d.hatena.ne.jp/kk_Ataka/20120305/1330951640:title http://d.hatena.ne.jp/kk_Ataka/20120311/1331472478:title http://d.hatena.ne.jp/kk_Ataka/20120315/1331816663:title http://d.hatena.ne.jp/kk_Ataka/20120410/1334058674:title http://d.hatena.ne.jp/kk_Ataka/20120423/1335185906:title  参考  http://progit.org/:title 入門Git 入門git 実用Git  無名ブランチ(detached HEAD)とは 要約すると「過去のコミットの状態を眺めるための&amp;rdquo;便利機能&amp;rdquo;なのでここに永続的な変更をするなんてとんでもない！」という事らしい。
無名ブランチ状態で作業するとどうなるか ちょっと「ブランチにいると思いこんだまま無名ブランチで作業し、さーてmasterブランチに戻ってmergeするかぁ……はぁ！？」な状況を作り出してみる。
まずは無名ブランチの準備としてnobraブランチを作る。(これ以降の作業は、本当はnobraブランチでやっていきたいと思っている)
$ git checkout -b nobra Switched to a new branch &amp;#39;nobra&amp;#39; $ touch nobra $ git add nobra $ git commit -m &amp;#34;Add nobra&amp;#34; [nobra d62e4cb] Add nobra 0 files changed, 0 insertions(+), 0 deletions(-) create mode 100644 nobra $ git g * d62e4cb (HEAD, nobra, master) Add nobra * 7ab5db8 (topic) Add message line 3 * cf6c3d6 Add message line 2 * 38f8aff Add message line 1 * 93b8e52 Add message line 4 * 0b91a9f Add message line 5 * 15f636f Add line number * fa9eabc first commit $ git br master d62e4cb Add nobra * nobra d62e4cb Add nobra topic 7ab5db8 Add message line 3 次に、このnobraブランチのSHA1を指定してcheckoutする。</description>
    </item>
    
    <item>
      <title>Pro Gitと入門Gitと入門gitと実用GitとGit道場#1でGitの復習 rebase編</title>
      <link>/2012/04/23/1335185906/</link>
      <pubDate>Mon, 23 Apr 2012 00:00:00 +0000</pubDate>
      
      <guid>/2012/04/23/1335185906/</guid>
      <description>[Git][備忘録][Windows]Pro Gitと入門Gitと入門gitと実用GitとGit道場#1でGitの復習 rebase編 前回までのあらすじ  http://d.hatena.ne.jp/kk_Ataka/20120305/1330951640:title http://d.hatena.ne.jp/kk_Ataka/20120311/1331472478:title http://d.hatena.ne.jp/kk_Ataka/20120315/1331816663:title http://d.hatena.ne.jp/kk_Ataka/20120410/1334058674:title   http://d.hatena.ne.jp/kk_Ataka/20120422/1335108555:title  参考  http://progit.org/:title 入門Git 入門git 実用Git New !! Git道場#1 講義 http://speakerdeck.com/u/ogawa/p/git New !!  rebaseとは  入門git P126
土台の置き換え(リベース)にはgit rebaseコマンドを使う。
実用Git P176
一連のコミットのもととなるもの(基点)を変更する際に使います。
Git道場 講義
コミットをかぶせる事[1]
 コミットの基を変更すると。
パターン1 一般的な？場合(前方移植(forward-port)) Git道場で繰り返したパターンに近いかな。こういうブランチを作る。
1---2---3(topic) / A---B---C---D(master) まずは1-5行目にそれぞれ1-5と入力したファイルを用意。
$ touch num $ git add num $ git commit -am&amp;#34;first commit&amp;#34; [master (root-commit) fa9eabc] first commit 0 files changed, 0 insertions(+), 0 deletions(-) create mode 100644 num $ vi num $ cat num $ git commit -am &amp;#34;Add line number&amp;#34; [master 15f636f] Add line number 1 files changed, 5 insertions(+), 0 deletions(-) $ git g * 15f636f (HEAD, master) Add line number * fa9eabc first commit 次にtopicブランチを作成しを育てる。</description>
    </item>
    
    <item>
      <title> Git道場#1に参加しました と、pullとpull --rebase備忘録 #gitdojo</title>
      <link>/2012/04/22/1335108555/</link>
      <pubDate>Sun, 22 Apr 2012 00:00:00 +0000</pubDate>
      
      <guid>/2012/04/22/1335108555/</guid>
      <description>[Git][イベント] Git道場#1に参加しました と、pullとpull &amp;ndash;rebase備忘録 #gitdojo 概要  http://git-dojo.doorkeeper.jp/events/979-git%E9%81%93%E5%A0%B4:title  対象者が
 merge / rebaseにちょっと自信がない
conflictが怖い
 まさにそんな状況だったので、打破するために参加しました。
心「Git総論、心構え」  @[https://twitter.com/#!/iwamatsu:title=iwamatsu]さんの講義  Gitにはリモートリポジトリ、ローカルリポジトリがある  集中型のリポジトリにはリモートリポジトリとローカルリポジトリの区別がない  皆のリポジトリなので履歴参照などはすべてリポジトリを見にいかなければならない  分散型では、主な作業はローカルで行い、データを管理できる ローカルリポジトリからリモートリポジトリに反映(プッシュ)する事で他人と共有 ローカルリポジトリは俺のもの、リモートリポジトリは皆のもの  Gitは頑健である Gitは時間的な変遷を管理する  昨日のこの時間何してたかな？ testブランチを消してもコミットは残っている 作業履歴が残っているのでreflogで参照できる  reflogで救済できる期間は90日以内、またはgit gc が実行されるまで   他(質疑応答の回答など)  ブランチを削除してもコミットは残っている。git branch -D GitHub重い……  イントラにbareリポジトリ用意して毎朝GitHubから持ってくるなど   技「本日の課題、テクニックの解説」  @[https://twitter.com/#!/conceal_rs:title=conceal_rs]さんの講義  課題  今日はチームで一つのファイルを編集 pull, rebaseを怖がらずに  コンフリクトが起こった時の対処法を学ぶ  pullとの違いを理解する  ≒mergeとrebaseの違いでいいのかな？   ルール  1-10までのNumbersファイルの後ろに記号を追加削除していく コミットメッセージだけで語る チーム間ではコミットメッセージのみを介して会話する 「好きにやっていいので、ぐちゃぐちゃを楽しんでください」 今回は@[https://twitter.</description>
    </item>
    
    <item>
      <title>ZenTestで実行したRSpecの結果をGrowlで通知してくれるようにした</title>
      <link>/2012/04/20/1334933158/</link>
      <pubDate>Fri, 20 Apr 2012 00:00:00 +0000</pubDate>
      
      <guid>/2012/04/20/1334933158/</guid>
      <description>[Ruby][Windows][備忘録]ZenTestで実行したRSpecの結果をGrowlで通知してくれるようにした 前回までのあらすじ  http://d.hatena.ne.jp/kk_Ataka/20111207/1323291938:title  前回は、ファイル編集する -&amp;gt; alt+tabでウィンドウ切り替える -&amp;gt; プロンプトでrspecコマンドうつ…の繰り返しを改善することができた。
今回は、コード修正、保存 -&amp;gt; 違うターミナル切り替え -&amp;gt; ZenTestで自動実行された結果を見る…の繰り返しを改善する。テスト結果通知にGrowlを使用する事でいけそう。
参考サイト  http://d.hatena.ne.jp/gan2/20080413/1208081539:title http://www.edit.ne.jp/~koic/?date=20070731:title http://d.hatena.ne.jp/amacou/20090606/1244260607:title [https://github.com/rspec/rspec/wiki/autotest:title] http://blog.masashi-fujiwara.net/2010/11/script-test.html:title [https://github.com/karl/autotest-growl:title] http://rubyist.g.hatena.ne.jp/rochefort/20100414/p1:title http://d.hatena.ne.jp/zariganitosh/20080312/1205305079:title http://blog.champierre.com/774:title  環境  Windows XP Ruby 1.9.3  Rubygems 1.8.11 Bundler 1.0.21 ZenTest 4.6.2 autotest-growl 0.2.16(だったか？) rspec 2.8.0  Growl for Windows 2.0.9  Macに置き換えてもいけるかは後で確認。
手順 Growls for Windowsインストール  http://www.growlforwindows.com/gfw/displays.aspx:title ここから落とす。  Gem入手  Gemfileファイルを作って以下のgemファイルを記載  gem &amp;#39;ZenTest&amp;#39; gem &amp;#39;autotest-growl&amp;#39;  bundle install  .</description>
    </item>
    
    <item>
      <title>Subversionで2ヶ所のリポジトリの同期を取るメモ</title>
      <link>/2012/04/17/1334669770/</link>
      <pubDate>Tue, 17 Apr 2012 00:00:00 +0000</pubDate>
      
      <guid>/2012/04/17/1334669770/</guid>
      <description>[Solaris][備忘録][Subversion]Subversionで2ヶ所のリポジトリの同期を取るメモ 前回のあらすじ  http://d.hatena.ne.jp/kk_Ataka/20120115/1326624864:title  参考サイト  http://www.asahi-net.or.jp/~iu9m-tcym/svndoc/svn_backup.html:title http://www.ilovex.co.jp/blog/system/other/subversion.html:title http://www.02.246.ne.jp/~torutk/subversion/intro.html:title http://d.hatena.ne.jp/pasela/20090206/svn_backup:title http://terai.xrea.jp/Subversion.html:title  前提  以下の二つのサーバがある  Aサーバ:開発を進んでいるリポジトリがある(r222) Bサーバ:これからAサーバのリポジトリと同期をとりたいリポジトリがある(r111)   差分のdumpとってload(失敗) Aサーバ  進んでいる分のダンプを取る。  rオプションでダンプを取るリビジョンを指定できる。一つだけだとそのリビジョンだけ。(222ならリビジョン222)範囲指定する場合はAAA:BBBとする   $ svnadmin dump リポジトリパス(/home/xxx/yyyなど) -r 111:222 --incremental &amp;gt; repo.dump  これをなんらかの方法でBサーバへ移動する(ftpでもUSBでも)  Bサーバ  svnadmin loadコマンドで差分ダンプファイルを流しこむ。  リビジョンがかぶっているとエラー(リビジョン111未満のもの)   $ svnadmin load リポジトリパス(/home/xxx/yyyなど) &amp;lt; repo.dump &amp;lt;&amp;lt;&amp;lt; オリジナルのリビジョン 111 に基づき、新しいトランザクションを開始しました * パスを追加しています : trunk/xxx ...svnadmin: ファイルが既に存在します: ファイルシステム &amp;#39;リポジトリパス&amp;#39;, トランザクション xxx-xx, パス &amp;#39;trunk/xxx&amp;#39;  - 112からダンプしたファイルをloadする…とうまくいく予定だったのだが、なんかファイルのチェックサムが違うといわれた……。  $ svnadmin load リポジトリパス(/home/xxx/yyyなど) &amp;lt; repo.</description>
    </item>
    
    <item>
      <title>Pro Gitと入門Gitと入門gitでGitの復習 HEADのキャレットとかチルダとか補講編</title>
      <link>/2012/04/10/1334058674/</link>
      <pubDate>Tue, 10 Apr 2012 00:00:00 +0000</pubDate>
      
      <guid>/2012/04/10/1334058674/</guid>
      <description>[Git][備忘録][Windows]Pro Gitと入門Gitと入門gitでGitの復習 HEADのキャレットとかチルダとか補講編 前回までのあらすじ  http://d.hatena.ne.jp/kk_Ataka/20120305/1330951640:title http://d.hatena.ne.jp/kk_Ataka/20120311/1331472478:title http://d.hatena.ne.jp/kk_Ataka/20120315/1331816663:title  GitHubで他の人の.gitconfigとかを見たりすると、HEAD^とかHEAD~~とかにエイリアスが貼ってあるけど、これってなんなの？
今の認識: 書いた分だけリビジョンが戻ってくれる程度
参考  http://progit.org/:title 入門Git New !! 入門git  調査 入門Git P87 コミットの祖先の指定によると、
   記法 意味     ^ 指定したコミットの1番目の親   ^番号 指定したコミットのN番目の親   ~ 指定したコミットの1世代前の親   ~世代 指定したコミットのN世代前の親    という事らしい……が、番目と世代は何が違うんだろう？　とりあえずこんな歴史があるとして、masterから戻ってみる。
確認 * b467307 2012-04-05 kk_Ataka (HEAD, origin/master, master) Add get_sheetname.rb(convert exe file b | * b025b6b 2012-04-05 kk_Ataka (1.</description>
    </item>
    
    <item>
      <title>VimでBundler(プラグイン管理)するvundleインストール手順</title>
      <link>/2012/04/05/1333553936/</link>
      <pubDate>Thu, 05 Apr 2012 00:00:00 +0000</pubDate>
      
      <guid>/2012/04/05/1333553936/</guid>
      <description>[Vim][備忘録]VimでBundler(プラグイン管理)するvundleインストール手順 前回までのあらすじ  http://d.hatena.ne.jp/kk_Ataka/20111218/1324219740:title  普通に使っているだけだった。プラグインとかも使ってみたい、入れ方メモる。
参考サイト  http://vim-users.jp/2011/04/hack215/:title [https://github.com/vim-jp/vimdoc-ja/:title]  環境  WindowsXP Vim 7.3 香り屋版 msysGit  プラグイン管理 プラグインを入れようと思った矢先、どうもプラグイン管理をするプラグイン？　がある模様。名前がvundleといって、RubyのGem管理に使われているBundlerに影響を受けたものみたい。Bundlerなら使ったことあるし、それなら入れやすいかも。
vundleインストール [http://github.com/gmarik/vundle.git:title=Github]にリポジトリがあるのでgitでホームの.vimディレクトリにcloneする。
$ git clone http://github.com/gmarik/vundle.git ~/.vim/vundle.git Cloning into %USERPROFILE%/.vim/vundle.git... remote: Counting objects: 2239, done. remote: Compressing objects: 100% (1464/1464), done. remote: Total 2239 (delta 736), reused 2183 (delta 685) Receiving objects: 100% (2239/2239), 269.48 KiB | 66 KiB/s, done. Resolving deltas: 100% (736/736), done. 設定 _vimrcまたは.vimrcを開き、まず以下の設定を記載。</description>
    </item>
    
    <item>
      <title>Subversionでファイルを分けてコミットする</title>
      <link>/2012/04/02/1333369857/</link>
      <pubDate>Mon, 02 Apr 2012 00:00:00 +0000</pubDate>
      
      <guid>/2012/04/02/1333369857/</guid>
      <description>[Subversion][備忘録]Subversionでファイルを分けてコミットする あらすじ コマンドラインからファイルをたくさんコミットしたいんだけど、コミットログを分けたいので分割してコミットしたい。
参考サイト  http://www.caldron.jp/~nabetaro/svn/svnbook-1.5-final/html-chunk/svn.ref.svn.c.changelist.html:title http://d.hatena.ne.jp/namutaka/20110125/1295964889:title http://www-aos.eps.s.u-tokyo.ac.jp/~takagi/subversion.html#sec16 http://blog.cgfm.jp/garyu/archives/83:title  方法 なんかいっぱいファイルがあるとする。
$ ls a001.html a019.html a037.html a055.html a073.html a091.html a002.html a020.html a038.html a056.html a074.html a092.html a003.html a021.html a039.html a057.html a075.html a093.html a004.html a022.html a040.html a058.html a076.html a094.html a005.html a023.html a041.html a059.html a077.html a095.html a006.html a024.html a042.html a060.html a078.html a096.html a007.html a025.html a043.html a061.html a079.html a097.html a008.html a026.html a044.html a062.html a080.html a098.html a009.html a027.html a045.html a063.html a081.html a099.html a010.html a028.</description>
    </item>
    
    <item>
      <title>BPStudy#55に参加しました</title>
      <link>/2012/04/01/1333220954/</link>
      <pubDate>Sun, 01 Apr 2012 00:00:00 +0000</pubDate>
      
      <guid>/2012/04/01/1333220954/</guid>
      <description>[Heroku][Agile][イベント]BPStudy#55に参加しました 詳細: http://connpass.com/event/354/:title  Heroku大好き  ということで参加しました。
第1部 Heroku @[http://twitter.com/herokujp:title]さん(相澤歩さん、Heroku Herokuとは  元々Rubyアプリケーションをデプロイするサービスだった。 今はJavaとかScalaとか  最近はFacebookアプリの影響でPHPが多い！   Heroku=Rubyと思っていたので、(実際それで使っていたのもある)最近はjsやJava使えたというのが個人的に驚き。さらに最近はPHPも多いという事らしい。ただしBPStudyの会場で聞いたところ。
\#bpstudy Herokuを何で使ってますか→Python、Rubyそこそこ、Java、Scalaもある程度、PHPなどがほぼいない
&amp;mdash; ごしゅじんさん (@kk\_Ataka) 3月 30, 2012 懇親会での話によると「あの空気では手を挙げられない」ということだったらしい。
Herokuって何？　改めて再定義  単なるホスティングサービス？  いいえ、PaaSです ホスティングサービスと何が違うの？ 開発者がサーバの管理とかスケーラビリティを意識せずに製品を作れるように   生産性の低いプログラマを底上げするものではない  できるプログラマをさらに引き上げてくれるサービス Rubyの思想と似ているかも(＝ある程度できる人向けのもの)  今後Herokuを使う人へ  Herokuで色々やってTwitter, GitHubなどで情報発信してみてください Add onを作ってマーケットプレイスに登録もできるよ、売れるよ！  第2部 SonicGardenでのherokuの実践活用 Sonic Garden 松村さん(@[http://twitter.com/mat_aki:title]さん) Sonic Gardenとは  受託一括納品についての問題点を解決する  &amp;ldquo;納品しない&amp;rdquo;受託開発  「Heroku」でググると4番目に出る  Sonic Gardenのソフトウェア開発について Sonic Gardenでは6~7人で人数以上のプロジェクトを走らせている=一人が複数のプロジェクトを掛け持ちしている。以下のようなツールを使っている。
 http://www.</description>
    </item>
    
    <item>
      <title>simplecovとsimplecov-rcovを使ってJenkinsでカバレッジを確認</title>
      <link>/2012/03/27/1332856400/</link>
      <pubDate>Tue, 27 Mar 2012 00:00:00 +0000</pubDate>
      
      <guid>/2012/03/27/1332856400/</guid>
      <description>[Windows][Jenkins][Ruby][備忘録]simplecovとsimplecov-rcovを使ってJenkinsでカバレッジを確認 あらすじ rcovインストールに思いの他てこずったので他のツールを検討してみる。
調べるとsimplecov,simplecov-rcovというツールでもいける様子。Ruby1.9系のカバレッジツールらしいが1.8でも使えるだろうか。あとRailsじゃなくても使えるのかな。
参考サイト  [https://github.com/colszowka/simplecov:title] [https://github.com/fguillen/simplecov-rcov:title]  手順(Getting Startedをかなりはしょりながら) Simplecov Gemfileに以下を追加。
gem &amp;#39;simplecov&amp;#39; 次にspecファイルに以下のrequireを追加。
require &amp;#39;simplecov&amp;#39; SimpleCov.start そしてrspecを実行。
$ bundle exec rspec -fs spec\convert_spec.rb WARNING: SimpleCov is activated, but you&amp;#39;re not running Ruby 1.9+ - no coverage analysis will happen WARNING: SimpleCov is activated, but you&amp;#39;re not running Ruby 1.9+ - no coverage analysis will happen やっぱ1.8じゃだめかー。ちょっとRuby1.9系で試してみる。
$ bundle exec rspec -fs spec\convert_spec.rb (略) Coverage report generated for RSpec to C:/project/excel_for_ruby/coverage.</description>
    </item>
    
    <item>
      <title>Windows環境用にrcovをビルドしなおす手順</title>
      <link>/2012/03/20/1332240122/</link>
      <pubDate>Tue, 20 Mar 2012 00:00:00 +0000</pubDate>
      
      <guid>/2012/03/20/1332240122/</guid>
      <description>[Windows][Jenkins][Ruby][備忘録]Windows環境用にrcovをビルドしなおす手順 あらすじ Jenkinsでビルドしていくとともにカバレッジの調査もしたい。rcovというツールでカバレッジを出す事ができるらしい。
参考サイト  [https://github.com/relevance/rcov:title] http://rubygems.org/gems/rcov:title http://www.freia.jp/taka/blog/762/:title  先に結論 Windows環境ではWindows用に自力でビルドしなければならない！
 [http://rubygems.org/gems/rcov:title]よりgemをDL [http://www.microsoft.com/japan/msdn/vstudio/express/:title]からVisual C++ 2010 Express Editionを入手しインストール 全てのプログラム -&amp;gt; Microsoft Visual Studio 2010 Express -&amp;gt; Visual Studio コマンド プロンプト (2010)を起動。以後ビルドはこのプロンプトで実施する %RUBY_HOME%\lib\ruby\1.8\i386-mswin32\のconfig.hのMSC_VERの記述を一旦消す  #if _MSC_VER != 1200 #error MSC version unmatch: _MSC_VER: 1200 is expected. #endif  env.hのFRAMEを以下のように編集  extern struct FRAME { extern __declspec(dllimport) struct FRAME {  gem install！！  以下は四苦八苦した記録の残骸。
手順(本当に順番をメモっているのでいらない操作が多い) rcovインストール BundlerでGemを管理するのでGemfileにrcovを追加。
gem &amp;#39;rcov&amp;#39; 追加後、インストール……</description>
    </item>
    
    <item>
      <title>Pro Gitと入門gitでGitの復習 マージ編</title>
      <link>/2012/03/15/1331816663/</link>
      <pubDate>Thu, 15 Mar 2012 00:00:00 +0000</pubDate>
      
      <guid>/2012/03/15/1331816663/</guid>
      <description>[Git][備忘録][Windows]Pro Gitと入門gitでGitの復習 マージ編 前回までのあらすじ  http://d.hatena.ne.jp/kk_Ataka/20120305/1330951640:title http://d.hatena.ne.jp/kk_Ataka/:title  今回はマージから。
参考  http://progit.org/:title 入門git  マージ 前準備 ここでブランチ用にリポジトリを作りなおした。
$ cat field.html &amp;lt;h1&amp;gt;僕にその手を汚せというのか&amp;lt;/h1&amp;gt; というファイルを作成し、chapter1というブランチを切る。
$ git branch chapter1 $ git branch chapter1 * master ブランチはこうなるはず。
*master/chapter1/HEAD ↓ ↓ ○  次にchapter2を作成し、ブランチ切り替え。
$ git checkout -b chapter2law chapter1 Switched to a new branch &amp;#39;chapter2law&amp;#39; 文言を追加し、コミット。
$ cat field.html &amp;lt;h1&amp;gt;僕にその手を汚せというのか&amp;lt;/h1&amp;gt; &amp;lt;h2&amp;gt;誰も僕を責めることはできない&amp;lt;/h2&amp;gt; $ git commit -a -m &amp;#34;Add chapter2 law route&amp;#34; ブランチはこうなるはず。chapter2lawに切り替えているのでHEADもこちらへ。
master/chapter1 ↓　*chapter2law/HEAD ↓　↓ ↓┌○ ○┘  同様にchapter3lawも作る。</description>
    </item>
    
    <item>
      <title>Pro Gitと入門gitでGitの復習 ブランチ編</title>
      <link>/2012/03/11/1331472478/</link>
      <pubDate>Sun, 11 Mar 2012 00:00:00 +0000</pubDate>
      
      <guid>/2012/03/11/1331472478/</guid>
      <description>[Git][備忘録][Windows]Pro Gitと入門gitでGitの復習 ブランチ編 前回までのあらすじ  http://d.hatena.ne.jp/kk_Ataka/20120305/1330951640:title  今回はローカルブランチから。
参考  http://progit.org/:title 入門git  他のVCSとの違い  Subversionなどは各ファイルに対しての差分を時間軸で持っていた Gitではコミットのたびにその時のリポジトリ全体のスナップショットをとる  ただし、変更がなかったファイルは以前のスナップショットで格納したファイルへのリンクを貼っている   Gitのオブジェクト Gitには大きく分けて4つのオブジェクトが存在する。
 Commitオブジェクト Treeオブジェクト Blobオブジェクト Tagオブジェクト  Commitオブジェクト リポジトリのルート。ファイル情報(ツリー)やメタデータを格納している。以下のコミットのCommitオブジェクトを見てみる。
$ git log --pretty=oneline 5f431a8cf6023e7398102dfef8b88baf1c581023 Typo 4 log &amp;ndash;pretty=rawコマンドを実行するとハッシュタグがいろいろと。
$ git log --pretty=raw 5f431a8cf6023e7398102dfef8b88baf1c581023 commit 5f431a8cf6023e7398102dfef8b88baf1c581023 tree de445cf5b526c554dea465d09cea6d65059d1f80 parent a59ff99de68cbf359c814f25cda9c926ef9cdad9 author kk_Ataka &amp;lt;test@example.com&amp;gt; 1329818747 +0900 committer kk_Ataka &amp;lt;test@example.com&amp;gt; 1329819044 +0900 Typo 4 |*commit|このコミットに対するSHA1名|
|*tree|このコミットの中身を記載しているSHA1名|
|*parent|一つ前のコミットのSHA1名。存在しない場合はそれが一発目(Rootコミット)、マージされた場合は1つ以上になる場合もある|
|*author|作成者|
|*committer|コミッター|
author, committerあたりがメタデータになるのかな。</description>
    </item>
    
    <item>
      <title>Pro Gitと入門gitでGitの復習 基本操作編</title>
      <link>/2012/03/05/1330951640/</link>
      <pubDate>Mon, 05 Mar 2012 00:00:00 +0000</pubDate>
      
      <guid>/2012/03/05/1330951640/</guid>
      <description>[Git][備忘録][Windows]Pro Gitと入門gitでGitの復習 基本操作編 あらすじ めっきりadd, commitくらいしか使っていないGitをもう一回さわってみて学びなおす。Pro Gitのページもブクマしただけで真剣に読んでいなかったので読み進める。
続き。
 http://d.hatena.ne.jp/kk_Ataka/20120311/1331472478:title  参考  http://progit.org/:title 入門git  リポジトリの作成 リポジトリにしたいディレクトリの中でinitコマンドで作成 or init ディレクトリ で生成。
$ git init Initialized empty Git repository in c:/project/testRemote/test/.git/ 以後は基本的にリポジトリの中で作業。
コンフィグ コンフィグファイルの適用範囲と優先度 下に行くほど適用範囲は狭くなり、優先度が上がる。(同じオプションがあったら下のものが適用される)
   ファイル Windows(msysGit)では 範囲 優先度 configコマンドでの設定方法     /etc/gitconfig (msysのルート)/etc/gitconfig システム全体 低 &amp;ndash;system   ~/.gitconfig %USERPROFILE%\.gitconfig あるユーザ 中 &amp;ndash;global   (リポジトリ内).git/config (リポジトリ内).git/config そのリポジトリ 高 (指定なし)    コンフィグの一覧を見る そのリポジトリのコンフィグを見る。</description>
    </item>
    
    <item>
      <title>Rails3レシピブックを読みながらRailsを学ぶ モデル、コントローラ、ビュー、Railsの規約など</title>
      <link>/2012/02/29/1330528564/</link>
      <pubDate>Wed, 29 Feb 2012 00:00:00 +0000</pubDate>
      
      <guid>/2012/02/29/1330528564/</guid>
      <description>[Ruby][Rails][Windows][備忘録]Rails3レシピブックを読みながらRailsを学ぶ モデル、コントローラ、ビュー、Railsの規約など 前回までのあらすじ  http://d.hatena.ne.jp/kk_Ataka/20120228/1330436604:title  Railsをインストールして起動する所まではできた。
参考  Rail3レシピブック 190の技  環境  WindowsXP Ruby1.8.7 Rails3.2.1  MVCを自動生成する アプリケーションのscaffold(足場)の作成 scaffoldジェネレータを実行する事でCRUD操作が可能な簡単なアプリケーションの足場が生成できる。コマンドはrails generate ジェネレータ モデル名 カラム名:型 カラム名:型 (以下繰り返せる)&amp;hellip;
$ bundle exec rails generate scaffold Blog name:string user_id:integer invoke active_record create db/migrate/20120229022816_create_blogs.rb create app/models/blog.rb invoke test_unit create test/unit/blog_test.rb create test/fixtures/blogs.yml route resources :blogs invoke scaffold_controller create app/controllers/blogs_controller.rb invoke erb create app/views/blogs create app/views/blogs/index.html.erb create app/views/blogs/edit.html.erb create app/views/blogs/show.html.erb create app/views/blogs/new.html.erb create app/views/blogs/_form.html.erb invoke test_unit create test/functional/blogs_controller_test.</description>
    </item>
    
    <item>
      <title>Rails3レシピブックを読みながらRailsを学ぶ</title>
      <link>/2012/02/28/1330436604/</link>
      <pubDate>Tue, 28 Feb 2012 00:00:00 +0000</pubDate>
      
      <guid>/2012/02/28/1330436604/</guid>
      <description>[Ruby][備忘録][Windows][Rails]Rails3レシピブックを読みながらRailsを学ぶ あらすじ Redmineプラグインの作り方を学ぶ前にRailsの基本的な事を学ばねばなりますまい。そういやあ。
参考  Rail3レシピブック 190の技  環境  WindowsXP Ruby 1.8.7 Rails 3.2.1  準備  はじめにbundleでrailsをインストールする……が、なんかエラーが。  Gem::InstallError: The &amp;#39;json&amp;#39; native gem requires installed build tools. Please update your PATH to include build tools or download the DevKit from &amp;#39;http://rubyinstaller.org/downloads&amp;#39; and follow the instructions at &amp;#39;http://github.com/oneclick/rubyinstaller/wiki/Development-Kit&amp;#39; An error occured while installing json (1.6.5), and Bundler cannot continue. Make sure that `gem install json -v &amp;#39;1.6.5&amp;#39;` succeeds before bundling.</description>
    </item>
    
    <item>
      <title>GitプロジェクトをコミットしたタイミングでJenkinsにビルドをしてもらいたい！</title>
      <link>/2012/02/23/1330001338/</link>
      <pubDate>Thu, 23 Feb 2012 00:00:00 +0000</pubDate>
      
      <guid>/2012/02/23/1330001338/</guid>
      <description>[Jenkins][備忘録][Git]GitプロジェクトをコミットしたタイミングでJenkinsにビルドをしてもらいたい！ あらすじ  全然CIっぽくJenkinsを使っていなかったので本格的に使ってみたい。 Gitを連携させたい GitリポジトリにコミットしたタイミングでJenkinsにビルドさせてみたい  …のだが、いきなりビルド時にcloneできないという現象でハマっていた。
ERROR: Error cloning remote repo &amp;#39;origin&amp;#39; : Could not clone C:/project/excel_for_ruby.git 上記の原因 cloneできない問題はJenkins実行時にgit.exeにパスが通ってなかった、設定していなかったという非常に残念なものだった。Jenkins実践入門にも手順が書いてあった。[1]
Jenkinsの「ビルド実行」でGitリポジトリのソースのテストをする  Jenkinsの管理 =&amp;gt; プラグインの管理 =&amp;gt; Jenkins GIT plugin をインストール 新規ジョブ作成 =&amp;gt; フリースタイル・プロジェクト でプロジェクト作成 ソースコードシステム  Gitを選択 リポジトリを入力  C:\project\excel_for_ruby   ビルド  Windowsバッチコマンドの実行  rspecを実行できるように記述する    cd &amp;#34;C:\project\excel_for_ruby&amp;#34; rspec -fs spec\* これでビルドするとはじめのcloneできないエラー。
Error cloning remote repo &amp;#39;origin&amp;#39; : Could not clone C:\project\excel_for_ruby  Jenkinsから見たGitのパスを設定  Jenkinsの管理 =&amp;gt; システムの設定  Gitのパスを追加するフォームがあるのでこれを追加 Nameもなんでもいいから入力する(Defaultにした)    GitでCommitしたらJenkinsがビルドをしてくれるようにする 「wget ビルド実行パス」というコマンドをGitのフックスクリプトに記述すればコミット時にビルド実行できるらしい。とりあえずWindows用のwgetを取得。http://users.</description>
    </item>
    
    <item>
      <title>Rubyの実行ファイルを作成するExerbとOcraを試してみた</title>
      <link>/2012/02/20/1329744294/</link>
      <pubDate>Mon, 20 Feb 2012 00:00:00 +0000</pubDate>
      
      <guid>/2012/02/20/1329744294/</guid>
      <description>[Ruby][備忘録][Windows]Rubyの実行ファイルを作成するExerbとOcraを試してみた あらすじ Rubyが入っていないWindows環境でも(要は自分以外)Rubyスクリプトを実行したいのでexe化する方法を模索する。というか、昔模索した後の結果を今更まとめる。
対象プロジェクト win32oleを使ってExcelファイルを読み込みシートを取得し連番で吐くというRubyスクリプトをexe化。ソースはこんな感じ。
 出力結果はこう。
$ ruby getSheetname.rb Book1.xlsx Book1.xlsx --- Sheet1 Sheet2 Sheet3 Sheet4 Sheet5 --- end. ExerbとOcraをためしてみた。
Exerb(ダメだった) 最新は5.4.0らしいが、今回はなんでか4.3.0を入れていた。(理由不明)
手順(失念)  [http://exerb.sourceforge.jp/:title]よりExerbをダウンロード後、setup.rbを実行？だけでいいんだっけ？ mkexy.batとexerb.batがRubyのbinに入るはず exyファイルを作成する  $ mkexy.bat getSheetname.rb --- end.  成功するとgetSheetname.exyというファイルが作成される(GemfileにおけるGemfile.lockのようなもん？)  # Generated by mkexy # on 2012-02-15 22:05 general: startup: getSheetname.rb core: cui kcode: none file: getSheetname.rb: win32ole.so: file: C:/rubies/Ruby/lib/ruby/1.8/i386-mswin32/win32ole.so type: extension-library nkf.so: file: C:/rubies/Ruby/lib/ruby/1.8/i386-mswin32/nkf.so type: extension-library kconv.rb: file: C:/rubies/Ruby/lib/ruby/1.8/kconv.rb rational.rb: file: C:/rubies/Ruby/lib/ruby/1.</description>
    </item>
    
    <item>
      <title>BASE64エンコーディングをRubyで自力実装した</title>
      <link>/2012/01/30/1327931393/</link>
      <pubDate>Mon, 30 Jan 2012 00:00:00 +0000</pubDate>
      
      <guid>/2012/01/30/1327931393/</guid>
      <description>[Ruby][備忘録]BASE64エンコーディングをRubyで自力実装した あらすじ BASE64エンコーディングをおまじないのように使っていたので車輪の再発明で原理を学ぶ。
参考サイト  http://www5d.biglobe.ne.jp/~stssk/rfc/rfc3548j.html:title http://program.station.ez-net.jp/mini/encode/base64.asp:title http://blog.livedoor.jp/maru_tak/archives/50438057.html:title http://d.hatena.ne.jp/gan2/20070603/1180888302:title http://wind-master.dip.jp/soft-info/item/7/catid/3:title http://www.sea-bird.org/doc/Cygwin/BASE64enc.html:title http://yakinikunotare.boo.jp/orebase/index.php?Ruby%2F%CA%B8%BB%FA%CE%F3%A4%AB%A4%E91%CA%B8%BB%FA%CC%DC%A4%F2%BC%E8%A4%EA%BD%D0%A4%B9:title http://www.syuhitu.org/other/b64.html:title  BASE64  Base64は、データを64種類の印字可能な英数字のみを用いて、それ以外の文字を扱うことの出来ない通信環境にてマルチバイト文字やバイナリデータを扱うためのエンコード方式である。
http://ja.wikipedia.org/wiki/Base64
  データ変換形式 メール等でも使われている やりかた  元データを6bitに分割  ちょうど6bitにならない場合は0を足す  6bitデータを対応する文字に4文字ずつ変換(A-Za-z0-9+/)  4文字にならない場合は=を足す  全部くっつける   ふむう。。何か書けそう？　ちょっとやってみるか。
ソース   まず、変換したい文字のASCII値を取得 次にそれを2進数に変換(1と2はまとめてもいいかも) 6bit毎に分けて割り切れない分は0を足す 6bitのデータを変換テーブルと照らしあわせて対応する1文字と変換 4文字になるまで=を足す  検証  テスト文字列: kk_Ataka  己 $ ruby base64.rb kk_Ataka BYTE16:6b6b5f4174616b61 BYTE2 :0110101101101011010111110100000101110100011000010110101101100001 ADD 0 :011010110110101101011111010000010111010001100001011010110110000100 TRANS :a2tfQXRha2E ADD = :a2tfQXRha2E= a2tfQXRha2E= http://hogehoge.tk/tool/:title  プレーンTEXT, 変換不要, 未指定, BASE64  a2tfQXRha2E= http://tociyuki.</description>
    </item>
    
    <item>
      <title>Rubyで固定長の値を扱う方法sprintfとパーセント演算子</title>
      <link>/2012/01/23/1327323360/</link>
      <pubDate>Mon, 23 Jan 2012 00:00:00 +0000</pubDate>
      
      <guid>/2012/01/23/1327323360/</guid>
      <description>[Ruby][備忘録]Rubyで固定長の値を扱う方法sprintfとパーセント演算子 あらすじ  Rubyで固定長の値を扱うときはどうしたらいいんだろう  必ず5ケタにしたい！　255の場合は00255になってほしい   参考サイト http://www.ruby-lang.org/ja/old-man/html/sprintf_A5D5A5A9A1BCA5DEA5C3A5C8.html:title
http://www.oki-osk.jp/esc/ruby/tut-04.html:title の4.2
方法 調べてみるとsprintfメソッドというものがあった。
irb(main):020:0&amp;gt; sprintf(&amp;#34;Number:%10d&amp;#34;, 255) =&amp;gt; &amp;#34;Number: 255&amp;#34; irb(main):021:0&amp;gt; sprintf(&amp;#34;Number:%010d&amp;#34;, 255) =&amp;gt; &amp;#34;Number:0000000255&amp;#34; なるほど、これを使えば良いのかと思っていたら、次にStringクラスに%(パーセント演算子)というものが存在している事を発見。どんな事をしてくれるのかというと…
irb(main):022:0&amp;gt; &amp;#34;Number:%010d&amp;#34; % 255 =&amp;gt;  &amp;#34;Number:0000000255&amp;#34; とりあえず、使ってないと見慣れない物体に見えるなぁ。
という事で、方法を二種類見つけたんだけど、これどっち使うのがいいんだろう。個人的にはsprintfの方が何やっているかはわかりやすいけど、これは慣れの問題っぽいしな。</description>
    </item>
    
    <item>
      <title>Subversionのリポジトリをサーバ間でまるごと移動する</title>
      <link>/2012/01/15/1326624864/</link>
      <pubDate>Sun, 15 Jan 2012 00:00:00 +0000</pubDate>
      
      <guid>/2012/01/15/1326624864/</guid>
      <description>[Solaris][備忘録][Subversion]Subversionのリポジトリをサーバ間でまるごと移動する あらすじ AサーバからBサーバにリポジトリを引っ越しする。
参考サイト http://hain.jp/index.php/tech-j/2008/03/24/p199:title
手順 引っ越し元のサーバ まずはリポジトリのダンプファイルを作成。
$ svnadmin dump リポジトリパス(/home/xxx/yyyなど) &amp;gt; repo.dump * リビジョン 0 をダンプしました。 * リビジョン 1 をダンプしました。 * リビジョン 2 をダンプしました。 * リビジョン 3 をダンプしました。 * リビジョン 4 をダンプしました。 * リビジョン 5 をダンプしました。 引っ越し先のサーバ まずリポジトリを作る。
$ svnadmin create repos 次に引っ越し元で作ったdumpファイルを引っ越し先のサーバに持って来る。(FTPでもなんでも)
そして、svnadmin loadコマンドでダンプファイルを流しこむ。
$ svnadmin load repos &amp;lt; repo.dump * パスを追加しています... (略) ------- リビジョン xxx をコミットしました。 同期を取るため、最新のリビジョンを移動するとかもできるそうなので、必要になったらその辺も調べてみる。</description>
    </item>
    
    <item>
      <title>2011年KPT</title>
      <link>/2011/12/28/1325118790/</link>
      <pubDate>Wed, 28 Dec 2011 00:00:00 +0000</pubDate>
      
      <guid>/2011/12/28/1325118790/</guid>
      <description> [日記]2011年KPT 今年学んだこと  Ruby  Bundler, RVM, Pik, Pit, Sinatra, ZenTest, Lokka  インストールパスにProgram FilesとDocuments and Settingsは鬼門 Redmine Heroku Git Sphinx  reST  各種WebAPI  はてな, Read it Later, Twitter, Evernote  インストールパスにProgram FilesとDocuments and Settingsは鬼門(大事なので2回)  Keep  色々なスクリプトを作るようになり○○するだけの簡単なお仕事はかなり効率化できた  特にwin32oleには何時間分助けられたか  Ruby Advent Calendarに参加して初めて発表？　的な事をできた  Problem  TDDやるやる詐欺  specファイルは毎回作るのだか毎回中途半端になってしまった  Jenkins使う使う詐欺  まずテストコードが書けないといかんともしがたいということがわかったので、少し保留？ 小さいスクリプトならZenTestだけでもよさそう？  スクリプト投げっぱなしジャーマン  自分専用とはいえ、必要最低限の機能をこしらえたら後はボロボロ   Try(優先度順)  TDDのリズムで何か作ってみたい  社内で一人TDDに開眼したい  仕事で使っているスクリプトを汎用化してGitHubに登録したい  Outlookから添付ファイルをぶっこ抜いてきたりExcelから必要データぶっこ抜いてcsvにしたり  gemを作れるようになりたい  特に何かしたいわけではないが、動作原理を追いたい  ブログを月一更新したい  気づいたら2011年は2月に無更新月を作ってしまい悔しい！  Advent Calendar以外でも何か発表してみたい！  </description>
    </item>
    
    <item>
      <title>EvernoteのAPIをRubyから叩きたい</title>
      <link>/2011/12/27/1324911671/</link>
      <pubDate>Tue, 27 Dec 2011 00:00:00 +0000</pubDate>
      
      <guid>/2011/12/27/1324911671/</guid>
      <description>[Evernote][備忘録][Ruby][API]EvernoteのAPIをRubyから叩きたい はじめに この記事は[http://atnd.org/events/22021:title]の27日目の記事です。
26日目はid:tackunさんの[http://d.hatena.ne.jp/tackun/20111226/1324908770:title]でした。
28日目はr7kamuraさんのRubyでGPUを使おう - &amp;amp;#10008;&amp;amp;#9593;&amp;amp;#9697;&amp;amp;#9593;&amp;amp;#10008;です。
今日はターミナル(or コマンドプロンプト)経由でEvernoteのAPIを叩き、自分のノートブックを取得してみようとしてみます。ソースを書く前にAPIの申請からやっていきます。
APIの申請…の前に developer用サイトからAPI SDKを入手。
 http://www.evernote.com/about/developer/api/:title  [f:id:kk_Ataka:20111226235624j:image]
上記のリンクを叩くとzipがDLできるので、これを解凍しruby/lib以下のファイルを用意しておく。
APIの申請  http://www.evernote.com/about/developer/api/:title  同じページを下へスクロールしていくとRequest an API Keyという箇所があるので以下の項目を入力する。
|*Evernote username|Evernoteのユーザ名|
|*Your Name|氏名|
|*Your Email|メールアドレス|
|*Organization|組織や団体、だが、個人で使う場合は氏名でよい|
|*Web or Client|今回は自分で使う用なのでClient Keysを選択(既に持っているので下の画像ではWebを選択している)|
|*Application Details|どうやってAPIを使いたいか|
つたない英語でDetailsを書く。以前は審査に時間がかかったらしいが今はSUBMITすればすぐKeyが発行されるみたい。
[f:id:kk_Ataka:20111218113115j:image]
WebApplicationを選んだ場合。
[f:id:kk_Ataka:20111218113113j:image]
Clientを選んだ場合。
[f:id:kk_Ataka:20111218113114j:image]
これでConsumer KeyとConsumer Secretをもらえた。ただし、この状態では砂場(sandbox.evernote.com)でしか使えない。
上記画像のNext Steps 2.によると[https://sandbox.evernote.com/Registration.action:title]で砂場用アカウントを作成し、砂場で開発をしてくださいという事でいきなり本家(www.evernote.com)で動かせないようになっている。
Activate 今回のエントリではやらないが、本家で動かす時はActivateサイト(Next Steps 3.のlet us knowリンクから行ける)でActivateしてもらう必要がある。(ここは昔の事なので少し曖昧)
|*Email|メールアドレス|
|*API Consumer Key|登録時にもらったConsumer Key|
|*Additional Info|その他何かあれば？(何か書いたっけ…？)|
[f:id:kk_Ataka:20111218115757j:image]
ソース iitHubに。 https://github.com/gosyujin/evernote_for_ruby/blob/master/myEvernote.rb
ここから実際に取得していきます。
パス追加 プロジェクト内にあるライブラリ(さっき落としたAPI SDK)を読み込む。</description>
    </item>
    
    <item>
      <title>SinatraでHaml入門</title>
      <link>/2011/12/26/1324910284/</link>
      <pubDate>Mon, 26 Dec 2011 00:00:00 +0000</pubDate>
      
      <guid>/2011/12/26/1324910284/</guid>
      <description>[Ruby][備忘録][Haml][Sinatra]SinatraでHaml入門 あらすじ Sinatraとか使っていてもHtmlべた書きばかりなのでHamlに入門してみる。
参考サイト  http://haml.ursm.jp/getting-started:title  日本ハム！
Hamlとは  HamlはHTML/XHTMLを生成するためのマークアップ言語です。インデントや簡略構文によって簡潔な記述が行えます。
http://haml.ursm.jp/
 今まで require &amp;#39;rubygems&amp;#39; require &amp;#39;sinatra&amp;#39; get &amp;#39;/&amp;#39; do &amp;#34;&amp;lt;style type=&amp;#39;text/css&amp;#39;&amp;gt;.head {border-bottom: 1px solid #CCCCCC;border-left: 5px solid #CCCCCC;}.time {color: #CCCCCC;}.tweet {}&amp;lt;/style&amp;gt;&amp;lt;h1&amp;gt;Hello Tycoon-Timeline powerd by Heroku!!&amp;lt;/h1&amp;gt;&amp;lt;a href=&amp;#39;&amp;#39;&amp;gt;Reload&amp;lt;/a&amp;gt;&amp;lt;dl&amp;gt;&amp;lt;dt class=&amp;#39;head&amp;#39;&amp;gt;User &amp;lt;span class=&amp;#39;time&amp;#39;&amp;gt;2011/12/26 02:25:00&amp;lt;/span&amp;gt;&amp;lt;/dt&amp;gt;&amp;lt;dd class=&amp;#39;tweet&amp;#39;&amp;gt;ついーと&amp;lt;/dd ...&amp;#34; end 全部こんな感じ。なのでページがでかくなっていくことを考えると非常につらい。
準備 構成 Gemfile app.rb views ┗index.haml Gemfile Bundlerを使うのでGemfileを作成。
source :rubygems source &amp;#34;http://rubygems.org&amp;#34; gem &amp;#39;sinatra&amp;#39; gem &amp;#39;haml&amp;#39; SinatraとHamlをインストール。
gemインストール $ bundle install ./vendor/bundle app.rb require &amp;#39;rubygems&amp;#39; require &amp;#39;sinatra&amp;#39; require &amp;#39;haml&amp;#39; get &amp;#39;/&amp;#39; do haml :index end 今までhtmlタグを書いていた返り値をhtml :indexとする。するとここではviews/index.</description>
    </item>
    
    <item>
      <title>VB6からVB.NETにソース移行すると特定のIf文でInvalidCastException</title>
      <link>/2011/12/25/1324852724/</link>
      <pubDate>Sun, 25 Dec 2011 00:00:00 +0000</pubDate>
      
      <guid>/2011/12/25/1324852724/</guid>
      <description>[VB][備忘録]VB6からVB.NETにソース移行すると特定のIf文でInvalidCastException あらすじ VB6の時、If (value = 1)のような条件式でvalueに数値・文字どちらが入ってきてもエラーになっていなかった。[1]
しかし、VB.NETになりvalueに文字が入ってきた場合、InvalidCastExceptionが発生するようになった。どうも、VB6のときと評価の方法が変わっている模様…。
参考サイト  http://msdn.microsoft.com/ja-jp/library/cey92b0t(v=VS.80).aspx:title  検証 Option Strict が Off の場合の比較は、実行時の型で比較方法が変わる。
   比較対象 例 結果     どちらもString If (“a” = “b”) 文字列比較を行う   どちらも数値 If (1 = 3) Doubleに変換され数値比較を行う   数値とString If (1 = “1”)&amp;lt;br /&amp;gt;If (1 = “a”) 文字列がDoubleに変換(※)され数値比較を行う。&amp;lt;br /&amp;gt;文字列をDoubleに変換できない場合 InvalidCastException    (※)どうも、この部分がVB6のときと変わっている？
数値と文字(数値以外)の比較がダメなようなので、不本意ながらIf (value = &amp;ldquo;1&amp;rdquo;)にしてその場を凌いだが…。
なお、Nothingは比較対象が数値なら0,文字列なら”“となる。
[1] 結果は覚えていないけど、1以外は全てfalseになったような。</description>
    </item>
    
    <item>
      <title>特定のファイルを探したり除外したり(メモ)</title>
      <link>/2011/12/24/1324741031/</link>
      <pubDate>Sat, 24 Dec 2011 00:00:00 +0000</pubDate>
      
      <guid>/2011/12/24/1324741031/</guid>
      <description>[Unix][備忘録]特定のファイルを探したり除外したり(メモ) 特定のファイル群を一括で何かする 状況 .cblファイルをコンパイルした後、同一ディレクトリにできる拡張子なしのファイルを別のディレクトリにコピーしたい…という。
/tmp ┣file01.cbl ┣file02.cbl ┣file01 ┗file02 file01とfile02を/usr/local/userに移動したい。
コマンド find /tmp/* ! -name &amp;#34;*.cbl&amp;#34; | xargs -i mv {} /usr/local/user  nameの前に!で条件の否定ができる(知らなかった) findコマンドでfile01, file02を引っかけたあと、xargsでmvコマンド実行する iオプションを使用する事でfindの結果を{}にもってこれる  特定のファイル群を一括で何かする その2 状況 ファイル検索でリポジトリ内の .svn ファイルを除外したいなーと思った。
コマンド find ./ -name &amp;#34;.svn&amp;#34; -prune -o -print この結果に xargs をつけると除外はできたの……だが、どうも
! -name &amp;#34;XXX&amp;#34; -name &amp;#34;XXX&amp;#34; -prune は挙動が違う模様……以下メモ。
 pruneオプションは引数より下のディレクトリやファイルを捜査しない oオプション はor演算子と同じ ワイルドカード指定で隠しファイルは検索できない  とりあえずここまで。</description>
    </item>
    
    <item>
      <title>Vimコマンドよく使うものと覚えたいコマンドまとめ</title>
      <link>/2011/12/23/1324651460/</link>
      <pubDate>Fri, 23 Dec 2011 00:00:00 +0000</pubDate>
      
      <guid>/2011/12/23/1324651460/</guid>
      <description>[Unix][備忘録][Vim]Vimコマンドよく使うものと覚えたいコマンドまとめ コマンドモード    コマンド 解説      :w 保存    :q  終了   :wq 保存して終了    :w! 強制的な保存    :q! 強制的な終了    :w ファイル名 任意のファイル名で保存    :e ファイル名 複数ファイルを開く    :br 前のバッファへ    :bn 次のバッファへ    :ls バッファの一覧を表示    :!コマンド コマンドを実行し標準出力に出力&amp;lt;br /&amp;gt;(:!ls でファイル一覧を表示)    :r ファイル 指定したファイルの内容を現在のファイルに流しこみ    :r !</description>
    </item>
    
    <item>
      <title>SolarisにSubversionをインストールするときのメモ</title>
      <link>/2011/12/22/1324573161/</link>
      <pubDate>Thu, 22 Dec 2011 00:00:00 +0000</pubDate>
      
      <guid>/2011/12/22/1324573161/</guid>
      <description>[Solaris][備忘録][Subversion]SolarisにSubversionをインストールするときのメモ インストール  http://www.sunfreeware.com/ ftp://ftp.ne.jp/Sun/sunfreeware/  から必要なライブラリをダウンロード。
 - neon 0.29.5[1]  swig 1.3.40[2] expat 2.0.1[3] libxml2 2.7.8[4] db 4.2.52 REV=1.0.12[5] openssl 1.0.0d[6] libiconv 1.13.1[7] libintl 3.4.0[8] sasl 2.1.21[9] gcc(libgcc 3.4.6((The GNU C compiler and related programs - installs in /usr/local. This package includes the GNU C, C++, and f77 suites and support files. These gcc packages require the installation of libiconv. It was compiled to use the SUN assembler and loader usually in /usr/ccs/bin if the SUNW developer packages are installed.</description>
    </item>
    
    <item>
      <title>Ruby実行時のオプションをよろしく解析してくれるoptparseを使ってみる</title>
      <link>/2011/12/21/1324477125/</link>
      <pubDate>Wed, 21 Dec 2011 00:00:00 +0000</pubDate>
      
      <guid>/2011/12/21/1324477125/</guid>
      <description>[Ruby][備忘録]Ruby実行時のオプションをよろしく解析してくれるoptparseを使ってみる あらすじ コマンドラインから引数つきでRubyを実行する時は
ruby xxxx.rb ARG1 ARG2 とかして、中でARGVをifで条件分岐とかしていたが…何か他にやり方があるのではと調べたらやっぱりあった。optparseを使えばよろしく解析してくれるようだ。
参考サイト  http://www.ruby-lang.org/ja/old-man/html/optparse_A5C1A5E5A1BCA5C8A5EAA5A2A5EB.html:title    OptionParser オブジェクト opt を生成する。
 オプションを取り扱うブロックを opt に登録する。
 opt.parse(ARGV) でコマンドラインを実際に parse する。
   基本はこういう事らしい。
サンプルソース とりあえずGistに。色々試してみる。
 実行結果 単純なオプション # short option opt.on(&amp;#39;-a&amp;#39;, &amp;#39;DESCRIPTION&amp;#39;) do |v| puts &amp;#34;v class is #{v.class}&amp;#34; puts &amp;#34;-a is #{v}&amp;#34; end オプションに-aを指定するだけ。真偽値で返ってくる。第二引数のDESCRIPTIONは後述。
$ ruby optparse.rb -a v class is TrueClass -a is true オプションの後に値(必須) # short option with require argument opt.</description>
    </item>
    
    <item>
      <title>CapsLockキーとCtrlキーを入れ替える(置き換える)方法</title>
      <link>/2011/12/20/1324386674/</link>
      <pubDate>Tue, 20 Dec 2011 00:00:00 +0000</pubDate>
      
      <guid>/2011/12/20/1324386674/</guid>
      <description>[Windows][備忘録]CapsLockキーとCtrlキーを入れ替える(置き換える)方法 あらすじ CapsLockいらない！　ここにCtrlキーほしい！
方法 レジストリをいじってキーを置き換える事に。この例では無変換キーもまとめてCtrlキーに変更する。レジストリをいじるため一か八か細心の注意を払う。
 ファイルを指定して実行で regedit を起動 HKEY_LOCAL_MACHINE -&amp;gt; SYSTEM -&amp;gt; CurrentControlSet -&amp;gt; Control -&amp;gt; Keyboard Layout を選択し右クリック 新規 -&amp;gt; バイナリ で新しいキーを作成 新しいキーを選択し右クリック -&amp;gt; 名前の変更 で Scancode Map に変更 同じく右クリック -&amp;gt; 修正 でバイナリデータを以下のように編集  0000 00 00 00 00 00 00 00 00 ........ 0008 04 00 00 00 1D 00 3A 00 ......:. 0010 1D 00 7B 00 00 00 00 00 ..{..... 0018  0000はヘッダらしい。全て0固定 0008前半部の04 00 00 00 は使用するキー+1を入力する。今回は下記キーを使用するため04となる  左Ctrlキー 無変換キー CapsLockキー プラス1  0008後半部の 1D 00 3A 00 と 0010前半部の 1D 00 7B 00 がキーをカスタマイズしている箇所 0010後半部の残りは 00 埋め  対応  キーとバイナリ値は下記のようになっている  が、書き込むときはひっくり返す事。(CapsLockなら 3A 00 となる)リトルエンディアンだとそうなるらしい http://ja.</description>
    </item>
    
    <item>
      <title>Excelの備忘録</title>
      <link>/2011/12/19/1324307879/</link>
      <pubDate>Mon, 19 Dec 2011 00:00:00 +0000</pubDate>
      
      <guid>/2011/12/19/1324307879/</guid>
      <description> [Windows][備忘録]Excelの備忘録 あらすじ Excelの備忘録。ただし個人でExcel持ってないのでスクリーンショットはなし。
シート名の取得 - Excel2003,2007で確認 =MID(CELL(&amp;#34;filename&amp;#34;, $A$1 ), FIND(&amp;#34;]&amp;#34;, CELL(&amp;#34;filename&amp;#34;, $A$1))+1, 99) グラフ関係 - Excel2007で確認 単位などを表示する用  グラフを選択 -&amp;gt; レイアウトタブ -&amp;gt; ラベル -&amp;gt; グラフタイトル、軸ラベル  複合グラフ  分けたいグラフを選択 -&amp;gt; レイアウトタブ -&amp;gt; 現在の選択範囲 -&amp;gt; 選択対象の書式設定 -&amp;gt; 系列のオプション -&amp;gt; 第2軸  グラフタイトル等を動的に決める  グラフタイトル等をクリック -&amp;gt; 入力エリアではなく関数エリアを選択し「=シート名!A1」とする  あらかじめ規定の場所に(例えばA1)タイトルとしたい文言をセットしておく シート名を明記しないと「SERIES式では、ワークシートを外部参照していなければなりません。」エラーとなる   シートの保護解除 - Excel2007で確認  ホーム -&amp;gt; セル -&amp;gt; 書式 -&amp;gt; シート保護の解除  入力規則変更(カラムの文字制限、リストから選択など) - Excel2007で確認  データ -&amp;gt; データツール -&amp;gt; データの入力規則  画像の圧縮 - Excel2007で確認  画像を選択 -&amp;gt; 書式リボン(図ツールで出る？) -&amp;gt; 調整エリア -&amp;gt; 図の圧縮  選択した画像のみに適用にチェック -&amp;gt; (オプションでトリミング部分削除などにチェック) -&amp;gt; OK 2003等？　では画像右クリック -&amp;gt; 図のプロパティからいけたらしい   </description>
    </item>
    
    <item>
      <title>Vimを使い始めるためにインストールから設定まで行った</title>
      <link>/2011/12/18/1324219740/</link>
      <pubDate>Sun, 18 Dec 2011 00:00:00 +0000</pubDate>
      
      <guid>/2011/12/18/1324219740/</guid>
      <description>[Unix][備忘録][Vim]Vimを使い始めるためにインストールから設定まで行った あらすじ  http://atnd.org/events/21925:title を見てvim使いたいと思った！  参考サイト  http://d.hatena.ne.jp/osyo-manga/20111201/1322665228:title http://d.hatena.ne.jp/arcright/20100207/1265551998:title http://sites.google.com/site/vimdocja/various-html http://www.hazama.nu/t2o2/archives/002696.shtml:title http://blog.ville.jp/2011/03/11/536:title http://ystyle.jpn.org/geekstyle/archives/9:title  ダウンロード はじめにVimをgetする。
$ wget ftp://ftp.vim.org/pub/vim/unix/vim-7.3.tar.bz2 次にvim7.3の最新のパッチファイルを確認して、ftp://ftp.vim.org/pub/vim/patches/7.3/からダウンロードする。今382だった。
$ cd vim73 $ mkdir patches $ curl -O &amp;#39;ftp://ftp.vim.org/pub/vim/patches/7.3/7.3.[001-382]&amp;#39; $ cd ../ $ cat patches/7.3.* | patch -p0 patching file src/misc1.c patching file src/version.c patching file src/ex_docmd.c patching file src/version.c . . . patchコマンドって使った事ないなーと思い、-p0ってなんぞやとman patchしてみる……。
 -pnum または &amp;ndash;strip=num
　パッチファイルで見つかったファイル名それぞれについて、 num 個の
　スラッシュを含む最小のプレフィクスを取り除く。隣接した 1 個また</description>
    </item>
    
    <item>
      <title>Unixでwmvファイルを他のファイルフォーマットに変換したい</title>
      <link>/2011/12/17/1324168464/</link>
      <pubDate>Sat, 17 Dec 2011 00:00:00 +0000</pubDate>
      
      <guid>/2011/12/17/1324168464/</guid>
      <description>[Unix][備忘録]Unixでwmvファイルを他のファイルフォーマットに変換したい 前回までのあらすじ  http://d.hatena.ne.jp/kk_Ataka/20111206/1323186439:title  ダウンロードしたwmvファイルを他のファイルフォーマットに変換したい。
参考サイト  http://d.hatena.ne.jp/griffith181/20090302/1235980536:title  インストール ソースをgit clone で取得してくる。
$ git clone git://source.ffmpeg.org/ffmpeg.git ffmpeg Cloning into ffmpeg... remote: Counting objects: 192168, done. remote: Compressing objects: 100% (43840/43840), done. remote: Total 192168 (delta 150640), reused 188926 (delta 148049) Receiving objects: 100% (192168/192168), 49.63 MiB | 278 KiB/s, done. Resolving deltas: 100% (150640/150640), done. $ ./configure --disable-yasm $ make $ sudo make install 使い方 基本的に-iオプションでインプットファイルを選択すれば使えるはずなのだが……。
$ ffmpeg -i input.</description>
    </item>
    
    <item>
      <title>svn infoコマンドでリビジョン番号を抜き出す</title>
      <link>/2011/12/16/1324086694/</link>
      <pubDate>Fri, 16 Dec 2011 00:00:00 +0000</pubDate>
      
      <guid>/2011/12/16/1324086694/</guid>
      <description>[Subversion][Unix][備忘録]svn infoコマンドでリビジョン番号を抜き出す 前回までのあらすじ  http://d.hatena.ne.jp/kk_Ataka/20111213/1323783496:title  もっとよい方法 どう考えても他にやり方があるだろうと思っていたらやっぱりあった。[http://twitter.com/#!/jun66j5:title=@jun66j5]さんよりTwitterで教えてもらいました。ありがとうございます。
[twitter:147687551027781632:detail]
svn infoコマンドで見られるのか。というわけで(全然使ってない)プロジェクトで試してみた。まず普通。
$ svn info パス: . URL: file:///home/kk_Ataka/svn/xxxx リポジトリのルート: file:///home/kk_Ataka/svn/xxxx リポジトリ UUID: 99999999-9999-9999-9999-999999999999 リビジョン: 4 ノード種別: ディレクトリ 準備中の処理: 特になし 最終変更者: user 最終変更リビジョン: 4 最終変更日時: 2010-12-29 21:31:44 +0900 (水, 29 12月 2010) ロケールをen_USに。
$ LC_ALL=en_US.UTF8 svn info Path: . URL: file:///home/kk_Ataka/svn/xxxx Repository Root: file:///home/kk_Ataka/svn/xxxx Repository UUID: 99999999-9999-9999-9999-999999999999 Revision: 4 Node Kind: directory Schedule: normal Last Changed Author: user Last Changed Rev: 4 Last Changed Date: 2010-12-29 21:31:44 +0900 (Wed, 29 Dec 2010) xml形式で出力もできる。</description>
    </item>
    
    <item>
      <title>RedmineとApacheを連携させるPassengerをインストールできなかった</title>
      <link>/2011/12/15/1323951847/</link>
      <pubDate>Thu, 15 Dec 2011 00:00:00 +0000</pubDate>
      
      <guid>/2011/12/15/1323951847/</guid>
      <description>[Ruby][Solaris][備忘録][Redmine]RedmineとApacheを連携させるPassengerをインストールできなかった あらすじ  Redmineを自動起動するようにしたい  Phusion Passenger(mod_rails for Apache)を使えばApacheと連携できるらしい    特徴
\* Apache単独でRailsアプリケーションを実行可能です。Apacheのモジュールとして実装されており、別途デーモンを起動する必要がありません。tcpポートも使いません。 \* Railsアプリケーションのデプロイが簡単になります。ファイルをアップロードするだけ。ほぼPHP感覚です。 \* サーバのメモリを節約できます。Railsインスタンスは必要なタイミングで生成します。また、一定時間アクセスがなければインスタンスを終了させます。 http://redmine.jp/tech_note/apache-passenger/
 ふーむ。
参考サイト  http://redmine.jp/faq/system_management/redmine-auto-start/:title http://redmine.jp/tech_note/apache-passenger/:title http://d.hatena.ne.jp/rx7/20080412/p1:title http://d.hatena.ne.jp/r7kamura/20110212/1297452845:title  手順 passengerインストール Passengerを使うにはfastthread、daemon_controllerが必要らしい。
$ gem install --local fastthread-1.0.7.gem $ gem install --local daemon_controller-0.2.6.gem $ gem install --local passenger-3.0.9.gem ※スタンドアロンなマシンだったため。ネットにつながっていればgem install passengerで全部入るはず。
passenger-install-apache2-module実行 対話形式でApacheのモジュール等を確認・インストールしていく。はじめにpassener-install-apache2-moduleを実行するとこんなメッセージが出てくる。
$ passenger-install-apache2-module Welcome to the Phusion Passenger Apache 2 module installer, v3.0.9. This installer will guide you through the entire installation process.</description>
    </item>
    
    <item>
      <title>さくらVPSの初期設定メモ</title>
      <link>/2011/12/14/1323868360/</link>
      <pubDate>Wed, 14 Dec 2011 00:00:00 +0000</pubDate>
      
      <guid>/2011/12/14/1323868360/</guid>
      <description>[Unix][備忘録][さくらVPS][StartUp]さくらVPSの初期設定メモ さくらVPSで最初に行ったとりあえず最低クラスの設定を発掘したのでメモ。OSはCentOSか。
参考サイト  http://blog.myfinder.jp/2010/09/vpsssh.html:title http://d.hatena.ne.jp/h-yano/20080225/1203952174:title http://d.hatena.ne.jp/rubellum/20100901/1283321253:title http://havelog.ayumusato.com/develop/server/e135-sakura-vps-setup1.html:title  サーバ ユーザを作成する。
# useradd kk_Ataka # passwd kk_Ataka ユーザをwheelグループに。
# usermod -G wheel kk_Ataka クライアント 鍵を作る。
$ ssh-keygen -t rsa 鍵をサーバに送る。(既に作ってある場合は~/.ssh/にあるid_rsa.pubを)
$ scp id_rsa.pub USER@ADDRESS:PATH ※ポート変えた場合はscpコマンドに -P ポート番号 をつける。
$ scp -P PORT id_rsa.pub USER@ADDRESS:PATH 再びサーバ SSHの設定 鍵を受け取ったらホームディレクトリに.sshディレクトリを作りコピー。
$ mkdir .ssh $ mv id_rsa.pub .ssh/authorized_keys 権限を変更。
$ chmod 700 ~demo/.ssh $ chmod 600 ~demo/.ssh/authorized_keys sshd_configファイルを編集。
# vi /etc/ssh/sshd_config# 使用ポートをデフォルトから変更 Port XXXXX # sshでrootでのログインを許可しない PermitRootLogin no # パスワード認証でのsshログインを許可しない PasswordAuthentication no # PAMによる認証を許可しない UsePAM no 編集したら再起動。[1]</description>
    </item>
    
    <item>
      <title>svn updateコマンド以外でリビジョン番号を抜き出す</title>
      <link>/2011/12/13/1323783496/</link>
      <pubDate>Tue, 13 Dec 2011 00:00:00 +0000</pubDate>
      
      <guid>/2011/12/13/1323783496/</guid>
      <description>[Subversion][備忘録][Unix]svn updateコマンド以外でリビジョン番号を抜き出す あらすじ svnのリビジョン番号だけ抜き出したい。アップデートなしで！　svn updateするとリビジョンは出てくれるんだけど、アップデート走らせないようにリビジョン番号だけ抜き出したい。
$ svn up リビジョン 111 です 続編  http://d.hatena.ne.jp/kk_Ataka/20111216/1324086694:title  以下はとてもめんどくさい方法での実現となります。
試行錯誤 svn log svn logで表示したリビジョンを抽出する。limit N で出力するログを制御。
$ /usr/local/bin/svn log --limit 1 ------------------------------------------------------------------------ r111 | kk_Ataka | 2011-12-17 11:51:11 +0900 ((金), 17 12月 2011) | 3 lines コミットログ ... ... まずは最新ログをひとつだけ取得。
grep 次にリビジョンが記載してある行だけ抽出。
$ /usr/local/bin/svn log --limit 1 | grep ^r.*lines$ r111 | kk_Ataka | 2011-12-17 11:51:11 +0900 ((金), 17 12月 2011) | 3 lines sed 最後にその行からsedコマンドで「rXX」だけを抜き出し。</description>
    </item>
    
    <item>
      <title>ファイルの拡張子を見て適切なコマンドで解凍してくれるスクリプトを組んだ</title>
      <link>/2011/12/12/1323701022/</link>
      <pubDate>Mon, 12 Dec 2011 00:00:00 +0000</pubDate>
      
      <guid>/2011/12/12/1323701022/</guid>
      <description> [Unix][Shell][備忘録][Solaris]ファイルの拡張子を見て適切なコマンドで解凍してくれるスクリプトを組んだ  http://d.hatena.ne.jp/kk_Ataka/20111209/1323474254:title http://d.hatena.ne.jp/kk_Ataka/20111210/1323541524:title  を基に引数に指定したらよろしく解凍してくれるスクリプトを組んでみる。とりあえずオプション指定できないし圧縮できないけど必要になったら実装していこう。
 </description>
    </item>
    
    <item>
      <title>java-ja忘年会に参加しました2011</title>
      <link>/2011/12/11/1323617084/</link>
      <pubDate>Sun, 11 Dec 2011 00:00:00 +0000</pubDate>
      
      <guid>/2011/12/11/1323617084/</guid>
      <description>[イベント][java-ja]java-ja忘年会に参加しました2011 今年は秋葉原 の北海道。今年は日曜日だったので余裕を持って3年連続3度目の出場を決められた。自分の正面には@drillbitsさんとも初対面だった。が、もしかしたらBPStudyなどでお会いしていたかもしれない。
いろんな話題とサンタ的ななにか 「PHPは育てるとかわいくなる」とか「ゲームはPC、XBOX、PS3で出すにはどのくらい大変なんだろう？　AndroidとiOSで同じアプリ同時にリリースしろって言われたら困る」とか「ドキュメントはこっちで自由に作ってPDFで送付します、ただし微妙にレイアウトが違うのを指摘される」とか「ブログ持ってTwitterやってGitHubに作ったサービス登録して自分をアピールできる時代」いう話題が繰り広げられる中、違う島ではD社の就職説明会が開催されたり、サンタのようなものが会場を練り歩いたりしていました。
サンタのようなものはどこかにアップされてそうなのでそちらを参照してください。(java-ja サンタ とかでググる？)
個人的な  [http://twitter.com/#!/Jxck_:title=@Jxck_]さんに以前Sphinxを教えてもらって以来使ってます！　弊社内一人で！　報告ができてよかった [http://twitter.com/#!/fd0:title=いけむら]さんと日々の作業の効率化について少しお話させて頂き、作業を効率化して浮いた時間を有効に使い…という正のループにハマれるようにちょっと気持ちを引き締めて明日からまた生きようと思いました  最後に 幹事の[http://twitter.com/#!/yamashiro:title=@yamashiro]さんいつもお疲れ様です！　いつか冬場のリップクリームの件についてお話させてください＞＜</description>
    </item>
    
    <item>
      <title>tarコマンドでzオプションを使わずにファイルを解凍する</title>
      <link>/2011/12/10/1323541524/</link>
      <pubDate>Sat, 10 Dec 2011 00:00:00 +0000</pubDate>
      
      <guid>/2011/12/10/1323541524/</guid>
      <description>[Solaris][備忘録]tarコマンドでzオプションを使わずにファイルを解凍する あらすじ Solarisにデフォルトで入っているtarではzオプションなどが使えない。のでtar.gzやtar.bz2ファイルを一発で解凍するにはパイプでつないでやる必要がある。
コマンド $ gzip -cd xxxx.tar.gz | tar -xvf - こんな感じ。cオプションを指定してやる。……やってる事はわかるけど、tarの最後にあるハイフンはなんじゃろう。tar -f -で標準入力から持ってくるルール？
 http://detail.chiebukuro.yahoo.co.jp/qa/question_detail/q1120031991:title  ふむ。マニュアルを見てみる。
 tarfile の名前が - である場合は、tarは標準出 力への書き込みあるいは標準入力からの読み取り のいずれか適当な操作を行います。tarはパイプ ラインの先頭もしくは末尾として使用することが できます。また、次のコマンドを使えば、tar は、 ディレクトリ階層を移動するためにも使用す ることができます。 ルールだったようだ。</description>
    </item>
    
    <item>
      <title>Unixでファイル圧縮・解凍するときに使うコマンドをまとめた</title>
      <link>/2011/12/09/1323474254/</link>
      <pubDate>Fri, 09 Dec 2011 00:00:00 +0000</pubDate>
      
      <guid>/2011/12/09/1323474254/</guid>
      <description>[Unix][備忘録][Solaris]Unixでファイル圧縮・解凍するときに使うコマンドをまとめた あらすじ 不意に.Zファイルがやってきて解凍の仕方を調べてしまった。あとだいたいオプションを忘れるのでメモ。対象ファイルは以下。
 .zip .Z .gz .bz2 .tar.gz .tgz .tar.bz2 .tbz .tar.Z  こんなファイルを固めたり解凍したり。
extracted ┣direct/ ┃┗ls.txt # man ls &amp;gt;&amp;gt; ls.txt ┣slink ┣tar.txt # man tar &amp;gt;&amp;gt; tar.txt ┗zip.txt # man zip &amp;gt;&amp;gt; zip.txt tar ┗sample.tar $ tar tvf sample.tar ../extracted drwxr-xr-x 9999/9999 0 12月 8日 19:14 2011年 ../extracted/ lrwxrwxrwx 9999/9999 7 12月 8日 19:13 2011年 ../extracted/slink tar.txt へのシンボリックリンク drwxr-xr-x 9999/9999 0 12月 8日 19:37 2011年 ../extracted/direct/ -rw-r--r-- 9999/9999 36890 12月 8日 19:37 2011年 .</description>
    </item>
    
    <item>
      <title>Solarisで現在のOSバージョンやパッチバージョンを確認する</title>
      <link>/2011/12/08/1323357042/</link>
      <pubDate>Thu, 08 Dec 2011 00:00:00 +0000</pubDate>
      
      <guid>/2011/12/08/1323357042/</guid>
      <description>[Solaris][備忘録]Solarisで現在のOSバージョンやパッチバージョンを確認する SPARC向けだろうか。そんなことなかったぜ！
参考サイト  http://www.rose.sannet.ne.jp/nterasim/solaris/patch.html:title  unameコマンドでパッチ確認+α uname(現在のシステム名の表示)コマンドを使用していろいろ取得する。
   コマンド 引数 意味 出力内容     uname OSの表示 SunOS   uname -n ホスト名の表示 XXXXXXX   uname -r OSリリースレベルの表示 5.10   uname -v カーネルパッチバージョンの表示 Generic_999999-99   uname -m マシンタイプの表示 sunXX   uname -p プロセッサタイプの表示 sparc   uname -i プラットフォーム名の表示 SUNXX,SPARC-ZZZZZZZZZZ   uname -a 全部 SunOS XXXXXXX 5.10 Generic_141999-99 (以下略)    [f:id:kk_Ataka:20111210091242j:image]</description>
    </item>
    
    <item>
      <title>ZenTestでRSpecを自動実行できるようにした</title>
      <link>/2011/12/07/1323291938/</link>
      <pubDate>Wed, 07 Dec 2011 00:00:00 +0000</pubDate>
      
      <guid>/2011/12/07/1323291938/</guid>
      <description>[Ruby][備忘録]ZenTestでRSpecを自動実行できるようにした あらすじ ZenTestを使えばテストを*specファイルを変更したタイミングで実行できるという事を知った。
ファイル編集する -&amp;gt; alt+tabでウィンドウ切り替える -&amp;gt; プロンプトでrspecコマンドうつ…の繰り返しとはなんだったのか……。
参考サイト  http://randd.kwappa.net/2011/08/07/338:title http://d.hatena.ne.jp/seiunsky/20100131/1264913047:title  環境  Windows XP 導入済み  Ruby 1.8.7 Rspec 2.5 Rubygems バージョン失念   手順 ZenTest導入 まずはZenTestをgemで導入……しようと思ったらgem自体のアップデートを要求された。
gem update --system アップした後はgem 1.8.10となった。gemを最新にしたらZenTestを導入。
gem install ZenTest 次にソースファイルを用意。Growlで何かしら通知するファイルを作りたかったのでそんな感じの名前に。
growl_for_ruby ┣.autotest ┣autotest ┃┗discover.rb ┣growl.rb　# 実際にソースをゴリゴリ書いていく ┗spec ┗growl_spec.rb # テストコード .autotest これにはまだ何も書いていない。設定を書いていくらしい。
autotest/discover.rb autotestコマンド実行時にautotestフォルダに入っているdiscover.rbを読みに行くようだ。中身は以下。
Autotest.add_discovery { &amp;#34;rspec2&amp;#34; } autotestでrspec 2.Xを使うよってことかな。
spec/growl_spec.rb テストコード。rspecの書き方にならってテストを書いていく。注意しないといけないのは、テストコードはspecフォルダ以下に入れないと読み込んでくれない。[1]
テスト実行 一つ新しいプロンプトを開き、プロジェクトルートへ移動。そしてautotest実行。
$ autotest loading autotest/rspec2 C:\ruby1.8\bin\ruby -rrubygems -S C:/ruby1.</description>
    </item>
    
    <item>
      <title>UnixでストリーミングファイルをDLしたい</title>
      <link>/2011/12/06/1323186439/</link>
      <pubDate>Tue, 06 Dec 2011 00:00:00 +0000</pubDate>
      
      <guid>/2011/12/06/1323186439/</guid>
      <description>[Unix][備忘録]UnixでストリーミングファイルをDLしたい あらすじ ミルキィホームズのラジオ(番組はなんでも可)を毎週自動的にサーバにDLするスクリプトを組みたい！
調べること  ラジオはMMSプロトコルのASFファイル  wgetでDLできる？  MMSに対応してない模様？　wget proなら対応しているらしいが…  mplayerというソフトウェアでUnixでもMMSファイルをDLできるらしい http://ja.wikipedia.org/wiki/MPlayer:title   というわけでまずはmplayerを使ってUnixでストリーミングファイルをDLできるようにしてみる。
ダウンロード、インストール ソースからDL。まずはzlibそしてGitが必要。
http://zlib.net/:title
$ wget http://zlib.net/zlib-1.2.5.tar.gz $ gunzip zlib-1.2.5.tar.gz $ tar xf zlib-1.2.5.tar $ cd zlib-1.2.5/ $ ./configure $ make $ sudo make install http://git-scm.com/:title
$ wget http://git-core.googlecode.com/files/git-1.7.7.4.tar.gz $ gunzip git-1.7* $ tar xf git -1.7* $ cd git-1.7* $ ./configure $ make $ sudo make install http://www.mplayerhq.hu/design7/dload.html:title
$ wget http://www.mplayerhq.hu/MPlayer/releases/mplayer-export-snapshot.tar.bz2 $ bunzip2 mplayer-export-* $ tar xf mplayer-export-* $ cd mplayer-export-* $ .</description>
    </item>
    
    <item>
      <title>RedmineでプラグインインストールしたらTemplateErrorが出た</title>
      <link>/2011/12/05/1323092947/</link>
      <pubDate>Mon, 05 Dec 2011 00:00:00 +0000</pubDate>
      
      <guid>/2011/12/05/1323092947/</guid>
      <description>[Ruby][備忘録][Redmine]RedmineでプラグインインストールしたらTemplateErrorが出た あらすじ Redmineにプラグインをインストールした後で動かそうとしたらエラーが。
調査 下記の例はredmine_importerというCSVでチケット一括登録するプラグイン。
ActionView::TemplateError (No plugin called &amp;#39;redmine_importer&amp;#39; - please use the full name of a loaded plugin.) on line #2 of vendor/plugins/idlysphere-redmine_importer-7a19e8d/app/views/importer/match.html.erb: 1: &amp;lt;% content_for :header_tags do %&amp;gt; 2: &amp;lt;%= stylesheet_link_tag &amp;#39;importer&amp;#39;, :plugin =&amp;gt; &amp;#39;redmine_importer&amp;#39; %&amp;gt; 3: &amp;lt;% end %&amp;gt; 4: 5: &amp;lt;h2&amp;gt;&amp;lt;%= l(:label_match_columns) %&amp;gt;&amp;lt;/h2&amp;gt; vendor/plugins/idlysphere-redmine_importer-7a19e8d/app/views/importer/match.html.erb:2 app/helpers/application_helper.rb:764:in `content_for&amp;#39; vendor/plugins/idlysphere-redmine_importer-7a19e8d/app/views/importer/match.html.erb:1 /usr/local/lib/ruby/1.8/webrick/httpserver.rb:104:in `service&amp;#39; /usr/local/lib/ruby/1.8/webrick/httpserver.rb:65:in `run&amp;#39; /usr/local/lib/ruby/1.8/webrick/server.rb:173:in `start_thread&amp;#39; /usr/local/lib/ruby/1.8/webrick/server.rb:162:in `start&amp;#39; /usr/local/lib/ruby/1.8/webrick/server.rb:162:in `start_thread&amp;#39; /usr/local/lib/ruby/1.8/webrick/server.rb:95:in `start&amp;#39; /usr/local/lib/ruby/1.8/webrick/server.rb:92:in `each&amp;#39; /usr/local/lib/ruby/1.8/webrick/server.rb:92:in `start&amp;#39; /usr/local/lib/ruby/1.8/webrick/server.rb:23:in `start&amp;#39; /usr/local/lib/ruby/1.</description>
    </item>
    
    <item>
      <title>複数のRuby環境の管理・切替ができるrvmをインストールした</title>
      <link>/2011/12/04/1323009249/</link>
      <pubDate>Sun, 04 Dec 2011 00:00:00 +0000</pubDate>
      
      <guid>/2011/12/04/1323009249/</guid>
      <description>[Ruby][備忘録][Mac][Unix]複数のRuby環境の管理・切替ができるrvmをインストールした あらすじ 先にWindowsにてRubyのバージョン管理ができるpikをインストールしていたので、今度はWindows以外にrvmをインストールする。
参考サイト  https://rvm.beginrescueend.com/rvm/install http://www.machu.jp/diary/20110521.html#p01:title http://d.hatena.ne.jp/mirakui/20100502/1272849327:title  まとめ とりあえず以下のコマンドを覚える。
 rvm list known  インストールできるRubyの一覧  rvm list  インストールしているRubyの一覧  rvm install x.x.x  インストール  rvm use x.x.x  Rubyの切り替え   事前準備  既にインストールされていたRubyは全部消した。  手順 インストールのため下記コマンドをうつ。
$ bash &amp;lt; &amp;lt;(curl -s https://raw.github.com/wayneeseguin/rvm/master/binscripts/rvm-installer ) ホームディレクトリに.rvmが生成される。list knownでインストールできるRuby一覧が表示される。
(2012/04/07追記)command not foundが出る場合はPATHが通ってない。
 Installing RVM to /Users/kk_Ataka/.rvm/
Adding rvm PATH line to /Users/kk\_Ataka/.bashrc /Users/kk\_Ataka/.zshrc. RVM sourcing line found in /Users/kk\_Ataka/.</description>
    </item>
    
    <item>
      <title>Macで現在の入力モードを判別しやすくするImageUpをインストールした</title>
      <link>/2011/12/03/1322922769/</link>
      <pubDate>Sat, 03 Dec 2011 00:00:00 +0000</pubDate>
      
      <guid>/2011/12/03/1322922769/</guid>
      <description>[Mac][Application]Macで現在の入力モードを判別しやすくするImageUpをインストールした あらすじ  全角文字を入力しようとしたら半角文字を入力してしまってctrl+h連打… 入力ソース切り替え時に表示されるウィンドウは、プライマリディスプレイにしか表示されないのでセカンダリディスプレイ見ていると確認するのがめんどい  [f:id:kk_Ataka:20111203121354j:image]
 右上の現在のモードも見るのがめんどい  [f:id:kk_Ataka:20111203121510j:image]
一目で今どっちのモードなのかわかることができないだろうかと探したところ、ImageUpというツールでできるらしい。のでメモ。
サイト http://software.cockscomb.info/imageup/:title
できること 設定次第でいろいろできるようだけど、とりあえずColor Extraというテーマだと以下のようになる。
 バーの色変え  全角の場合   [f:id:kk_Ataka:20111203121514j:image]
 - 半角の場合  [f:id:kk_Ataka:20111203121513j:image]
 画面の上下に色線つけ  全角の場合   [f:id:kk_Ataka:20111203121514j:image]
[f:id:kk_Ataka:20111203121515j:image]
 - 半角の場合  [f:id:kk_Ataka:20111203121513j:image]
[f:id:kk_Ataka:20111203121516j:image]
 マウスカーソルの側に入力ソース表示  全角の場合   [f:id:kk_Ataka:20111203121511p:image:w360]
 - 半角の場合  [f:id:kk_Ataka:20111203121512p:image:w360]
このマウスカーソルの側に出してもらえるのが非常に便利すぎた。これでもう全角半角確認はしなくてOKになりそうだ！</description>
    </item>
    
    <item>
      <title>Sphinxでドキュメントを書くためreST記法に入門した</title>
      <link>/2011/12/02/1322839748/</link>
      <pubDate>Fri, 02 Dec 2011 00:00:00 +0000</pubDate>
      
      <guid>/2011/12/02/1322839748/</guid>
      <description>[Sphinx][reST][備忘録]Sphinxでドキュメントを書くためreST記法に入門した あらすじ Sphinxを導入した時にまとめたreST(reStructuredText)記法をアウトプットしよう。まだリファレンス読み込んでおらず、感覚で使っているところもあるので間違った認識もあるかも…そこは学んだら追記しよう。
参考  http://sphinx.shibu.jp/:title http://docutils.sourceforge.net/rst.html:title  基本的にSphinxのサイトに書いてあることを写経してます。
注意 見出しの文字数より少なくならないように上下囲む、とかテーブルは列・行を合わせるとか結構シビアな書き方が求められるのですが……pre記法にしても揃ってない…！
見出し系 間違って覚えていたので、見出し系については[http://d.hatena.ne.jp/kk_Ataka/20120816/1345124098:title]を参照。
 h1見出し  半角イコールで上下を揃えて囲むとh1と同等。
========================= rst(reStructuredText)解説 ========================= [f:id:kk_Ataka:20111203000832j:image]
見出しより長くしても問題ないが、見出しより短いと警告される。(Title underline too short.):
=========================== 怒られない =========================== == 怒られる == 以下の見出しも同様。
 h2見出し  下だけ半角イコールでh2と同等。
&amp;lt;h2&amp;gt;になる ========== [f:id:kk_Ataka:20111203000826j:image]
 h3見出し  ハイフンで上下囲むとh3と同等。
---------- &amp;lt;h3&amp;gt;になる ---------- [f:id:kk_Ataka:20111203000827j:image]
 h4見出し  下だけハイフンでh4と同等。
&amp;lt;h4&amp;gt;になる ---------- [f:id:kk_Ataka:20111203000828j:image]
リスト系  箇条書きリスト  箇条書きリストの項目。ハイフンで定義。
- りんご - きのこ - パワーアップ用 - 1UP用 - みかん [f:id:kk_Ataka:20111202231941j:image]</description>
    </item>
    
    <item>
      <title>DAT装置の使い方 超簡易版(Solaris)</title>
      <link>/2011/12/01/1322746718/</link>
      <pubDate>Thu, 01 Dec 2011 00:00:00 +0000</pubDate>
      
      <guid>/2011/12/01/1322746718/</guid>
      <description>[Solaris][備忘録]DAT装置の使い方 超簡易版(Solaris) あらすじ 結局はtarコマンド+αなんだけど、どうもDAT装置とテープというデバイスが使い慣れないので操作方法をメモしておく。とりあえず
 状態確認 何も考えずに書き込み 全部取り出し  くらい。
コマンド 使用するコマンドはmt(磁気テープの制御)とtar。まずはmt。
テープの状態表示  -fオプションでテープデバイスの指定 /dev/rmt/0はテープデバイスのパス  $ mt -f /dev/rmt/0 status テープの巻き戻し 今回は使わなかった。
$ mt -f /dev/rmt/0 rewind テープの取り出し データの取り出しではなく、DAT装置からの取り出し。
$ mt -f /dev/rmt/0 offline ここからtar。
 fオプションはtarファイル引数の指定。  fを省略した場合は$TAPE(設定されている場合) $TAPEもない場合は/etc/default/tarを見に行く[1]  vオプションはファイル名の出力  テープの内容を表示  tオプションは指定されたtarファイルの内容一覧表示  $ tar tvf /dev/rmt/0 tオプションで表示される内容はこんな感じ。
$ tar tf test.tar test/aaa.txt ... vオプションと併用すると詳細に。
$ tar tvf openssl-xxx.tar -rw-r--r-- 9/9 99999 3月 19日 22:22 2011年 test/aaa.</description>
    </item>
    
    <item>
      <title>rvm環境でRuby実行時にReadlineエラーが起きた時の対処法</title>
      <link>/2011/11/30/1322662743/</link>
      <pubDate>Wed, 30 Nov 2011 00:00:00 +0000</pubDate>
      
      <guid>/2011/11/30/1322662743/</guid>
      <description>[Ruby][備忘録][Heroku]rvm環境でRuby実行時にReadlineエラーが起きた時の対処法 タイトル通り。さくらVPS(CentOS)にrvmでRubyをインストールし、Heroku環境を構築しようとしたらReadlineエラーが起きた。
$ rvm install 1.9.2 (略) $ rvm use 1.9.2 $ gem install heroku (略) $ heroku /home/kk_Ataka/.rvm/rubies/ruby-1.9.2-p290/lib/ruby/site_ruby/1.9.1/rubygems/custom_require.rb:36:in `require&amp;#39;: no such file to load -- readline (LoadError) from /home/kk_Ataka/.rvm/rubies/ruby-1.9.2-p290/lib/ruby/site_ruby/1.9.1/rubygems/custom_require.rb:36:in `require&amp;#39; from /home/kk_Ataka/.rvm/gems/ruby-1.9.2-p290/gems/heroku-2.14.0/lib/heroku/command/run.rb:1:in `&amp;lt;top (required)&amp;gt;&amp;#39; from /home/kk_Ataka/.rvm/rubies/ruby-1.9.2-p290/lib/ruby/site_ruby/1.9.1/rubygems/custom_require.rb:36:in `require&amp;#39; from /home/kk_Ataka/.rvm/rubies/ruby-1.9.2-p290/lib/ruby/site_ruby/1.9.1/rubygems/custom_require.rb:36:in `require&amp;#39; from /home/kk_Ataka/.rvm/gems/ruby-1.9.2-p290/gems/heroku-2.14.0/lib/heroku/command.rb:17:in `block in load&amp;#39; from /home/kk_Ataka/.rvm/gems/ruby-1.9.2-p290/gems/heroku-2.14.0/lib/heroku/command.rb:16:in `each&amp;#39; from /home/kk_Ataka/.rvm/gems/ruby-1.9.2-p290/gems/heroku-2.14.0/lib/heroku/command.rb:16:in `load&amp;#39; from /home/kk_Ataka/.rvm/gems/ruby-1.9.2-p290/gems/heroku-2.14.0/bin/heroku:13:in `&amp;lt;top (required)&amp;gt;&amp;#39; from /home/kk_Ataka/.rvm/gems/ruby-1.9.2-p290/bin/heroku:19:in `load&amp;#39; from /home/kk_Ataka/.rvm/gems/ruby-1.9.2-p290/bin/heroku:19:in `&amp;lt;main&amp;gt;&amp;#39; readlineが入っていなかったのだろうか？
$ sudo yum install readline-devel $ cd $rvm_path/src/RUBYVERSION/ext/readline $ ruby extconf.</description>
    </item>
    
    <item>
      <title>pikでインストールしたRubyでbundle exec rubyしたらエラーになった 解決編</title>
      <link>/2011/11/29/1322569582/</link>
      <pubDate>Tue, 29 Nov 2011 00:00:00 +0000</pubDate>
      
      <guid>/2011/11/29/1322569582/</guid>
      <description>[Ruby][備忘録]pikでインストールしたRubyでbundle exec rubyしたらエラーになった 解決編 前回までのあらすじ [http://d.hatena.ne.jp/kk_Ataka/20111128/1322482230:title]で出たRubyオプションのエラー。
$ bundle exec ruby app.rb ruby: invalid switch in RUBYOPT: -a (RuntimeError) この-aオプションはどこから出てきたのかというと、&amp;rdquo;Documents and Settings&amp;rdquo;のaだという事がわかった。
結論  Rubyのインストールパスにスペースを含めない pikでRubyをインストールする前にpik config install_dir=XXXでパス指定する  先に結論を書くと、やっぱりこうだった。以下、調査ログ。
調査 試しに以下のディレクトリに設置したRubyを使用しようとしたところ、下記のエラーが。(whichとか使えてるのはnyaosを使っているからです)
 C:\rubies\Ru by
  $ which ruby C:\rubies\Ru by\bin\ruby.exe $ bundle exec ruby myapp.rb ruby: illegal switch in RUBYOPT: -b (RuntimeError)  C:\rubies\R uby
  $ which ruby C:\rubies\R uby\bin\ruby.exe $ bundle exec ruby myapp.rb ruby: illegal switch in RUBYOPT: -u (RuntimeError) あぁやっぱりかー。</description>
    </item>
    
    <item>
      <title>pikでインストールしたRubyでbundle exec rubyしたらエラーになった</title>
      <link>/2011/11/28/1322482230/</link>
      <pubDate>Mon, 28 Nov 2011 00:00:00 +0000</pubDate>
      
      <guid>/2011/11/28/1322482230/</guid>
      <description>[Ruby][備忘録]pikでインストールしたRubyでbundle exec rubyしたらエラーになった 解決編 - http://d.hatena.ne.jp/kk_Ataka/20111129/1322569582:title
あらすじ  デフォルトのRubyからpikでインストールしたRubyに切り替えた後bundle exec rubyをしたら下記のようなエラーが出た  $ bundle exec ruby app.rb ruby: invalid switch in RUBYOPT: -a (RuntimeError) ン？　なんだこれ。
調査  pikでインストールしたRubyはバージョン等関係なしにことごとくこけた  1.8.7 patch352 1.9.3  デフォルトでインストールしたRubyでは無事起動した / 下記ログ  1.8.7 patch330   $ bundle exec ruby app.rb [2011-11-28 19:31:55] INFO WEBrick 1.3.1 [2011-11-28 19:31:55] INFO ruby 1.8.7 (2010-12-23) [i386-mswin32] == Sinatra/1.3.1 has taken the stage on 4567 for development with backup from WEBrick [2011-11-28 19:31:55] INFO WEBrick::HTTPServer#start: pid=964 port=4567 1.</description>
    </item>
    
    <item>
      <title>LokkaをインストールしてHerokuにデプロイした</title>
      <link>/2011/11/27/1322329546/</link>
      <pubDate>Sun, 27 Nov 2011 00:00:00 +0000</pubDate>
      
      <guid>/2011/11/27/1322329546/</guid>
      <description>[Ruby][備忘録][Heroku][Lokka]LokkaをインストールしてHerokuにデプロイした あらすじ Herokuを使い出したのでLokkaを触ってみる。
参考サイト  http://lokka.org/getting-started:title  公式ページの手順だけでなんとかなりそう。
手順 Lokka入手、インストール LokkaをGitHubからCloneして、Bundle install。&amp;ndash;withoutオプションでmysql, postgresql, sqliteから使わないDBを指定できる。
$ git clone git://github.com/komagata/lokka.git$ cd lokka $ bundle install ./vendor/bundle --without development mysql sqlite ん、何かエラッた。
Gem::Installer::ExtensionBuildError: ERROR: Failed to build gem native extension. (略) Gem files will remain installed in /home/kk_Ataka/github/lokka/vendor/bundle/ruby/1.9.1/bundler/gems/do-d7cb262d89a1/do_postgres for inspection. Results logged to /home/kk_Ataka/github/lokka/vendor/bundle/ruby/1.9.1/bundler/gems/do-d7cb262d89a1/do_postgres/ext/do_postgres/gem_make.out An error occured while installing do_postgres (0.10.6), and Bundler cannot continue. Make sure that `gem install do_postgres -v &amp;#39;0.</description>
    </item>
    
    <item>
      <title>HerokuにWebアプリ(Sinatra)をデプロイする手順をまとめた</title>
      <link>/2011/11/26/1322240459/</link>
      <pubDate>Sat, 26 Nov 2011 00:00:00 +0000</pubDate>
      
      <guid>/2011/11/26/1322240459/</guid>
      <description>[Ruby][備忘録][Sinatra][Heroku]HerokuにWebアプリ(Sinatra)をデプロイする手順をまとめた あらすじ いよいよHerokuをはじめる。
参考サイト  http://d.hatena.ne.jp/ruedap/20110209/ruby_heroku_twitter_bot:title http://studyheroku.wiki.fc2.com/wiki/Heroku%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89:title http://kuranuki.sonicgarden.jp/2009/05/rubypaasherokurails.html:title  事前準備  Ruby 1.9.3 Git 1.7.3 rvm 1.9.2 gem 1.8.10  gem管理にbundlerを使いたい   プロジェクト作成 Bundler準備 プロジェクトフォルダ(heroku_sample)を作成し、その中にGemfileファイルを作成する。gem &amp;lsquo;heroku&amp;rsquo;は後ほどHerokuに対してプロジェクトを作ったりするのに使用する。
$ mkdir heroku_sample $ cd heroku_sample $ vi Gemfile source :rubygems source &amp;#39;http://rubygems.org&amp;#39; gem &amp;#39;sinatra&amp;#39; gem &amp;#39;heroku&amp;#39; bundleでインストール。場所は任意で。今回はカレントのvendor/bundleにインストール。
$ bundle install ./vendor/bundle Sinatra準備 SinatraでHello World!!できるようにサンプルファイルapp.rbを作成。
$ vi app.rb require &amp;#39;rubygems&amp;#39; require &amp;#39;sinatra&amp;#39; get &amp;#39;/&amp;#39; do &amp;#34;Hello World!&amp;#34; end Rackアプリケーションとして起動するためconfig.ruファイルを作成する。
require &amp;#39;./app.rb&amp;#39; run Sinatra::Application ※ちょっと先の話になるけど、始めは1行目をrequire &amp;lsquo;app.</description>
    </item>
    
    <item>
      <title>複数のRuby環境の管理・切替ができるpikを実行できた nyaos編</title>
      <link>/2011/11/24/1322138944/</link>
      <pubDate>Thu, 24 Nov 2011 00:00:00 +0000</pubDate>
      
      <guid>/2011/11/24/1322138944/</guid>
      <description>[Ruby][備忘録]複数のRuby環境の管理・切替ができるpikを実行できた nyaos編 前回までのあらすじ  http://d.hatena.ne.jp/kk_Ataka/20111004/1317660186:title  まず、環境変数がおかしいとpikが正常に動きませんよというのが一つ。もう一つの原因がコマンドプロンプトではなくnyaosを使っていたという事。
参考サイト  http://d.hatena.ne.jp/miyamuko/20100905/nyaos_with_pik:title  修正方法 そのままだと、nyaosでPATH追加シェルを起動しても親シェルであるnyaosには反映されませんよってんで、動かすには_nyaファイルに以下のコードを追加する。
pik{ pik_runner.exe pik.bat %* if exist &amp;#34;%USERPROFILE%\.pik\pik.bat&amp;#34; then source &amp;#34;%USERPROFILE%\.pik\pik.bat&amp;#34; 2&amp;gt; nul endif } msysgitを使ってる時も同じ感じで追加すればいいのかな。</description>
    </item>
    
    <item>
      <title>Word2007でCtrl&#43;hjklで移動できるようにする</title>
      <link>/2011/11/17/1321537502/</link>
      <pubDate>Thu, 17 Nov 2011 00:00:00 +0000</pubDate>
      
      <guid>/2011/11/17/1321537502/</guid>
      <description> [Windows][備忘録]Word2007でCtrl+hjklで移動できるようにする あらすじ  あーWord使ってる時hjklで移動してーあとバックスペースも  手順 テンプレートファイルを編集するとできるよう。で、それはApplication Data下にある。
 Word2007を起動し、左上のWindowsマークから開くを選択  ファイルの種類で「Word マクロ有効テンプレート(.dotm)」を選択  %APPDATA%\Microsoft\Templates\Normal.dotmを開く   開発タブ -&amp;gt; VisualBasic -&amp;gt; Normal -&amp;gt; Microsoft Word Objects -&amp;gt; ThisDocumentに以下をペーストする  Sub BkSpPrc() Selection.TypeBackspace End Sub Sub MoveLeft() Selection.MoveLeft End Sub Sub MoveRight() Selection.MoveRight End Sub Sub MoveUp() Selection.MoveUp End Sub Sub MoveDown() Selection.MoveDown End Sub  左上のWindowsマーク -&amp;gt; Wordのオプション -&amp;gt; ユーザー設定 -&amp;gt; ショートカットキー:ユーザー設定 -&amp;gt; 分類:マクロ  マクロに上記で記載した関数が表示されていることを確認 マクロを選択してMoveLeftはCtrl+h、MoveDownはCtrl+j&amp;hellip;とキーを割り当てていく   </description>
    </item>
    
    <item>
      <title>Excel2007のF1キーを無効化する</title>
      <link>/2011/11/16/1321447232/</link>
      <pubDate>Wed, 16 Nov 2011 00:00:00 +0000</pubDate>
      
      <guid>/2011/11/16/1321447232/</guid>
      <description>[Windows][備忘録]Excel2007のF1キーを無効化する あらすじ ExcelのF1キーを殺したい…。Wordとかは百歩譲っていいとして、ExcelにはF2キーにセル編集が割当たっているので、それを使うときに暴発してしまうため。
案  F1キーそのものを引っこ抜く 何かしらの方法で無効化する  ググってみると、F1キーをぶちぬくという方法も割とメジャーらしいのですが、いずれ返却しなければいけないPCのため物理的な方法は却下。なので無効化する方向でいきます。レジストリをいじってなんとかする。Accessの履歴といい、なんでMicrosoft製品は何かしようとしたらレジストリいじらないといけないんだ…。
手順 Windowsキー+r -&amp;gt; regedit でレジストリエディタ起動、まずは下記パスを掘っていく。
HKEY_CURRENT_USER ┗Software ┗Policies ┗Microsoft ┗Office Officeフォルダ直下になにかしら数字フォルダがあるかもしれないが、これはOfficeのバージョン。
 12.0 = Office2007  という事らしい。今回は2007なので12.0を掘る。ここから下の階層はなければ作成する。(作成したい階層で右クリック -&amp;gt; 新規 -&amp;gt; キー)
HKEY_CURRENT_USER ┗Software ┗Policies ┗Microsoft ┗Office ┗12.0 ┗Excel ┗DisabledShortcutKeysCheckBoxes DisabledShortcutKeysCheckBoxesを作り、DisabledShortcutKeysCheckBoxesで右クリック -&amp;gt; 新規 -&amp;gt; 文字列値を選択しF1Key(わかればなんでもよい)と入力。作成したF1Keyをダブルクリックし
112,0 と入力しOK押下。
Excelを再起動するとF1キーを押しても何も起こらなくなった！！　よし！</description>
    </item>
    
    <item>
      <title>Windowsのローカル環境にWordPressをインストールした</title>
      <link>/2011/10/11/1318334855/</link>
      <pubDate>Tue, 11 Oct 2011 00:00:00 +0000</pubDate>
      
      <guid>/2011/10/11/1318334855/</guid>
      <description>[Windows][備忘録]Windowsのローカル環境にWordPressをインストールした あらすじ  Wordpress上ではてな記法を使うことができるというプラグイン http://rewish.org/wp/hatena_notation_plugin:title を見つけて使ってみたい！　と思ったのでWordpress備忘録も兼ねてインストール  参考サイト  WordPress  http://ja.wordpress.org/:title http://ja.wordpress.org/install/:title http://www.webcreatorbox.com/tech/wordpress-install-local/:title  MySQL  http://y-kit.jp/saba/xp/mysqlinst.htm:title http://www.mysql.com/downloads/installer/:title   推奨環境  WordPress 3.2 の場合  PHP 5.2.4 以上 MySQL 5.0 以上   実行環境  Windows XP WordPress 3.2 Apache 2.2.1 PHP 5.3.8 MySQL 5.5.15  MySQL インストール、設定  [http://www.mysql.com/downloads/installer/:title]よりMySQLをDL。登録がめんどかったら[http://download.softagency.net/mysql/Downloads/MySQL-5.5/:title]この辺から msi実行。基本的に次へ次へ C:\windows直下にmy.iniファイルを作成以下のように記述  basedirはMySQLのルート(msiでデフォルトインストールするとC:/Program Files/MySQL/MySQL Server 5.5に入る) datadirはその中のdataフォルダ   [mysqld] basedir=&amp;#34;C:/Program Files/MySQL/MySQL Server 5.5&amp;#34; datadir=&amp;#34;C:/Program Files/MySQL/MySQL Server 5.</description>
    </item>
    
    <item>
      <title>さくらVPSにインストールしたDropboxのEnable LAN syncオプションをOFFにする</title>
      <link>/2011/10/08/1318068887/</link>
      <pubDate>Sat, 08 Oct 2011 00:00:00 +0000</pubDate>
      
      <guid>/2011/10/08/1318068887/</guid>
      <description>[Unix][備忘録][Dropbox][さくらVPS]さくらVPSにインストールしたDropboxのEnable LAN syncオプションをOFFにする あらすじ DropboxにはEnable LAN syncというオプションがあり、これをONにすると同じLAN内のマシンはインターネットを経由しないで同期ができる。
f:id:kk_Ataka:20111008190858j:image
ただし、17500ポートに向けてUDPパケットがやまほど投げているようで、同じLAN内に自分以外のマシンがある状態でこのオプションをONにしていると近隣の方へやまほどパケットを投げまくりで非常に迷惑がかかります……。基本的にDropboxのオプションからEnable LAN sync(LAN同期を有効にする)をOFFにすればよい。
……のだが、CUIからDropboxをインストールしている場合は少し手順を踏んでこのオプションを切る必要があります。
参考サイト  http://d.hatena.ne.jp/otn/20110502/p1:title http://blog.7kai.org/2011/04/dropbox-lan-sync-disable/:title  というか、前回の記事http://d.hatena.ne.jp/kk_Ataka/20110423/1303489798:title でインストールするときに参考にしたサイトにこの問題が書いてあった……。
 To stop dropbox from sending LAN Sync broadcasts every 30 seconds over port 17500 (http://forums.dropbox.com/topic.php?id=16253) see DropboxAddons/DisableLanSync
http://wiki.dropbox.com/TipsAndTricks/TextBasedLinuxInstall#SuppressLANSyncbroadcasts
 必要環境 |*Python|2.6|
スクリプトDL  http://wiki.dropbox.com/DropboxAddons/PyDropboxValues から pyDropboxValues.py をDLする  設定値を表示できる  http://wiki.dropbox.com/DropboxAddons/DisableLanSync から dropbox_set_lansync.py をDLする  LAN syncオプションを切り替える   手順  pyDropboxValue.pyで設定をバックアップする  $ PYTHON2.6 pyDropboxValues.py _backup Backed up &amp;#39;config.</description>
    </item>
    
    <item>
      <title>複数のRuby環境の管理・切替ができるpikを実行できた</title>
      <link>/2011/10/04/1317660186/</link>
      <pubDate>Tue, 04 Oct 2011 00:00:00 +0000</pubDate>
      
      <guid>/2011/10/04/1317660186/</guid>
      <description>[Ruby][備忘録]複数のRuby環境の管理・切替ができるpikを実行できた あらすじ  [http://d.hatena.ne.jp/kk_Ataka/20111003/1317642705:title]にてBundlerでのgem管理に失敗した 別の方法はないかと調べているとRubyをバージョンごとに管理できるrvmとpikを見つけた  とりあえず別出ししておいて安定させたい環境と色々試行錯誤したい環境に分けられる？  Windows環境なのでpikを使ってみようとインストールしてみた  インストール手順(gem) ※gemでは実際にRubyをinstallする段階の所で失敗したので、実際は次のmsiを使ってインストールした。
 gemでOK  gem install pik  pikをインストールするにはpik_installコマンドを実行する必要があるが、フォルダを作成し、PATHに追加してから実行してくれと言われる  $ pik_install Usage: pik_install path\to\install You should install to a directory that is in your system path, or add the directory to your system path. Do not install to your ruby&amp;#39;s bin directory because pik will remove it from the path when switching versions. Example: C:\&amp;gt;path PATH=C:\tools;C:\ruby\Ruby-186-p383\bin;C:\WINDOWS\system32;... C:\&amp;gt;pik_install C:\tools  C:\pikフォルダ作成しPATHに追加し再度  $ pik_install C:\pik Thank you for using pik.</description>
    </item>
    
    <item>
      <title>Rubyのgemバージョン管理ができるBundlerを実行できなかった</title>
      <link>/2011/10/03/1317642705/</link>
      <pubDate>Mon, 03 Oct 2011 00:00:00 +0000</pubDate>
      
      <guid>/2011/10/03/1317642705/</guid>
      <description>[Ruby][備忘録]Rubyのgemバージョン管理ができるBundlerを実行できなかった あらすじ  gemでライブラリを入れまくり、updateしまくりでバージョンの不整合が起こり復旧不可能になった 同じ過ちは繰り返したくない…ので今度はうまく管理したい Bundlerを使えばgemのバージョン管理ができるみたい  設定さえあればどの環境も同じにする事が出来る？   Bundlerを入れてみます。
環境  Windows XP Ruby 1.8.7  RubyのパスはC:\ruby  必要なDLLなど  zlib.dll readline.dll iconv.dll iconv.lib iconv_a.lib ssleay32.dll libeay32.dll   手順 Rubygemsインストール  [http://rubyforge.org/frs/?group_id=126:title]よりRubygemsをDL。バージョンは1.7.2  gemは入っていないとするので、zipファイルからインストールする。   $ ruby setup.rb RubyGems 1.7.2 installed ・ｿ=== 1.7.2 / 2011-04-05 * 1 Bug Fix: * Warn on loading bad spec array values (ntlm-http gem has nil in its cert chain) ------------------------------------------------------------------------------ RubyGems installed the following executables: C:/ruby/bin/gem  バージョン、環境を確認  $ gem -v 1.</description>
    </item>
    
    <item>
      <title>.msgファイルをパースして中から添付ファイルを抜き出す</title>
      <link>/2011/09/30/1317312438/</link>
      <pubDate>Fri, 30 Sep 2011 00:00:00 +0000</pubDate>
      
      <guid>/2011/09/30/1317312438/</guid>
      <description>[Java][Windows][Ruby][備忘録].msgファイルをパースして中から添付ファイルを抜き出す 正確にはRubyというには微妙なんですが…。
前回までのあらすじ  選んだメール(本文と添付ファイル)をまとめてDLしてくるだけの簡単なお仕事はできるようになった  http://d.hatena.ne.jp/kk_Ataka/20110517/1305560776:title http://d.hatena.ne.jp/kk_Ataka/20110709/1310140318:title http://d.hatena.ne.jp/kk_Ataka/20110823/1314103220:title   しかし、社内セキュリティGWの設定？　のためかzipとかexeとか怪しい拡張子が付いている添付ファイルは一旦msgファイルに固められるという仕様のためそのままでは添付ファイルが見れない。
こういうメールが
メール ┗添付ファイル.zip 届いた時にはこうなっている
メール ┗ラップ.msg(＼あやしいファイルだから注意してDLしてね／) ┗本来の添付ファイル.zip なんとかRubyからmsgファイル内を解析して添付ファイルを引っこ抜いて保存ができまいか…というのが今回の問題。
結論 以下のライブラリを駆使して実現しました。
 msgparser(Auxiliiという所のJava用msgファイルパースライブラリ) jrb(Java Ruby Bridge: RubyからJavaVMを操作できるライブラリ)  一応Rubyでmsgファイルを解析するライブラリも探してみたのですが、あまりないのかな？　http://en.sourceforge.jp/projects/sfnet_ssfiledll/downloads/SSFileDLL%20%28MAPI%29/1.0/SSFileDLL-MAPI-1.0-Source.zip/:title こういうdllは見つけたのですが、MAPIがよくわからん上に説明を見る限りHasAttach(添付ファイルを持ってるか持ってないか？)くらいしかわからない？　ようなのであきらめました。
あと、msgparserはJavaライブラリなので当初はJRubyで書けば何とかなるかなと思ってました。簡単なサンプルは http://www.rgagnon.com/javadetails/java-0613.html:title このページのような感じ。が、今まで書いたコードをJRubyで実行すると失敗してしまったので方向転換；；　RubyからJavaVMを操作できるrjbというライブラリを使う事に。
ダウンロード・インストール  msgparser  http://auxilii.com/msgparser/Page.php?id=16000:title よりmsgparserをDL  [http://poi.apache.org/poifs/:title]や[http://www.freeutils.net/source/jtnef/:title]とかが必要になるのですが、上記のmsgparse.zipの中に全部入ってます[1]  distよりmasparser-X.XX.jarを、libよりpoi-X.X-YYYYMMDD.jarとtnef-X.X.X.jarを取得し、同じプロジェクト内にコピー。とりあえずlibフォルダを作ってそこに入れました  rjb  gemで。ただし、当然というかJavaが入っていないと失敗する模様。環境変数JAVA_HOMEも設定している必要があるみたい   gem install rjb ソース ソース全体は [https://github.com/gosyujin/outlook_for_ruby:title] 。msgParse.rbが本体、ライブラリがlibに入っています。
使い方としてはMsgParseをnewしてinputMsgで.msgファイルのパス指定、saveFileで添付ファイルぶっこぬいて出力先に保存としたい。こんな感じで。
msg = MsgParse.new msg.inputMsg(MSGFILE) msg.saveFile(SAVEDIR) という事でMsgParser[2]クラスを作成。ソースは [https://github.com/gosyujin/outlook_for_ruby/blob/master/msgParse.rb:title] 。まずは初期化から。</description>
    </item>
    
    <item>
      <title>Solarisのパッケージを作ってみる もう少し学んだ版</title>
      <link>/2011/09/14/1316002377/</link>
      <pubDate>Wed, 14 Sep 2011 00:00:00 +0000</pubDate>
      
      <guid>/2011/09/14/1316002377/</guid>
      <description>[Solaris][備忘録]Solarisのパッケージを作ってみる もう少し学んだ版 前回までのあらすじ  http://d.hatena.ne.jp/kk_Ataka/20110912/1315826713:title  もう少し調べてみた。
参考サイト  http://dlc.sun.com/osol/g11n/content/PACKINSTALL/ja/ch2buildpkg-11300.html:title  必要なもの パッケージコンテンツ
ディレクトリ含めたソース一式。ざっくりソース一式とか言ってるのでここは作るものによってもう少しブレークダウンする必要がある
pkginfoファイル
パッケージ名等のパラメータを定義するファイル。コマンドではなくファイル。
Prototypeファイル
パッケージのコンポーネント一覧を記載するファイル
場合によって用意するもの(必須ではない) compverファイル
パッケージと互換性がある以前のバージョンのパッケージの定義ファイル
dependファイル
パッケージと関連があるパッケージの定義ファイル
spaceファイル
インストールに必要なディスク容量の定義ファイル
copyrightファイル
インストール時に表示される著作権メッセージの定義ファイル
パッケージコンテンツの作成 作成ディレクトリと内訳。
$ pwd /home/kk_Ataka/pkgroot/ MYAPpkg┳bin┳proccess ┃　┗start ┣lib━common.lib ┗etc━etcFile これを/直下にインストールしたい。
pkginfoファイル作成 /にインストールしたいので、BASEDIRが/でいいのか？
PKG=&amp;#34;MYAPpkg&amp;#34; NAME=&amp;#34;MyApplyPackage&amp;#34; ARCH=&amp;#34;sparc&amp;#34; VERSION=&amp;#34;release 1.0 /svn revision r222&amp;#34; CATEGORY=&amp;#34;application&amp;#34; DESC=&amp;#34;This is my test packages.&amp;#34; VENDOR=&amp;#34;MYAPPLY&amp;#34; BASEDIR=&amp;#34;/&amp;#34; pkginfoファイル書式 |*PKG|必須|32文字以内|パッケージの省略名 英数字で構成、頭に数字は× 予約語(install, new等)は使用できない。最初の4文字は社名などがお勧め|
|*NAME|必須|256文字以内 |パッケージの完全名 英数字で構成 必要なタイミング、インストールするパーティション等を明瞭に記載する[1]|
|*ATCH|必須|16文字以内|アーキテクチャ 複数対応している場合はカンマ区切り|
|*VERSION|必須|256文字以内|バージョン 先頭に(は×|</description>
    </item>
    
    <item>
      <title>Solarisのパッケージを作ってみる</title>
      <link>/2011/09/12/1315826713/</link>
      <pubDate>Mon, 12 Sep 2011 00:00:00 +0000</pubDate>
      
      <guid>/2011/09/12/1315826713/</guid>
      <description>[Solaris][備忘録]Solarisのパッケージを作ってみる もう少し学んだ。http://d.hatena.ne.jp/kk_Ataka/20110914/1316002377:title
あらすじ  Solarisのパッケージの作り方を学ぶ刻がきた  参考サイト  http://www.syuhitu.org/other/package/package.html:title http://www.nognog.com/techmemo/Solaris_Package_Creation_HOWTO.php:title http://blogs.oracle.com/yappri/entry/create_solaris_package  インストール後のファイルを作成する 作業用ディレクトリに移動する。
$ cd /tmp/kk_Ataka 次にインストール後のファイル構成を作る。今回はこんなパッケージを作る。
/home/kk_Ataka/testpkg /home/kk_Ataka/testpkg/readme.txt 実際に作る。
$ mkdir /home/kk_Ataka/testpkg $ touch /home/kk_Ataka/testpkg/readme.txt あと、パッケージ名を考えておく。今回はTESTPKGでいいかな。
Prototypeファイルを作成する 以下のような内容のファイルを作成し保存する。名前は適当でよいので今回はtext.txtとした。これはまだPrototypeファイルではない。
/home/ /home/kk_Ataka/ /home/kk_Ataka/testpkg/ /home/kk_Ataka/testpkg/readme.txt 次に下記コマンドを実行する。
pkgproto &amp;lt; test.txt &amp;gt; Prototype 成功したら、カレントディレクトリにPrototypeというファイルが出来ている。中身はこんなもん。
d none /home 0755 root root d none /home/kk_Ataka 0755 kk_Ataka users d none /home/kk_Ataka/testpkg 0755 kk_Ataka users f none /home/kk_Ataka/testpkg/readme.txt 0644 kk_Ataka users 左がファイルのタイプ？(d:ディレクトリ、f:ファイル)　noneはなんだろう？作成するファイル、権限、ユーザ名、グループ名かな。
PrototypeファイルができたらPrototypeファイルの先頭に以下を追加する。
i pkginfo なのでこうなる。</description>
    </item>
    
    <item>
      <title>Redmineのプラグイン作成のための備忘録と、時々SQLite3</title>
      <link>/2011/09/07/1315401886/</link>
      <pubDate>Wed, 07 Sep 2011 00:00:00 +0000</pubDate>
      
      <guid>/2011/09/07/1315401886/</guid>
      <description>[Ruby][Redmine][SQLite3][Windows][備忘録]Redmineのプラグイン作成のための備忘録と、時々SQLite3 あらすじ 今あると幸せになれるもの
チケットのCSVエクスポート機能。ただし、履歴つきで。これがあるといわゆるバグとかPJ課題の管理がRedmineで一元化できExcelの呪縛から解き放てられる……
既に履歴つきCSVエクスポートプラグインは存在しているようです。http://d.hatena.ne.jp/suer/20101003/1286120294:title　ただ、履歴の出方が1履歴毎に列を更新なんですよね。。
No, ... ,履歴 1, ... ,#1の履歴,#2の履歴,#3の履歴 2, ... ,#1の履歴,#2の履歴 今自分が抱えている縛り的にはこう出てほしい。
No, ... ,履歴 1, ... ,&amp;#34;#1の履歴 #2の履歴, #3の履歴&amp;#34; 2, ... ,&amp;#34;#1の履歴, #2の履歴&amp;#34; 吐き出したときにチケット1つの履歴を1セルの中に収めたい。CSVに改行はどうなんだとか1セルに改行しまくるのはどうなんだとか色々ありますがそこは縛りなので。。。
だもんで、これを機会にRedmineのプラグインはどう作るのかを調べてみました。
参考サイト  http://www.r-labs.org/projects/r-labs/wiki/%E3%83%97%E3%83%A9%E3%82%B0%E3%82%A4%E3%83%B3%E9%96%8B%E7%99%BA%E3%82%AC%E3%82%A4%E3%83%89:title http://gihyo.jp/dev/serial/01/ruby/0038:title  環境  WindowsXP Redmine 1.0.0[1]  Ruby 1.8.7 Rails 2.3.5 Rack 1.0.1  SQLite3 バージョン失念  プラグインのスケルトン作成 まずはプラグインのスケルトンというものを作成する。テンプレートみたいなもの？　以下のコマンドで自動生成してくれます。[2]
&amp;gt;ruby script\generate redmine_plugin extendCsv するといきなりエラー。
!!! The bundled mysql.rb driver has been removed from Rails 2.</description>
    </item>
    
    <item>
      <title>vmstatとかiostatとかsarとかswapコマンドのメモ</title>
      <link>/2011/09/04/1315146050/</link>
      <pubDate>Sun, 04 Sep 2011 00:00:00 +0000</pubDate>
      
      <guid>/2011/09/04/1315146050/</guid>
      <description>[Solaris][備忘録]vmstatとかiostatとかsarとかswapコマンドのメモ すぐ忘れるのでメモ。あと略称とかも。
vmstat  表示  kthr memory page disk faults cpu r b w swap free re mf pi po fr de sr ** ** ** ** in sy cs us sy id  kthr: KernelTHRead  |*r|Run queue|待ち行列内のカーネルスレッド数(mpstatやprstatでも取得可能)|
|*b|?|I/Oで待たされているカーネルスレッド数|
|*w|?|スワップアウトされたカーネルスレッド数|
 memory  |*swap|-|現在利用可能なスワップ領域(ディスク上+メモリ上のスワップ領域)|
|*free|-|空きメモリ領域|
 page  |*re|pageREclaims|freeListに入れられた後、復帰したページ数|
|*mf|MinorFault|HAT faultとAddress Space faultを足した数|
|*pi|PageIn|ページインされたメモリサイズ(キロバイト)|
|*po|PageOut|ページアウトされたメモリサイズ(キロバイト)|
|*fr|FRee?|解放されたメモリサイズ(キロバイト)|
|*de|DEficit|次のプロセスで必要と予測しSolarisが確保する仮想メモリのバッファ|
|*sr|?|ページデーモンによってスキャンされたページ数(0以外だと実行されている)|
 disk  |*最高4台のデータを表示|読み書きした回数|
 fault  |*in|INterrupt|1秒あたりの割り込み(インタラプト)回数|
|*sy|SYstemcall|1秒あたりのシステムコース回数|</description>
    </item>
    
    <item>
      <title>MicrosoftOutlookで消せなくなったフォルダをwin32ole経由でRubyから消してみる</title>
      <link>/2011/08/23/1314103220/</link>
      <pubDate>Tue, 23 Aug 2011 00:00:00 +0000</pubDate>
      
      <guid>/2011/08/23/1314103220/</guid>
      <description>[Ruby][Windows]MicrosoftOutlookで消せなくなったフォルダをwin32ole経由でRubyから消してみる ※この操作をすると新しくフォルダを追加してもOutlookの画面から見れなくなるようです？win32ole経由だと見えるのになんで…。→Windows再起動したらなおりました。
あらすじ OutlookのRSSフィード内にどうやっても消えないフォルダが出来てしまい途方に暮れていた。
何がどうなってこうなのかは定かではないんですが、誤って「RSSフィードフォルダ」内にある「RSSフィード記事」に対して「RSSフィードフォルダ」自体をD&amp;amp;Dしてしまった時に生まれたフォルダだと思いまする。。
フィードをまるごと削除しようとしても「権限を見直してからまた挑戦してねてへぺろ(・ω＜)」[1]とか言って絶対消えてくれないのでOutlookフォルダとかレジストリとかいじらないと消滅させられないのかなーと悩んでいました。
……が、正直どこをどういじればいいかわからないので、最後にダメ元でwin32oleにお願いしてみた。
解法そして解放 これで消えた……。
require &amp;#39;win32ole&amp;#39; ol = WIN32OLE::connect(&amp;#34;Outlook.Application&amp;#34;) nameSpace = ol.getNameSpace(&amp;#34;MAPI&amp;#34;) # RSSFEEDは「RSS フィード」フォルダのEntryId nameSpace.getFolderFromID(RSSFEED).Folders.Remove(1) # puts nameSpace.getFolderFromID(RSSFEED).Name =&amp;gt; # RSS フィード Removeメソッドはインデックスを指定するとの事。
 |*メソッド・プロパティ|説明|
|*Add|指定した名前の Outlook フォルダを追加します。|
|*GetFirst|最初の Outlookフォルダを取得します。|
|*GetNext|次の Outlook フォルダを取得します。|
|*Item|あるインデックスの Outlook フォルダを取得します。|
|*Remove|あるインデックスの Outlook フォルダを削除します。|
http://jp.rubyist.net/magazine/?0007-Win32OLE:title
 また、インデックスは1から始まりフォルダビューの親フォルダ直下にあるフォルダを1とし2, 3&amp;hellip;と並んでいる様子。上記のソースでは「RSS フィード」フォルダ直下の(1番目の)フォルダを削除できた！
EntryIdを見つけるにはFoldersオブジェクトを回してEntryIdを調べる。これを繰り返せば深い階層までいける。
folders = nameSpace.Folders folders.each do |f| puts f.Name puts f.EntryId end ありがとうwin32ole…。
おまけ Windowsのirbにショートカットでペーストする方法をはじめて知ったのでメモ。[2]
 Shift + insert !</description>
    </item>
    
    <item>
      <title>Subversionのauto-props設定ではまった</title>
      <link>/2011/08/14/1313326346/</link>
      <pubDate>Sun, 14 Aug 2011 00:00:00 +0000</pubDate>
      
      <guid>/2011/08/14/1313326346/</guid>
      <description>[Subversion][備忘録]Subversionのauto-props設定ではまった SubversionでExcelファイルをコミットしようとするとエラーが発生。
ファイル &amp;#39;C:\～～～\なんとか管理表.xls&amp;#39; の MIMEタイプ属性はバイナリです んーなんでだっけー？.xlsファイルのmime-typeを指定してないからかなー？ という事でconfigファイルにmime-type指定。http://trac.symfony-project.org/wiki/SymfonyRepositoryTips:title ここを参考に。
*.xls = svn:mime-type=application/vnd.ms-excel しかしエラーは変わらず。なんでだー。というか今までは別にmime-type指定しなくてもいけてた気がするのに…と、ここまでやってconfigをよく見ると
*.xls = svn:mime-type=application/vnd.ms-excel * = svn:eol-style=native こうなってた。全部のファイルにeol-style=nativeしている！！[1]　とあるファイル種別以外、みたいな指定はできない？　っぽいので、横着せずに一拡張子毎に設定を書いてうまく行きました。
*.xls = svn:mime-type=application/vnd.ms-excel *.sh = svn:eol-style=native [1] 自分でやったんだけど</description>
    </item>
    
    <item>
      <title>BPStudy#47に参加しました</title>
      <link>/2011/08/01/1312213654/</link>
      <pubDate>Mon, 01 Aug 2011 00:00:00 +0000</pubDate>
      
      <guid>/2011/08/01/1312213654/</guid>
      <description>[Agile][イベント]BPStudy#47に参加しました 詳細: http://atnd.org/events/17717:title  サーバの調達が毎回めんどい上に自由に使えるマシンがないので、仮想で立てられるXenServer見てみたい アジャイルには縁のない、ウォーターフォール一直線の日々なのでことはじめ的な話を聞いてみたい  というわけで久しぶしにBPStudy参加。
XenServerによるお手軽開発用サーバ運用 @[http://twitter.com/tokibito:title=tokibito]さん Webシステムを作るに当たって  本番に近い環境、お客さんに見てもらう環境を作りたい Wikiや課題管理をしたい  という事で、開発用のサーバを立てたくなる時がよくあると。ただし…
 費用がかかりすぎては本末転倒なのでコストはかけない あれもこれも盛り込みすぎてもダメなので、今必要のないものはいらない  この2点を念頭に置いて立てる。
実際にサーバを立てる 色々な方法があるが…
 レンタル？(共用サーバ、専用サーバ、VPSなど) 自前？  プロジェクト毎に別の環境(OSなども)を作りたいので共用サーバでは設定的に難しい。1～3ヶ月が1プロジェクトの平均サイクルなので、データセンターなども難しい。じゃあ自前でやろう。
自前サーバに導入できるXenServerを選んだ。なぜXenServerなの？  対抗はVPS メモリ増やしたりとかはVPSより自前の方が融通がきく XenServerが無料になったので！  Xen  オープンソースのフリーウェア サーバの仮想化 ハードウェアの上で直接動作するOS Amazon EC2 とかでも使ってる  のっけ方 VM Xen ゲストOS VM OS OS OS ホストOS XenServer HW HW  Linux、Windowsを動かせる  インストール方法  iso落とす XenCenterを管理用端末にインストールする(XenCenterは残念ながらWindows専用) ライセンスファイルを取得し、XenCenter経由でライセンスファイルをインストールする  XenCenter特徴  GUI 複数管理も楽 スナップショットとって壊しても戻せる VM単位でバックアップが取れる まったく同じ構成の環境も簡単に作れる リソース割り当てもXenCenterから簡単に 別のホストにVMをまるごと移動できる  めんどい事  ネットワークの設定…IPを固定したりホスト名変えたり なのでスクリプト組んだ https://gist.</description>
    </item>
    
    <item>
      <title>MicrosoftOutlookのメールをRuby(win32ole)で操作する！ その2</title>
      <link>/2011/07/09/1310140318/</link>
      <pubDate>Sat, 09 Jul 2011 00:00:00 +0000</pubDate>
      
      <guid>/2011/07/09/1310140318/</guid>
      <description>[Windows][Ruby]MicrosoftOutlookのメールをRuby(win32ole)で操作する！ その2 前回までのあらすじ http://d.hatena.ne.jp/kk_Ataka/20110517/1305560776:title
あれから色々変えたので追記。前回のTODOは…
 フォルダ名先頭にYYYYMMDD フォルダ名に使用できない文字を全角に置換 フォルダ存在時の対処 デスクトップに保存したい  全部消化。とりあえずOutlook開いて添付ファイル付きのメールファイルをデスクトップに保存するだけの簡単なお仕事はできるようになりました！やった！
GitHub [https://github.com/gosyujin/outlook_for_ruby:title]
なにやってるかの流れ  まず初期化。  # MicrosoftOutlookに接続後初期化処理を行う。 # MicrosoftOutlookが起動していないと終了する。 def initialize begin ol = WIN32OLE::connect(&amp;#34;Outlook.Application&amp;#34;) rescue WIN32OLERuntimeError putsError(&amp;#34;MicrosoftOutlookが起動していません。&amp;#34;) exit else desktopJa = Kconv.tosjis(&amp;#34;デスクトップ&amp;#34;) # NameSpace取得(getNameSpaceの引数は&amp;#34;MAPI&amp;#34;のみ) @nameSpace = ol.getNameSpace(&amp;#34;MAPI&amp;#34;) # 保存パス指定 @saveRootPath = &amp;#34;#{ENV[&amp;#34;USERPROFILE&amp;#34;]}\\&amp;#34; + desktopJa + &amp;#34;\\&amp;#34; # 保存パスに作成するディレクトリ作成 @saveDir = &amp;#34;&amp;#34; # フォルダ選択番号、ハッシュ @folderNum = -1 @folder = Hash.new # メール選択番号、ハッシュ @mailNum = -1 @mail = Hash.</description>
    </item>
    
    <item>
      <title>PythonでCOBOLファイルの行頭に連番をふる</title>
      <link>/2011/06/26/1309044393/</link>
      <pubDate>Sun, 26 Jun 2011 00:00:00 +0000</pubDate>
      
      <guid>/2011/06/26/1309044393/</guid>
      <description>[Python]PythonでCOBOLファイルの行頭に連番をふる あらすじ 限られた環境の中でCOBOLを書かなくてはならかった。(FF2)
COBOL自体はviやらでゴリゴリ書いていけるんですが、ソース書いて間に挿入…を繰り返していると行頭の連番[1]にズレが生じていきます。幸いPythonは入っていたので書いてみました。Python初心者なので練習も兼ねる。
ソース  結果  このCOBOLファイルに  f:id:kk_Ataka:20110626081707j:image
 こうはさがってきた場合  f:id:kk_Ataka:20110626081706j:image
 こう置換できた！  f:id:kk_Ataka:20110626081705j:image
[1] 一連番号領域と呼ぶようです。</description>
    </item>
    
    <item>
      <title>MicrosoftOutlookのメールをRubyで操作する！</title>
      <link>/2011/05/17/1305560776/</link>
      <pubDate>Tue, 17 May 2011 00:00:00 +0000</pubDate>
      
      <guid>/2011/05/17/1305560776/</guid>
      <description>[Ruby][Windows]MicrosoftOutlookのメールをRubyで操作する！ あらすじ  職場のメールはMicrosoftOutlook…添付ファイルとかメール本文を手動で保存するだけの簡単なお仕事がめんどいのでマクロを作った ある日、なんか共通マクロを適用してくださいねとか通達がきたので適用した(今まで使っていた自分のマクロは退避した) 新マクロにはご丁寧にパスワードがかけられていた…編集不可／(^o^)＼ Outlookからマクロを実行するのは諦めて外部からメールを操作しよう…[1] Rubyでできないかな？　…win32oleというものがあるらしい！←今ここ  参考サイト  http://jp.rubyist.net/magazine/?0007-Win32OLE:title  ドンピシャでした。
やりたい事  メール本文を保存したい(ファイル名は件名.txt) 添付ファイルを保存したい(ファイル名は添付ファイル名のまま) 上記のファイルをYYYYMMDD_添付ファイル名(拡張子なし)フォルダの中へ格納 保存場所はマイドキュメントかデスクトップ  こんな感じ
[メール] 件名:subsubject 添付ファイル:tmptmpfile.zip ↓ダウンロード [マイドキュメント] └[YYYYMMDD_tmptmpfile] ├tmptmpfile.zip └subsubject.txt 手順 まずソースはこんな感じ。GitHubは [https://github.com/gosyujin/outlook_for_ruby:title]
# -*- encoding: UTF-8 -*- require &amp;#34;win32ole&amp;#34; # 保存ディレクトリ基準。一応マイドキュメントへ SaveRootPath = &amp;#34;#{ENV[&amp;#34;USERPROFILE&amp;#34;]}\\My Documents&amp;#34; class Outlook def initialize # Outlookに接続 ol = WIN32OLE::connect(&amp;#34;Outlook.Application&amp;#34;) # NameSpace取得(getNameSpaceの引数は&amp;#34;MAPI&amp;#34;のみ) @nameSpace = ol.getNameSpace(&amp;#34;MAPI&amp;#34;) end # EntryIDを元にメールを取得  def mail(entryId) item = @nameSpace.</description>
    </item>
    
    <item>
      <title>Redmineインストール備忘録(Windows)</title>
      <link>/2011/05/01/1304204171/</link>
      <pubDate>Sun, 01 May 2011 00:00:00 +0000</pubDate>
      
      <guid>/2011/05/01/1304204171/</guid>
      <description>[Ruby][Redmine][Windows][備忘録]Redmineインストール備忘録(Windows) 参考サイト  http://redmine.jp/tech_note/install/  OSとRubyとか  OSはWindows XP Ruby, RubyGemsインストール済み DBはSQLite3にする  必要なものをDL, インストール  GemでRailsをインストール  &amp;gt;gem install rails  同じくsqlite3をインストール  最新のsqlite3-ruby(1.2.4)ではなく、1.2.3を指定[1]   &amp;gt;gem install sqlite3-ruby --version &amp;#39;= 1.2.3&amp;#39;  http://www.sqlite.org/download.html:title でSQLite3のdllをDLしC:\WINDOWS\system32(パスが通ってるところ)にコピー  コマンドラインから動かす予定はないのでexeは落とさない    http://rubyforge.org/frs/?group_id=1850:title でRedmineをDLし解凍  各種設定  Redmineフォルダ内のconfig/database.ymlを作成し[2]、最低限下記のように編集  production: adapter: sqlite3 # SQLite3を指定 database: db/redmine.db # DB名は任意 timeout: 5000 # タイムアウト時間  config/initializers/session_store.rb作成  &amp;gt;rake generate_session_store  DBの初期化  &amp;gt;rake db:migrate RAILS_ENV=production &amp;gt;rake redmine:load_default_data RAILS_ENV=production  …が、ここでエラー  rackバージョンが1.</description>
    </item>
    
    <item>
      <title>さくらVPSにDropboxをインストールした</title>
      <link>/2011/04/23/1303489798/</link>
      <pubDate>Sat, 23 Apr 2011 00:00:00 +0000</pubDate>
      
      <guid>/2011/04/23/1303489798/</guid>
      <description>[Unix][備忘録][Dropbox][さくらVPS]さくらVPSにDropboxをインストールした ※インストール後、Enable LAN sync(LAN同期を有効にする)オプションをOFFにする必要がある http://d.hatena.ne.jp/kk_Ataka/20111008/1318068887:title
あらすじ  GUIがなくてもDropboxを使いたい！→CUI版のDropboxがあるらしい  参考サイト  http://wiki.dropbox.com/TipsAndTricks/TextBasedLinuxInstall http://www.hyk-home.com/blog/infra/archives/2009/05/05-202601-137.html:title  上記のサイトの情報だけで全部できました。以下自分用メモ。
OSとかPythonとか |*CentOS|5.5 x86_64|
|*Python|2.6.2|
 Pythonはデフォルトで2.4.3が入っているがこれじゃあ動かなかった。2.6が必須らしい。 http://www.python.org/ftp/python/:title 必要に応じてダウンロードしておく。  Dropboxを手に入れる～インストール  Step-by-stepversion の1.～7.まで順番に実行していく。 (2012/04/07追記)手順を一部修正  [https://www.dropbox.com/install?os=lnx:title]   $ cd ~ &amp;amp;&amp;amp; wget -O - &amp;#34;http://www.dropbox.com/download?plat=lnx.x86&amp;#34; | tar xzf -  - 1. ホームディレクトリに移動する。[1]  2. 32bit版Dropbox をダウンロードする。 3.～5. ダウンロードしたファイルを解凍する。解凍するとホームディレクトリに.dropbox-dist/が生成される。ドットファイルなので隠しファイル。[2] 6. .dropbox-dist/dropboxd を実行する。実行するとリンクしてください！　と言われる。他のPCから指定のアドレスへアクセスし、自分のDropboxアカウントでログインする。   [f:id:kk_Ataka:20110423012022j:image]
 - リンクすると、自動で同期が始まる。  確認  dropbox.py でステータスなどが確認できる。  $python dropbox.</description>
    </item>
    
    <item>
      <title>RubyではてなのWSSE認証をしてはてブにブクマをポストする</title>
      <link>/2011/03/08/1299588433/</link>
      <pubDate>Tue, 08 Mar 2011 00:00:00 +0000</pubDate>
      
      <guid>/2011/03/08/1299588433/</guid>
      <description>[Ruby][API]RubyではてなのWSSE認証をしてはてブにブクマをポストする ReadItLaterの続きをやろうと思ったのですが、GitHubにはてブスクリプトをコミットしたので先にまとめる。
結構前に作ったので、OAuthではなくWSSE認証を使っています。
手順  X-WSSEヘッダを作成する ブックマークするUrl・コメントを記述したxmlデータと、X-WSSEヘッダを含めたリクエストをhttp://b.hatena.ne.jp/atom/postへPOSTする  手順はこれだけ。次に詳細を…。
ヘッダを作成する 以下のデータを用意します
|*Username|はてなID|
|*Nonce|HTTPリクエスト毎に生成したセキュリティ・トークンをBASE64エンコードしたもの[1]|
|*Created|Nonce作成時のタイムスタンプをISO-8601表記で記述したもの|
|*PasswordDigest|「Nonce+Created+はてなのパスワード」をSHA1でダイジェスト化しBASE64エンコードしたもの|
これらのデータをX-WSSEヘッダに以下の形式で格納します。
UsernameToken Username=&amp;#34;USERNAME&amp;#34;, PasswordDigest=&amp;#34;PASSWORDDIGEST&amp;#34;, Nonce=&amp;#34;NONCE&amp;#34;, Created=&amp;#34;CREATED&amp;#34; POSTする ヘッダは完成したので、次にブックマークする情報を用意します。形式はxmlで以下のようなフォーマットで作成します。[2]
&amp;lt;entry xmlns=&amp;#34;http://purl.org/atom/ns#&amp;#34;&amp;gt; &amp;lt;title&amp;gt;dummy&amp;lt;/title&amp;gt; &amp;lt;link rel=&amp;#34;related&amp;#34; type=&amp;#34;text/html&amp;#34; href=&amp;#34;ブックマークするURL&amp;#34; /&amp;gt; &amp;lt;summary type=&amp;#34;text/plain&amp;#34;&amp;gt;ブックマークコメント&amp;lt;/summary&amp;gt; &amp;lt;/entry&amp;gt; 作成されたヘッダとデータはこんな感じになります。
[f:id:kk_Ataka:20110308213639j:image]
最後に作成したヘッダとブックマークデータをhttp://b.hatena.ne.jp/atom/postへポストすると。
[f:id:kk_Ataka:20110308213640j:image]
おお。
正常に作成された場合は、ステータスコードは201が返ってくるようです。
ソース Gistは直接貼れるけどGitHubは貼れないのね…。ここにあります。[https://github.com/gosyujin/hatena:title]
require &amp;#39;rubygems&amp;#39; require &amp;#39;pit&amp;#39; require &amp;#39;time&amp;#39; require &amp;#39;digest/sha1&amp;#39; require &amp;#39;net/http&amp;#39; require &amp;#39;uri&amp;#39; require &amp;#39;nkf&amp;#39; # wsse認証を行う def wsse(hatena_id, password) # 一意な値(仮実装) nonce = [Time.now.to_i.to_s].pack(&amp;#39;m&amp;#39;).gsub(/\n/, &amp;#39;&amp;#39;) # nonce作成時のタイムスタンプをISO-8601表記で記述したもの now = Time.</description>
    </item>
    
    <item>
      <title>Read it LaterをRubyで取得する</title>
      <link>/2011/03/02/1299062938/</link>
      <pubDate>Wed, 02 Mar 2011 00:00:00 +0000</pubDate>
      
      <guid>/2011/03/02/1299062938/</guid>
      <description>[Ruby][API]Read it LaterをRubyで取得する ブラウザからログインせずともRILを見たい！　追加したい！　ということで。
前準備  はじめにapikeyを取得するためにhttp://readitlaterlist.com/api/signup/にアクセスします。[1] 必須項目(AppNameとContact Email)を記入し、Generate API Keyします。 取得したapikeyを取っておきます。  [f:id:kk_Ataka:20110302190610p:image]
 APIの概要はhttp://readitlaterlist.com/api/docs/に載っているので、基本的にはこれを見ながらできる…はず。  記事をGetする 以下のパラメータを生成し、URLのおしりに?AAA=BBB&amp;amp;CCC=DDD&amp;hellip;形式でくっつけてhttps://readitlaterlist.com/v2/getに送ります。[2]パラメータは他にもあるけど、とりあえずこれだけあれば取得はできます。
|*apikey(必須)|今生成したapikey|
|*username(必須)|Read It Laterのアカウント|
|*password(必須)|パスワード|
|*format|レスポンスのフォーマット。jsonかxmlが選択できる。デフォルトはjson|
パスワードが丸見えなのでショルダーハックとかされるとアレですが…。
ソースコード ここまでをRubyで書いてみました。jsonの解析はTwitterから取得したツイートを解析したときと同じようにsimplejsonparserを使用させていただきました。
require &amp;#39;uri&amp;#39; require &amp;#39;net/http&amp;#39; # http://rubyforge.org/snippet/detail.php?type=snippet&amp;amp;id=148 require &amp;#39;simplejsonparser&amp;#39; require &amp;#39;pp&amp;#39; # RIL取得用のURL url = &amp;#34;https://readitlaterlist.com/v2/get&amp;#34; # アカウント名とパスワード username = &amp;#34;kk_Ataka&amp;#34; password = PASSWORD # apikey apikey = APIKEY # format json or xml format = &amp;#34;json&amp;#34; # パラメータ作成 param = &amp;#34;username=#{username}&amp;amp;password=#{password}&amp;amp;apikey=#{apikey}&amp;amp;format=#{format}&amp;#34; # GETする uri = URI.</description>
    </item>
    
    <item>
      <title>BPStudy#41に参加しました</title>
      <link>/2011/01/30/1296401919/</link>
      <pubDate>Sun, 30 Jan 2011 00:00:00 +0000</pubDate>
      
      <guid>/2011/01/30/1296401919/</guid>
      <description>[JavaScript][Git][イベント]BPStudy#41に参加しました  詳細: http://atnd.org/events/11755:title  ATNDなどでBPStudyの存在は知っていたのですが、今回初参加。
分散SCMを勉強しようと思って最近Gitを使いはじめたのですが、リアル周りに使っている人がいないので知識共有ができず……。他の人はどうやって使っているのかなーと思っているところに神速さんがGitの発表をすると聞いたので、自重せずに参加しました。
以下メモ。前半戦のjsも、聞けばわかるかなーとか思っていたら甘かった……jsは勉強不足でした。もう少し使えないと話にもついていけない……。
JavaScript @[http://twitter.com/monjudoh:title=monjudoh]さん  http://d.hatena.ne.jp/monjudoh/20110128/1296205331:title  RequireJS実践編  RequireJSって何？  jsの依存性解決をしてくれるライブラリ モジュール内で他のモジュールを再帰的に読み込みを行いたい場合…define関数を使用して読み込んでいく require関数を使うと逆に読み込んでいく    RequireJS読み込みの前にrequireなんたらという名前が付いているグローバル変数がある場合、設定ファイルとして使ってくれる   モジュールjsのあるディレクトリが深い場合呼び出しがめんどい  baseUrlを指定してjsがあるパスを基底のパスにすると楽になる    パスの上書きもできる  スタブモジュールと置き換える事もできる    キャッシュされた古いJavaScriptを読みこまないようにもできる  クエリパラメータにデプロイ日時を入れる   jQuery custom event 応用編  custom eventって何？  ブラウザがサポートしてないイベント[1]を定義する独自のイベント    普通のプログラムのような事もcustom eventでできる  関数呼び出し 引数付き呼び出し インスタンス変数へのアクセス クラス作成のような事 mixin callback mixout 同名のn(≧0)個の関数呼び出し   疎結合なUIコンポーネントの作成について  複数画面で使えるAjaxformダイアログのコンポーネントを作りたい  例えば、Googleカレンダーのように日付セルをクリックしたらスケジュール登録ダイアログが出るように    仕様変更  セルをクリックしたらアクティブ、アクティブをクリックしたらスケジュール登録ダイアログが出るように ダイアログを開く→custom eventにして「開く」と「ユーザアクションの検知」を別に    仕様変更  スケジュール一覧画面を作る、画面に新規追加ボタンもあり、カレンダーのセルをクリックしたときと同じダイアログをだす ユーザアクション検知のモジュールをカレンダー画面とスケジュール表示画面に分ける callback処理も分ける    本体の再利用性も高いし、挿し込むパーツも機能が明確なので再利用性が高くなる  マスタリング非同期読み込み @[http://twitter.</description>
    </item>
    
    <item>
      <title>RubyでFizzBuzzみじかいのに挑戦した</title>
      <link>/2011/01/25/1295956879/</link>
      <pubDate>Tue, 25 Jan 2011 00:00:00 +0000</pubDate>
      
      <guid>/2011/01/25/1295956879/</guid>
      <description>[Ruby]RubyでFizzBuzzみじかいのに挑戦した  参考: http://togetter.com/li/92612:title  FizzBuzz自体は組んだことあるけど、短いのは考えたことがなかったのでこれを機会に挑戦。
一つ目 101.times{|i|p(i%15==0?&amp;#39;FizzBuzz&amp;#39;:i%3==0?&amp;#39;Fizz&amp;#39;:i%5==0?&amp;#39;Buzz&amp;#39;:i)}101.times{ |i| p ( i % 15  == 0 ? &amp;#39;FizzBuzz&amp;#39; : i % 3  == 0 ? &amp;#39;Fizz&amp;#39; : i % 5  == 0 ? &amp;#39;Buzz&amp;#39; : i ) }  do～endが文字数消費するので{}を使った if～elseが文字数消費するので三項演算子を使った アウトプットをpにして文字数を稼いだ  三項演算子の入れ子なんて初めて使ったからどうインデントしたら綺麗に見えるのかもわからん！　しかもこれで66byte…某Y!社に入れないなぁ。
また、どうもFizzBuzzって1から100でやるらしく、上記のソースだと0から100まで実行してしまうので他の部分も含めてちょっと考え直し……。
二つ目 (1..100).each{|i|p(i%15&amp;gt;0?i%5&amp;gt;0?i%3&amp;gt;0?i:&amp;#39;Fizz&amp;#39;:&amp;#39;Buzz&amp;#39;:&amp;#39;FizzBuzz&amp;#39;)}(1..100).each{ |i| p ( i % 15  &amp;gt; 0 ? i % 5  &amp;gt; 0 ? i % 3  &amp;gt; 0 ?</description>
    </item>
    
    <item>
      <title>MacBook Air 11インチ欲しい！</title>
      <link>/2011/01/23/1295789120/</link>
      <pubDate>Sun, 23 Jan 2011 00:00:00 +0000</pubDate>
      
      <guid>/2011/01/23/1295789120/</guid>
      <description>[イベント]MacBook Air 11インチ欲しい！ [[MacBook Air 11インチ欲しい！]]
[1] 実際はインデントとかなし。</description>
    </item>
    
    <item>
      <title>RubyでTwitterにツイートをキメてみる</title>
      <link>/2011/01/23/1295789180/</link>
      <pubDate>Sun, 23 Jan 2011 00:00:00 +0000</pubDate>
      
      <guid>/2011/01/23/1295789180/</guid>
      <description>[Ruby][Twitter][API]RubyでTwitterにツイートをキメてみる 前回までのあらすじ  http://d.hatena.ne.jp/kk_Ataka/20101121/1290271210:title http://d.hatena.ne.jp/kk_Ataka/20101130/1291125511:title http://d.hatena.ne.jp/kk_Ataka/20101207/1291733295:title  ターミナルからOAuth認証をキメて、タイムラインを見られるようになりました。最後にターミナルからツイートが出来れば一応Twitterの見る・書くがライブラリ無しでできたことになります。
ツイートする方法  signatureを作成する。必要な値は以下のとおり。  oauth_consumer_key oauth_nonce oauth_signature oauth_signature_method oauth_timestamp oauth_token oauth_version status New!   statusっていうのがツイートの本文ですね。signature作成するのにエスケープします。作成後のheaderはこんな感じ。[1]statusには「確認確認」って入ってます。
{ &amp;#34;oauth_nonce&amp;#34;=&amp;gt;&amp;#34;3c8293f9c5a0295148d428a26edb9f46&amp;#34;, &amp;#34;oauth_timestamp&amp;#34;=&amp;gt;&amp;#34;1295784908&amp;#34;, &amp;#34;oauth_signature_method&amp;#34;=&amp;gt;&amp;#34;HMAC-SHA1&amp;#34;, &amp;#34;oauth_consumer_key&amp;#34;=&amp;gt;&amp;#34;XXXXXXXXXXXXXXXXXXXXXX&amp;#34;, &amp;#34;oauth_token&amp;#34;=&amp;gt;&amp;#34;99999999-YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY&amp;#34;, &amp;#34;oauth_signature&amp;#34;=&amp;gt;&amp;#34;UKt1BmJ+UWNWrSmBuAyJ40iiCNY=&amp;#34;, &amp;#34;status&amp;#34;=&amp;gt;&amp;#34;%E7%A2%BA%E8%AA%8D%E7%A2%BA%E8%AA%8D&amp;#34;, &amp;#34;oauth_version&amp;#34;=&amp;gt;&amp;#34;1.0&amp;#34; } signature作成後  signatureを作成したら、headerからstatusを消します 残ったheaderをアルファベット順に並べ、xxx=yyy,vvv=zzz……の形で連結します。連結後はこんな感じ  oauth_consumer_key=XXXXXXXXXXXXXXXXXXXXXX,oauth_nonce=341d852d61cdc3c22e3e847b0ab69d20,oauth_signature=MR5WEJ1qHuE49ozgRYduNJ%2BBiCs%3D,oauth_signature_method=HMAC-SHA1,oauth_timestamp=1295785315,oauth_token=99999999-YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY,oauth_version=1.0  連結した上記の値をAuthorizationヘッダに入れる。入れた後はこんな感じ。  &amp;#34;Authorization&amp;#34;=&amp;gt;&amp;#34;OAuth oauth_consumer_key=XXXXXXXXXXXXXXXXXXXXXX,oauth_nonce=341d852d61cdc3c22e3e847b0ab69d20,oauth_signature=MR5WEJ1qHuE49ozgRYduNJ%2BBiCs%3D,oauth_signature_method=HMAC-SHA1,oauth_timestamp=1295785315,oauth_token=99999999-YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY,oauth_version=1.0&amp;#34;  Authorizationヘッダを作成したらhttp://api.twitter.com/1/statuses/home_timeline.jsonへPOST。また、ツイート本文を「status=本文」の形でくっつける  結果 以上で、Twitterにツイートが完了しました！　おっぱいきたーー
[f:id:kk_Ataka:20110123215838j:image]
ソース ソースはこんな感じです。
# -*- encoding: UTF-8 -*- require &amp;#39;openssl&amp;#39; require &amp;#39;uri&amp;#39; require &amp;#39;net/http&amp;#39; require &amp;#39;nkf&amp;#39; require &amp;#39;time&amp;#39; # 署名 def sigunature(method, consumer_secret, oauth_token_secret, url, oauth_header=nil) # sigunature_keyの作成 # リクエストトークン時は&amp;#34;CONSUMER_SECRET&amp;amp;&amp;#34;(アンドが入っている) # アクセストークン時は&amp;#34;CONSUMER_SECRET&amp;amp;OAUTH_TOKEN_SECRET&amp;#34;として使用 sigunature_key = consumer_secret + &amp;#34;&amp;amp;&amp;#34; if !</description>
    </item>
    
    <item>
      <title>Wicket勉強会に参加しました</title>
      <link>/2011/01/12/1294833920/</link>
      <pubDate>Wed, 12 Jan 2011 00:00:00 +0000</pubDate>
      
      <guid>/2011/01/12/1294833920/</guid>
      <description>[Java][Wicket][イベント]Wicket勉強会に参加しました  詳細: http://atnd.org/events/11066:title  TwitterのTL取得ページを自分用に作った程度ですが、二年連続二回目の出席をキメました。バージョン1.3メインで使っていた(いる？)人なので、もう1.5が出るのかーっといったところです。
1.5になると矢野さんのWicket本の1/3が意味なくなるらしい…。
Wicket1.5の新機能 @[http://twitter.com/t_yano:title=t_yano]さん  WebRequestCycleが消えた steps(), step()も消えた  RequestTargetという概念が消えた→IRequestHandlerで代替  UrlCodingStrategy→IRequestMappterで代替 リクエストのサイクル  IRequestHandler ↑　↓ -------------------- IRequestMapper -------------------- ↑　↓ Request Url  RequestHandlerを使えればWicketの世界に入っていける RequestHandlerStack: リクエスト処理の中心でRequestHandlerをスタックとして扱う  Urlマウント  mountBookmarkablePageが消え、代わりにmountPageになった。 ${}で変数をUrlに埋め込めるようになった  /mountpath/${year}/ StringValue year = parameter.get(&amp;#34;year&amp;#34;)  - 現状はページのみ。リソースの場合はインデックスで取れる  /user/t_yano/image/ parameter.get(0) //user parameter.get(1) //t_yano コンポーネントの初期化と設定  コンストラクタ？onBeforeRender？  onInitialize()が追加された  自身がページにadd済みである事を保証。ただし一度しか呼ばれない isVisibleがfalseだったりすると呼ばれない  onConfigure()  レンダリング前にかならず呼ばれる事を保証 全コンポーネントが揃っている事が保証できるタイミング isVisibleがfalseでも呼ばれる   ButtonとかLinkとかPanelに書くもので、Pageに書くものではない  コンポーネントの独立性  密結合  ボタンを押すとあるコンポーネントが消えるという場合…  ボタンと消すコンポーネントを連携させないといけなかった     IEventSink: イベントを受け取るオブジェクト IEventSource: イベントを送信できるオブジェクト  あらゆるコンポーネントはIEventSinkかつIEventSource    Page#sendで送れる範囲  BREADTH: 子に広げる WIDTH: 子から自分まで上がる BUBBLE: 自分から親に上がる  BREADTHしか使わないんじゃないか？    ◯　◯　◯　◯ ↓イベント　↑　↑　↑ フ　レ　ー　ム　ワ　ー　ク  他のコンポーネントを意識しなくてもよくなった！ 今後はページからではなくコンポーネントから考えよう   ajaxコンポーネントを更新するaddComponent()メソッドはadd()になった  最終的な表示処理は誰のもの？ @[http://twitter.</description>
    </item>
    
    <item>
      <title>pixiv Tech Meetingに行ってきました</title>
      <link>/2010/12/21/1292940870/</link>
      <pubDate>Tue, 21 Dec 2010 00:00:00 +0000</pubDate>
      
      <guid>/2010/12/21/1292940870/</guid>
      <description>[イベント]pixiv Tech Meetingに行ってきました  詳細: http://atnd.org/events/10866:title  日頃からプレミアム会員として利用させていただいているシステムの裏側が見れる！　という事で、ATND見てから参加余裕でした。今回はなんとか時間通りに辿りつけました。一瞬GoogleMap先生が変な場所指すので迷子になったけど。
内容としては、次々にアップされる画像ファイルの捌き方や一番いいインフラの運用法、画面はjsを使用しているって事で、普段自分が触った事のない分野の話が大半。リファクタリング話やiPhoneSafariでのjsゲーム作成など、自分が普段使っている分野から近い話は頭に入ってきやすかったのですが、インフラの話などはわからない用語が出たら適宜ググってました；
以下メモ。
VPとSPIDERを使ったMySQL運用 @kamipoさん - http://www.slideshare.net/kamipo/vpspidermysql:title  VP+SPIDERでホスト間テーブル移動をやる  VPはカラムごとにテーブルを垂直分割 SPIDERはテーブルを複数ホストに水平分割   VP  vp_copy_tables()でaにあるテーブルの値をbにコピー出来る vp_copy_tables()はPRIMARY_KEYがないと使えない  注意  COMMENTは60文字までしか書けない -&amp;gt; MySQL5.5なら大丈夫！ MySQL5.0だと色々なクエリでエラーが起こるので、できるだけ最新版を使おう  質問  エクストラバックアップの方が早くね？  用途が違う。これは止めずに移動できるのがいい   pixiv.js -4年目のサービスをきれいにしよう @[http://twitter.com/#!/yksk:title=yksk]さん  15億PV/月達成！　ソースを綺麗に  現在は、Prototype.js + jQueryで走っている  最終的にはjQueryに統一したい！ $.noConflict(jQuery)を使えば、衝突することなくjQueryで行ける！   この関数を実行すると、$関数の動作が先に定義されている動作に戻る。
$関数はprototype.jsなどをはじめ、多くのライブラリがそれぞれ拡張している関数である。
jQueryでも、核となるjQueryオブジェクトのショートカットして極めて頻繁に利用される。
このコマンドは、そのような$関数を定義する複数のライブラリを用いた際に衝突することを防ぐものである。
http://semooh.jp/jquery/api/core/jQuery.noConflict/_/
 名前空間をひとつに統一する  windows.pixiv.*に統一すればかぶる可能性は無くなる  html5を使う  記述がちょっと減る scriptタグとか簡略化できる プレースホルダーなどのUIの新機能が使える data-*属性は要素に好きな名前をつけられるようになった  1ページ1ファイル、ページごとに読むjsを変更するのが大変  URLディスパッチャーで振り分ける  LABjs  非同期でスクリプトを読み込める、順番を指定できる 他のファイルの読み込みをブロックしない Twitterでも使われている 実は、Loadの仕組みは標準化されていないので、ブラウザが新しくなるたびチェックする必要がある  将来的にはscript async/deferに移行するかも   QUnit  ブラウザを開けばテストできる、簡単！  まとめ  コアライブラリが2つあるのはまずいので1つに URLディスパッチャーとLABjsで高速化、ソースも綺麗 QUnitでテスト！  エログロOK!</description>
    </item>
    
    <item>
      <title>java-ja忘年会に参加しました2010</title>
      <link>/2010/12/11/1292077752/</link>
      <pubDate>Sat, 11 Dec 2010 00:00:00 +0000</pubDate>
      
      <guid>/2010/12/11/1292077752/</guid>
      <description>[java-ja][イベント]java-ja忘年会に参加しました2010 今年は渋谷。 定時までに終わるかなーと思っていたミーティングがまさかの2時間オーバー。そして人身事故によるりんかい線のダイヤ乱れ。北海道に着いたのは20:45くらいでした……。Tweetviteでは出席になっていたのに、会費は集計して足りなかったらでいいよ！　と言ってくれた名幹事やましろさん++　いつも取りまとめありがとうございます。
二次会は部隊編成 そして場所を変えて二次会。ハンター組とハンターじゃない組に別れて二次会が開催されました。僕はハンターじゃない組。二次会では主に食べてました。　＠[http://twitter.com/Ewigkeit:title=Ewigkeit]さんにいっぱいサービスしてもらった＞＜
飯以外では、＠Ewigkeitさん、@[http://twitter.com/leather_sole:title=leather_sole]さん、@[http://twitter.com/kamekoopa:title=kamekoopa]さんとPHPの話、タバコの話[1]、staticおじさんや相互フォロー推進委員会suspendされた話で盛り上がりました。社内でstaticおじさんとか相互フォロー推進委員会なんて単語出した事ないなー[2]とか思いつつ……やっぱjava-jaいいわー。
イベントに出ると、会った人の顔とTwitter idとTwitterアイコンを一致させるのが難しいですよねーという話も。「あれ？　この人会ったことある……idなんだっけ？」「idはタイムラインで見たことあるなぁ……」等々……。難しいですよね……。
終わりに 何とか滑り込みで2年連続2回目の出場をキメる事ができました…。来年も参加するぞ！　いや、その前に時間通りにイベントに参加できるようにだな…。
一次会幹事の@[http://twitter.com/yamashiro:title=yamashiro]さん、ハンターじゃない方の二次会を取りまとめてくださった@[http://twitter.com/meso:title=meso]さん、java-jaの皆様お疲れさまでした！
[1] 途中でタバコの試供品を配るお姉ちゃんがきてたからだと思う……。
[2] おれは会社でなんの話をしているんだろう？</description>
    </item>
    
    <item>
      <title>RubyでTwitterのタイムラインを取得してみる</title>
      <link>/2010/12/07/1291733295/</link>
      <pubDate>Tue, 07 Dec 2010 00:00:00 +0000</pubDate>
      
      <guid>/2010/12/07/1291733295/</guid>
      <description>[Ruby][Twitter][API]RubyでTwitterのタイムラインを取得してみる 前回までのあらすじ  http://d.hatena.ne.jp/kk_Ataka/20101121/1290271210:title http://d.hatena.ne.jp/kk_Ataka/20101130/1291125511:title  前回までで、なんとかOAuth認証を突破する事ができました。目標は達成できたっちゃあできたんですが……せっかくなので、取得したアクセストークンを使ってTwitterからタイムラインを取得してみます！
タイムラインの取得方法  signatureを作成する 以下のパラメータをアルファベット順にxxx=yyy&amp;amp;vvv=zzz……の形で連結した値を[http://api.twitter.com/1/statuses/home_timeline.json]のおしりにくっつけてGET or POST  oauth_consumer_key oauth_nonce oauth_signature oauth_signature_method oauth_timestamp oauth_token oauth_version   取得はこれで完了。
signatureの作成方法は今までと同じで、
 認証用の値を生成する(以下の3つの値を&amp;amp;で連結する)  &amp;ldquo;GET&amp;rdquo; &amp;ldquo;http://api.twitter.com/1/statuses/home_timeline.json&amp;ldquo;をエスケープしたもの oauth_signature以外のパラメータ[1]をアルファベット順に並べてxxx=yyy&amp;amp;vvv=zzz……の形で連結した値をエスケープしたもの  署名キーを生成する  &amp;ldquo;consumer_secret&amp;amp;oauth_token_secret&amp;rdquo;  キーを元に値をHMAC-SHA1方式で暗号化した値をbase64形式でエンコードする  です。OAuth認証して獲得したアクセストークン、oauth_tokenとoauth_token_secretを随所で使います。そして作成したsignatureと他のパラメータを[http://api.twitter.com/1/statuses/home_timeline.json]のおしりにくっつけて(今回は)GETリクエスト。
戻ってきたタイムライン タイムラインらしきものはjsonという形式のデータで戻って来ます。home_timeline.jsonのjson部分をxmlとかrssに変えるとxml形式のタイムライン、rss形式のタイムラインが返ってくるようですが今回はこのjsonを何とかしてみます。
jsonの詳細は後にググるとして、一人当たりの情報はこんな感じ。[2]
.......},{ \&amp;#34;coordinates\&amp;#34;:null, \&amp;#34;created_at\&amp;#34;:\&amp;#34;Tue Dec 07 13:50:49 +0000 2010\&amp;#34;, . (略) . \&amp;#34;in_reply_to_screen_name\&amp;#34;:null, \&amp;#34;in_reply_to_status_id_str\&amp;#34;:null, \&amp;#34;id_str\&amp;#34;:\&amp;#34;99999999999999999\&amp;#34;, \&amp;#34;contributors\&amp;#34;:null, \&amp;#34;retweet_count\&amp;#34;:null, \&amp;#34;in_reply_to_user_id\&amp;#34;:null, \&amp;#34;in_reply_to_user_id_str\&amp;#34;:null, \&amp;#34;user\&amp;#34;:{ . (略) . \&amp;#34;screen_name\&amp;#34;:\&amp;#34;kk_Ataka\&amp;#34;, \&amp;#34;profile_sidebar_border_color\&amp;#34;:\&amp;#34;C0DEED\&amp;#34;, \&amp;#34;follow_request_sent\&amp;#34;:false, \&amp;#34;location\&amp;#34;:\&amp;#34;Kawasaki, Kanagawa, Japan\&amp;#34;, .</description>
    </item>
    
    <item>
      <title>RubyでTwitterのOAuth認証をしてみる その2</title>
      <link>/2010/11/30/1291125511/</link>
      <pubDate>Tue, 30 Nov 2010 00:00:00 +0000</pubDate>
      
      <guid>/2010/11/30/1291125511/</guid>
      <description>[Ruby][Twitter][API]RubyでTwitterのOAuth認証をしてみる その2 前回のエントリ では、リクエストトークンまで発行してもらえました。だもんで今回は前回に続いてアクセストークンを発行してもらいます。アクセストークン発行の流れとしては、
 今もらったリクエストトークンを付加して http://twitter.com/oauth/authorize へアクセスする 画面に表示されるPINコード(oauth_verifier)を控える リクエストトークンとPINコードをを付加して http://twitter.com/oauth/access_token へアクセスする  行きます。
PINコードを発行してもらう リクエストトークンを発行してもらうと、
oauth_token=XXXXXXXXXX&amp;amp;oauth_token_secret=YYYYYYYYYYYYYYYYYYYYYYYYYYYY&amp;amp;oauth_callback_confirmed=true という文字列がbodyに埋まってきたはず。[1]
この中から oauth_tokenを抜き出し、 http://twitter.com/oauth/authorize にパラメータとしてくっつけます。こんな感じ。
http://twitter.com/oauth/authorize?oauth_token=XXXXXXXXXX
アドレスが正しければ、以下のような画面が出るはず。[2]アプリケーションからのアクセスを許可しますか？　と尋ねられるので許可するを選択。
[f:id:kk_Ataka:20101130220734j:image]
許可すると、PINコードが画面に表示されるのでこれを控えておく。
[f:id:kk_Ataka:20101130220731j:image]
再度signatureを作成する このPINコードを&amp;rdquo;oauth_verify&amp;rdquo;として。先ほどURLに貼っつけたoauth_tokenを&amp;rdquo;oauth_token&amp;rdquo;としてパラメータとして持たせます。
そして、ここでもう一度signatureを作成を作成します。注意点としては、
 今まで使っていたoauth_signatureは一旦消して、以下のパラメータで新たにつくり直す  oauth_consumer_key oauth_nonce oauth_signature_method oauth_timestamp oauth_version oauth_token New! oauth_verifier New!  URLは&amp;rdquo;http://twitter.com/oauth/access_token&amp;rdquo;をエスケープしたもの 暗号化用のキーは&amp;rdquo;consumer_secret&amp;amp;oauth_token_secret&amp;rdquo;[3]  この3点でしょうか。
signatureが作成できたら、前回と同様にアルファベット順に並べて連結し、URLのおしりにくっつけます。URLはこんな感じになります。
[f:id:kk_Ataka:20101130223243j:image]
成功したら、oauth_token, oauth_token_secret, user_id, screen_nameが返ってきます。これ俺や！！
[f:id:kk_Ataka:20101130220728j:image]
ここで返してもらったoauth_tokenとoauth_token_secretは本物なので大切にとっておく！　というわけで、次は自分のTimelineを取得します！
ソースはこんな感じ。
require &amp;#39;openssl&amp;#39; require &amp;#39;uri&amp;#39; require &amp;#39;net/http&amp;#39; # signature作成 def signature(method, consumer_secret, oauth_token_secret, url, oauth_header) # signature_keyの作成 # リクエストトークン時は&amp;#34;CONSUMER_SECRET&amp;amp;&amp;#34;(アンドが入っている) # アクセストークン時は&amp;#34;CONSUMER_SECRET&amp;amp;OAUTH_TOKEN_SECRET&amp;#34;として使用 signature_key = consumer_secret + &amp;#34;&amp;amp;&amp;#34; if !</description>
    </item>
    
    <item>
      <title>RubyでTwitterのOAuth認証をしてみる</title>
      <link>/2010/11/21/1290271210/</link>
      <pubDate>Sun, 21 Nov 2010 00:00:00 +0000</pubDate>
      
      <guid>/2010/11/21/1290271210/</guid>
      <description>[Ruby][Twitter][API]RubyでTwitterのOAuth認証をしてみる 随分前にTwitterがベーシック認証からOAuth認証に切り替えたという事で。Java+Wicket+AppEngineでベーシック認証を駆使して作っていたTwitterサイトが見れなくなったもんで切り替えました。(http://gihyo.jp/dev/feature/01/wicket:title を見つつ)
一応出来たんですが、結局のところOAuthがどうなってるのかよくわからなかった……ので、ちょっと一から書いてみようと。
id:Yoshiori さんのhttp://d.hatena.ne.jp/Yoshiori/20100929/1285727199:title と、 id:yuroyoro さんの[http://d.hatena.ne.jp/yuroyoro/20100506/1273137673:title]がとっても詳しかったので、参考にしました。
大きな流れとしては、
 consumer_keyとconsumer_secretを発行してもらう リクエストトークンを発行してもらう アクセストークンを発行してもらう  の3項目。今回はリクエストトークンを発行してもらうところまでやります。
準備 Twitterにアプリを登録し、consumer_keyとconsumer_secretを発行してもらう  Twitterにログイン &amp;gt; 設定 &amp;gt; 連携アプリ を選択  [f:id:kk_Ataka:20101120225746p:image]
 開発者の方へ &amp;gt; こちら を選択  [f:id:kk_Ataka:20101120230042p:image]
 ページ下部の新しいアプリケーションを追加 を選択  [f:id:kk_Ataka:20101120230314p:image]
後で編集もできるのでとりあえず入力しておく。下記の2項目はとりあえず
 - アプリケーションの種類: クライアントアプリケーション  標準のアクセスタイプ: Read &amp;amp; Write   にしておく。
 登録したら、consumer_keyとconsumer_secretをもらえるので控えておく  [f:id:kk_Ataka:20101120232314p:image]
フォローをリクエストしました。のURL、Access token URL、Authorize URLは認証時に使うのでこれも控えておく。
リクエストトークンを発行してもらう こっからRuby。以下のパラメータを生成してhttp://twitter.com/oauth/request_tokenに送ります。POSTでもGETでもよいみたいなので、今回はGETを使ってURLのおしりにくっつけて送ります。
|*oauth_consumer_key|Twitterからもらったconsumer_key|
|*oauth_nonce|一意な値(にする必要があるが、とりあえず適当でもよいみたい)|
|*oauth_signature|認証するための暗号|
|*oauth_signature_method|認証方式(色々あるようだが、Twitterでは&amp;rdquo;HMAC-SHA1&amp;rdquo;固定)|
|*oauth_timestamp|今のタイムスタンプ(ミリ秒)|
|*oauth_version|バージョン(必須ではないが、付ける場合は&amp;rdquo;1.0&amp;rdquo;)|
consumer_key, nonce, signature_method, timestamp, versionの生成は難しくないのですが、問題はsignature。signature生成は大きく3つの流れを踏む事になります。</description>
    </item>
    
    <item>
      <title>Hudson勉強会に行ってきました</title>
      <link>/2010/11/13/1289639385/</link>
      <pubDate>Sat, 13 Nov 2010 00:00:00 +0000</pubDate>
      
      <guid>/2010/11/13/1289639385/</guid>
      <description>[イベント]Hudson勉強会に行ってきました Hudson勉強会に行ってきました。名前は聞いたことがありますが、今まで使ってなかったのできっかけになればと思って。
参考:http://wiki.hudson-ci.org/pages/viewpage.action?pageId=46336352:title
Hudson初心者向けデモ @[http://twitter.com/cactusman:title=cactusman]さん
Hudsonって何ができるの  スケジューリング SCMからチェックアウト ビルドスクリプトの実行、結果のまとめ、通知  などできる！
起動・操作  起動は超簡単 「java -jar hudson.war」で一発 &amp;gt; 導入する敷居がグッとさげられる！？　ほぼGUIから操作できるのも便利！ Javaのパスなどを入力し、ビルドを実行するだけ スケジューリングはcronと同じように設定できる &amp;gt; 毎分実行されるなど  Hudsonプロジェクトの現状と将来 @[http://twitter.com/kohsukekawa:title=kohsukekawa]さん
 rpm/debもあるよ インストール後の設定はGUI &amp;gt; 便利！  Hudsonをおすすめできる理由  拡張性の高さ！ = Eclipse使われているのと同じ理由 Java以外の多言語でも利用されてる &amp;gt; Python, Rubyも 他の競合ツールに比べて利用者が増加し続けている  日本Hudsonユーザ会発足！  http://build-shokunin.org メーリスもあるよ 定期的に勉強会するよ  今後の展望  面白い拡張ポイントの実装 &amp;gt; プラグインの作者が面白いように プラグインも拡張ポイントを実装すべき！ &amp;gt; 現状メッセンジャープラグインがたくさん &amp;gt; しかし、プラグインごとに実装はバラバラ… &amp;gt; メッセンジャー共通部分を作るとか！ 分散ユニットテストなど計算機資源を豪勢に使う ビルド環境を柔軟に JRuby, Jythonなどでプラグイン開発ができるように  などなど……</description>
    </item>
    
    <item>
      <title>JVM勉強会に行ってきました</title>
      <link>/2010/08/11/1281453866/</link>
      <pubDate>Wed, 11 Aug 2010 00:00:00 +0000</pubDate>
      
      <guid>/2010/08/11/1281453866/</guid>
      <description>[Java][イベント]JVM勉強会に行ってきました ふむ、jojo勉強会以来…？　あれ、java-ja温泉の事って書いてなかったっけか。書いてなかったのか……。
というわけで行ってまいりましたJVM勉強会。
VMの中の人まで意識した設計をしたことがなく、ClassLoaderをサンプルでちょこちょこって動かした程度のレベルですが。
参考資料 とりあえず、会場で持ってる人が割といた、もしくは発表内で話題にあがった本など。
 Java仮想マシン仕様 ガベージコレクションのアルゴリズムと実装 デコンパイリングJava  この辺りを読んでくると、より内容を楽しめた模様。
本編  @ashigeruさん クラスローダについて  クラスローダはfindClass()をオーバライドする loadClass()を実行すると委譲先クラスを探しにいく。親から見ていって、なかったら自分でロード  親から見ていくので、親が古いライブラリを持っているとそれをロードしてしまう！  某アプリケーションサーバは親を最後に検索する = PARENT_LAST  その名のとおり自分のクラスローダを最初に検索するので、親のライブラリの影響を受けにくい  同じ名前のクラスでも定義ローダーが違えば別のもの。Class.getClassLoader()でどこから呼ばれたか確認できる。 PARENT_LASTの問題点としてドッペルゲンガーという現象。などなど……    @skrbさん Stack on JavaVM  JVMとスタックについて スタックを使用した逆ポーランド法のアニメーション（わかりやすい！） JVMはスタック スタックはThreadひとつにつきひとつ  中にはプログラムカウンタがひとつ フレームの中にはローカル変数とオペランドスタック  JVMの中ではBooleanはIntとして扱われている インスタンスはヒープにアロケーションされる スタックは二段構え（JavaStackとオペランドスタック）    @kmizuさん わかる！Javaバイトコード－30分でわからない？Javaバイトコード入門  Hello Worldの逆アセンブル byte,short,char,boolean -&amp;gt; すべてintとして扱われる ロード/ストア命令…定数をオペランドスタックにロードする命令 ロード/ストア命令2…ローカル変数の値をオペランドスタックにロードする命令 型変換命令…キャストなどint -&amp;gt;longなど 配列関係の命令 オブジェクトの生成・操作命令 モニタ命令 クラスファイルベリファイア  classファイルのフォーマットがJava仮想マシン仕様に従っているかどうかを該当クラスの初期化より前にチェックする。未初期化ローカル変数へのアクセス、型エラー、jasmin……この辺よくわかりませんした＞＜     @cactusmanさん GCについて  GC  ルートを起点として参照できるオブジェクトは生きている ルートに到達できないものがGCされる  GCを学ぶ意義としてメモリ領域の効率的な使い方を意識できる マーク＆スイープ  ルートオブジェクトからたどれるオブジェクトをマークしていく マークのないオブジェクトを回収 メリット：実装は簡単 デメリット：フラグメンテーション、アロケーション速度、停止時間が長い→マークしている期間  参照カウント  自信のオブジェクトが参照されているオブジェクトをカウント 0になった時点でGC メリット：参照が停止されたタイミングで開放、停止時間が短い、参照をたどる必要がない デメリット：循環参照を回収できない、カウンターの値の増減処理が重い、実装が難しい  コピー  メリット：スループットがいい、メモリ回収と同時にコンパクションを行える(フラグメンテーションが起きない) デメリット：ヒープ領域を余分に取る  GCの種類 ScavengeGC - コピーGC    @nekopさん クラスローダリークパターン なにそれおいしいの？  ThreadLocalで設定した値はThreadから強参照される java.</description>
    </item>
    
    <item>
      <title>java-ja勉強会に参加しました</title>
      <link>/2010/01/23/1264179525/</link>
      <pubDate>Sat, 23 Jan 2010 00:00:00 +0000</pubDate>
      
      <guid>/2010/01/23/1264179525/</guid>
      <description>[java-ja][イベント]java-ja勉強会に参加しました 　今回のテーマはJOJO！　参考URL→http://www.google.co.jp/search?q=java+jojo&amp;amp;lr=lang_ja&amp;amp;ie=utf-8&amp;amp;oe=utf-8&amp;amp;aq=t&amp;amp;rls=org.mozilla:ja-JP-mac:official&amp;amp;client=firefox-a:title
僕のJOJO予備知識  なんかジョジョっぽいアスキーアートは見た事がある 人名とか用語とか断片的に知ってる FF6のやりこみ用語にバイツァ・ダストとキング・クリムゾンがある エシディシは悟空の太陽拳で一撃[1]  　初心者少なすぎです＞＜
　昔から読むきっかけが欲しくて……これでもう明日から読めます。むしろ読みたくてたまらない＞＜　とりあえず実家からジョジョ全巻持ってきている剛の者を少なくとも二人知っているので手配しようっと。
三行でおさらいする今日の勉強会  人間讃歌 未来への遺産 才能と技術と成長の緊張関係  [1] ファミコンジャンプ的な意味で</description>
    </item>
    
    <item>
      <title>OracleMasterBronze 11g SQL基礎I(1Z0-051)を受験したよ</title>
      <link>/2009/12/27/1261847868/</link>
      <pubDate>Sun, 27 Dec 2009 00:00:00 +0000</pubDate>
      
      <guid>/2009/12/27/1261847868/</guid>
      <description>[日記]OracleMasterBronze 11g SQL基礎I(1Z0-051)を受験したよ 　11gのSQL基礎受験してきました。
　問題は55問で正答率60％以上で合格。解いてる内に（あーなんかダメだなー……16000円がー）とか思いながら全問解答したのですが、なんと正答率61％で合格でした。うはー。
　とりわけ目を引いた問題が、
こんな値が欲しいために、下記のSQL文を実行した。 SELECT 列列, 列列 FROM テーブル WHERE なんたらかんたら 結果を選べ。 1.SQL文は実行され期待通りの結果が得られる。 2.SQL文は実行されるが期待通りの結果は得られない。 3.○○のためエラーが起こる。 4.△△のためエラーが起こる。 　こんな感じの問題。この形式がすごく多かった印象。――って、インプレスジャパンの問題集(黒本？)にこんなんあったっけか！？　もう見るのも嫌だから見返さないけど、なかったような気がするぞ……。
　DBAも受けないといけないけど、インプレスジャパンの本は買わないようにしよう……。
　結局この本から得たものは何もない気がする。だから資格取得の勉強ってモチベーションあがんないんだよなーまだ一つも資格持ってないけど。
　テンションあがる資格取得の勉強の仕方ってないもんかな。
gishi_yama
おー。合格おめでとー。
1261958189
kk_Ataka
もういっこ取らないと青銅聖闘士になれないんですよ。
1264179566</description>
    </item>
    
    <item>
      <title>Logicool MX Revolutionの副ボタンでExpos&amp;#233;とかSpacesを使いたい＠Snow Leopard</title>
      <link>/2009/12/26/1261792712/</link>
      <pubDate>Sat, 26 Dec 2009 00:00:00 +0000</pubDate>
      
      <guid>/2009/12/26/1261792712/</guid>
      <description>[Mac][備忘録]Logicool MX Revolutionの副ボタンでExpos&amp;#233;とかSpacesを使いたい＠Snow Leopard なんか対応されてるみたいです。  http://www.logicool.co.jp/index.cfm/428/4676&amp;amp;hub=1&amp;amp;cl=jp,ja?osid=9:title  　一生懸命やったのに＞＜　トラックバック先もちゃんとおけば良かった＞＜　もう～オバカ！(矢部的な意味で)　このエントリはMX Revolution自分設定備忘録として残しとこ。
とりあえず、  親指戻るボタン  クリック＞中央クリック   [f:id:kk_Ataka:20091226103507p:image]
 親指進むボタン  アプリケーションの切り替え＞次の右のアプリケーションに切り替える   [f:id:kk_Ataka:20091226103508p:image]
 One-Touch Searchボタン  キーストローク＞command+W   [f:id:kk_Ataka:20091226103509p:image]
 サムホイールボタン  画面のキャプチャ＞領域、ファイル   [f:id:kk_Ataka:20091226103510p:image]
　この辺は設定できました。[1]
　でも、サムホイール前回転と後回転にすべてのウィンドウ(Expoc&amp;#233;)とSpacesを割り当ててもうまく動いてくれなかった。。。どうもSnow Leopardには現段階で対応してない模様？
調べ中…… 　そこで、[http://blog.livedoor.jp/perfectionist0519/archives/759441.html:title]を参考にしてやってみました。
　結論としては動いた！　ボタン設定に用意されているExpos&amp;#233;, Dashboard、およびSpacesを使用せずに、キーストロークでやってしまおうという考え。
　まずすべてのウィンドウから。これってExpos&amp;#233;デフォルトだとF9になっているはず……。これをF9からずらす。F8がボタンかぶってる！　って言われてるけどすぐ直すからキニシナイ！
[f:id:kk_Ataka:20091226103511p:image]
　移したらマウスの設定に戻り、
 サムホイール前回転  キーストローク＞F9   [f:id:kk_Ataka:20091226103512p:image]</description>
    </item>
    
    <item>
      <title>java-ja忘年会に参加しました</title>
      <link>/2009/12/17/1260981278/</link>
      <pubDate>Thu, 17 Dec 2009 00:00:00 +0000</pubDate>
      
      <guid>/2009/12/17/1260981278/</guid>
      <description>[java-ja][イベント]java-ja忘年会に参加しました java-ja忘年会だ！ 　絶対迷うとわかっていたので、かなり早めに新宿へ向かいました。到着後、iPhone片手に新宿アイランドタワーを探すも新宿の複雑さに若干オロオロ。田舎者に東京は難しすぎる……。それでもなんとか20時に着くことができました;;
　暇を持て余してたらTwitterのTL上で着いたと投げていたid:Ewigkeitさんを発見。すかさず合流してもいいですかと投げたら快諾してくれました。いい人＞＜　そしていい時代になったものだ＞＜
　Ewigkeitさんの後ろを着いていき会場入り。結構早い方だった。
　会場入りする人が増えてくると会話も増えて、会話の端々にTwitterIdのような単語が飛び出すと「あ～、あのアイコンの人じゃん！」と一人で盛り上がったり。[1]
　忘年会が始まると、うちの区画はいきなり名刺交換な流れになっていたので乗り遅れないように交換。id:t-wadaさんも同じ区画だった！　ちょっと遠かったけど。
　今回初参加だったので、皆さん何されてるんですか？　くらいの話しか出来なかったのが悔やまれる;;
　しかし、嬉しかった事もあります。前回のwicket勉強会でお話した人が僕を記憶に残しててくれたこと。これは嬉しかった……。id:t_yanoさんも僕のこと覚えててくださったのが驚き！　今年始めのwicket勉強会で非常に良い経験をさせて頂いたため、お礼も兼ねてどうしても挨拶だけしたくて、終わりがけに恐る恐る訪ねたら……！　少ししか話せませんでしたが機会があったらまたお話したい＞＜　wicketも触りたい＞＜
　まだTwitter上でしかあったことがない人もいるので、次回会えたらと思います。
　主催のid:Yamashiro0217さんお疲れさまです。ありがとうございました！　他の皆さんもお疲れさまでした！
　これで僕もjava-jaですっ。
P.S. 　t-wadaさんがブログラマーたるものジョジョを知らねばならん！　と、ジョジョ勉強会を開催するという噂を耳にしたのですが……。最初Java勉強会の空耳かと思った。
[1] 僕はjava-ja初参加だったので、知ってる人は第二回wicket勉強会で発表していた人とか、その後の懇親会で一緒だった人くらいしかいなかったのです;;</description>
    </item>
    
    <item>
      <title>Mac OS X 再インストール(クリーンインストール)手順</title>
      <link>/2009/12/12/1260621685/</link>
      <pubDate>Sat, 12 Dec 2009 00:00:00 +0000</pubDate>
      
      <guid>/2009/12/12/1260621685/</guid>
      <description> [Mac][備忘録]Mac OS X 再インストール(クリーンインストール)手順 　やり方忘れたのでメモ。
言語選択  主に日本語を使用する  ディスク初期化  上のユーティリティ＞ディスクユーティリティ ディスクを選択＞消去タブ  フォーマットはMac OS 拡張(ジャーナリング) 名前はデフォルトでいいや  消去&amp;hellip;ボタン 消去が終了したら閉じる  Mac OS X インストール  続ける 規約に同意  インストールする前にカスタマイズ！  インストールするディスクを選択 カスタマイズ  プリンタサポート、追加フォント、言語環境のチェックをすべて外す  その後でインストール……20分くらい？ インストールが完了したら再起動  　ここから先は個人的なメモ。
====
ようこそ  日本を選択  キーボード入力環境を選択  ことえりを選択  すでにMacをお持ちですか？  情報を今すぐ転送しない  インターネットの接続方法  AirMacワイヤレス コンピュータをインターネットに接続しないを選択した場合は一個飛ばし  ワイヤレスネットワークを選択  ネットワークを選択してKEYを入力  ユーザ登録の情報  そのまま続ける 警告が出ても続ける  ローカルアカウントの作成  フルネーム、アカウント名、パスワードと確認を入力し続ける ヒントを入力しなくても～と出るが続ける  このアカウントのピクチャを選択  とりあえず雪の結晶の気分  MobileMeのフリートライアル(ネット接続時のみ？)  今はフリートライアルを利用しない  時間帯の設定  最も近い都市を入力し続ける  登録を忘れずに&amp;hellip;  完了  </description>
    </item>
    
    <item>
      <title>Macの日本語入力で数字を入力するときに最初から半角にしたい＋α</title>
      <link>/2009/12/09/1260354373/</link>
      <pubDate>Wed, 09 Dec 2009 00:00:00 +0000</pubDate>
      
      <guid>/2009/12/09/1260354373/</guid>
      <description>[Mac][備忘録]Macの日本語入力で数字を入力するときに最初から半角にしたい＋α 　僕はMac＠日本語入力に
 l行(la, li, lu, le, lo)でぁぃぅぇぉが出てほしい ？/キーで・(なかぐろ)が出てほしい 数字をうったら半角で12345みたいに出てほしい  　こういう事を求めたいので、これらの設定方法をメモ。使うてないと完全に忘れますな……。ずっと違うところ探してて時間無駄にした。
　まず、画面上のバー[1]の「あ」とか「A」とかなってる場所をクリック。環境設定を表示という項目を選択。
[f:id:kk_Ataka:20091209192432p:image]
　入力操作では、「Windows風のキー操作」という項目があるのでチェック。[2]することで、一つ目のl行でぁぃぅぇぉが満たせます。
[f:id:kk_Ataka:20091209192433p:image]
　次に入力文字。/キーで入力する文字という項目を・(なかぐろ)に。数字を全角で入力という項目のチェックを外す。これで残り二つも満たせました！
[f:id:kk_Ataka:20091209192435p:image]
[1] 何バー？　タスクバー？
[2] 意識して使ったことないけど、Windowsではかな入力中にshift押すと英字モードに切り替わるらしい。Macだとない？　これに拘りがある人は設定いじれないかも……。</description>
    </item>
    
    <item>
      <title>Macの書類とかライブラリみたいに日本語化されているフォルダを英語化する</title>
      <link>/2009/12/08/1260268590/</link>
      <pubDate>Tue, 08 Dec 2009 00:00:00 +0000</pubDate>
      
      <guid>/2009/12/08/1260268590/</guid>
      <description>[Mac][備忘録]Macの&amp;rdquo;書類&amp;rdquo;とか&amp;rdquo;ライブラリ&amp;rdquo;みたいに日本語化されているフォルダを英語化する 　※この作業を行うことによるデメリットはわかんないです。トーシロだからとりあえずガンガン消してみるよ！
　Macの/Users/ユーザ直下のフォルダ[1]って&amp;rdquo;書類&amp;rdquo;とか&amp;rdquo;ライブラリ&amp;rdquo;とか日本語化されてるくせに、ターミナルから見ると&amp;rdquo;Document&amp;rdquo;とか&amp;rdquo;Library&amp;rdquo;になっててすごい気になる。でも、言語自体を英語にするのもちょっと……。
[f:id:kk_Ataka:20091208193648p:image]
　ということで、なんとかこの日本語フォルダだけ英語表記にできないもんだろうかと思って調べてみた。原因(？)としては、日本語化されているフォルダには「.localized」っていうファイルがあるようで、こいつが日本語にしている模様。[2]
　消します！
[f:id:kk_Ataka:20091208193649p:image]
　消し消し……。
[f:id:kk_Ataka:20091208193650p:image]
　全部英語になった！
[f:id:kk_Ataka:20091208193651p:image]
[1] Macってフォルダっていうんだっけ？　ディレクトリ？
[2] 消してしまったので、どんなファイルだったのかわからな；</description>
    </item>
    
    <item>
      <title>OracleにおけるWHERE句、BETWEEN句、IN句、LIKE句、ORDER BY句のまとめ</title>
      <link>/2009/11/16/1258300637/</link>
      <pubDate>Mon, 16 Nov 2009 00:00:00 +0000</pubDate>
      
      <guid>/2009/11/16/1258300637/</guid>
      <description>[Oracle][SQL]OracleにおけるWHERE句、BETWEEN句、IN句、LIKE句、ORDER BY句のまとめ 　まずは基本的な句のまとめから。
論理演算子の優先順位  NOT &amp;gt; AND &amp;gt; OR  　本当はもっと演算子の優先順位はあるけど、とりあえず引っかかったところだけ。ANDの方がORよりも早いです。
WHERE句  文字、日付は&amp;rsquo;(シングルクォーテーション)で囲む 文字列の大文字小文字は区別される 日付データのデフォルト値はDD-MON-RR WHERE句では列別名は使えない！  ただし、ORDER BY句では使用できる！[1]   　例。普通のSQL文です。。
[f:id:kk_Ataka:20091106011618p:image]
　id列をXYZと名前付けてこいつをWHERE句で使おうとすると…。
[f:id:kk_Ataka:20091106011755p:image]
　エラーになります。しかし、name列をXYZと名前付けてORDER BY句で使おうとすると…。
[f:id:kk_Ataka:20091106011756p:image]
　使えます！
BETWEEN &amp;lsquo;○&amp;rsquo; AND &amp;lsquo;△&amp;rsquo; 　○～△で合致するものを探す。こんなテーブルで…
[f:id:kk_Ataka:20091106010119p:image]
　nameが1から9で合致するものを探す。
[f:id:kk_Ataka:20091106010120p:image]
　1から2で合致するもの。
[f:id:kk_Ataka:20091106010121p:image]
[2]
name (NOT) IN(&amp;lsquo;AA&amp;rsquo;, &amp;lsquo;BB&amp;rsquo;) 　AA、BBいずれかに合致すれば取得します。下図の場合はname列の中からY&amp;rsquo;s IかY&amp;rsquo;s II[3]に合致する値を探してくるので、
[f:id:kk_Ataka:20091116003449j:image]
　こうなります。
　一方、NOTは合致しないものを取得します。Y&amp;rsquo;s IとY&amp;rsquo;s II以外の値を取得します。
[f:id:kk_Ataka:20091116003450j:image]
name LIKE &amp;lsquo;%AA%&amp;rsquo; 　(任意の文字列)AA(任意の文字列)に合致するものを探します。他には_(アンダーバー)があります。</description>
    </item>
    
    <item>
      <title>Oracle Database 10g Express Editionの日本語版を導入します</title>
      <link>/2009/11/05/1257433826/</link>
      <pubDate>Thu, 05 Nov 2009 00:00:00 +0000</pubDate>
      
      <guid>/2009/11/05/1257433826/</guid>
      <description>[Oracle]Oracle Database 10g Express Editionの日本語版を導入します 　実は、前回のこのOracleを選択するページにて
[f:id:kk_Ataka:20091101015331p:image]
　上から二つ目のUniversal版を選択しておけば日本語版を導入できました；；　なんでこっち落とさなかったんだ。Multi-byte Unicode database for all language deploymentって書いてあるしっ！
インストール [f:id:kk_Ataka:20091106000343j:image]
[f:id:kk_Ataka:20091106000344j:image]
[f:id:kk_Ataka:20091106000345j:image]
[f:id:kk_Ataka:20091106000436j:image]
[f:id:kk_Ataka:20091106000437j:image]
[f:id:kk_Ataka:20091106000438j:image]
アプリ [f:id:kk_Ataka:20091106000639p:image]
　完全に日本語ですどうもありがとうございました。さーいじってみようかなっ！</description>
    </item>
    
    <item>
      <title>Oracle Database 10g Express Editionを導入します</title>
      <link>/2009/11/01/1257053470/</link>
      <pubDate>Sun, 01 Nov 2009 00:00:00 +0000</pubDate>
      
      <guid>/2009/11/01/1257053470/</guid>
      <description>[Oracle]Oracle Database 10g Express Editionを導入します  Windows XP Home Edition SP3 Oracle Database 10g Express Edition Firefox 3.5.4  　環境下でOracleスタートさせます。
Oracleを入手する 　何はなくともOracleを入手する所から。まず[http://www.oracle.com/index.html:title=Oracle公式]へ。Oracle Database ○○というリンクをクリック。
[f:id:kk_Ataka:20091101015327p:image]
　Express Editionリンクをクリック。
[f:id:kk_Ataka:20091101015328p:image]
　Download Oracle Database 10g Express Editionリンクをクリック。
[f:id:kk_Ataka:20091101015329p:image]
　プラットフォームを選択。今回はWindowsなので下で。
[f:id:kk_Ataka:20091101015330p:image]
　規約に同意してダウンロード。上から三つの違いはシングルバイトかマルチバイトかクライアントのみ…？
[f:id:kk_Ataka:20091101015331p:image]
　Oracleのアカウントを持っていない場合このページに飛んでくる。sign up now.リンクをクリック。
[f:id:kk_Ataka:20091101015332p:image]
　お客様プロファイル(Oracle.com)を作成リンクをクリック。
[f:id:kk_Ataka:20091101015333p:image]
　メールアドレスとパスワードを記入し、名前や所属などの情報を記入していく。このメールアドレスがそのままusernameになるので注意。
[f:id:kk_Ataka:20091101015334p:image]
　以上がダウンロードの手順。次にインストール。
インストールする 　基本的には次へ次へ。
[f:id:kk_Ataka:20091101015335j:image]
[f:id:kk_Ataka:20091101015336j:image]
[f:id:kk_Ataka:20091101015337j:image]
　ここでパスワード入力。このパスワードを使用するユーザはSYS, SYSTEM！(これ読み飛ばしてて後で詰まった；)
[f:id:kk_Ataka:20091101015338j:image]
[f:id:kk_Ataka:20091101015339j:image]</description>
    </item>
    
    <item>
      <title>文字リテラルで&#39;を使用する場合</title>
      <link>/2009/10/31/1257000092/</link>
      <pubDate>Sat, 31 Oct 2009 00:00:00 +0000</pubDate>
      
      <guid>/2009/10/31/1257000092/</guid>
      <description>[Oracle][SQL]文字リテラルで&amp;rsquo;を使用する場合 　シングルクォーテーションがクセモノな&amp;rsquo;Y&amp;rsquo;s II&amp;rsquo; をきちんと挿入・表示させる。
シングルクォーテーションを重ねる insert into sample values(2, &amp;#39;Y&amp;#39;&amp;#39;s II&amp;#39;) 　まず基本。シングルクォーテーションを重ねればOK。
代替引用符を使用する 　もしくは、Oracle 10gからサポートされた代替引用符(q or Q)で、任意の文字を引用符として使用する。
insert into sample values(3, q&amp;#39;aY&amp;#39;s IIa&amp;#39;) insert into sample values(3, q&amp;#39;%Y&amp;#39;s II%&amp;#39;) 　上はaで挟がった中がリテラルになり、下は%で挟がった中がリテラルになる。ちなみに任意の文字と指定文字が重なってしまった場合でも、
insert into sample values(3, q&amp;#39;sY&amp;#39;s IIs&amp;#39;) 　問題ない。頭とおしりできちんと見とるんかな。
091117追記 　どうやら、
insert into sample values(3, q&amp;#39;[Y&amp;#39;s II]&amp;#39;) insert into sample values(3, q&amp;#39;(Y&amp;#39;s II)&amp;#39;) 　こういう表記も良いらしい。(というか、こっちが主流？)文字や記号だと同じもので挟まないといけないのに、かっこは開きと閉じで対応させる様子。また、
insert into sample values(3, q&amp;#39;YY&amp;#39;s IIY&amp;#39;) 　これはダメだった。多分イースのイーの部分(Y&amp;rsquo;)が終わりと見なされているから？　記号系では、
insert into sample values(3, q&amp;#39;&amp;amp;Y&amp;#39;s II&amp;amp;&amp;#39;) 　アンパサンドにすると、置換を求められた。</description>
    </item>
    
    <item>
      <title>PL/SQLとSQLの種類</title>
      <link>/2009/10/19/1255949562/</link>
      <pubDate>Mon, 19 Oct 2009 00:00:00 +0000</pubDate>
      
      <guid>/2009/10/19/1255949562/</guid>
      <description>[Oracle][SQL]PL/SQLとSQLの種類 　OracleM@sterを目指すためにちょっとずつOracle（というかSQL）のエントリを増やしていく。超にわかなところから徐々にOracleM@sterをコーナーに追い詰めていこうと思います。
　というわけで題名の件。
PL/SQL 　OracleのOracleによるOracleのためのプログラミング言語。SQLに変数宣言やif文、for文exceptionなどを記述可能にしたプログラミング言語なのでSQLに分類されない。
　記述的にはこんな感じになる。
DECLARE 宣言 BEGIN IF (条件) THEN 処理 END IF EXCEPTION WHEN 例外条件 THEN 処理 END 　次にSQLの種類。
SQLの種類 　SQLの操作は大きく四つに分けられて、
 データを定義する言語: DDL(Data Definition Language) データを操作する言語: DML(Data Manipulation Language) データを制御する言語: DCL(Data Control Language) トランザクション制御  　となっている。全部読んで字のごとくなんだけど初見だと略称から意味が出てこない；　あと、若干略称からコマンドが出てこない事がある。コマンドは、
|*DDL|CREATE(作成)|ALTER(変更)|DROP(削除)|TRUNCATE(切捨て)|　|
|*DML|SELECT(問い合わせ)|INSERT(挿入)|UPDATE(更新)|DELETE(削除)|MERGE(挿入更新)|
|*DCL|GRANT(権限付与)|REVOKE(権限削除)|　|　|　|
|*トランザクション|COMMIT(コミット)|ROLLBACK(取り消し)|SAVEPOINT(RB位置指定)|　|　|
　こんな感じ。</description>
    </item>
    
    <item>
      <title>Firefoxに入れるアドオンめも</title>
      <link>/2009/10/10/1255182752/</link>
      <pubDate>Sat, 10 Oct 2009 00:00:00 +0000</pubDate>
      
      <guid>/2009/10/10/1255182752/</guid>
      <description>[Firefox]Firefoxに入れるアドオンめも 　久しぶりすぎて、はてなの使い方忘れてる。
　さて、今回は久々なので自分がFirefoxに入れるアドオンを箇条書きしていきます。というか、今年の春に引越しして以来素のFirefoxを半年近く使い続けてたのが驚き。慣れって怖い。
FireGestures
マウスジェスチャ
IE Tab
IEの確認
Tab Mix Plus
タブ拡張
テキストリンク
URI文字列の読み込み
Hatena Bookmark
はてブのFirefox拡張
はてなスクリーンショット拡張
はてなフォトライフのFirefox拡張？
　今のところこんなところ。……えーもっと使ってたはずなんだけど、全然思い出せないｗ
　使ってたアドオンの設定ですら覚えてない。
 FireGestures IE Tab  　この辺は入れとく。
 Tab Mix Plus  イベント＞タブを閉じる＞最後のタブを閉じたとき、ウィンドウ自体は閉じないにチェック   　これも定番。上記の設定はctrl+F4でウィンドウが死んでしまわないように。
 テキストリンク  　テキストリンクは、aタグで囲まれてないURIの文字列をクリックで読み込めるというアドオン。URIをこぴぺする手間が省けます。
 Hatena Bookmark  　復ッ活ッ！　はてなブックマーク復ッ活ッ！
　これが多分これからしばらく生きていく上で一番重要なアドオンかとッ！　調べ物をしていて役に立ったサイトやブログをここでブックマークしておいて、困ったら見るッ！　何時ッ！　何時ッ！　何の調べ物であってもッッッ！
　勉強した事をまとめておく場って言うものが社会人になった自分の中でまだ作れてなくて。
　自宅なら自分の環境があるのでいいんですが、業務中の調べものが……。社外秘じゃないフッツーのJava/Swingで○○するにはどうするみたいな情報すらまとめておく場がないので。
　4月から今日まで、勉強したこと全て右から左に流れていきました。多分この半年でそうとうバカになっているはず。
　という事で、サイトやブログはメモる！（物理的に）　そして帰ってきてはてブに流し込む！　そうすればいつでも引き出せる。こう書いとけばやるっしょ。（北海道弁）</description>
    </item>
    
    <item>
      <title>社会人になって三ヶ月がたちました</title>
      <link>/2009/07/01/1246377981/</link>
      <pubDate>Wed, 01 Jul 2009 00:00:00 +0000</pubDate>
      
      <guid>/2009/07/01/1246377981/</guid>
      <description>[日記]社会人になって三ヶ月がたちました 　Twitterではやれアイマスがどうだロックマンがどうだとほぼ毎日ポストしてるけどこっちは放置しすぎ。
　現在は、シンプルにjsp/サーブレットのみ使用のwebアプリケーションの作成をしています。webアプリ構築というより、どちらかというと開発プロセスに重きを置いて、様々なドキュメントや仕様書を書く毎日。ここ数日ようやくコーディングとあいなりました（´ω｀）
　ここで、とりあえずエクセルとワードとパワーポイントの三重葬で泣きを見た僕が通りますよっと……。
　プログラミングに関しては、使用可能武器にIDEがないという事でIDEを封印して初期装備で戦っています。とりあえず「いつ、なんどき、誰の挑戦でも受ける」ストロングスタイルの精神で開発環境が揃わない状況でも、「作って」って言われたらがんぶって作ることができるかを意識してやっています。
　今までeclipseに任せていたことも自分でやらなくてはいけなくなったので、また少し深みに入り込んだ気分。さしあたって実はクラスパスとかの概念が全部eclipseに頼りっきりで全然理解していなかったのには泣いた。コンパイル通んないんだもんなぁー！
　今勉強してることをまとめて、いつかメモ帳[1]でできる！　webアプリケーションまとめみたいなエントリを残してごきげんようさようならしたい。
[1] とJDKとTomcatとDB……。</description>
    </item>
    
    <item>
      <title>社会人になって一ヶ月半がたちました</title>
      <link>/2009/05/22/1242925613/</link>
      <pubDate>Fri, 22 May 2009 00:00:00 +0000</pubDate>
      
      <guid>/2009/05/22/1242925613/</guid>
      <description>[日記]社会人になって一ヶ月半がたちました 　見出しどおり。色々感じたこともあるので、後日アウトプットしてみよう。
　最近、全然Wicketも触ってないし、むしろJSP/サーブレットの復習をやっている感じです。そこで痛感したのが実は僕はIDEがないと超弱いということ。聖衣のない聖闘士みたいなものでした；[1]　かなりの部分でIDEに依存していたんだなぁ。。。
　もっと本質を理解したい＞＜[2]　と、えらいうっすらとした向上心を持ちつつあります。そこで、自分の中でのプログラムに対するテンションを上げるために、いや、あげあげするためにjava-jaに参加しました。都合がついたらイベントにも行きたい＞＜　Wicket-jaにも継続して参加中デス。
[1] 龍星座とか聖衣ない方が強い人もいるけど；；
[2] もっとおもろなりたい＞＜＠駿河学</description>
    </item>
    
    <item>
      <title>MacbookからCDが取り出せなくなったときの対処法</title>
      <link>/2009/03/30/1238392970/</link>
      <pubDate>Mon, 30 Mar 2009 00:00:00 +0000</pubDate>
      
      <guid>/2009/03/30/1238392970/</guid>
      <description>[Mac][備忘録]MacbookからCDが取り出せなくなったときの対処法 　Macbookが起動画面[1]からウンともスンともいわなくなった！　起動ディスクがCDドライブに入っているんだけどそいつも取り出せなくなった！　強制排出ボタン的なものもない！
　むりくり取り出す前に、色々調べてみると、起動時に色々なオプションをつけることができるのね＞Mac
起動時にマウスボタンを押しっぱなしにする
CDがイジェクトされる(らしい)
起動時にoptionキーを(ry
MacとかWindowsとか起動するボリュームを選択できる
起動時にcキー
CDから起動できる(らしい)
起動時にxキー
強制的にMac OS Xを起動できる(らしい)
起動時にshiftキー
セーブモードで起動できる(らしい)
　他にもいっぱいあったけど、とりあえず試したのはこのくらい。(らしい)とついているのは今回初めて使用したコマンド。でも効果は上がらず……。
　Mac OSは起動しないわ、ボリューム選択もできないわ、CD排出もできないわで、グレー画面を出したまま←(ここ重要)数分間途方にくれていたら、突然ウィ、ウィ、ウィーンとCDを排出しだした！　排出したらいつも通りMac OSが起動した！[2]
　こんなん知らんわ！
tasa
当方もCDが排出されずに困っていました。起動時に、放置するワザを試してみたところうまく取り出すことができました。ありがとうございました。
1302280899
kk_Ataka
ありがとうございます！参考になってよかったです！
1303489836
[1] グレーの画面＝ジャーン♪　ってなる所
[2] Macを起動させたまま放置してたら勝手に吐き出すのだろうか？</description>
    </item>
    
    <item>
      <title>Eclipseで優先順位の低いパッケージを補完候補から除外してみた</title>
      <link>/2009/03/26/1238002057/</link>
      <pubDate>Thu, 26 Mar 2009 00:00:00 +0000</pubDate>
      
      <guid>/2009/03/26/1238002057/</guid>
      <description>[Java][Eclipse]Eclipseで優先順位の低いパッケージを補完候補から除外してみた 　id:Yamashiro0217さんのエントリ[http://d.hatena.ne.jp/Yamashiro0217/20090322/1237707686:title]を試した。……確かに、Eclipseの文にも
 For example &amp;lsquo;java.awt.*&amp;rsquo; will hide all types from the awt packages.
 　って書かれてますね。
[f:id:kk_Ataka:20090326020054p:image]
　↑早速java.awt.*を足してみたら、確かにListがフィルタリングされて除外されてました。すごい！　あとLabelとかも。個人的には、WicketでWebアプリケーションを書いていくなら、java.awt.*の他にjavax.swing.*もフィルタリングすると良いと思います。
 「ListViewでエラーが起こる＞＜」
「ListView listView = new ListView(&amp;ldquo;list&amp;rdquo;, list) {&amp;hellip;。別に間違ってないと思うけど、何ていうエラーが出てるの？」
「コンストラクタにこんな引数はない……かな」
「？？」
.
.
.
「あーこれWicketのListViewじゃなくてSwingのListViewをインポートしてますね！」
ちゃんちゃん
 　こんな事を自分も何回かやりましたが、周りでも僕の知る限り何人[1]かやっていたので。
　フィルタリングを追加するだけでもかなり教育コストや開発時間を削減できると思うんですよね。[2]
[1] 初めのうちはですけど、初めのうちだからこそ無意識にひっかかるというか。
[2] あんまりフィルタしすぎるのも考えものですが；</description>
    </item>
    
    <item>
      <title>チェックボックスの(中略)続き</title>
      <link>/2009/03/17/1237297925/</link>
      <pubDate>Tue, 17 Mar 2009 00:00:00 +0000</pubDate>
      
      <guid>/2009/03/17/1237297925/</guid>
      <description>[日記]チェックボックスの(中略)続き 　もういいかと思うけど、CheckGroupの初期値についてさらに続き。
　自分より遥か前に打開している方の記事を見つけました。http://d.hatena.ne.jp/yuripop/20090105の小さい発見 - CheckGroupの初期値。自分はモバイルではないのですが、モバイルもPCもやっている事は同じだと思います。
　どうやって初期値を認識させたものかかなり躓いたところだったので、もう少し早く見つけていれば……。でも、CheckGroupとかDropDownChoiceの初期値って結構「？？」ってなる場所なのかも。[1]矢野さんの本ではフォローされているのかな？　確認してみようっと。
[1] TextField系には突っ込めば行けるけどCheckGroup……って所まで同じだったので；</description>
    </item>
    
    <item>
      <title>Wicketでn行m列で折り返すリストを作る</title>
      <link>/2009/03/16/1237134252/</link>
      <pubDate>Mon, 16 Mar 2009 00:00:00 +0000</pubDate>
      
      <guid>/2009/03/16/1237134252/</guid>
      <description>[Java][Wicket]Wicketでn行m列で折り返すリストを作る 　Wicket本が未だに入荷しないので一つ書く。Wicket奮闘記第二弾。困り度的には、最悪1列表示で妥協すれば良かったのでそんなに高くない。
　ただのリストじゃなくて、要素が何個か横に続き、n個で折り返す……というサンプル。イメージとしては、mixiのマイミクとかマイコミュニティみたいな感じかなぁ。相変わらずバージョンは1.3なのです。
[f:id:kk_Ataka:20090316004745p:image]
　こんな感じ。横に2つで折り返し。
　どういう風に実現するかすごい困ったけれど、調べてみるとGridViewというコンポーネントがあったのでこれは使えそうだと。以下Javaソース。
// テーブルのcolspanに設定する数  private int column; private List&amp;lt;SampleObjectModelBean&amp;gt; selected; public SampleGridView() { // 行の設定  column = 2; // DBから何らかのリスト一覧を持ってきたという体で  final List&amp;lt;SampleObjectModelBean&amp;gt; list = GenerateBeanUtility.GenerateSampleObjectModelBean(); // 自分が取得している項目という体で  selected = new ArrayList&amp;lt;SampleObjectModelBean&amp;gt;(); selected.add(list.get(2)); selected.add(list.get(5)); // DataProvider 規則的に回すもの  IDataProvider dataProvider = new IDataProvider() { private static final long serialVersionUID = -9120134891423038532L; public Iterator&amp;lt;SampleObjectModelBean&amp;gt; iterator(int first, int count) { return list.</description>
    </item>
    
    <item>
      <title>CheckBoxMultipleChoiceとChoiceRendererを使用したチェックボックスの比較</title>
      <link>/2009/03/12/1236788607/</link>
      <pubDate>Thu, 12 Mar 2009 00:00:00 +0000</pubDate>
      
      <guid>/2009/03/12/1236788607/</guid>
      <description>[Java][Wicket]CheckBoxMultipleChoiceとChoiceRendererを使用したチェックボックスの比較 　早速あげあげ。基本はいただいたコメントのソースのまま、項目のBeanなんかは自分が作っていたもの＋Wicket1.3仕様にあわせて……。
private List&amp;lt;SampleObjectModelBean&amp;gt; selected; public SampleChoiceRenderer() { // 自分が取得している項目  selected = new ArrayList&amp;lt;SampleObjectModelBean&amp;gt;(); selected.add(GenerateBeanUtility.GenerateSampleObjectModelBean(2)); selected.add(GenerateBeanUtility.GenerateSampleObjectModelBean(5)); Form form = new Form(&amp;#34;form&amp;#34;); add(form); // 選択項目全て  final List&amp;lt;SampleObjectModelBean&amp;gt; all = GenerateBeanUtility.GenerateSampleObjectModelBean(); // チェックボックス  final CheckBoxMultipleChoice multiChoice = new CheckBoxMultipleChoice(&amp;#34;list&amp;#34;, new PropertyModel(this, &amp;#34;selected&amp;#34;), all, new ChoiceRenderer(&amp;#34;name&amp;#34;, &amp;#34;outline&amp;#34;)); // 表示用ラベル  final Label label = new Label(&amp;#34;label&amp;#34;, &amp;#34;最初&amp;#34;); form.add(multiChoice); form.add(new Button(&amp;#34;next&amp;#34;) { private static final long serialVersionUID = -1359417135623629179L; // 選択したものを連結してLabelにセット  @Override public void onSubmit() { List&amp;lt;SampleObjectModelBean&amp;gt; list = (List&amp;lt;SampleObjectModelBean&amp;gt;)multiChoice.</description>
    </item>
    
    <item>
      <title>チェックボックスの初期値の続き</title>
      <link>/2009/03/11/1236776769/</link>
      <pubDate>Wed, 11 Mar 2009 00:00:00 +0000</pubDate>
      
      <guid>/2009/03/11/1236776769/</guid>
      <description>[Java][Wicket]チェックボックスの初期値の続き 　[http://d.hatena.ne.jp/kk_Ataka/20090309/1236590120:title]の続き。
　id:hayasshさんからCheckBoxMultipleChoiceを使用してみては？　というご指摘があったので使ってみたところ、これは超便利でした。しかも、Labelタグのfor属性もつけてくれるという……。[1]力技でかわしてた自分の強引さに乾杯。hayasshさんありがとうございました。
　あと、書き忘れていたのですが、自分が使っているWicketのバージョンは1.3です。なのでソースにジェネリクスがなかったり、他諸々1.4とは相違点があります。1.4は矢野さんの本を買ってから勉強しようっと。</description>
    </item>
    
    <item>
      <title>自作のWicketサンプルを上げてみる</title>
      <link>/2009/03/11/1236706056/</link>
      <pubDate>Wed, 11 Mar 2009 00:00:00 +0000</pubDate>
      
      <guid>/2009/03/11/1236706056/</guid>
      <description>[Java][Wicket]自作のWicketサンプルを上げてみる 　ようそこsampleWicket→http://samplewicket.kkataka.staxapps.net/[2]
　色々使ってみたいコンポーネントを使って動かしてみたサンプルです。CheckGroup, RadioGroup, ListViewの入れ子, GridView, PagingNavigatorなどなど……。
　必要になったんだけど、これってどうやって実現するんだろう？　と思ったものを形にしてみました。[3]特に入力チェックもしていないので、空欄でも余裕で通ったりします。
　まず上げてみただけなので、今はソースは見れません……。
　あ、Developmentモードで上げてしまった；；
hayassh
あぁ、1.4のソースでごめんなさい・・
しかもHTMLのソースは書いてないという中途半端っぷり・・
私はWicket使い始めて2年くらいになりますが、実は1年くらいCheckBoxMultipleChoiceの存在を知らずにCheckGroupとCheckでゴリゴリ実装してたのは秘密ですｗ
1236779514
kk_Ataka
やっぱり最初はCheckGroupで力技なんですかねー。
後、私が触らせて頂いているのが1.3ベースで運用しているWebシステムなので、特に意識せず1.3ベースで載せてしまいました；　バージョン明記してなくて申し訳ないです。
1236789333
[1] CheckGroupとCheckではそこまでできるのかな？
[2] サイドメニュー＞プロフィール＞自作Wicketサンプルからも行けます。
[3] 例: mixiのマイミクとかマイコミュニティ表示のようなn行m列のリストとか。</description>
    </item>
    
    <item>
      <title>チェックボックスに初期値（デフォルトでチェック）を入れる方法</title>
      <link>/2009/03/09/1236590120/</link>
      <pubDate>Mon, 09 Mar 2009 00:00:00 +0000</pubDate>
      
      <guid>/2009/03/09/1236590120/</guid>
      <description>[Java][Wicket]チェックボックスに初期値（デフォルトでチェック）を入れる方法 　Wicket奮闘記第一弾。とりあえず、Wicket開発で一番困った所、CheckGroupとCheckコンポーネントを使用したチェックボックスに初期値＝チェックを入れておく処理です。
　何かユーザ情報を登録するフォームがあってー、入れましたー、編集ボタンを押して編集画面に行きましたー、すると、
[f:id:kk_Ataka:20090309171545p:image]
　最初からこう、チェックが入っていてほしいという状況です。
　テキストのフォーム(TextField)なら、第二引数にDBから引っ張ってきたものを突っ込んでやればこんな感じで表示できるのですが、
[f:id:kk_Ataka:20090309162050p:image]
　チェックボックスはもう少しやらなきゃいけないことがあるみたい……。
//第二引数がユーザが持っている値 CheckGroup checkGroup = new CheckGroup(&amp;#34;checkGroup&amp;#34;, /*ユーザが持っているもののリスト*/); //第二引数が選択項目の値 ListView listView = new ListView(&amp;#34;list&amp;#34;, /*選択肢のリスト*/) { private static final long serialVersionUID = 2972646917485688487L; @Override protected void populateItem(ListItem listItem) { listItem.add(new Check(&amp;#34;check&amp;#34;, listItem.getModel())); listItem.add(new Label(&amp;#34;value&amp;#34;, listItem.getModelObjectAsString())); } }; 　Javaはこう。で、htmlはこうしてみました。
&amp;lt;table&amp;gt; &amp;lt;span wicket:id=&amp;#34;checkGroup&amp;#34;&amp;gt; &amp;lt;tr&amp;gt; &amp;lt;th&amp;gt;なんとか一覧&amp;lt;/th&amp;gt; &amp;lt;/tr&amp;gt; &amp;lt;tr wicket:id=&amp;#34;list&amp;#34;&amp;gt; &amp;lt;td&amp;gt; &amp;lt;input type=&amp;#34;checkbox&amp;#34; wicket:id=&amp;#34;check&amp;#34; /&amp;gt; &amp;lt;span wicket:id=&amp;#34;value&amp;#34; /&amp;gt; &amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt; &amp;lt;/span&amp;gt; &amp;lt;/table&amp;gt; 　これらから生成されるページはこうなります。</description>
    </item>
    
    <item>
      <title>再開します</title>
      <link>/2009/03/05/1236256429/</link>
      <pubDate>Thu, 05 Mar 2009 00:00:00 +0000</pubDate>
      
      <guid>/2009/03/05/1236256429/</guid>
      <description>[日記]再開します 　明日行われる、第2回Wicket勉強会に出席させて頂くのを期に再開します。これからはこの半年で培ったWicketの事でも書きたいな。
　とりあえず明日は俺より強い奴に会いにいく！　寝坊しないように……。</description>
    </item>
    
    <item>
      <title>追記</title>
      <link>/2009/03/05/1236590811/</link>
      <pubDate>Thu, 05 Mar 2009 00:00:00 +0000</pubDate>
      
      <guid>/2009/03/05/1236590811/</guid>
      <description>[日記]追記 　行ってきました。羽田に着陸した瞬間に雨どしゃ降りだったり、時間つぶしで入った喫茶店が半端じゃなく寒かったり、会場一番乗りした特典として設営のお手伝いをさせて頂いたり、二次会で朝6時までお話させて頂いたり、とても有意義な時間を過ごさせて頂きました。
　個人的には、もっと早い段階でこういう場に出て行けば良かったと思っています。学生の、もっと言うと就職前に行っておくべきだった……。技術的な話以上に、業界の傾向の話がガンガン聞けたのが今後のためになりました。
　場所を提供して下さったグリー株式会社、最高！</description>
    </item>
    
    <item>
      <title>sara</title>
      <link>/2000/01/01/1288149401/</link>
      <pubDate>Sat, 01 Jan 2000 00:00:00 +0000</pubDate>
      
      <guid>/2000/01/01/1288149401/</guid>
      <description>[日記]sara emacsのメモ
環境  CentOS  Mac OS からSSHする  Emacs23.4  ダウンロード $ wget http://ftp.jaist.ac.jp/pub/GNU/emacs/emacs-23.4.tar.gz $ tar zxvf emacs-23.4.tar.gz $ cd emacs-23.4/ $ ./configure --without-x # GUIがない場合はx要らない $ make $ sudo make install 構成 特にインストール先を指定しなければ/usr/local/share/の下にemacsディレクトリができた。
emacs ┣23.4 ┃┣etc # NEWやライセンス等 ┃┣leim # EmacsのIM ┃┣lisp # Elispが格納、Emacsの全て ┃┗site-lisp # ユーザのElispをインストールする場所(バージョン依存？) ┗site-lisp # Emacsのバージョン関係なく使える？ 設定ファイル 設定ファイルは以下のファイルのうち、優先順位に従って一つ読み込まれる
 ~/.emacs.el &amp;gt; ~/.emacs &amp;gt; ~/.emacs.d/init.el &amp;gt; ~/.emacs.d/init  前準備 キーバインド 本とかネットなどに書いてある書式。この通りに押すとミニバッファに出力される
   キー 意味     C-x Control(Ctrl)を押しながらxを押す   C-x C-c Controlを押しながらxを押した後、Controlを押しながらcを押す   C-x → Controlを押しながらxを押した後、右矢印キーを押す   M-x メタキー(Alt)を押しながらxを押す   C-M-v ControlとAltを押しながらvを押す    |C-x RET f|Controlを押しながらxを押した後、Return(Enter)を押し、fを押す|</description>
    </item>
    
  </channel>
</rss>