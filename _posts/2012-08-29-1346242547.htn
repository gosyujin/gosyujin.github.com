---
layout: post
title: Git add, commitをした時、中でどんな事が起こっているのか
description: ''
catecory: ''
tags: [Git, 備忘録]
old_url: http://d.hatena.ne.jp/kk_Ataka/20120829/1346242547
---

**あらすじ
いまだにファイルがどういうタイミングでリポジトリ、インデックス、ワーキングエリア間を行き来しているのかわからんので色々調べてみることに。

**参考資料、サイト
-実用Git
-[http://www8.atwiki.jp/git_jp/pub/Documentation.ja/tutorial-2.html:title=git チュートリアル：パート２]
-[http://keijinsonyaban.blogspot.jp/2011/05/git.html:title=見えないチカラ: 【翻訳】Gitをボトムアップから理解する]
-[http://git-scm.com/book/ja/Git%E3%81%AE%E5%86%85%E5%81%B4-Git%E3%82%AA%E3%83%96%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88:title=Git]

**やってみる
まずは、空のREADMEファイルを作ってFirst commit。
>||
$ git init
Initialized empty Git repository in /tmp/repos/.git/
$ touch README
$ git add README
$ git commit -m "first commit"
[master (root-commit) b0d99b3] first commit
 0 files changed
 create mode 100644 README
$ git log --graph --date-order --all --date=short -C -M --pretty=format:"%h"\ %t\ %ad\ %Cblue%cn%Creset\ %Cgreen%d%Creset\ %s
 * b0d99b3 543b9be 2012-08-29 kk_Ataka  (HEAD, master) first commit
||<
***色々確認
※確認スクリプト
<script src="https://gist.github.com/3510904.js?file=git-kakunin"></script>
[f:id:kk_Ataka:20120829192353j:image]
-rev-parse コマンドはタグとかブランチとかHEAD、HEAD^^など指定したらそのコミットのSHA1が返ってくる
--最初のコミットオブジェクトは <span class="deco" style="color:#0000FF;">b0d99b3</span>
-cat-file コマンドでコミットオブジェクトの内容を確認できる
--コミットオブジェクトに関連付いているツリーオブジェクトは <span class="deco" style="color:#FF0000;">543b9be</span>
-ls-tree コマンドで上のツリーオブジェクトにぶら下がっているツリーオブジェクト、ブロブオブジェクトを確認できる
--今は直下にREADMEファイルしかないから <span class="deco" style="color:#00FF00;">e69de29</span>
-コミットすると.git/objects/の下に3つファイルが作られる
--SHA1の先頭2桁でディレクトリを作り、その下に残りのSHA1でファイル作成
***ゆっくり
READMEを編集してみる。
>||
$ echo "このリポジトリはテスト用です" > README 
$ git status
# On branch master
# Changes not staged for commit:
#   (use "git add <file>..." to update what will be committed)
#   (use "git checkout -- <file>..." to discard changes in working directory)
#
#	modified:   README
#
no changes added to commit (use "git add" and/or "git commit -a")
||<
で、色々確認。まだ作業エリア(ワーキングツリー)内での変更しかしてない(git addしてない)ので特に変わらず。
[f:id:kk_Ataka:20120829192354j:image]
***addしたとき
ここでREADMEファイルをadd。
>||
$ git add README
$ git status
# On branch master
# Changes to be committed:
#   (use "git reset HEAD <file>..." to unstage)
#
#	modified:   README
#
||<
再度、色々確認。
[f:id:kk_Ataka:20120829192355j:image]
<span class="deco" style="color:#00FF00;">リポジトリにコミットされているREADME e69de29</span> の他に<span class="deco" style="color:#666600;">de7e855 というオブジェクトがステージされている</span>。おまけに.git/objectsの下にも。
-addした時点で、gitリポジトリの中に入れ込まれている？
-リセットしても.git/objectsの下からは消えない(ただ、この状態でほったらかしておくとどこからも参照されないからいずれgcされて死ぬ？)
>||
$ git reset HEAD README
Unstaged changes after reset:
M	README
$ git status
# On branch master
# Changes not staged for commit:
#   (use "git add <file>..." to update what will be committed)
#   (use "git checkout -- <file>..." to discard changes in working directory)
#
#	modified:   README
#
no changes added to commit (use "git add" and/or "git commit -a")
$ find .git/objects
.git/objects/de/7e8558a365886d75f9c1ac6861693be19bdc53
.git/objects/e6/9de29bb2d1d6434b8b29ae775ad8c2e48c5391
.git/objects/54/3b9bebdc6bd5c4b22136034a95dd097a57d3dd
.git/objects/b0/d99b34f1e2497a78619de4fde08b62f2d851f7
$ git cat-file -p de7e8558
このリポジトリはテスト用です
||<
***commitしたとき
もう一回addして今度はコミット。
>||
$ git add README
$ git commit -m "README追記"
[master 30eab42] README追記
 1 file changed, 1 insertion(+)
||<
すごい見づらいけど、.git/objectsの下に2つファイルが増えている。追ってみると<span class="deco" style="color:#00FFFF;">今回のコミットオブジェクト 30eab42 </span>と <span class="deco" style="color:#FF00FF;">ツリーオブジェクト 9dd7dd4 </span>…の下にさっきaddした時にできていた<span class="deco" style="color:#666600;">README(de7e855)</span>。
[f:id:kk_Ataka:20120829192357j:image]

**まとめ
以上の事から
-addした時、既にリポジトリにファイルは追加されている。また、インデックスの参照先も更新されている
***初期状態
[f:id:kk_Ataka:20120829203645p:image:w360]
***addした後
[f:id:kk_Ataka:20120829203647p:image:w360]
-commitした時、インデックスがそのまま次のコミットのツリーオブジェクトになる。そのツリーオブジェクトを取りまとめるコミットオブジェクトを作成し、tree情報とparent情報を持たせる
-で、ブランチの参照先を更新してやる
***commitした後
[f:id:kk_Ataka:20120829203648p:image:w360]

でいいのかなあ。

