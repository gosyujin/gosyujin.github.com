<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SQL Server on kk_Atakaの日記</title>
    <link>https://gosyujin.github.io/tags/sql-server/</link>
    <description>Recent content in SQL Server on kk_Atakaの日記</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>jp</language>
    <lastBuildDate>Mon, 15 Apr 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://gosyujin.github.io/tags/sql-server/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>SQL Serverの動的管理ビューから、実行したSQL(とバインド変数)を取得する</title>
      <link>https://gosyujin.github.io/2019/05/21/sqlserver-query-parameter/</link>
      <pubDate>Tue, 21 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://gosyujin.github.io/2019/05/21/sqlserver-query-parameter/</guid>
      <description>あらすじ 前回の記事では暗黙の型変換が起こっているか調べるために動的管理ビューから実行計画(query_plan)とSQL(text)を取得した。 実行計画にはいろいろ情報が入っていてバインド変数のパラメータも埋めこまれている。
組み合わせたら、実行したSQL(とバインド変数)がわかるのでは。
前提条件 そもそも、いい感じのフレームワークとかロガーを導入しており、実行したSQLのログが出てればそれで確認すれば良いので◎
色々調べるのがつらい環境だとこの方法で確認してみる価値があるかも。
 ログにSQL文が出力されない ライブラリ(変数バインド済のSQLを吐いてくれるP6Spyなど)が入れづらい  外界と遮断されているとか  ローカル環境、あるいはそれなりに小規模な環境  頻繁にみんながアクセスする環境だと、動的管理ビューから情報が流れていく   環境 SELECT SERVERPROPERTY(&amp;#39;productversion&amp;#39;) as VERSION;    VERSION     14.0.1000.169    手順 おさらい SELECT , query_plan , text FROM sys.dm_exec_query_stats cross apply sys.dm_exec_query_plan(plan_handle) cross apply sys.dm_exec_sql_text(sql_handle) ORDER BY last_execution_time DESC;  これで実行計画(query_plan)とSQL(text)を取得できた。
query_planからパラメータ取得 仕様 query_planの仕様はShowplan Schemaのここに定義されている。
ほしいパス バインド変数とパラメータはけっこう深い階層/ParameterList/ColumnReferenceにセットされている。
(略) &amp;lt;ParameterList&amp;gt; &amp;lt;ColumnReference Column=&amp;#34;@P0&amp;#34; ParameterDataType=&amp;#34;nvarchar(4000)&amp;#34; ParameterCompiledValue=&amp;#34;N&amp;#39;TEST&amp;#39;&amp;#34; /&amp;gt; .</description>
    </item>
    
    <item>
      <title>SQL Serverで実行したSQLが暗黙の型変換が起こっているかどうかはどうやって調べたらよいのか</title>
      <link>https://gosyujin.github.io/2019/05/02/sqlserver-convert-implicit/</link>
      <pubDate>Thu, 02 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://gosyujin.github.io/2019/05/02/sqlserver-convert-implicit/</guid>
      <description>あらすじ  SQL Serverで暗黙の型変換が起こるっていう話と、実際に簡単なSQLを実行して暗黙の型変換(CONVERT_IMPLICIT)が発生するのを確認できるという話  SQL Server のチューニングについてまとめてみる - その6 - ( CONVERT_IMPLICIT、暗黙の型変換の怖さを知ろう ) - 都内で働くSEの技術的なひとりごと SQLServer2005で、暗黙の型変換が行われる  しかし、Java(JDBC)経由で実行されているSQLを再現するにはログ等から情報をかき集めたりする必要があってちょっと手間  そもそも欲しいログが出てない事もある…  SQL Serverの中で実行したSQL持ってないかな？  持ってそう   環境 SELECT SERVERPROPERTY(&amp;#39;productversion&amp;#39;) as VERSION;    VERSION     14.0.1000.169    確認方法 システム動的管理ビューから取得できそう。
 動的管理ビュー (TRANSACT-SQL) - SQL Server | Microsoft Docs  コマンド 暗黙の型変換が起こっているか確認したいSQLを実行(実際に画面叩くとか)した後に以下のSQLを実行する。
SELECT creation_time , last_execution_time , execution_count , query_plan , text FROM sys.</description>
    </item>
    
    <item>
      <title>色々なDBのバージョン確認方法とか論理名のつけ方とか</title>
      <link>https://gosyujin.github.io/2019/04/23/database-alter-table/</link>
      <pubDate>Tue, 23 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://gosyujin.github.io/2019/04/23/database-alter-table/</guid>
      <description>あらすじ 二つ以上のDBで同じことをやろうとすると混乱するのでメモ。
とりあえずとっかかりだけ。ここを見て思い出していく。
※ 全部SQLべた書きで何とかする方針
 バージョン確認  いろんな方法があるけど、GUI(xxAdminみたいな)からSQLを実行して確認する方法  バックアップ  厳密じゃなくていい。SELECTで取得したデータを新しいテーブルに流し込むだけ  カラム増やす 論理名つける テーブル削除  Oracle(12.1.0.2.0) バージョン確認 select * from v$version;    BANNER CON_ID     Oracle Database 12c Standard Edition Release 12.1.0.2.0 - 64bit Production 0   PL/SQL Release 12.1.0.2.0 - Production 0   CORE 12.1.0.2.0 Production 0   TNS for 64-bit Windows: Version 12.1.0.2.0 - Production 0   NLSRTL Version 12.</description>
    </item>
    
    <item>
      <title>SQL Serverでの照合順序の確認方法</title>
      <link>https://gosyujin.github.io/2019/04/15/sqlserver-collation-name/</link>
      <pubDate>Mon, 15 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://gosyujin.github.io/2019/04/15/sqlserver-collation-name/</guid>
      <description>あらすじ SQLServerでは文字コード、照合順序は特に指定がなければ「規定値」が設定されるらしい。
 サロゲートペア文字とDB設計を考える | デーコムラボ SQL ServerにUnicodeの文字列を格納する方法 - 大人になったら肺呼吸 SQLServerへのデータ格納時の文字コード（コードページ）について - 大人になったら肺呼吸 SQL Server で照合順序 Japanese_CI_AS どこ消えた？あった。 | 技術的な何か。 SQL Serverにおける日本語文字列の取り扱いで躓いた話 - ShouN-7&amp;rsquo;s tech blog  とりわけAzure環境下で英語→日本語切り替えとかすると躓く模様。
でも、そもそも規定値ってどこで確認するのという話。
環境  SQL Server 14.0.1000.169  まとめ  特に指定なしでDB/テーブルを作成する場合は規定値の照合順序(Collation)を使う 照合順序を変更しても、既に作成済のユーザーデータベースのテーブルの照合順序は変わらない  システムテーブル内は変わる ユーザーテーブルはALTER DATABASEで別途変更する必要がある  確認はINFORMATION_SCHEMA.COLUMNSビューで行う  手順A(SQL Serverのシステム情報スキーマビューから確認する) INFORMATION_SCHEMA.COLUMNSビューに欲しい情報全部あった。
SELECT TABLE_CATALOG , TABLE_SCHEMA , TABLE_NAME , COLUMN_NAME , DATA_TYPE , CHARACTER_MAXIMUM_LENGTH , CHARACTER_OCTET_LENGTH , CHARACTER_SET_NAME , COLLATION_NAME FROM INFORMATION_SCHEMA.COLUMNS;    TABLE_CATALOG TABLE_SCHEMA TABLE_NAME COLUMN_NAME DATA_TYPE CHARACTER_MAXIMUM_LENGTH CHARACTER_OCTET_LENGTH CHARACTER_SET_NAME COLLATION_NAME     SAMPLE_INSTANCE SAMPLE_SCHEMA SAMPLE_TABLE ID varchar 3 3 cp932 Japanese_CI_AS   SAMPLE_INSTANCE SAMPLE_SCHEMA SAMPLE_TABLE NAME nvarchar 10 20 UNICODE Japanese_CI_AS   SAMPLE_INSTANCE SAMPLE_SCHEMA SAMPLE_TABLE ADDRESS nvarchar 25 50 UNICODE Japanese_CI_AS   SAMPLE_INSTANCE SAMPLE_SCHEMA SAMPLE_TABLE UPDATE_DATE date        手順B(頑張る場合) とあるユーザーテーブルのカラムの照合順序を調べる いきなりカラム(sys.</description>
    </item>
    
  </channel>
</rss>