<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Wicket on kk_Atakaの日記</title>
    <link>https://blog.gosyujin.com/tags/wicket/</link>
    <description>Recent content in Wicket on kk_Atakaの日記</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>jp</language>
    <lastBuildDate>Wed, 12 Jan 2011 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://blog.gosyujin.com/tags/wicket/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Wicket勉強会に参加しました</title>
      <link>https://blog.gosyujin.com/2011/01/12/1294833920/</link>
      <pubDate>Wed, 12 Jan 2011 00:00:00 +0000</pubDate>
      
      <guid>https://blog.gosyujin.com/2011/01/12/1294833920/</guid>
      <description>[Java][Wicket][イベント]Wicket勉強会に参加しました  詳細: http://atnd.org/events/11066:title  TwitterのTL取得ページを自分用に作った程度ですが、二年連続二回目の出席をキメました。バージョン1.3メインで使っていた(いる？)人なので、もう1.5が出るのかーっといったところです。
1.5になると矢野さんのWicket本の1/3が意味なくなるらしい…。
Wicket1.5の新機能 @[http://twitter.com/t_yano:title=t_yano]さん  WebRequestCycleが消えた steps(), step()も消えた  RequestTargetという概念が消えた→IRequestHandlerで代替  UrlCodingStrategy→IRequestMappterで代替 リクエストのサイクル  IRequestHandler ↑　↓ -------------------- IRequestMapper -------------------- ↑　↓ Request Url  RequestHandlerを使えればWicketの世界に入っていける RequestHandlerStack: リクエスト処理の中心でRequestHandlerをスタックとして扱う  Urlマウント  mountBookmarkablePageが消え、代わりにmountPageになった。 ${}で変数をUrlに埋め込めるようになった  /mountpath/${year}/ StringValue year = parameter.get(&amp;#34;year&amp;#34;)  - 現状はページのみ。リソースの場合はインデックスで取れる  /user/t_yano/image/ parameter.get(0) //user parameter.get(1) //t_yano コンポーネントの初期化と設定  コンストラクタ？onBeforeRender？  onInitialize()が追加された  自身がページにadd済みである事を保証。ただし一度しか呼ばれない isVisibleがfalseだったりすると呼ばれない  onConfigure()  レンダリング前にかならず呼ばれる事を保証 全コンポーネントが揃っている事が保証できるタイミング isVisibleがfalseでも呼ばれる   ButtonとかLinkとかPanelに書くもので、Pageに書くものではない  コンポーネントの独立性  密結合  ボタンを押すとあるコンポーネントが消えるという場合…  ボタンと消すコンポーネントを連携させないといけなかった     IEventSink: イベントを受け取るオブジェクト IEventSource: イベントを送信できるオブジェクト  あらゆるコンポーネントはIEventSinkかつIEventSource    Page#sendで送れる範囲  BREADTH: 子に広げる WIDTH: 子から自分まで上がる BUBBLE: 自分から親に上がる  BREADTHしか使わないんじゃないか？    ◯　◯　◯　◯ ↓イベント　↑　↑　↑ フ　レ　ー　ム　ワ　ー　ク  他のコンポーネントを意識しなくてもよくなった！ 今後はページからではなくコンポーネントから考えよう   ajaxコンポーネントを更新するaddComponent()メソッドはadd()になった  最終的な表示処理は誰のもの？ @[http://twitter.</description>
    </item>
    
    <item>
      <title>Wicketでn行m列で折り返すリストを作る</title>
      <link>https://blog.gosyujin.com/2009/03/16/1237134252/</link>
      <pubDate>Mon, 16 Mar 2009 00:00:00 +0000</pubDate>
      
      <guid>https://blog.gosyujin.com/2009/03/16/1237134252/</guid>
      <description>[Java][Wicket]Wicketでn行m列で折り返すリストを作る 　Wicket本が未だに入荷しないので一つ書く。Wicket奮闘記第二弾。困り度的には、最悪1列表示で妥協すれば良かったのでそんなに高くない。
　ただのリストじゃなくて、要素が何個か横に続き、n個で折り返す……というサンプル。イメージとしては、mixiのマイミクとかマイコミュニティみたいな感じかなぁ。相変わらずバージョンは1.3なのです。
[f:id:kk_Ataka:20090316004745p:image]
　こんな感じ。横に2つで折り返し。
　どういう風に実現するかすごい困ったけれど、調べてみるとGridViewというコンポーネントがあったのでこれは使えそうだと。以下Javaソース。
// テーブルのcolspanに設定する数  private int column; private List&amp;lt;SampleObjectModelBean&amp;gt; selected; public SampleGridView() { // 行の設定  column = 2; // DBから何らかのリスト一覧を持ってきたという体で  final List&amp;lt;SampleObjectModelBean&amp;gt; list = GenerateBeanUtility.GenerateSampleObjectModelBean(); // 自分が取得している項目という体で  selected = new ArrayList&amp;lt;SampleObjectModelBean&amp;gt;(); selected.add(list.get(2)); selected.add(list.get(5)); // DataProvider 規則的に回すもの  IDataProvider dataProvider = new IDataProvider() { private static final long serialVersionUID = -9120134891423038532L; public Iterator&amp;lt;SampleObjectModelBean&amp;gt; iterator(int first, int count) { return list.</description>
    </item>
    
    <item>
      <title>CheckBoxMultipleChoiceとChoiceRendererを使用したチェックボックスの比較</title>
      <link>https://blog.gosyujin.com/2009/03/12/1236788607/</link>
      <pubDate>Thu, 12 Mar 2009 00:00:00 +0000</pubDate>
      
      <guid>https://blog.gosyujin.com/2009/03/12/1236788607/</guid>
      <description>[Java][Wicket]CheckBoxMultipleChoiceとChoiceRendererを使用したチェックボックスの比較 　早速あげあげ。基本はいただいたコメントのソースのまま、項目のBeanなんかは自分が作っていたもの＋Wicket1.3仕様にあわせて……。
private List&amp;lt;SampleObjectModelBean&amp;gt; selected; public SampleChoiceRenderer() { // 自分が取得している項目  selected = new ArrayList&amp;lt;SampleObjectModelBean&amp;gt;(); selected.add(GenerateBeanUtility.GenerateSampleObjectModelBean(2)); selected.add(GenerateBeanUtility.GenerateSampleObjectModelBean(5)); Form form = new Form(&amp;#34;form&amp;#34;); add(form); // 選択項目全て  final List&amp;lt;SampleObjectModelBean&amp;gt; all = GenerateBeanUtility.GenerateSampleObjectModelBean(); // チェックボックス  final CheckBoxMultipleChoice multiChoice = new CheckBoxMultipleChoice(&amp;#34;list&amp;#34;, new PropertyModel(this, &amp;#34;selected&amp;#34;), all, new ChoiceRenderer(&amp;#34;name&amp;#34;, &amp;#34;outline&amp;#34;)); // 表示用ラベル  final Label label = new Label(&amp;#34;label&amp;#34;, &amp;#34;最初&amp;#34;); form.add(multiChoice); form.add(new Button(&amp;#34;next&amp;#34;) { private static final long serialVersionUID = -1359417135623629179L; // 選択したものを連結してLabelにセット  @Override public void onSubmit() { List&amp;lt;SampleObjectModelBean&amp;gt; list = (List&amp;lt;SampleObjectModelBean&amp;gt;)multiChoice.</description>
    </item>
    
    <item>
      <title>チェックボックスの初期値の続き</title>
      <link>https://blog.gosyujin.com/2009/03/11/1236776769/</link>
      <pubDate>Wed, 11 Mar 2009 00:00:00 +0000</pubDate>
      
      <guid>https://blog.gosyujin.com/2009/03/11/1236776769/</guid>
      <description>[Java][Wicket]チェックボックスの初期値の続き 　[http://d.hatena.ne.jp/kk_Ataka/20090309/1236590120:title]の続き。
　id:hayasshさんからCheckBoxMultipleChoiceを使用してみては？　というご指摘があったので使ってみたところ、これは超便利でした。しかも、Labelタグのfor属性もつけてくれるという……。[1]力技でかわしてた自分の強引さに乾杯。hayasshさんありがとうございました。
　あと、書き忘れていたのですが、自分が使っているWicketのバージョンは1.3です。なのでソースにジェネリクスがなかったり、他諸々1.4とは相違点があります。1.4は矢野さんの本を買ってから勉強しようっと。</description>
    </item>
    
    <item>
      <title>自作のWicketサンプルを上げてみる</title>
      <link>https://blog.gosyujin.com/2009/03/11/1236706056/</link>
      <pubDate>Wed, 11 Mar 2009 00:00:00 +0000</pubDate>
      
      <guid>https://blog.gosyujin.com/2009/03/11/1236706056/</guid>
      <description>[Java][Wicket]自作のWicketサンプルを上げてみる 　ようそこsampleWicket→http://samplewicket.kkataka.staxapps.net/[2]
　色々使ってみたいコンポーネントを使って動かしてみたサンプルです。CheckGroup, RadioGroup, ListViewの入れ子, GridView, PagingNavigatorなどなど……。
　必要になったんだけど、これってどうやって実現するんだろう？　と思ったものを形にしてみました。[3]特に入力チェックもしていないので、空欄でも余裕で通ったりします。
　まず上げてみただけなので、今はソースは見れません……。
　あ、Developmentモードで上げてしまった；；
hayassh
あぁ、1.4のソースでごめんなさい・・
しかもHTMLのソースは書いてないという中途半端っぷり・・
私はWicket使い始めて2年くらいになりますが、実は1年くらいCheckBoxMultipleChoiceの存在を知らずにCheckGroupとCheckでゴリゴリ実装してたのは秘密ですｗ
1236779514
kk_Ataka
やっぱり最初はCheckGroupで力技なんですかねー。
後、私が触らせて頂いているのが1.3ベースで運用しているWebシステムなので、特に意識せず1.3ベースで載せてしまいました；　バージョン明記してなくて申し訳ないです。
1236789333
[1] CheckGroupとCheckではそこまでできるのかな？
[2] サイドメニュー＞プロフィール＞自作Wicketサンプルからも行けます。
[3] 例: mixiのマイミクとかマイコミュニティ表示のようなn行m列のリストとか。</description>
    </item>
    
    <item>
      <title>チェックボックスに初期値（デフォルトでチェック）を入れる方法</title>
      <link>https://blog.gosyujin.com/2009/03/09/1236590120/</link>
      <pubDate>Mon, 09 Mar 2009 00:00:00 +0000</pubDate>
      
      <guid>https://blog.gosyujin.com/2009/03/09/1236590120/</guid>
      <description>[Java][Wicket]チェックボックスに初期値（デフォルトでチェック）を入れる方法 　Wicket奮闘記第一弾。とりあえず、Wicket開発で一番困った所、CheckGroupとCheckコンポーネントを使用したチェックボックスに初期値＝チェックを入れておく処理です。
　何かユーザ情報を登録するフォームがあってー、入れましたー、編集ボタンを押して編集画面に行きましたー、すると、
[f:id:kk_Ataka:20090309171545p:image]
　最初からこう、チェックが入っていてほしいという状況です。
　テキストのフォーム(TextField)なら、第二引数にDBから引っ張ってきたものを突っ込んでやればこんな感じで表示できるのですが、
[f:id:kk_Ataka:20090309162050p:image]
　チェックボックスはもう少しやらなきゃいけないことがあるみたい……。
//第二引数がユーザが持っている値 CheckGroup checkGroup = new CheckGroup(&amp;#34;checkGroup&amp;#34;, /*ユーザが持っているもののリスト*/); //第二引数が選択項目の値 ListView listView = new ListView(&amp;#34;list&amp;#34;, /*選択肢のリスト*/) { private static final long serialVersionUID = 2972646917485688487L; @Override protected void populateItem(ListItem listItem) { listItem.add(new Check(&amp;#34;check&amp;#34;, listItem.getModel())); listItem.add(new Label(&amp;#34;value&amp;#34;, listItem.getModelObjectAsString())); } }; 　Javaはこう。で、htmlはこうしてみました。
&amp;lt;table&amp;gt; &amp;lt;span wicket:id=&amp;#34;checkGroup&amp;#34;&amp;gt; &amp;lt;tr&amp;gt; &amp;lt;th&amp;gt;なんとか一覧&amp;lt;/th&amp;gt; &amp;lt;/tr&amp;gt; &amp;lt;tr wicket:id=&amp;#34;list&amp;#34;&amp;gt; &amp;lt;td&amp;gt; &amp;lt;input type=&amp;#34;checkbox&amp;#34; wicket:id=&amp;#34;check&amp;#34; /&amp;gt; &amp;lt;span wicket:id=&amp;#34;value&amp;#34; /&amp;gt; &amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt; &amp;lt;/span&amp;gt; &amp;lt;/table&amp;gt; 　これらから生成されるページはこうなります。</description>
    </item>
    
  </channel>
</rss>