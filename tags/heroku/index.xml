<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Heroku on kk_Atakaの日記</title>
    <link>https://gosyujin.github.io/tags/heroku/</link>
    <description>Recent content in Heroku on kk_Atakaの日記</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>jp</language>
    <lastBuildDate>Mon, 21 May 2012 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://gosyujin.github.io/tags/heroku/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>SlideShareのAPIを叩いてスライドをDLするRubyスクリプトをHerokuにデプロイした</title>
      <link>https://gosyujin.github.io/2012/05/21/1337605575/</link>
      <pubDate>Mon, 21 May 2012 00:00:00 +0000</pubDate>
      
      <guid>https://gosyujin.github.io/2012/05/21/1337605575/</guid>
      <description>[SlideShare][Heroku][Ruby][API]SlideShareのAPIを叩いてスライドをDLするRubyスクリプトをHerokuにデプロイした あらすじ slideshareを社内から閲覧する事を禁じられているので、ワンクッションおいてスライドのpptを落とせるようにしたい
参考サイト  http://www.slideshare.net/developers/documentation#get_slideshow:title  とりあえず公式サイトを抑えておけばいけそう。
流れ API申請  slideshare -&amp;gt; Developer &amp;amp; APIのページからApply for API keyに移動 ログイン or 新規アカウント作成 Name、E-Mail、How do you want to use the API?を入力し送信。頑張って英文書く。  I want to get slideshare&amp;#39;s slide from API.  送信されたメールに貼られているAPI KeyとShared Secretを控える  パラメータ  slideshare -&amp;gt; Documentationを見ながら必要なパラメータを調べる  |*api_key|さっきのAPI Key|
|*ts|タイムスタンプ[1]|
|*hash|さっきのShared Secretとこれから取得するtsでハッシュを作る[2]|
|*(username)|登録ID|
|*(password)|パスワード|
全然関係ないけど、Documentationのページ内にあるi.e.って単語を初めて見たのでググってみた。http://www.masahiko.info/life/archives/000799.html:title that is &amp;hellip; すなわちとかそういう意味らしい。e.g.で例えば、for example的な。
ソース ソースはこんな感じ。
require &amp;#39;openssl&amp;#39; require &amp;#39;uri&amp;#39; require &amp;#39;net/http&amp;#39; url = &amp;#39;http://www.</description>
    </item>
    
    <item>
      <title>BPStudy#55に参加しました</title>
      <link>https://gosyujin.github.io/2012/04/01/1333220954/</link>
      <pubDate>Sun, 01 Apr 2012 00:00:00 +0000</pubDate>
      
      <guid>https://gosyujin.github.io/2012/04/01/1333220954/</guid>
      <description>[Heroku][Agile][イベント]BPStudy#55に参加しました 詳細: http://connpass.com/event/354/:title  Heroku大好き  ということで参加しました。
第1部 Heroku @[http://twitter.com/herokujp:title]さん(相澤歩さん、Heroku Herokuとは  元々Rubyアプリケーションをデプロイするサービスだった。 今はJavaとかScalaとか  最近はFacebookアプリの影響でPHPが多い！   Heroku=Rubyと思っていたので、(実際それで使っていたのもある)最近はjsやJava使えたというのが個人的に驚き。さらに最近はPHPも多いという事らしい。ただしBPStudyの会場で聞いたところ。
\#bpstudy Herokuを何で使ってますか→Python、Rubyそこそこ、Java、Scalaもある程度、PHPなどがほぼいない
&amp;mdash; ごしゅじんさん (@kk\_Ataka) 3月 30, 2012 懇親会での話によると「あの空気では手を挙げられない」ということだったらしい。
Herokuって何？　改めて再定義  単なるホスティングサービス？  いいえ、PaaSです ホスティングサービスと何が違うの？ 開発者がサーバの管理とかスケーラビリティを意識せずに製品を作れるように   生産性の低いプログラマを底上げするものではない  できるプログラマをさらに引き上げてくれるサービス Rubyの思想と似ているかも(＝ある程度できる人向けのもの)  今後Herokuを使う人へ  Herokuで色々やってTwitter, GitHubなどで情報発信してみてください Add onを作ってマーケットプレイスに登録もできるよ、売れるよ！  第2部 SonicGardenでのherokuの実践活用 Sonic Garden 松村さん(@[http://twitter.com/mat_aki:title]さん) Sonic Gardenとは  受託一括納品についての問題点を解決する  &amp;ldquo;納品しない&amp;rdquo;受託開発  「Heroku」でググると4番目に出る  Sonic Gardenのソフトウェア開発について Sonic Gardenでは6~7人で人数以上のプロジェクトを走らせている=一人が複数のプロジェクトを掛け持ちしている。以下のようなツールを使っている。
 http://www.</description>
    </item>
    
    <item>
      <title>rvm環境でRuby実行時にReadlineエラーが起きた時の対処法</title>
      <link>https://gosyujin.github.io/2011/11/30/1322662743/</link>
      <pubDate>Wed, 30 Nov 2011 00:00:00 +0000</pubDate>
      
      <guid>https://gosyujin.github.io/2011/11/30/1322662743/</guid>
      <description>[Ruby][備忘録][Heroku]rvm環境でRuby実行時にReadlineエラーが起きた時の対処法 タイトル通り。さくらVPS(CentOS)にrvmでRubyをインストールし、Heroku環境を構築しようとしたらReadlineエラーが起きた。
$ rvm install 1.9.2 (略) $ rvm use 1.9.2 $ gem install heroku (略) $ heroku /home/kk_Ataka/.rvm/rubies/ruby-1.9.2-p290/lib/ruby/site_ruby/1.9.1/rubygems/custom_require.rb:36:in `require&amp;#39;: no such file to load -- readline (LoadError) from /home/kk_Ataka/.rvm/rubies/ruby-1.9.2-p290/lib/ruby/site_ruby/1.9.1/rubygems/custom_require.rb:36:in `require&amp;#39; from /home/kk_Ataka/.rvm/gems/ruby-1.9.2-p290/gems/heroku-2.14.0/lib/heroku/command/run.rb:1:in `&amp;lt;top (required)&amp;gt;&amp;#39; from /home/kk_Ataka/.rvm/rubies/ruby-1.9.2-p290/lib/ruby/site_ruby/1.9.1/rubygems/custom_require.rb:36:in `require&amp;#39; from /home/kk_Ataka/.rvm/rubies/ruby-1.9.2-p290/lib/ruby/site_ruby/1.9.1/rubygems/custom_require.rb:36:in `require&amp;#39; from /home/kk_Ataka/.rvm/gems/ruby-1.9.2-p290/gems/heroku-2.14.0/lib/heroku/command.rb:17:in `block in load&amp;#39; from /home/kk_Ataka/.rvm/gems/ruby-1.9.2-p290/gems/heroku-2.14.0/lib/heroku/command.rb:16:in `each&amp;#39; from /home/kk_Ataka/.rvm/gems/ruby-1.9.2-p290/gems/heroku-2.14.0/lib/heroku/command.rb:16:in `load&amp;#39; from /home/kk_Ataka/.rvm/gems/ruby-1.9.2-p290/gems/heroku-2.14.0/bin/heroku:13:in `&amp;lt;top (required)&amp;gt;&amp;#39; from /home/kk_Ataka/.rvm/gems/ruby-1.9.2-p290/bin/heroku:19:in `load&amp;#39; from /home/kk_Ataka/.rvm/gems/ruby-1.9.2-p290/bin/heroku:19:in `&amp;lt;main&amp;gt;&amp;#39; readlineが入っていなかったのだろうか？
$ sudo yum install readline-devel $ cd $rvm_path/src/RUBYVERSION/ext/readline $ ruby extconf.</description>
    </item>
    
    <item>
      <title>LokkaをインストールしてHerokuにデプロイした</title>
      <link>https://gosyujin.github.io/2011/11/27/1322329546/</link>
      <pubDate>Sun, 27 Nov 2011 00:00:00 +0000</pubDate>
      
      <guid>https://gosyujin.github.io/2011/11/27/1322329546/</guid>
      <description>[Ruby][備忘録][Heroku][Lokka]LokkaをインストールしてHerokuにデプロイした あらすじ Herokuを使い出したのでLokkaを触ってみる。
参考サイト  http://lokka.org/getting-started:title  公式ページの手順だけでなんとかなりそう。
手順 Lokka入手、インストール LokkaをGitHubからCloneして、Bundle install。&amp;ndash;withoutオプションでmysql, postgresql, sqliteから使わないDBを指定できる。
$ git clone git://github.com/komagata/lokka.git$ cd lokka $ bundle install ./vendor/bundle --without development mysql sqlite ん、何かエラッた。
Gem::Installer::ExtensionBuildError: ERROR: Failed to build gem native extension. (略) Gem files will remain installed in /home/kk_Ataka/github/lokka/vendor/bundle/ruby/1.9.1/bundler/gems/do-d7cb262d89a1/do_postgres for inspection. Results logged to /home/kk_Ataka/github/lokka/vendor/bundle/ruby/1.9.1/bundler/gems/do-d7cb262d89a1/do_postgres/ext/do_postgres/gem_make.out An error occured while installing do_postgres (0.10.6), and Bundler cannot continue. Make sure that `gem install do_postgres -v &amp;#39;0.</description>
    </item>
    
    <item>
      <title>HerokuにWebアプリ(Sinatra)をデプロイする手順をまとめた</title>
      <link>https://gosyujin.github.io/2011/11/26/1322240459/</link>
      <pubDate>Sat, 26 Nov 2011 00:00:00 +0000</pubDate>
      
      <guid>https://gosyujin.github.io/2011/11/26/1322240459/</guid>
      <description>[Ruby][備忘録][Sinatra][Heroku]HerokuにWebアプリ(Sinatra)をデプロイする手順をまとめた あらすじ いよいよHerokuをはじめる。
参考サイト  http://d.hatena.ne.jp/ruedap/20110209/ruby_heroku_twitter_bot:title http://studyheroku.wiki.fc2.com/wiki/Heroku%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89:title http://kuranuki.sonicgarden.jp/2009/05/rubypaasherokurails.html:title  事前準備  Ruby 1.9.3 Git 1.7.3 rvm 1.9.2 gem 1.8.10  gem管理にbundlerを使いたい   プロジェクト作成 Bundler準備 プロジェクトフォルダ(heroku_sample)を作成し、その中にGemfileファイルを作成する。gem &amp;lsquo;heroku&amp;rsquo;は後ほどHerokuに対してプロジェクトを作ったりするのに使用する。
$ mkdir heroku_sample $ cd heroku_sample $ vi Gemfile source :rubygems source &amp;#39;http://rubygems.org&amp;#39; gem &amp;#39;sinatra&amp;#39; gem &amp;#39;heroku&amp;#39; bundleでインストール。場所は任意で。今回はカレントのvendor/bundleにインストール。
$ bundle install ./vendor/bundle Sinatra準備 SinatraでHello World!!できるようにサンプルファイルapp.rbを作成。
$ vi app.rb require &amp;#39;rubygems&amp;#39; require &amp;#39;sinatra&amp;#39; get &amp;#39;/&amp;#39; do &amp;#34;Hello World!&amp;#34; end Rackアプリケーションとして起動するためconfig.ruファイルを作成する。
require &amp;#39;./app.rb&amp;#39; run Sinatra::Application ※ちょっと先の話になるけど、始めは1行目をrequire &amp;lsquo;app.</description>
    </item>
    
  </channel>
</rss>