<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ruby on note.gosyujin.com - kk_Atakaの日記</title>
    <link>https://note.gosyujin.com/tags/ruby/</link>
    <description>Recent content in Ruby on note.gosyujin.com - kk_Atakaの日記</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>jp</language>
    <lastBuildDate>Thu, 30 Mar 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://note.gosyujin.com/tags/ruby/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>rbenvを最新にして新しいバージョンのRubyをインストールできるようにする</title>
      <link>https://note.gosyujin.com/2017/03/30/rbenv-update/</link>
      <pubDate>Thu, 30 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2017/03/30/rbenv-update/</guid>
      <description>あらすじ  git cloneでインストールしたrbenvを最新にして新しいRubyをインストールする  ちょくちょく忘れるので
手順 Basic GitHub Checkout に沿ってインストールすると、カレントディレクトリ直下に ~/.rbenv と ~/.rbenv/plugins/ruby-build があるはず。ここを最新にする。
$ cd ~/.rbenv $ git pull $ cd ~/.rbenv/plugins/ruby-build $ git pull $ rbenv install -l を実行してインストールできるRubyのバージョンを確認みる。
好きなバージョンをインストールする。</description>
    </item>
    
    <item>
      <title>Rubyの変数DATABASE_URLでハマった話</title>
      <link>https://note.gosyujin.com/2016/08/31/ruby-database-url/</link>
      <pubDate>Wed, 31 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2016/08/31/ruby-database-url/</guid>
      <description>あらすじ  一台のサーバーに複数のRailsアプリケーションがある 新しく一つRailsアプリケーションを作成した config/database.yml を見るとこんなコメントアウトがあった  # On Heroku and other platform providers, you may have a full connection URL# available as an environment variable. For example:## DATABASE_URL=&amp;#34;mysql2://myuser:mypass@localhost/somedatabase&amp;#34;## You can use this database configuration with:## production:# url: &amp;lt;%= ENV[&amp;#39;DATABASE_URL&amp;#39;] %&amp;gt;#  こんな変数があるのね。 database.yml で使ってみた  production:url:&amp;lt;%=ENV[&amp;#39;DATABASE_URL&amp;#39;]%&amp;gt;  変数を .bash_profile あたりに定義  export DATABASE_URL=&amp;#34;mysql2://myuser:mypass@localhost/somedatabase&amp;#34;  結果、同じサーバーに存在している全部のRailsアプリケーションが上記の接続先を見に行った！  原因 コメントでも DATABASE_URL を使用してね、とあるが、環境変数に ENV[&#39;DATABASE_URL&#39;] が存在すると active_record/connection_handling.rb で DATABASE_URL がマージされてしまう模様。
 Rails アプリケーションを設定する Rails ガイド #データベースを設定する  以下、引用。</description>
    </item>
    
    <item>
      <title>Rubyで自然言語っぽくcrontab管理できるwheneverを使う</title>
      <link>https://note.gosyujin.com/2016/06/05/whenever-helloworld/</link>
      <pubDate>Sun, 05 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2016/06/05/whenever-helloworld/</guid>
      <description>あらすじ  cronタスクを書きたいけど、そのままctontabを書きかえたりするのはめんどいし怖い( crontab -r とか) Rubyでcrontab管理をできるライブラリwheneverを使う  javan/whenever: Cron jobs in Ruby
 Whenever is a Ruby gem that provides a clear syntax for writing and deploying cron jobs.
 参考  Wheneverは導入が超簡単なcrontab管理ライブラリGemです！[Rails4.2 x Ruby2.3] - 酒と泪とRubyとRailsと Railsで定期的にバッチ回す「Whenever」 - Qiita  環境  Ruby 2.3.0 Rails 4.1.6  手順  Gemfile に以下を追記し、 bundle install  gem &amp;#39;whenever&amp;#39;, require: false  bundle exec wheneverrize . でスケジュール記述するファイルを作成する  $ bundle exec wheneverize .</description>
    </item>
    
    <item>
      <title>El Capitan上に古いpumaをインストールすると失敗する</title>
      <link>https://note.gosyujin.com/2016/02/17/bundle-install-old-version-puma-for-el-capitan/</link>
      <pubDate>Wed, 17 Feb 2016 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2016/02/17/bundle-install-old-version-puma-for-el-capitan/</guid>
      <description>あらすじ El Capitan上に bundle install で古い puma を入れようとしたらエラーになった。
 Need to specify --with-opt-dir on OSX 10.11 El Capitan. · Issue #718 · puma/puma  環境  Mac OS X El Capitan 10.11.3 Ruby 2.1.4p265  解決策 EL Capitanに古い 2.14 より低い puma を入れるには --with-opt-dir でopensslのパスを指定する必要がある。
$ bundle config build.puma --with-opt-dir=/usr/local/opt/openssl$ cat ~/.bundle/config --- BUNDLE_BUILD__PUMA: &amp;#34;--with-opt-dir=/usr/local/opt/openssl&amp;#34; 指定しないとエラー。
Gem::Ext::BuildError: ERROR: Failed to build gem native extension. /Users/ataka/.rbenv/versions/2.1.4/bin/ruby extconf.rb checking for BIO_read() in -lcrypto.</description>
    </item>
    
    <item>
      <title>rubyXLを使ってExcelを操作したい</title>
      <link>https://note.gosyujin.com/2015/02/28/excel-by-ruby/</link>
      <pubDate>Sat, 28 Feb 2015 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2015/02/28/excel-by-ruby/</guid>
      <description>あらすじ ExcelファイルをRubyで操作したい。
以前WIN32OLEから直接触ってみたけど、ライブラリを使って簡単に触ってみたい。
環境  Windows 7 Ruby 2.1.5  rubyXL 3.3.4  Microsoft Office 2010  参考  Ruby - RailsでExcelを扱うGemまとめ - Qiita RubyでExcelファイルを扱うライブラリの比較 - Qiita [Ruby]RubyでExcelをつかう[Rails] - Qiita RubyからExcelを操作する方法について ｜ Futurismo ※WIN32OLE使用  意外とある。
が、開きたいファイル、保存したいファイルが何なのか(xlsなのかxlsxなのか)によって使うライブラリを選定する必要あり。
xlsx読めない！とかxlsで書きこめない！とかある。
やりたいこと  共有サーバの中にあるExcelファイルを開く 特定のセル(B3みたいな)に値が入っているか確認する  入っていれば次の処理へ 入っていなければn個下のセル(B6みたいな)に値が入っているか確認する…の繰り返し  空いているセルに値を挿入 保存して終わり  よくありがちな「定期的に台帳の一番下に定型文を挿入したい」系の話。
ソース Gistにあげた。
 今回はrubyXLというライブラリを使ってみた。
わりと簡単に書けて、やりたいこと(開く、値読む、値書く、保存する)がすぐできたのでこれで。
これで便利。(^ー^)</description>
    </item>
    
    <item>
      <title>kawasaki.rb #015 でSphinx導入事例の発表をしてきました #kwskrb #sphinxjp</title>
      <link>https://note.gosyujin.com/2014/08/28/kawasakirb-015/</link>
      <pubDate>Thu, 28 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2014/08/28/kawasakirb-015/</guid>
      <description>あらすじ kawasaki.rb #015 で発表してきたので、まとめ。
 Kawasaki.rb #015  あわせて読みたい
 kawasaki.rb #013 でSphinx導入事例の発表をしてきました と #011 #012 参加記録 #kwskrb #sphinxjp - kk_Atakaの日記  本当は14回で発表したかったのだけど、病欠してしまった…。
発表内容 以下のスライドを元に発表しました。
  SIerでもSphinxを使いたい！ 後編  from kk_Ataka 
結論 結論としては、
 やはり納品物にするには(歴史的経緯などから)厳しい  社内ドキュメントにする分には問題なし SphinxからOutputを出すのはいいけど、顧客に巻き取られた後変更に耐えうる形式じゃないとつらい  チームで適用するには一人ではつらい(個人的なパワー不足)  最低でも一人賛同者がほしい   こんな感じ。もっとパワフルな人ならうまくやれるかもしれないが、自分では厳しかった。
以下かいつまんで。
導入にあたり  実際にSphinxを導入するための壁  自分とプロジェクトのメンバー reST記法覚えに注力してもらうために、雑用(お膳立て)は全部やる プロジェクトと顧客 Officeで書かないよという宣言をする必要があると思う   納品にあたり 納品後、顧客に巻き取られる場合のいい案がない。
 どうやって納品するの？  rstのまま(rst -&amp;gt; make) 保守も自分たちでできるならそれでもいいかも 顧客にmakeしてもらうの敷居高すぎ Outputを提出 html, pdf 見た目はきれい、だけど修正が発生した場合どうすれば word きれいに出すの難しい(個人的に) / あまり需要がない？   つまるところ「よし、いこう！いこうぜ、みんな！」状態を作るのがかなり難しい。</description>
    </item>
    
    <item>
      <title>kawasaki.rb #013 でSphinx導入事例の発表をしてきました と #011 #012 参加記録 #kwskrb #sphinxjp</title>
      <link>https://note.gosyujin.com/2014/07/13/kawasakirb-011-012-013/</link>
      <pubDate>Sun, 13 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2014/07/13/kawasakirb-011-012-013/</guid>
      <description>あらすじ kawasaki.rb に参加したものの記録を取っていなかったのでまとめて。
13回目ではSphinxを話をしたのでその備忘録。Ruby系の勉強会だけどRuby以外の発表でも大丈夫。
 Kawasaki.rb #011  kawasaki.rb #011 を開催しました #kwskrb  Kawasaki.rb #012  kawasaki.rb #012を開催しました #kwskrb  Kawasaki.rb #013  kawasaki.rb #013を開催しました #kwskrb   発表内容 以下のスライドを元にLTしました。
  SIerでもSphinxを使いたい！ 前編  from kk_Ataka 
Sphinxを使用したドキュメント作成をする機会を探っていて、ようやくドンピシャで導入できるプロジェクトをこの手で手繰り寄せたのでそこで得た知見をまとめました。
大体の内容はこの辺から参照してます。
 「Sphinxをはじめよう」を読んで導入したいと思ったので色々考えてみた - kk_Atakaの日記 「Sphinxをはじめよう」を読んで導入したいと思ったので色々考えてみた2 - kk_Atakaの日記  ねらい  「なんとか設計書_日付_リビジョン(だれそれ更新分)(最新版).xls」 とかいう差分取りづらい伝説のファイルが共有サーバ上に量産されるの辛い… 共有サーバに上記のようなファイルがちらかるのでどこに何があるかわかりにくい ミリ単位のレイアウト調整に苦心するのやだ  という事で
 プレーンテキストで文書を作成できる 文書を体系立てて管理できる デザインなどはアウトプット時におまかせ  できるSphinxを導入しようというもの。
なぜSphinxがいいのかというところを競合するツールと比較してみたところまでを発表しました。
次の発表で「導入する際、導入した後に気をつけた事」とか発表する予定です。
おまけ 11回目、12回目で起こったこと  ロゴができた kawasaki.rbのGitHub Pagesができた(Powered by Jekyllだ！) kawasaki.</description>
    </item>
    
    <item>
      <title>kawasaki.rb #010 で発表してきました #kwskrb</title>
      <link>https://note.gosyujin.com/2014/04/01/kawasakirb-010/</link>
      <pubDate>Tue, 01 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2014/04/01/kawasakirb-010/</guid>
      <description>あらすじ 詳細は主催者の @chezou さんのまとめから。
 Kawasaki.rb #010 - Kawasaki.rb ｜ Doorkeeper kawawaki.rb #010 を開催しました #kwskrb ｜ once upon a time,  kawasaka.rb というコミュニティを知り、参加。
はじめて LT した！
流れ  今回予定されていた LT の 1 本が @chezou さんの「はじめて翻訳記事を書いたら300ブクマ超えた話」  ブログ記事とソフトウェアのドキュメントの違いこそあれ、方向は大分近いかも  流れで 次枠の LT に入れてもらった  スライドなど用意していなかったため、 自分のエントリ をもとにやったことと、困っていることを発表した   初めての LT だったので緊張したが、得るものがたくさんあった。
以下あまりまとまってない内容 当該記事の中で、自分が困っていると思った項目のうち、「原文はどうしよう？」というところに焦点を当てた。
困っている項目はこんな感じ。
 意訳 or 直訳？ 原文はどうしよう？ 誰が、どこで、どう管理するか？  ※ 「誰が、どこで、どう管理するか？」に関しては、プロジェクトの方針を決める人たちが「こうしたい」と決めたら、それを尊重するのが一番よいかと。 Jekyll ( jekyllrb.com )の場合は「 本家では他言語のドキュメントは管理したくない 」という方針のため、日本語用リポジトリ jekyllrb.</description>
    </item>
    
    <item>
      <title>Jekyllプロジェクトへpull requestを行う手順(したとは言っていない)</title>
      <link>https://note.gosyujin.com/2014/01/28/pull-request-to-jekyll/</link>
      <pubDate>Tue, 28 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2014/01/28/pull-request-to-jekyll/</guid>
      <description>あらすじ  Jekyll に一点気になるところがあったのでなおしかたを調べた せっかくなのでプルリクエストしてみたい！ …が、知らないこと多すぎて頓挫 とりあえず、今わかったところまでまとめた ← 今ここ  なおした内容 Jekyll でかき集められた tags (タグのリスト) がバラバラのため、 tags.html ページから探すのがつらいのでソートをしたい。
修正内容 Jekyll のソースを追っていった結果、 jekyll/lib/jekyll/site.rb 内の一行をいじるだけでいけた。
def post_attr_hash(post_attr) # Build a hash map based on the specified post attribute ( post attr =&amp;gt; # array of posts ) then sort each array in reverse order. hash = Hash.new { |hsh, key| hsh[key] = Array.new } self.posts.each { |p| p.send(post_attr.to_sym).each { |t| hash[t] &amp;lt;&amp;lt; p } } hash.</description>
    </item>
    
    <item>
      <title>RubyでQRコードを生成してみる</title>
      <link>https://note.gosyujin.com/2013/12/24/ruby-qr/</link>
      <pubDate>Tue, 24 Dec 2013 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2013/12/24/ruby-qr/</guid>
      <description>あらすじ この記事は Ruby Advent Calendar 2013 - Qiita [キータ] の 24 日目の記事です。
 23 日目: mrknさん 24 日目: ここ 25 日目: aerealさん  とりあえず、私用で URL から QR コードを生成したいので、 Ruby で実現できるか調べてみた。
成果物 とりあえず、以降の手順の QR コード作成方をもう少しゴチャゴチャやって Heroku にデプロイ。
 tycoon-qr-sina gosyujin/qr_sina · GitHub  課題  特にエラーチェックとかしてない 日本語がうまく読み取れない  今回使った rqrcode の Issue の中にこんなものを発見した。 UTF8 strings under Ruby 1.9.2 · Issue #3 · whomwah/rqrcode · GitHub
で、やってみると、確かに日本語を QR コードに落とす事ができた！
ただし、ここでさらにわからないことが増えた…。
 UTF-8 文字列を安全に CP852 に変換する方法(今は force_encoding で無理やり変換している) なんで CP852 なのか そもそも CP852 とは  参考サイト  toretore/barby · GitHub Example Embed barcode - ThinReports - Matsukei Open Source Center Railsの画面にQRコードを表示 - 技術メモ的なモノと気になるモノ RubyでQRコードを作るには - まめ畑 rubyでQRコード生成 - harry’s memorandum  環境  Windows 7 Ruby 1.</description>
    </item>
    
    <item>
      <title>Jekyllバージョンアップの際に思いのほか手こずった話 てっく煮さん製プラグインの更新に追従したい編</title>
      <link>https://note.gosyujin.com/2013/09/07/jekyll-maintenance-2/</link>
      <pubDate>Sat, 07 Sep 2013 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2013/09/07/jekyll-maintenance-2/</guid>
      <description>前回までのあらすじ  Jekyllバージョンアップの際に思いのほか手こずった話 Jekyll Bootstrapの更新に追従したい編  結論 fork していれば、だいたいなんとかなる。
環境  Ruby 1.9.3  RedCloth (4.2.9) bundler (1.3.5) classifier (1.3.3) colorator (0.1) commander (4.1.4) directory_watcher (1.4.1) fast-stemmer (1.0.2) highline (1.6.19) hparser (0.4.0 dc35f05) jekyll (1.0.0 9f94eaf) kramdown (0.14.2) liquid (2.5.1) maruku (0.6.1) posix-spawn (0.3.6) pygments.rb (0.4.2) rake (10.1.0) rdiscount (2.1.6) redcarpet (2.2.2) safe_yaml (0.7.1) syntax (1.0.0) yajl-ruby (1.1.0)   参考サイト  Git で複数のリポジトリをまとめたり、逆に切り出したりする - Qiita [キータ]  やりたい事: てっく煮プラグイン編 @nitoyon さんが公開しているリポジトリ( https://github.</description>
    </item>
    
    <item>
      <title>Ruby1.9.3のWebrickで出るCould not determine content-length...エラーを消す方法(2.0.0では解決済)</title>
      <link>https://note.gosyujin.com/2013/09/03/redmine-content-length-error/</link>
      <pubDate>Tue, 03 Sep 2013 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2013/09/03/redmine-content-length-error/</guid>
      <description>あらすじ Redmineを起動している時に以下のようなログが大量に吐かれコンソールが埋め尽くされて困った。
[yyyy-mm-dd ...] WARN Could not determine content-length of response body. Set content-length of the response or set Response#chunked = true 環境  Ruby 1.9.3 Redmine 2.3.1  Rails 3.2.13 WEBrick 1.3.1   参考サイト  Railsのログから&amp;rdquo;Could not determine content-length &amp;hellip;&amp;ldquo;とかでてるのを消す - Qiita [キータ] Webrickが出す大量のログを抑止するには？ - QA@IT Ruby - Railsサーバーの WARN Could not determine content-length… のログを表示しないようにする - Qiita [キータ] rails 3.1.1.rc1 emits warning for each assets when using ruby-1.</description>
    </item>
    
    <item>
      <title>ソースコード中に0xC2A0(UTF-8のNO-BREAK SPACE)が混ざり実行できなくて困った話</title>
      <link>https://note.gosyujin.com/2013/08/26/utf8-space-c2a0/</link>
      <pubDate>Mon, 26 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2013/08/26/utf8-space-c2a0/</guid>
      <description>あらすじ あるソースコードをコピペして実行しようとしたところ、なんか動かない。(正確にはパッチファイルを適用しようとした)
目grep してみたところ、おかしいところはなさげである。
参考サイト  ＆nbsp； は半角スペースではないというお話 (フェンリル デベロッパーズブログ) UTF-8の0xC2A0問題 【ブログ掲載のソースをコピペして、動作しないときに疑うべきこと】 某氏の猫空 文字コードC2A0（UTF-8の半角空白）なんてあるんですね at softelメモ Trimでも消えないスペースって？ 文字コードC2A0 サイトスパイラル(Sitespiral) UTF-8の半角スペースについて - とりあえず落ち着け ノーブレークスペース - Wikipedia  調査 動かないファイルを色々調べてみると以下のようなことがわかった。
 ソースコード上の「半角スペースらしき空白」(A) を「半角スペース」(B) (キーボードのスペースキーで出した空白)で検索しても 引っかからない この (A) と (B) は別ものらしく :s/(A)/(B)/ とかすると置換が実行される また、 (A) を (B) に置換した状態だとエラーが出ずに実行できるようになった  「半角スペースらしき空白」が半角スペースではない何かのため、実行できなくなっていた模様。
ということで、この「半角スペースらしき空白」を抽出してバイナリエディタで見てみた。
a b c 一応テキトウな文字で挟んでみる。
 a と b の間 が「半角スペースらしき空白」 b と c の間 が「半角スペース」  とした。
見てみると…。
61 C2 A0 62 20 63 61 62 63 はそれぞれ a b c で、 20 は 半角スペース であるというところまではOK。</description>
    </item>
    
    <item>
      <title>Rails3のログ出力にANSIカラーコードを使用しない設定</title>
      <link>https://note.gosyujin.com/2013/08/20/rails3-log-not-colorize/</link>
      <pubDate>Tue, 20 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2013/08/20/rails3-log-not-colorize/</guid>
      <description>あらすじ WindowsでRails(Redmine)を実行した時のログが超見づらいのはなんで？
こんな風になる。helloと表示されるはずの場合。
[31mhello[0m 何とかしたい。
環境  Windows 7 Rails 3.2  参考サイト ANSIカラーというコードを使用されている  RubyでANSIカラーシーケンスを学ぼう！ 謎のC言語ブログ: ANSI標準エスケープシーケンス  この現象自体を止めるには  Ruby - Rails3でログの色分けを止める - Qiita [キータ] 設定ファイル(config) - Railsドキュメント  Windows(コマンドプロンプト)でもANSIカラー(未実施)  WindowsのコマンドプロンプトでRailsのログをカラー表示する - yyamasakの日記 - Rubyist Windows ansi.sys WindowsのコマンドプロンプトでもANSIカラーを使いたい「wac」｜オープンソース・ソフトウェア、ITニュースを毎日紹介するエンジニア、デザイナー向けブログ  ANSIカラー  ターミナルにおいて、文字に色を付けるためのエスケープシーケンスみたい ソースコード上には print &amp;quot;\e[31mhello\e[0m&amp;quot; こう記載されている  \e[xxm がコード 31 は文字色を赤に 0 は終われ コードによって文字色、背景色、装飾をいじることができる   で、Rail3はこれに対応しているので、UnixとかMacとかだとログが色分けされ美しく表示されるようになっている。(あとCygwinでもいけるっぽい)
そういえば、さくらVPS上(CentOS)でRailsを実行している時は奇麗だったんだよな思い出してみれば。
無効化するには Windowsでも色つけができる(参考サイト参照)ようだが、めんどいので無効化する方向で。
REDMINE/config/application.rb に以下の記述を追加。
config.colorize_logging = false 特定環境のみとかの設定もできるが、とりあえずオールオフで。</description>
    </item>
    
    <item>
      <title>WindowsにRedmine2.3をインストールする手順と、プラグイン作成用メモ</title>
      <link>https://note.gosyujin.com/2013/08/09/redmine2/</link>
      <pubDate>Fri, 09 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2013/08/09/redmine2/</guid>
      <description>あらすじ Redmine 2.0台におけるインストール方法〜起動方法とプラグインの作り方のメモ。
環境  Windows 7 32bit Ruby 1.9.3  Bundler 1.3.5 導入済 DevKit 導入済  Redmine 2.3.1 MySql 5.6.12.1  参考サイト  Redmineのインストール — Redmine Guide 日本語訳 Hooks - Redmine Hooks List - Redmine プラグイン ホック - r-labs ビュー(view) - Railsドキュメント  Redmineインストール手順 まずは準備。
MySQL 実はMySQLさわるのはじめてかもしれない。
 MySQL :: Download MySQL Installer からインストーラをDL。Oracleのアカウントが必要 基本的にPathなどの設定はそのまま。  Choosing a Setup Type: Developer Default を選択 MySQL Server Configuration: Server Configuration Type は Development Machine ポートは 3306 root のパスワードを入力 Windows Service Details の Start the MySQL Server at System Startup のチェックだけ KILL そんなに使わないしPCがしょぼいので常時起動させておくこともない   全部終わると MySQL Workbench が立ち上がる。</description>
    </item>
    
    <item>
      <title>Jekyllバージョンアップの際に思いのほか手こずった話 Jekyll Bootstrapの更新に追従したい編</title>
      <link>https://note.gosyujin.com/2013/08/07/jekyll-maintenance-1/</link>
      <pubDate>Wed, 07 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2013/08/07/jekyll-maintenance-1/</guid>
      <description>あらすじ forkとか、fetchとか、本で読んでるだけじゃ実際やりたい時にどうやりゃいいかわからん…という話。
Github Pagesで運用しているJekyllのバージョンアップをする時に死んだ
 原因は、他の人が公開しているプラグインやcssをほいほい コピペ していたため  公開先ではもちろんJekyllの更新に追従しており、更新を怠った己が自爆しているだけ)  なんとか自分のリポジトリでも追従したい。でもコピペはやだ  追従したいのは、主に Jekyll Bootstrap ファイル全般と @nitoyon さんのてっく煮ブログで使われているプラグイン。(特にはてな系)
パッパとやって手順だけメモするかーと思ったら凄まじくてこずったので、今回はBootstrapだけ。
環境  Ruby 1.9.3  RedCloth (4.2.9) bundler (1.3.5) classifier (1.3.3) colorator (0.1) commander (4.1.4) directory_watcher (1.4.1) fast-stemmer (1.0.2) highline (1.6.19) hparser (0.4.0 dc35f05) jekyll (1.0.0 9f94eaf) kramdown (0.14.2) liquid (2.5.1) maruku (0.6.1) posix-spawn (0.3.6) pygments.rb (0.4.2) rake (10.1.0) rdiscount (2.1.6) redcarpet (2.2.2) safe_yaml (0.7.1) syntax (1.0.0) yajl-ruby (1.1.0)   参考サイト  Git - サブモジュール Git で複数のリポジトリをまとめたり、逆に切り出したりする - Qiita [キータ] gitでforkしたrepoにoriginalのrepoをmergeする手順 - memo.</description>
    </item>
    
    <item>
      <title>Jekyll@GitHub Pagesの運用形態を変えたのでAnalyticsの設定が効かなくなっていた</title>
      <link>https://note.gosyujin.com/2013/05/27/jekyll-githubpages-analytics-setting/</link>
      <pubDate>Mon, 27 May 2013 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2013/05/27/jekyll-githubpages-analytics-setting/</guid>
      <description>あらすじ Jekyllで指定していたGoogle Analyticsの設定が効かなくなっていた。
他のGitHub Pages@Jekyllでは正しくGoogle Analyticsが動いているのに…。
結論  前回 GitHub Pages の運用形態を変えていた &amp;hellip; GitHub PagesでJekyllプラグインを使えるようにするには…  変更前: master ブランチにコンテンツを配備し、GitHubにデプロイしてもらう 変更後: source ブランチを作成しコンテンツを移動。ローカルでビルドした静的ファイルを master ブランチにpush  それによる オプション指定の凡ミス  おぉ…。
参考サイト  WordPressよりjekyllで本格的ブログを作りたくなる、かもしれないまとめ ｜ ゆっくりと… 30分のチュートリアルでJekyllを理解する Jekyll ｜ CSS Radar ｜ Little Books For Front End Developers Liquid for Designers · Shopify/liquid Wiki · GitHub plusjade/jekyll-bootstrap · GitHub  ハマり 前提: GitHub Pagesの運用形態 指定のブランチに以下のようなファイル群を置いておく事で、GitHub Pagesができる。
 Jekyllのコンテンツ  Jekyllに必要なファイルをpushしておけば、GitHubがよろしくデプロイしておいてくれる  静的ファイル  そのまま表示される   Jekyllのコンテンツをpushして、後はおまかせするだけの運用は便利だけど、 自作プラグインが動かない という問題がある。</description>
    </item>
    
    <item>
      <title>記事の目次を出力するJekyllプラグインの改良</title>
      <link>https://note.gosyujin.com/2013/05/23/jekyll-liquid-plugin2/</link>
      <pubDate>Thu, 23 May 2013 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2013/05/23/jekyll-liquid-plugin2/</guid>
      <description>前回までのあらすじ Jekyll(Liquid)で記事の目次を出力するプラグインを作ってみた
これの続き。昔の話すぎて、忘れないようにメモ。
前回の疑問  …あれ？　別の環境でやったら hタグに section , section-1 , section-2 … って連番が振られてる！？　なんで！
 これは原因がわかった。 使っているMarkdownパーサが違うだけだった。
 rdiscount … idなし kramdown … idにsection-xが振られる  今回やったこと  kramdownで動くようにkramdownいじったりtree_list.rbいじったり プラスバグ修正   目次から記事へのリンク
(略) めんどいので自動で振ってほしい
 kramdownのidの振り方 kramdownがhタグにidを振っている方法を調べてみると、
 半角文字はそれが そのままid になる スペースは ハイフン になる 全角文字は なくなる 全部全角文字だった場合 section と振られる 2度目以降のsectionは順に section-x と振られる  こんな感じになっているっぽい。以下は一例。
   見出しの内容 hタグのid     ほげいち &amp;lt;h2 id=&amp;ldquo;section&amp;rdquo;&amp;gt;ほげ   ほげに &amp;lt;h2 id=&amp;ldquo;section-2&amp;rdquo;&amp;gt;ほげに   ほげさん &amp;lt;h2 id=&amp;ldquo;section-3&amp;rdquo;&amp;gt;ほげさん   hoge &amp;lt;h2 id=&amp;ldquo;hoge&amp;rdquo;&amp;gt;hoge   piyoとは &amp;lt;h2 id=&amp;ldquo;piyo&amp;rdquo;&amp;gt;piyoとは   ほげよん &amp;lt;h2 id=&amp;ldquo;section-4&amp;rdquo;&amp;gt;ほげよん    ソース 実際にソースを見てみよう。 kramdown-0.</description>
    </item>
    
    <item>
      <title>BPStudy#68に参加しました #bpstudy</title>
      <link>https://note.gosyujin.com/2013/04/27/bpstudy68/</link>
      <pubDate>Sat, 27 Apr 2013 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2013/04/27/bpstudy68/</guid>
      <description>詳細  BPStudy#68 - connpass  テーマはChef。
入門からChefの実運用例まで。
所感  入門Chef Solo - Infrastructure as Code を読みながらChef Soloで遊べるようになるまで で入門していたので復習も兼ねて  Chef Server / Chef Clientはまだ試していない  レシピのテストってうまい事できないのかな？  文法チェック以上、Serverspec未満の事は今のところ直接実行して確認してる vagrantでvm作る、実行、壊すを繰り返し  iptablesとか、SELinuxあたりの設定は会社によって or 案件によって固定で、かつそんなに変更がないと思うので、ここだけでも速やかにChefで管理したいな  第1部 明日からはじめる Chef 入門  tk0miyaさん    明日から始める Chef 入門 #bpstudy  from Takeshi Komiya 
サーバ、どうやって構築している？ 手順書？Wikiを見て？職人がやってる？
よくある話  手順書通りにやってもうごかない サーバごとに設定がちがう 手順を飛ばしちゃって事故る  手作業で複数だいは辛い クロスチェック欄など…   自動化しよう！ どうやってやる？
 シェルスクリプト PXE + kickstart sed/awk  PHP  オレオレパッケージ  環境構築について、継続的デリバリーにはこう書かれている。</description>
    </item>
    
    <item>
      <title>Jekyllのバージョンを 0.12.0 にあげた</title>
      <link>https://note.gosyujin.com/2013/04/11/jekyll-0120/</link>
      <pubDate>Thu, 11 Apr 2013 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2013/04/11/jekyll-0120/</guid>
      <description>あらすじ ぼちぼちJekyllのバージョンを上げてみる。
参考サイト  Jekyll の 0.12.0 でシンタックス ハイライトが便利になった - てっく煮ブログ  手順 Gemfile をちょっと修正。redcarpetを追加する、のとpygmentsのバージョンをアップ。
gem &amp;#39;rake&amp;#39; gem &amp;#39;jekyll&amp;#39;, :git =&amp;gt; &amp;#39;git://github.com/mojombo/jekyll.git&amp;#39; gem &amp;#39;RedCloth&amp;#39; -gem &amp;#39;rdiscount&amp;#39; +gem &amp;#39;redcarpet&amp;#39; +#gem &amp;#39;rdiscount&amp;#39; gem &amp;#39;hparser&amp;#39;, :git =&amp;gt; &amp;#39;git://github.com/hotchpotch/hparser.git&amp;#39; -gem &amp;#39;pygments.rb&amp;#39;, &amp;#39;=0.2.12&amp;#39; +gem &amp;#39;pygments.rb&amp;#39;, &amp;#39;=0.3.2&amp;#39; そして bundle install 。
オプションもだいぶ変わってるみたい。
昔。
$ jekyll --help bundle exec jekyll --help Jekyll is a blog-aware, static site generator. Basic Command Line Usage: jekyll # . -&amp;gt; .</description>
    </item>
    
    <item>
      <title> 入門Chef Solo - Infrastructure as Code を読みながらChef Soloで遊べるようになるまで</title>
      <link>https://note.gosyujin.com/2013/04/01/chef-helloworld/</link>
      <pubDate>Mon, 01 Apr 2013 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2013/04/01/chef-helloworld/</guid>
      <description>あらすじ Chefを触ってみたいと思いつつ、取っ掛かりを作るにはかなり用語が多いなーとウダウダしていたら、3/11にこんな本が出版されており。
 Amazon.co.jp： 入門Chef Solo - Infrastructure as Code eBook: 伊藤直也: Kindleストア  早速購入。
本書のはじめにはこんな事が書かれていました。
 公式ドキュメントがあまりにしっかり書かれすぎていることもあって「はじめの一歩」としてどの辺りを知ればいいのか、つまり「普通に使う分にはこの程度知っていればOK」というのがどの辺りなのかを掴むのが難しい…というのが筆者の個人的な印象です。
 はじめの一歩をどうしようか迷ってる場合オススメと……。
ではHello Worldしてみよう。
環境(Windows編)  Windows XP Ruby 1.9.3 Rubygems 1.8.24  手順 Chef インストール ネットワークに繋がっていないぼっち環境のため、vendor/cacheディレクトリに必要なGemをありったけ放り込んでbundle install。
$ bundle install --local --path vendor/bundle Installing erubis (2.7.0) Installing highline (1.6.16) Installing json (1.7.7) Installing mixlib-log (1.4.1) Installing mixlib-authentication (1.3.0) Installing mixlib-cli (1.3.0) Installing mixlib-config (1.1.2) Installing win32-api (1.4.8) Installing windows-api (0.4.2) Installing windows-pr (1.</description>
    </item>
    
    <item>
      <title>Selenium WebDriverでFirefoxがロードできなくなった</title>
      <link>https://note.gosyujin.com/2013/03/18/selenium-firefox-loaderror/</link>
      <pubDate>Mon, 18 Mar 2013 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2013/03/18/selenium-firefox-loaderror/</guid>
      <description>あらすじ Selenium IDE でテストケースを作成し、WebDriver形式でエクスポートしたRSpecファイルを Firefox で実行すると、 invalid byte sequence エラーが表示されるようになった。
どこさわったからこうなったのかわからん……。
(以下では、WebDriver.for時にテスト用のprofileを指定している)
$ rspec test.rb F Failures: 1) test Failure/Error: @driver = Selenium::WebDriver.for :firefox, :profile =&amp;gt; profile ArgumentError: invalid byte sequence in UTF-8 # ./test.rb:13:in `block (2 levels) in &amp;lt;top (required)&amp;gt;&amp;#39; profileの中かな？　とか思っていたけど。
環境  Ruby 1.9.3  RubyGems 2.0.1 bundler (1.3.1) childprocess (0.3.9) diff-lcs (1.2.1) ffi (1.4.0) multi_json (1.6.1) rspec (2.13.0) rspec-core (2.13.0) rspec-expectations (2.13.0) rspec-mocks (2.13.0) rubyzip (0.</description>
    </item>
    
    <item>
      <title>IEとかiPhoneWebView上でSeleniumを走らせる</title>
      <link>https://note.gosyujin.com/2013/03/07/selenium-ie-iphone-browser/</link>
      <pubDate>Thu, 07 Mar 2013 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2013/03/07/selenium-ie-iphone-browser/</guid>
      <description>あらすじ  Firefoxのアドオンである Selenium IDE で作ったテストケースをWebDriver, RSpec形式でエクスポート このソースは、デフォルトではFirefoxでテストが開始されるようになっている これを、 IE でテストするようにしたり、 iPhoneWebView (内部ブラウザ)を起動してテストするようにしたい 結果としては、どちらもテスト可能だが、準備が若干めんどい  IEでテストをするには 環境  IE 9  手順 基本的には、 Selenium IDE で生成したテストコードの「何のブラウザを開くか」ってところを変えればいいはず……。
- @driver = Selenium::WebDriver.for :firefox + @driver = Selenium::WebDriver.for :ie ……が、それだけではダメ。実行すると以下のようなエラーが出る。
Failures: 1) MailcheckSpec test_mailcheck_spec Failure/Error: @driver = Selenium::WebDriver.for :ie Selenium::WebDriver::Error::WebDriverError: Unable to find standalone executable. Please download the IEDriverServer from http://code.google.com/p/selenium/downloads/list and place the executable o n your PATH. # ./mailcheck_spec.rb:10:in `block (2 levels) in &amp;lt;top (required)&amp;gt;&amp;#39; Finished in 0.</description>
    </item>
    
    <item>
      <title>自作EvernoteスクリプトをOAuth対応する</title>
      <link>https://note.gosyujin.com/2013/03/03/evernote-oauth/</link>
      <pubDate>Sun, 03 Mar 2013 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2013/03/03/evernote-oauth/</guid>
      <description>あらすじ 結構前に、Evernoteの認証方法がOAuthになるので、変更してくださいねーというメールがEvernoteからきていた。
ユーザ名とパスワードによる認証から OAuth 認証への移行 - Evernote Developers
そのまま従来のスクリプトを動かしていると、認証エラーになるので、OAuth認証ができるように修正した。
主に自分用メモ。
環境  Ruby 1.8.7  注: Evernoteスクリプトは自分しか使っていない。
参考サイト  認証 - Evernote Developers  手順  サンドボックス用のデベロッパトークンを取得 » ログイン必要 テストの完了後、プロダクション用のデベロッパトークンを取得 » ログイン必要  他の人が使っていない、自分だけで使っている場合は以降の箇所だけ修正すればよい。
修正箇所 上記のDeveloperTokenをソース上で取得できるようにする。(今まで使っていたuserid、パスワードはいらない)以下では、Pitを使ってtokenなどを別出ししているので、そこを修正。
user = Pit.get(&amp;#34;evernote&amp;#34;, :require =&amp;gt; { + &amp;#34;developerToken&amp;#34; =&amp;gt; &amp;#34;your evernote token.&amp;#34;, }) 従来は、 userStore.authenticate() で認証を通して、 authenticationToken を使うようにしていたが、このくだりを まるまるカット 。
この authenticationToken を developerToken に置き換えてやる。
# 認証 - @auth = auth(user, userStore) - @authToken = @auth.</description>
    </item>
    
    <item>
      <title>Ruby 2.0.0 をpikとrvm経由でインストール&amp;環境構築</title>
      <link>https://note.gosyujin.com/2013/02/25/ruby200-helloworld-pik-rvm/</link>
      <pubDate>Mon, 25 Feb 2013 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2013/02/25/ruby200-helloworld-pik-rvm/</guid>
      <description>あらすじ Ruby 2.0.0 がリリースされたので、インストールしつつ、新機能を使ってみる。
…と思ったけど、意外とてこずったので、とりあえずインストールと準備だけ。
後途中にGemの作り方めも。
環境1  Windows XP Ruby 2.0.0 pik  インストール まずはインストール。pikなので pik install で。
$ pik install ruby 2.0.0 ** Downloading: http://rubyforge.org/frs/download.php/76807/ruby-2.0.0-p0-i386-mingw32.7z to: C:\Documents and Settings\user\.pik\downloads\ruby-2.0.0-p0-i386-mingw32.7z ruby-2.0.0-p0-i386-mingw32.7z: 100% |oooooooooo| 8.9MB/ 8.9MB Time: 00:00:57 ** Extracting: C:\Documents and Settings\user\.pik\downloads\ruby-2.0.0-p0-i386-mingw32.7z to: C:\rubies\Ruby-200-p0 done ** Adding: 200: ruby 2.0.0p0 (2013-02-24) [i386-mingw32] Located at: C:\rubies\Ruby-200-p0\bin あっさり。
$ pik default $ ruby -v bundler is found: bundle exec ruby -v ruby 1.</description>
    </item>
    
    <item>
      <title>メモ化を知った</title>
      <link>https://note.gosyujin.com/2012/12/25/ruby-memo/</link>
      <pubDate>Tue, 25 Dec 2012 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2012/12/25/ruby-memo/</guid>
      <description>この投稿はRuby Advent Calendar 2012の16日目の記事としてQiitaに投稿したものです。
はじめに あんまりRuby関係ないんですが、一応、The RSpec Bookを読んでいて知ったのがきっかけなので…。
あらすじ The RSpec Book のletの解説には以下のように記述されています。
describe &amp;#34;テストコードはてきとう&amp;#34; do let(:test) { &amp;#34;TEST&amp;#34; } it &amp;#34;test let&amp;#34; do test.should == &amp;#34;TEST&amp;#34; end end  メソッドが最初に呼び出されたときに戻り値がキャッシュされ、それ以降、同じスコープ内でメソッドが呼び出されるたびにキャッシュされた値が返されることを意味します。
 これをメモ化というそうです。で、メモ化って？
一番簡単なメモ化 調べてみると、だいたいフィボナッチ数を求める例が多い。なのでn番目のフィボナッチ数を求めるメソッドを書いてみる。
普通に書いた場合 def f(n) if n &amp;lt;= 1 then n else f(n-1) + f(n-2) end end 実行していくと、己のPCスペックではf(30) = 832040 くらいからマシンがもたついてきた。
これを メモ化 してみる。
メモ化した場合 # こっちは変わらず def f(n) if n &amp;lt;= 1 then n else f(n-1) + f(n-2) end end def f_memo(n) @cache ||= [] @cache[n] ||= f(n) end 実行すると、最初の一発目は同じくらい遅いんだけど、一回実行すればキャッシュとして @cache に格納されるので二回目以降はバク速で求められる。</description>
    </item>
    
    <item>
      <title>はてなダイアリーのエントリをJekyllへ移行する</title>
      <link>https://note.gosyujin.com/2012/11/12/from-hatena-to-jekyll/</link>
      <pubDate>Mon, 12 Nov 2012 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2012/11/12/from-hatena-to-jekyll/</guid>
      <description>あらすじ はてなダイアリーからJekylに移行したいんだけど、完全に移行し切るには過去の遺産(はてなダイアリーのエントリ)も移したいよ。
はてなのエントリ取得 何はなくともエントリをエクスポートしてこない事には始まらない。管理画面から データ管理 =&amp;gt; インポート/エクスポート =&amp;gt; はてなの日記データ形式 をDL。
はてな =&amp;gt; Jekyll どうやるか はてなのエントリをJekyllで見るためには、恐らく2通りの方法がある。
 はてなエントリをMarkdown記法に変換して、Jekyllに突っ込む はてなエントリから記事を作れるようにJekyllにパーサを突っ込む  さて…。
てっく煮ブログさんのJekyll 俺の最強ブログ システムが火を噴くぜ - てっく煮ブログ
自分がどうすればいいのかなーと悩んでいる時、ものすごくタイムリーに移行なされており(タイムリーでした)、かつ自分のやりたい事(はてなエントリの移行など)を全てプラグインなどで実現されていたためすぐにGitHubを見に行きました。
nitoyon/tech.nitoyon.com ・ GitHub
$ git clone https://github.com/nitoyon/tech.nitoyon.com.git ぐ…中身は結構複雑。
ソースを見る前にローカルで動くか見せてもらおうっと。
$ vi Gemfile gem &amp;#39;jekyll&amp;#39; gem &amp;#39;hparser&amp;#39; gem &amp;#39;sass&amp;#39; gem &amp;#39;RedCloth&amp;#39; gem &amp;#39;rdiscount&amp;#39; これで bundle exec jekyll --server で行けるかと思ったけど、なんか色々ないって言われる。
どうやらまだgemが最新版になっていないらしい(gemからJekyllを持ってくると、多分 JEKYLL_HOME/lib/jekyll/tags/post_url.rbがないとか言われる)ので、GitHubから最新版を持ってくる。
$ git clone git://github.com/mojombo/jekyll.git # fa8400ab61cb8df176f9fb2ec52d85f93c7418a7より新しければ大丈夫そう $ git clone git://github.com/hotchpotch/hparser.git # 4fbeefc8becc45ed18bf374bec9a2d862db473d5より以下同文 Jekyllとhparserはこれに置き換え。これで実行すると…おお、自分のローカルでてっく煮ブログが…！</description>
    </item>
    
    <item>
      <title>Jekyll(Liquid)で記事の目次を出力するプラグインを作ってみた</title>
      <link>https://note.gosyujin.com/2012/10/10/jekyll-liquid-plugin/</link>
      <pubDate>Wed, 10 Oct 2012 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2012/10/10/jekyll-liquid-plugin/</guid>
      <description>あらすじ Jekyllのプラグイン作成の練習。エントリから見出しを抽出して目次を出力してみたい。
参考サイト  最近作った Jekyll (Liquid) のプラグイン - @yuumi3のお仕事日記  ソース  gosyujin.github.com/_plugins/tree_list.rb at master · gosyujin/gosyujin.github.com · GitHub  まだできてない事  記事中に h1 (#) タグがあるとうまく生成されない  記事タイトルが h1 (#) なので、 h2 (##) 以下の見出しを集めてくるようにしている  目次から記事へのリンク  Markdownでは ## &amp;lt;a name=&amp;quot;section&amp;quot;&amp;gt; hoge と記載すればnameを振ってくれるようだけど、めんどいので自動で振ってほしい むしろ今はaタグを入れているとレイアウトが崩れる …あれ？　別の環境でやったら hタグに section , section-1 , section-2 &amp;hellip; って連番が振られてる！？　なんで！   作り方 最小単位はこうなるみたい。(何もしないプラグイン)
module Jekyll class SampleTag &amp;lt; Liquid::Tag def initialize(tag_name, xxx, tokens) super end def render(context) end end end Liquid::Template.</description>
    </item>
    
    <item>
      <title>bundle execを省略したいのでバッチを作った(Windows版)</title>
      <link>https://note.gosyujin.com/2012/10/01/bundle-exec-bat/</link>
      <pubDate>Mon, 01 Oct 2012 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2012/10/01/bundle-exec-bat/</guid>
      <description>あらすじ Bundler、非常によいツールなんだけど、bundle exec がめんどい。
ググってみたところ gemset を使う方法 rvmのgemsetを使ってbundlerと賢く付き合う方法 - Hello, world! - s21g と、 bundler-exec.sh というツールを使う bundle exec を省略する - おもしろWEBサービス開発日記 方法があるみたい。
Windowsでこれを実現したいんだけど、gemsetはちょっと大げさな気がするので、bundler-exec.shを参考にバッチファイルを作成できないかな。
参考サイト  コマンドのエイリアス設定(DOSKEY) whichコマンドを作る  コマンドプロンプトを使ってみよう！　－バッチファイル－ Windows 2000 コマンドライン徹底活用 コマンド別/for UNIXライクなパス操作をwindowsのcmd.exeのバッチファイルのみで実現 Windowsのコマンドプロンプトは変態（一部）  調査 ソースを読む限り、やっている処理は
 ruby とかrspec とかbundle exec hogehogeしたいコマンドにaliasをはる(rubyならbundler-exec.sh rubyとなるように) bundle コマンドが使えるのか探してみる。使えない場合はそのままコマンドを実行する bundle が使える場合、今いるパスに Gemfile ファイルがあるのか調べる。ない場合は一つ階層を上がってまた Gemfile があるか探す 上記をを繰り返す。 Gemfile がない場合はそのままコマンドを実行する Gemfile があった場合、 bundle exec を付加してコマンドを実行する  という感じになっている。
ソース で、作ってみた。
gosyujin/bundler-exec-bat
使い方 aliasをはる コマンドプロンプトの場合にはaliasがないようなので、マクロ定義ファイルを作成し、それを起動時に読むようにバッチファイルを作る。または起動オプションを変更する必要があるらしい。(レジストリに登録などでもいい)</description>
    </item>
    
    <item>
      <title>Pygmentsを使ってJekyll内記事のコードハイライトを実現する</title>
      <link>https://note.gosyujin.com/2012/09/21/jekyll-pygments/</link>
      <pubDate>Fri, 21 Sep 2012 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2012/09/21/jekyll-pygments/</guid>
      <description>あらすじ Jekyllではデフォルトでコードにハイライトをつける事はできないようなので、Pygmentsという拡張を入れる。
環境  Python 2.7.3 (2.6以上が必要)  easy_install   easy_installはhttp://peak.telecommunity.com/dist/ez_setup.pyからDLし $ (sudo) python ez_setup.py でインストールする。
※ 後に以下のようなエラーが出るかもしれない。
 Liquid error: undefined method &amp;lsquo;Py_IsInitialized&amp;rsquo; for RubyPython::Python:Module
 これはRubyからPythonを呼びに行くRubypythonというライブラリの中で、libpython2.7.soというファイルを探しに行くが、見つからないとすぐあきらめるようなので？　--enable-shared オプションつけてのインストールが吉。
また、以下の様なエラーが出た場合、libpython2.7.so.1.0が見つからなくてpythonコマンドが実行できなくなった。
$ python &amp;gt; python: error while loading shared libraries: libpython2.7.so.1.0: cannot open shared object file: No such file or directory $ ldd python linux-vdso.so.1 =&amp;gt; (0x00007fff9cf94000) libpython2.7.so.1.0 =&amp;gt; not found libpthread.so.0 =&amp;gt; /lib64/libpthread.so.0 (0x000000343d600000) libdl.so.2 =&amp;gt; /lib64/libdl.so.2 (0x000000343ce00000) libutil.</description>
    </item>
    
    <item>
      <title>JekyllをGitHub Pagesに上げるための準備</title>
      <link>https://note.gosyujin.com/2012/09/20/jekyll/</link>
      <pubDate>Thu, 20 Sep 2012 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2012/09/20/jekyll/</guid>
      <description>GitHub Pagesに登録 GitHubより New Repository を選択。
Repository Name を GitHubのID.github.com と入力しリポジトリ作成。
前回の記事で作成していたJekyll Bootstrapのプッシュ先を追加し、プッシュ。
$ git remote add origin git@github.com:gosyujin/gosyujin.github.com.git $ git push -u origin master http://gosyujin.github.com にアクセスしても多分404なので。気長に待つ。
その間にSite Urlに上のUrlでも入れとく。
そんなこんなでサイトが表示されるようになっているはず。(メールが来たら？)
色々な設定 まずは _config.yml 。
デフォルトのmarkdownパーサの maruku は日本語をうまくパースしてくれないみたいなので(日本語でリスト表記ができなかった)、 kramdown に変更する。以下の記述を追加。
markdown:kramdown 他、タイトルや名前、TwitterIDなどを編集。
title:kk_Atakaの日記tagline:author:name:kk_Atakaemail:kk_ataka@ring.skr.jpgithub:gosyujintwitter:kk_Atakafeedburner:feedname production_urlをGitHub Pagesに。
production_url:http://gosyujin.github.com ここから先はJekyll Bootstrapでインストールした時に入ったコメント機能とかアクセス解析の設定。
コメント機能 デフォルトでは DISQUS というツールを使用している。まずDISQUS - Elevating the discussionでユーザ登録をする必要がある。(TwitterID等でも可能)
アカウントを作ったら自分のサイトを登録。
ここで入力する shortname を控えておく。
_config.yml にさっきの shortname を記述する。 provider もDISQUSになっている事を確認する。
comments:provider:disqusdisqus:short_name:kkataka(略) これでいけるはず。(だめならUniversalコードを _includes/JB/comments-providers/disqus に貼り付けてみる？) 自分のサイトにコメントが書き込まれると、こんな感じでDISQUSに表示される。</description>
    </item>
    
    <item>
      <title>JekyllとJekyll Bootstrapでかんたん静的サイト生成…するための準備</title>
      <link>https://note.gosyujin.com/2012/09/14/1347595853/</link>
      <pubDate>Fri, 14 Sep 2012 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2012/09/14/1347595853/</guid>
      <description>[Ruby][StartUp][Jekyll]JekyllとJekyll Bootstrapでかんたん静的サイト生成…するための準備 あらすじ  はてな記法、綺麗に出力できて今までお気に入りだったんだけど、欠点として、はてなでしか使わないという問題が 他にも文章書く時にreSTとかMarkdownを使うと捗るが、結局アウトプットするのは個人でははてなが多い……[1] そもそもはてな記法は基本はてなじゃなきゃ見れない なら最初から…？  うーん。他の記法使う時がきたのか。
Jekyllとは  Jekyll is a simple, blog aware, static site generator.
https://github.com/mojombo/jekyll/wiki
 静的サイトのジェネレーターなのね。 HTML, Markdown, textile なんでもござれ。
参考サイト  [https://github.com/mojombo/jekyll:title] http://mattn.kaoriya.net/software/lang/ruby/20090409185248.htm:title http://melborne.github.com/2012/05/13/first-step-of-jekyll/:title http://tokkonopapa.github.com/blog/2011/12/28/easy-usage-of-jekyll-on-github/:title http://d.hatena.ne.jp/yuum3/20120620/1340180894:title http://d.hatena.ne.jp/takuti/20110724/1311464070:title http://dsuket.hatenablog.com/entry/2012/03/06/191459:title http://d.hatena.ne.jp/seinzumtode/20120426/1335402322:title  環境  CentOS 6.2 と、WindowsXP Ruby 1.9.2  Bundler 1.1.4  Git 1.7.9.6 Jekyll 0.11.2 RedCloth 4.2.9  いきなり動かす 本来は決まったディレクトリを作ったり、コンフィグファイルを作ったり、レイアウトファイルを作ったりしていく……のだけど、Jekyll Bootstrapを使えばいきなりフルセットで動かす事ができる。
取得はGitで。
$ git clone http://github.com/plusjade/jekyll-bootstrap.git JEKYLL_HOME JekyllはBundlerでインストールするので移動してGemfileを作成。そしてjekyllコマンドで実行！
$ cd JEKYLL_HOME $ vi Gemfile $ cat Gemfile source :rubygems source &amp;#34;http://rubygems.</description>
    </item>
    
    <item>
      <title>Fluentdの自作プラグインがロードできないのでソースの中身を追ってみる…</title>
      <link>https://note.gosyujin.com/2012/09/13/1347508570/</link>
      <pubDate>Thu, 13 Sep 2012 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2012/09/13/1347508570/</guid>
      <description>[Ruby][備忘録][Fluentd]Fluentdの自作プラグインがロードできないのでソースの中身を追ってみる… あらすじ [http://d.hatena.ne.jp/kk_Ataka/20120817/1345209899:title=前回]までに簡単なプラグインを作成する事はできた。
次はプラグインをGem化しようかなと思って色々いじってたら、実行時になんかうまくプラグインが読めない……。なんで？
参考サイト  [https://github.com/fluent/fluentd:title] http://d.hatena.ne.jp/tagomoris/20120715/1342368392:title http://blog.ksauzz.com/?p=37:title  今できてる事とできてない事 BundlerでFluentdをインストールし、
$ bundle exec fluentd -c /hoge/fluent.conf -p /hoge/plugin  を実行した時……
 gem installで入れたfluentdのプラグインはちゃんとロードできる  Gemにしちゃえばロードできる  プラグインディレクトリ直下(-p /hoge/plugin)にササッと作ってみたプラグインもロードでき、動いた  直下に放り込めばロードできる   /hoge/plugin └in_hoge.rb # これはロードできる  gem未満、ササッと作った以上のプラグインがロードできない  fluent-pluginっぽいディレクトリ構成にした程度のもの。まだローカルに置いてあるだけでgemには成り切れていない   /hoge/plugin ├in_hoge.rb # これはロードできる └fluent-plugin-hogehoge ├lib │└fluent │　└plugin │　└in_hogehoge.rb # これがロードできない ├fluent-plugin-hogehoge.gemspec └他 調査結果と(暫定)解決策 fluentdのプラグインロード順番 fluentdコマンドを実行すると、 なんやかんやあって プラグインをロードしにいく。ソースは$FLUENTD_HOME/lib/fluent/plugin.rb
 $FLUENTD_HOME/lib/fluent/plugin/直下のrbファイルをロードする  in_exec.rbとか  gem_pluginをロードする  これは今回空だった  /etc/fluent/plugin/直下のrbファイルをロードする  デフォルトのプラグイン置き場 デフォルトの設定は$FLUENTD_HOME/lib/fluent/env.</description>
    </item>
    
    <item>
      <title>Fluentdのプラグインを作成してみる(練習用)</title>
      <link>https://note.gosyujin.com/2012/08/17/1345209899/</link>
      <pubDate>Fri, 17 Aug 2012 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2012/08/17/1345209899/</guid>
      <description>[Fluentd][備忘録][Ruby]Fluentdのプラグインを作成してみる(練習用) 前回までのあらすじ http://d.hatena.ne.jp/kk_Ataka/20120712/1342098141:title で、confファイルのコメントアウトを外してとりあえず動くっていうところまではいけた。今度は簡単なプラグインを作ってみる。
参考サイト  http://fluentd.org/doc/:title http://d.hatena.ne.jp/erukiti/20120205/1328452455:title http://d.hatena.ne.jp/tagomoris/20120221/1329815126:title  ひたすら何かを吐き続けるプラグイン Inputプラグインの場合 Fluent::Inputクラスを継承する。
class SimpleInput &amp;lt; Fluent::Input # 第一引数がプラグインの名前、&amp;lt;source&amp;gt; typeに指定される Fluent::Plugin.register_input(&amp;#34;simple_in&amp;#34;, self) def start @thread = Thread.new(&amp;amp;method(:run)) end def run loop do # emitメソッドの第一引数が &amp;lt;match **.**&amp;gt; の**に該当すればその形式で出力される # fluent.confでdebug.**はstdoutで出力すると定義されている Fluent::Engine.emit(&amp;#34;debug.debug&amp;#34;, Fluent::Engine.now, {&amp;#34;simple&amp;#34; =&amp;gt; &amp;#34;debudebu&amp;#34;}) # fluent.confに&amp;lt;match simple.output&amp;gt; type simple_outを定義したので、以下のOutput形式で出力される Fluent::Engine.emit(&amp;#34;simple.output&amp;#34;, Fluent::Engine.now, {&amp;#34;simple&amp;#34; =&amp;gt; &amp;#34;simout&amp;#34;}) sleep(1) end end end 上のソースには書かれていないけど、他にもメソッドがいくつか。(公式サイトより)
 configure メソッド  スタート前に呼び出される confハッシュにパラメータを入れられる？ エラーはFluent::ConfigErrorを投げる  start メソッド  スタート時に呼ばれる ここでスレッドを作ったりファイルをオープンしたり  shutdown メソッド  シャットダウン時に呼ばれる スレッドやファイルのクローズはここで。  イベントをsubmitするためにはFluent::Engine.</description>
    </item>
    
    <item>
      <title>Windows版Redmineをサービスに登録してブート時に起動させる(宿題あり)</title>
      <link>https://note.gosyujin.com/2012/07/17/1342535044/</link>
      <pubDate>Tue, 17 Jul 2012 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2012/07/17/1342535044/</guid>
      <description>[Ruby][備忘録][Windows][Redmine]Windows版Redmineをサービスに登録してブート時に起動させる(宿題あり) あらすじ タイトル通り、サービスに登録してよろしく起動してほしい。mongrelを使えばサービスから起動できる……らしいが、名前は聞いたことあるけど、mongrelが何かは知らない……。
 Ruby + C(拡張ライブラリ) で書かれた httpd。
http://d.hatena.ne.jp/keyword/mongrel
 なるほど。
環境  Windows XP Ruby 1.9.3  Bundler 1.0.21 Mongrel 1.2.0.pre2  Redmine 1.4  手順 前提  Redmineの環境構築が完了している事  bundle exec ruby script/server -e production で起動できる事   インストールから起動まで  まずはRedmineデフォルトのGemfileにmongrelを追加し、bundle install  gem &amp;#34;mongrel&amp;#34; $ bundle install Fetching source index for http://rubygems.org/ Using rake (0.9.2.2) Using activesupport (2.3.14) Using rack (1.1.3) Using actionpack (2.3.14) Using actionmailer (2.</description>
    </item>
    
    <item>
      <title>Fluentdというログ収集ツールを使ってApacheのログを取得するまで</title>
      <link>https://note.gosyujin.com/2012/07/12/1342098141/</link>
      <pubDate>Thu, 12 Jul 2012 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2012/07/12/1342098141/</guid>
      <description>[Fluentd][備忘録][Ruby]Fluentdというログ収集ツールを使ってApacheのログを取得するまで あらすじ  Twitterで@[https://twitter.com/tosikawa:title=tosikawa]さんにこんなツールあるよ、と教えてもらった …が、未見だったためすぐググる とりあえずどんなものか動かしてみる事に  Fluentdとは  Log everything in JSON
http://fluentd.org/
 Oh&amp;hellip;シンプルイズベスト…。
 Fluentd is a log collector daemon written in Ruby. Fluentd receives logs as JSON streams, buffers them, and sends them to other systems like MySQL, MongoDB, or even other instances of Fluentd.
 Rubyで作られたログ収集ツール。ただし、JSONで……？
参考サイト  http://fluentd.org/:title  公式のDocumentationがSphinx  http://d.hatena.ne.jp/viver/20110929:title http://d.hatena.ne.jp/wyukawa/20120207/1328625443:title http://d.hatena.ne.jp/zakihaya/20120616/1339856226:title http://d.hatena.ne.jp/fat47/20120426/1335428063:title http://shinobra.com/2012/02/sawanoboly/gluent_getting_start:title  環境  CentOS 6.2 Ruby 1.9.3 RubyGems 1.</description>
    </item>
    
    <item>
      <title>TDD Boot Camp 大阪 1.0( #tddbc ) に参加しました</title>
      <link>https://note.gosyujin.com/2012/06/03/1338724924/</link>
      <pubDate>Sun, 03 Jun 2012 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2012/06/03/1338724924/</guid>
      <description>[TDD][RSpec][Ruby][イベント]TDD Boot Camp 大阪 1.0( #tddbc ) に参加しました 概要  http://atnd.org/events/28762:title なかなかスケジュールの都合がつかず、近場で開催されても参加できないことが多かったので、「次こそは！」と思った矢先の大阪開催だったので参加しました  まとめ  楽天カフェテリア＠大阪、非常に素晴らしい会場でした。素晴らしい会場でした！  カフェテリアは木製の椅子のため、半日近いイベントの場合腰が悪い人は座布団を持って行ったほうがいいですね  TDDとペアプロに関しての経験をつむことができた  よしおかさん、関さん、和田さんを独占していたRubyのテーブル…  その中でも恐れ多くも関さんと和田さんを独占してしまった。会場撮影されていた様子^^; http://via.me/-1nhb1te:title  成果物はStep3のはじめまで[https://github.com/gosyujin/tddbc:title=GitHub]にあげました  他の言語でどう書くか、書き方などを見て、自分のメイン言語のテスティングフレームワークでも出来るかな？　と調べる事が大事 ねんがんのグリーンバンドを手に入れたぞ！ TDDは一人でも出来るので、どんどん書いて量を質に転化させていく！ 主催の@[https://twitter.com//bufferings:title] さん、TAの皆さん、スピーカーである@[https://twitter.com/t_wada:title] さん、@[https://twitter.com//hyoshiok:title] さん、@[https://twitter.com//m_seki:title] さん、Ruby島の皆さんお疲れ様でした！  以下、時系列にそったまとめ
TDDのこころ @[https://twitter.com//t_wada:title] さん BootCampとは  新兵に教官が優しく教える しかしスライドの画像[1]は2012年現在もはや厳しい…  今日やること  ペアプログラミングを体験してみる コードレビュー大会  同じコードを同僚と解くという機会はほぼない 同じお題を他の人はどう考えるのか、他の言語ではどうなるのか   ふりかえり  KPT形式でフィードバック  ソフトウェア開発の三本柱  バージョン管理、テスティング、自動化  RPGのノーセーブクリア＝バージョン管理なしの開発 今コードが動いているのか動いていないのか＝テスティング 人間が手作業でやっているものをシェル化、Jenkinsで回したりで機械に任せる＝自働化、自動化  機械がうまくいってない時だけ教えてくれる    「テスト」とは  誰が、なんのためにテストをするのかで簡単に分類  Developer Testing  開発者が開発促進のため  Customer Testing  顧客が進捗管理のため(受入テストとか)  QA Testing  品質保証担当者が品質保証のため    「TDD」とは  テスト駆動開発入門 ケント・ベック 動く、きれいなコードへ  そこに至るための道へは？  きれいな設計をして、それを実装して、それが動作する…きれいな設計とは？   動かすことで初めてわかることがソフトウェア開発にはとても多い  なら早く超えよう(ただしここで止まると技術的負債になる)   TDDのサイクル  テストを書き テストを実行して失敗させ(Red) 目的のコードを書き テストを成功させ(Green) そのテスト通るまま中を綺麗にしていく(Refactor) これを繰り返す  TDDのやり方  大きな問題は切り分けて1つずつ たくさんの問題も1つずつ 何をテストすればよいのか  開発を進めにくくする要因→何かわからないもの、不安   TDDをすることにより  即座にフィードバックを得る 書いたコードへの自信持つ これから書くコードに自信を持つ  TDDの真の目的  不安の克服 健康  コードの健康=仕様変更に対応できる チームの健康=仕様変更に備える事ができる   ペアプロ デモ(FizzBuzz)  ゴールから書く！  Fizzの場合  何がゴール？ Fizzが返る どうなった時Fizz？ …としていく   テストコードのテストってどうするの？  テストコードと実装コードを互いにテストしあう！  そのタイミングは実装する前にやってしまう、仮実装してしまう   実際にペアプロのデモを第三者視点で見て、以下のようなことを思った  文化の違いをどう解決していくか  エディタ、キーバインド、などなど  細かなTipsが共有されていく  「xxはyyっていうショートカットで出せますよ」「知らんかった…」  ナビゲータって一人で仕事をしているときはやる事がないので結構難しそう…   ペアプロ  Ruby島は4人でした  @[https://twitter.</description>
    </item>
    
    <item>
      <title>Jenkins,Redmine使いこなし勉強会に参加しました と、ちょっとプラグイン作ってみた #jen_red</title>
      <link>https://note.gosyujin.com/2012/05/28/1338209339/</link>
      <pubDate>Mon, 28 May 2012 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2012/05/28/1338209339/</guid>
      <description>[Ruby][イベント][Jenkins][Redmine]Jenkins,Redmine使いこなし勉強会に参加しました と、ちょっとプラグイン作ってみた #jen_red 概要  http://connpass.com/event/500/:title  前半は発表のメモ。後半は実際にプラグイン作ったりインストールしたりのメモ。
Redmineプラグイン活用入門 - @[http://twitter.com/Kokawa_Takashi:title]さん 注意:Redmine開発環境が安定していないので、すぐ陳腐化してしまう事がある！
Redmineにおける問題  Redmineの設定で解決 運用で解決 ツール自体を拡張して解決  プラグインの探し方・おすすめ REST APIを使って外部から プラグインを作る   プラグインの探し方・おすすめ  http://www.r-labs.org/projects/r-labs/wiki/Redmine%E3%83%97%E3%83%A9%E3%82%B0%E3%82%A4%E3%83%B3%E9%9B%86:title http://www.redmine.org/plugins:title 一つだけおすすめを… Wiki Extensions Plugin  オートプレビュー 任意のページをメニューに 任意のページを埋め込み 等々…  他のおすすめ  CodeRevirew Backlogs TimeTracker   REST API  自動でチケットを作ったりできる チケット一覧を取得できたり この一連の流れができたらJenkinsに任せる事ができる  期日が間近のチケットのメール通知などもできる   プラグインを作る  Redmine1.4 or 2.0が対象(Ruby1.9,Bundler対応している/これ以前はしていない) プラグイン開発環境構築がつらいので  Ruby環境  WindowsならRubyInstaller + DevKit MacならRVM  自分でも少しまとめている http://d.</description>
    </item>
    
    <item>
      <title>SlideShareのAPIを叩いてスライドをDLするRubyスクリプトをHerokuにデプロイした</title>
      <link>https://note.gosyujin.com/2012/05/21/1337605575/</link>
      <pubDate>Mon, 21 May 2012 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2012/05/21/1337605575/</guid>
      <description>[SlideShare][Heroku][Ruby][API]SlideShareのAPIを叩いてスライドをDLするRubyスクリプトをHerokuにデプロイした あらすじ slideshareを社内から閲覧する事を禁じられているので、ワンクッションおいてスライドのpptを落とせるようにしたい
参考サイト  http://www.slideshare.net/developers/documentation#get_slideshow:title  とりあえず公式サイトを抑えておけばいけそう。
流れ API申請  slideshare -&amp;gt; Developer &amp;amp; APIのページからApply for API keyに移動 ログイン or 新規アカウント作成 Name、E-Mail、How do you want to use the API?を入力し送信。頑張って英文書く。  I want to get slideshare&amp;#39;s slide from API.  送信されたメールに貼られているAPI KeyとShared Secretを控える  パラメータ  slideshare -&amp;gt; Documentationを見ながら必要なパラメータを調べる  |*api_key|さっきのAPI Key|
|*ts|タイムスタンプ[1]|
|*hash|さっきのShared Secretとこれから取得するtsでハッシュを作る[2]|
|*(username)|登録ID|
|*(password)|パスワード|
全然関係ないけど、Documentationのページ内にあるi.e.って単語を初めて見たのでググってみた。http://www.masahiko.info/life/archives/000799.html:title that is &amp;hellip; すなわちとかそういう意味らしい。e.g.で例えば、for example的な。
ソース ソースはこんな感じ。
require &amp;#39;openssl&amp;#39; require &amp;#39;uri&amp;#39; require &amp;#39;net/http&amp;#39; url = &amp;#39;http://www.</description>
    </item>
    
    <item>
      <title>ZenTestで実行したRSpecの結果をGrowlで通知してくれるようにした</title>
      <link>https://note.gosyujin.com/2012/04/20/1334933158/</link>
      <pubDate>Fri, 20 Apr 2012 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2012/04/20/1334933158/</guid>
      <description>[Ruby][Windows][備忘録]ZenTestで実行したRSpecの結果をGrowlで通知してくれるようにした 前回までのあらすじ  http://d.hatena.ne.jp/kk_Ataka/20111207/1323291938:title  前回は、ファイル編集する -&amp;gt; alt+tabでウィンドウ切り替える -&amp;gt; プロンプトでrspecコマンドうつ…の繰り返しを改善することができた。
今回は、コード修正、保存 -&amp;gt; 違うターミナル切り替え -&amp;gt; ZenTestで自動実行された結果を見る…の繰り返しを改善する。テスト結果通知にGrowlを使用する事でいけそう。
参考サイト  http://d.hatena.ne.jp/gan2/20080413/1208081539:title http://www.edit.ne.jp/~koic/?date=20070731:title http://d.hatena.ne.jp/amacou/20090606/1244260607:title [https://github.com/rspec/rspec/wiki/autotest:title] http://blog.masashi-fujiwara.net/2010/11/script-test.html:title [https://github.com/karl/autotest-growl:title] http://rubyist.g.hatena.ne.jp/rochefort/20100414/p1:title http://d.hatena.ne.jp/zariganitosh/20080312/1205305079:title http://blog.champierre.com/774:title  環境  Windows XP Ruby 1.9.3  Rubygems 1.8.11 Bundler 1.0.21 ZenTest 4.6.2 autotest-growl 0.2.16(だったか？) rspec 2.8.0  Growl for Windows 2.0.9  Macに置き換えてもいけるかは後で確認。
手順 Growls for Windowsインストール  http://www.growlforwindows.com/gfw/displays.aspx:title ここから落とす。  Gem入手  Gemfileファイルを作って以下のgemファイルを記載  gem &amp;#39;ZenTest&amp;#39; gem &amp;#39;autotest-growl&amp;#39;  bundle install  .</description>
    </item>
    
    <item>
      <title>simplecovとsimplecov-rcovを使ってJenkinsでカバレッジを確認</title>
      <link>https://note.gosyujin.com/2012/03/27/1332856400/</link>
      <pubDate>Tue, 27 Mar 2012 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2012/03/27/1332856400/</guid>
      <description>[Windows][Jenkins][Ruby][備忘録]simplecovとsimplecov-rcovを使ってJenkinsでカバレッジを確認 あらすじ rcovインストールに思いの他てこずったので他のツールを検討してみる。
調べるとsimplecov,simplecov-rcovというツールでもいける様子。Ruby1.9系のカバレッジツールらしいが1.8でも使えるだろうか。あとRailsじゃなくても使えるのかな。
参考サイト  [https://github.com/colszowka/simplecov:title] [https://github.com/fguillen/simplecov-rcov:title]  手順(Getting Startedをかなりはしょりながら) Simplecov Gemfileに以下を追加。
gem &amp;#39;simplecov&amp;#39; 次にspecファイルに以下のrequireを追加。
require &amp;#39;simplecov&amp;#39; SimpleCov.start そしてrspecを実行。
$ bundle exec rspec -fs spec\convert_spec.rb WARNING: SimpleCov is activated, but you&amp;#39;re not running Ruby 1.9+ - no coverage analysis will happen WARNING: SimpleCov is activated, but you&amp;#39;re not running Ruby 1.9+ - no coverage analysis will happen やっぱ1.8じゃだめかー。ちょっとRuby1.9系で試してみる。
$ bundle exec rspec -fs spec\convert_spec.rb (略) Coverage report generated for RSpec to C:/project/excel_for_ruby/coverage.</description>
    </item>
    
    <item>
      <title>Windows環境用にrcovをビルドしなおす手順</title>
      <link>https://note.gosyujin.com/2012/03/20/1332240122/</link>
      <pubDate>Tue, 20 Mar 2012 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2012/03/20/1332240122/</guid>
      <description>[Windows][Jenkins][Ruby][備忘録]Windows環境用にrcovをビルドしなおす手順 あらすじ Jenkinsでビルドしていくとともにカバレッジの調査もしたい。rcovというツールでカバレッジを出す事ができるらしい。
参考サイト  [https://github.com/relevance/rcov:title] http://rubygems.org/gems/rcov:title http://www.freia.jp/taka/blog/762/:title  先に結論 Windows環境ではWindows用に自力でビルドしなければならない！
 [http://rubygems.org/gems/rcov:title]よりgemをDL [http://www.microsoft.com/japan/msdn/vstudio/express/:title]からVisual C++ 2010 Express Editionを入手しインストール 全てのプログラム -&amp;gt; Microsoft Visual Studio 2010 Express -&amp;gt; Visual Studio コマンド プロンプト (2010)を起動。以後ビルドはこのプロンプトで実施する %RUBY_HOME%\lib\ruby\1.8\i386-mswin32\のconfig.hのMSC_VERの記述を一旦消す  #if _MSC_VER != 1200 #error MSC version unmatch: _MSC_VER: 1200 is expected. #endif  env.hのFRAMEを以下のように編集  extern struct FRAME { extern __declspec(dllimport) struct FRAME {  gem install！！  以下は四苦八苦した記録の残骸。
手順(本当に順番をメモっているのでいらない操作が多い) rcovインストール BundlerでGemを管理するのでGemfileにrcovを追加。
gem &amp;#39;rcov&amp;#39; 追加後、インストール……</description>
    </item>
    
    <item>
      <title>Rails3レシピブックを読みながらRailsを学ぶ モデル、コントローラ、ビュー、Railsの規約など</title>
      <link>https://note.gosyujin.com/2012/02/29/1330528564/</link>
      <pubDate>Wed, 29 Feb 2012 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2012/02/29/1330528564/</guid>
      <description>[Ruby][Rails][Windows][備忘録]Rails3レシピブックを読みながらRailsを学ぶ モデル、コントローラ、ビュー、Railsの規約など 前回までのあらすじ  http://d.hatena.ne.jp/kk_Ataka/20120228/1330436604:title  Railsをインストールして起動する所まではできた。
参考  Rail3レシピブック 190の技  環境  WindowsXP Ruby1.8.7 Rails3.2.1  MVCを自動生成する アプリケーションのscaffold(足場)の作成 scaffoldジェネレータを実行する事でCRUD操作が可能な簡単なアプリケーションの足場が生成できる。コマンドはrails generate ジェネレータ モデル名 カラム名:型 カラム名:型 (以下繰り返せる)&amp;hellip;
$ bundle exec rails generate scaffold Blog name:string user_id:integer invoke active_record create db/migrate/20120229022816_create_blogs.rb create app/models/blog.rb invoke test_unit create test/unit/blog_test.rb create test/fixtures/blogs.yml route resources :blogs invoke scaffold_controller create app/controllers/blogs_controller.rb invoke erb create app/views/blogs create app/views/blogs/index.html.erb create app/views/blogs/edit.html.erb create app/views/blogs/show.html.erb create app/views/blogs/new.html.erb create app/views/blogs/_form.html.erb invoke test_unit create test/functional/blogs_controller_test.</description>
    </item>
    
    <item>
      <title>Rails3レシピブックを読みながらRailsを学ぶ</title>
      <link>https://note.gosyujin.com/2012/02/28/1330436604/</link>
      <pubDate>Tue, 28 Feb 2012 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2012/02/28/1330436604/</guid>
      <description>[Ruby][備忘録][Windows][Rails]Rails3レシピブックを読みながらRailsを学ぶ あらすじ Redmineプラグインの作り方を学ぶ前にRailsの基本的な事を学ばねばなりますまい。そういやあ。
参考  Rail3レシピブック 190の技  環境  WindowsXP Ruby 1.8.7 Rails 3.2.1  準備  はじめにbundleでrailsをインストールする……が、なんかエラーが。  Gem::InstallError: The &amp;#39;json&amp;#39; native gem requires installed build tools. Please update your PATH to include build tools or download the DevKit from &amp;#39;http://rubyinstaller.org/downloads&amp;#39; and follow the instructions at &amp;#39;http://github.com/oneclick/rubyinstaller/wiki/Development-Kit&amp;#39; An error occured while installing json (1.6.5), and Bundler cannot continue. Make sure that `gem install json -v &amp;#39;1.6.5&amp;#39;` succeeds before bundling.</description>
    </item>
    
    <item>
      <title>Rubyの実行ファイルを作成するExerbとOcraを試してみた</title>
      <link>https://note.gosyujin.com/2012/02/20/1329744294/</link>
      <pubDate>Mon, 20 Feb 2012 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2012/02/20/1329744294/</guid>
      <description>[Ruby][備忘録][Windows]Rubyの実行ファイルを作成するExerbとOcraを試してみた あらすじ Rubyが入っていないWindows環境でも(要は自分以外)Rubyスクリプトを実行したいのでexe化する方法を模索する。というか、昔模索した後の結果を今更まとめる。
対象プロジェクト win32oleを使ってExcelファイルを読み込みシートを取得し連番で吐くというRubyスクリプトをexe化。ソースはこんな感じ。
 出力結果はこう。
$ ruby getSheetname.rb Book1.xlsx Book1.xlsx --- Sheet1 Sheet2 Sheet3 Sheet4 Sheet5 --- end. ExerbとOcraをためしてみた。
Exerb(ダメだった) 最新は5.4.0らしいが、今回はなんでか4.3.0を入れていた。(理由不明)
手順(失念)  [http://exerb.sourceforge.jp/:title]よりExerbをダウンロード後、setup.rbを実行？だけでいいんだっけ？ mkexy.batとexerb.batがRubyのbinに入るはず exyファイルを作成する  $ mkexy.bat getSheetname.rb --- end.  成功するとgetSheetname.exyというファイルが作成される(GemfileにおけるGemfile.lockのようなもん？)  # Generated by mkexy # on 2012-02-15 22:05 general: startup: getSheetname.rb core: cui kcode: none file: getSheetname.rb: win32ole.so: file: C:/rubies/Ruby/lib/ruby/1.8/i386-mswin32/win32ole.so type: extension-library nkf.so: file: C:/rubies/Ruby/lib/ruby/1.8/i386-mswin32/nkf.so type: extension-library kconv.rb: file: C:/rubies/Ruby/lib/ruby/1.8/kconv.rb rational.rb: file: C:/rubies/Ruby/lib/ruby/1.</description>
    </item>
    
    <item>
      <title>BASE64エンコーディングをRubyで自力実装した</title>
      <link>https://note.gosyujin.com/2012/01/30/1327931393/</link>
      <pubDate>Mon, 30 Jan 2012 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2012/01/30/1327931393/</guid>
      <description>[Ruby][備忘録]BASE64エンコーディングをRubyで自力実装した あらすじ BASE64エンコーディングをおまじないのように使っていたので車輪の再発明で原理を学ぶ。
参考サイト  http://www5d.biglobe.ne.jp/~stssk/rfc/rfc3548j.html:title http://program.station.ez-net.jp/mini/encode/base64.asp:title http://blog.livedoor.jp/maru_tak/archives/50438057.html:title http://d.hatena.ne.jp/gan2/20070603/1180888302:title http://wind-master.dip.jp/soft-info/item/7/catid/3:title http://www.sea-bird.org/doc/Cygwin/BASE64enc.html:title http://yakinikunotare.boo.jp/orebase/index.php?Ruby%2F%CA%B8%BB%FA%CE%F3%A4%AB%A4%E91%CA%B8%BB%FA%CC%DC%A4%F2%BC%E8%A4%EA%BD%D0%A4%B9:title http://www.syuhitu.org/other/b64.html:title  BASE64  Base64は、データを64種類の印字可能な英数字のみを用いて、それ以外の文字を扱うことの出来ない通信環境にてマルチバイト文字やバイナリデータを扱うためのエンコード方式である。
http://ja.wikipedia.org/wiki/Base64
  データ変換形式 メール等でも使われている やりかた  元データを6bitに分割  ちょうど6bitにならない場合は0を足す  6bitデータを対応する文字に4文字ずつ変換(A-Za-z0-9+/)  4文字にならない場合は=を足す  全部くっつける   ふむう。。何か書けそう？　ちょっとやってみるか。
ソース   まず、変換したい文字のASCII値を取得 次にそれを2進数に変換(1と2はまとめてもいいかも) 6bit毎に分けて割り切れない分は0を足す 6bitのデータを変換テーブルと照らしあわせて対応する1文字と変換 4文字になるまで=を足す  検証  テスト文字列: kk_Ataka  己 $ ruby base64.rb kk_Ataka BYTE16:6b6b5f4174616b61 BYTE2 :0110101101101011010111110100000101110100011000010110101101100001 ADD 0 :011010110110101101011111010000010111010001100001011010110110000100 TRANS :a2tfQXRha2E ADD = :a2tfQXRha2E= a2tfQXRha2E= http://hogehoge.tk/tool/:title  プレーンTEXT, 変換不要, 未指定, BASE64  a2tfQXRha2E= http://tociyuki.</description>
    </item>
    
    <item>
      <title>Rubyで固定長の値を扱う方法sprintfとパーセント演算子</title>
      <link>https://note.gosyujin.com/2012/01/23/1327323360/</link>
      <pubDate>Mon, 23 Jan 2012 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2012/01/23/1327323360/</guid>
      <description>[Ruby][備忘録]Rubyで固定長の値を扱う方法sprintfとパーセント演算子 あらすじ  Rubyで固定長の値を扱うときはどうしたらいいんだろう  必ず5ケタにしたい！　255の場合は00255になってほしい   参考サイト http://www.ruby-lang.org/ja/old-man/html/sprintf_A5D5A5A9A1BCA5DEA5C3A5C8.html:title
http://www.oki-osk.jp/esc/ruby/tut-04.html:title の4.2
方法 調べてみるとsprintfメソッドというものがあった。
irb(main):020:0&amp;gt; sprintf(&amp;#34;Number:%10d&amp;#34;, 255) =&amp;gt; &amp;#34;Number: 255&amp;#34; irb(main):021:0&amp;gt; sprintf(&amp;#34;Number:%010d&amp;#34;, 255) =&amp;gt; &amp;#34;Number:0000000255&amp;#34; なるほど、これを使えば良いのかと思っていたら、次にStringクラスに%(パーセント演算子)というものが存在している事を発見。どんな事をしてくれるのかというと…
irb(main):022:0&amp;gt; &amp;#34;Number:%010d&amp;#34; % 255 =&amp;gt;  &amp;#34;Number:0000000255&amp;#34; とりあえず、使ってないと見慣れない物体に見えるなぁ。
という事で、方法を二種類見つけたんだけど、これどっち使うのがいいんだろう。個人的にはsprintfの方が何やっているかはわかりやすいけど、これは慣れの問題っぽいしな。</description>
    </item>
    
    <item>
      <title>EvernoteのAPIをRubyから叩きたい</title>
      <link>https://note.gosyujin.com/2011/12/27/1324911671/</link>
      <pubDate>Tue, 27 Dec 2011 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2011/12/27/1324911671/</guid>
      <description>[Evernote][備忘録][Ruby][API]EvernoteのAPIをRubyから叩きたい はじめに この記事は[http://atnd.org/events/22021:title]の27日目の記事です。
26日目はid:tackunさんの[http://d.hatena.ne.jp/tackun/20111226/1324908770:title]でした。
28日目はr7kamuraさんのRubyでGPUを使おう - &amp;amp;#10008;&amp;amp;#9593;&amp;amp;#9697;&amp;amp;#9593;&amp;amp;#10008;です。
今日はターミナル(or コマンドプロンプト)経由でEvernoteのAPIを叩き、自分のノートブックを取得してみようとしてみます。ソースを書く前にAPIの申請からやっていきます。
APIの申請…の前に developer用サイトからAPI SDKを入手。
 http://www.evernote.com/about/developer/api/:title  [f:id:kk_Ataka:20111226235624j:image]
上記のリンクを叩くとzipがDLできるので、これを解凍しruby/lib以下のファイルを用意しておく。
APIの申請  http://www.evernote.com/about/developer/api/:title  同じページを下へスクロールしていくとRequest an API Keyという箇所があるので以下の項目を入力する。
|*Evernote username|Evernoteのユーザ名|
|*Your Name|氏名|
|*Your Email|メールアドレス|
|*Organization|組織や団体、だが、個人で使う場合は氏名でよい|
|*Web or Client|今回は自分で使う用なのでClient Keysを選択(既に持っているので下の画像ではWebを選択している)|
|*Application Details|どうやってAPIを使いたいか|
つたない英語でDetailsを書く。以前は審査に時間がかかったらしいが今はSUBMITすればすぐKeyが発行されるみたい。
[f:id:kk_Ataka:20111218113115j:image]
WebApplicationを選んだ場合。
[f:id:kk_Ataka:20111218113113j:image]
Clientを選んだ場合。
[f:id:kk_Ataka:20111218113114j:image]
これでConsumer KeyとConsumer Secretをもらえた。ただし、この状態では砂場(sandbox.evernote.com)でしか使えない。
上記画像のNext Steps 2.によると[https://sandbox.evernote.com/Registration.action:title]で砂場用アカウントを作成し、砂場で開発をしてくださいという事でいきなり本家(www.evernote.com)で動かせないようになっている。
Activate 今回のエントリではやらないが、本家で動かす時はActivateサイト(Next Steps 3.のlet us knowリンクから行ける)でActivateしてもらう必要がある。(ここは昔の事なので少し曖昧)
|*Email|メールアドレス|
|*API Consumer Key|登録時にもらったConsumer Key|
|*Additional Info|その他何かあれば？(何か書いたっけ…？)|
[f:id:kk_Ataka:20111218115757j:image]
ソース iitHubに。 https://github.com/gosyujin/evernote_for_ruby/blob/master/myEvernote.rb
ここから実際に取得していきます。
パス追加 プロジェクト内にあるライブラリ(さっき落としたAPI SDK)を読み込む。</description>
    </item>
    
    <item>
      <title>SinatraでHaml入門</title>
      <link>https://note.gosyujin.com/2011/12/26/1324910284/</link>
      <pubDate>Mon, 26 Dec 2011 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2011/12/26/1324910284/</guid>
      <description>[Ruby][備忘録][Haml][Sinatra]SinatraでHaml入門 あらすじ Sinatraとか使っていてもHtmlべた書きばかりなのでHamlに入門してみる。
参考サイト  http://haml.ursm.jp/getting-started:title  日本ハム！
Hamlとは  HamlはHTML/XHTMLを生成するためのマークアップ言語です。インデントや簡略構文によって簡潔な記述が行えます。
http://haml.ursm.jp/
 今まで require &amp;#39;rubygems&amp;#39; require &amp;#39;sinatra&amp;#39; get &amp;#39;/&amp;#39; do &amp;#34;&amp;lt;style type=&amp;#39;text/css&amp;#39;&amp;gt;.head {border-bottom: 1px solid #CCCCCC;border-left: 5px solid #CCCCCC;}.time {color: #CCCCCC;}.tweet {}&amp;lt;/style&amp;gt;&amp;lt;h1&amp;gt;Hello Tycoon-Timeline powerd by Heroku!!&amp;lt;/h1&amp;gt;&amp;lt;a href=&amp;#39;&amp;#39;&amp;gt;Reload&amp;lt;/a&amp;gt;&amp;lt;dl&amp;gt;&amp;lt;dt class=&amp;#39;head&amp;#39;&amp;gt;User &amp;lt;span class=&amp;#39;time&amp;#39;&amp;gt;2011/12/26 02:25:00&amp;lt;/span&amp;gt;&amp;lt;/dt&amp;gt;&amp;lt;dd class=&amp;#39;tweet&amp;#39;&amp;gt;ついーと&amp;lt;/dd ...&amp;#34; end 全部こんな感じ。なのでページがでかくなっていくことを考えると非常につらい。
準備 構成 Gemfile app.rb views ┗index.haml Gemfile Bundlerを使うのでGemfileを作成。
source :rubygems source &amp;#34;http://rubygems.org&amp;#34; gem &amp;#39;sinatra&amp;#39; gem &amp;#39;haml&amp;#39; SinatraとHamlをインストール。
gemインストール $ bundle install ./vendor/bundle app.rb require &amp;#39;rubygems&amp;#39; require &amp;#39;sinatra&amp;#39; require &amp;#39;haml&amp;#39; get &amp;#39;/&amp;#39; do haml :index end 今までhtmlタグを書いていた返り値をhtml :indexとする。するとここではviews/index.</description>
    </item>
    
    <item>
      <title>Ruby実行時のオプションをよろしく解析してくれるoptparseを使ってみる</title>
      <link>https://note.gosyujin.com/2011/12/21/1324477125/</link>
      <pubDate>Wed, 21 Dec 2011 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2011/12/21/1324477125/</guid>
      <description>[Ruby][備忘録]Ruby実行時のオプションをよろしく解析してくれるoptparseを使ってみる あらすじ コマンドラインから引数つきでRubyを実行する時は
ruby xxxx.rb ARG1 ARG2 とかして、中でARGVをifで条件分岐とかしていたが…何か他にやり方があるのではと調べたらやっぱりあった。optparseを使えばよろしく解析してくれるようだ。
参考サイト  http://www.ruby-lang.org/ja/old-man/html/optparse_A5C1A5E5A1BCA5C8A5EAA5A2A5EB.html:title    OptionParser オブジェクト opt を生成する。
 オプションを取り扱うブロックを opt に登録する。
 opt.parse(ARGV) でコマンドラインを実際に parse する。
   基本はこういう事らしい。
サンプルソース とりあえずGistに。色々試してみる。
 実行結果 単純なオプション # short option opt.on(&amp;#39;-a&amp;#39;, &amp;#39;DESCRIPTION&amp;#39;) do |v| puts &amp;#34;v class is #{v.class}&amp;#34; puts &amp;#34;-a is #{v}&amp;#34; end オプションに-aを指定するだけ。真偽値で返ってくる。第二引数のDESCRIPTIONは後述。
$ ruby optparse.rb -a v class is TrueClass -a is true オプションの後に値(必須) # short option with require argument opt.</description>
    </item>
    
    <item>
      <title>RedmineとApacheを連携させるPassengerをインストールできなかった</title>
      <link>https://note.gosyujin.com/2011/12/15/1323951847/</link>
      <pubDate>Thu, 15 Dec 2011 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2011/12/15/1323951847/</guid>
      <description>[Ruby][Solaris][備忘録][Redmine]RedmineとApacheを連携させるPassengerをインストールできなかった あらすじ  Redmineを自動起動するようにしたい  Phusion Passenger(mod_rails for Apache)を使えばApacheと連携できるらしい    特徴
\* Apache単独でRailsアプリケーションを実行可能です。Apacheのモジュールとして実装されており、別途デーモンを起動する必要がありません。tcpポートも使いません。 \* Railsアプリケーションのデプロイが簡単になります。ファイルをアップロードするだけ。ほぼPHP感覚です。 \* サーバのメモリを節約できます。Railsインスタンスは必要なタイミングで生成します。また、一定時間アクセスがなければインスタンスを終了させます。 http://redmine.jp/tech_note/apache-passenger/
 ふーむ。
参考サイト  http://redmine.jp/faq/system_management/redmine-auto-start/:title http://redmine.jp/tech_note/apache-passenger/:title http://d.hatena.ne.jp/rx7/20080412/p1:title http://d.hatena.ne.jp/r7kamura/20110212/1297452845:title  手順 passengerインストール Passengerを使うにはfastthread、daemon_controllerが必要らしい。
$ gem install --local fastthread-1.0.7.gem $ gem install --local daemon_controller-0.2.6.gem $ gem install --local passenger-3.0.9.gem ※スタンドアロンなマシンだったため。ネットにつながっていればgem install passengerで全部入るはず。
passenger-install-apache2-module実行 対話形式でApacheのモジュール等を確認・インストールしていく。はじめにpassener-install-apache2-moduleを実行するとこんなメッセージが出てくる。
$ passenger-install-apache2-module Welcome to the Phusion Passenger Apache 2 module installer, v3.0.9. This installer will guide you through the entire installation process.</description>
    </item>
    
    <item>
      <title>ZenTestでRSpecを自動実行できるようにした</title>
      <link>https://note.gosyujin.com/2011/12/07/1323291938/</link>
      <pubDate>Wed, 07 Dec 2011 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2011/12/07/1323291938/</guid>
      <description>[Ruby][備忘録]ZenTestでRSpecを自動実行できるようにした あらすじ ZenTestを使えばテストを*specファイルを変更したタイミングで実行できるという事を知った。
ファイル編集する -&amp;gt; alt+tabでウィンドウ切り替える -&amp;gt; プロンプトでrspecコマンドうつ…の繰り返しとはなんだったのか……。
参考サイト  http://randd.kwappa.net/2011/08/07/338:title http://d.hatena.ne.jp/seiunsky/20100131/1264913047:title  環境  Windows XP 導入済み  Ruby 1.8.7 Rspec 2.5 Rubygems バージョン失念   手順 ZenTest導入 まずはZenTestをgemで導入……しようと思ったらgem自体のアップデートを要求された。
gem update --system アップした後はgem 1.8.10となった。gemを最新にしたらZenTestを導入。
gem install ZenTest 次にソースファイルを用意。Growlで何かしら通知するファイルを作りたかったのでそんな感じの名前に。
growl_for_ruby ┣.autotest ┣autotest ┃┗discover.rb ┣growl.rb　# 実際にソースをゴリゴリ書いていく ┗spec ┗growl_spec.rb # テストコード .autotest これにはまだ何も書いていない。設定を書いていくらしい。
autotest/discover.rb autotestコマンド実行時にautotestフォルダに入っているdiscover.rbを読みに行くようだ。中身は以下。
Autotest.add_discovery { &amp;#34;rspec2&amp;#34; } autotestでrspec 2.Xを使うよってことかな。
spec/growl_spec.rb テストコード。rspecの書き方にならってテストを書いていく。注意しないといけないのは、テストコードはspecフォルダ以下に入れないと読み込んでくれない。[1]
テスト実行 一つ新しいプロンプトを開き、プロジェクトルートへ移動。そしてautotest実行。
$ autotest loading autotest/rspec2 C:\ruby1.8\bin\ruby -rrubygems -S C:/ruby1.</description>
    </item>
    
    <item>
      <title>RedmineでプラグインインストールしたらTemplateErrorが出た</title>
      <link>https://note.gosyujin.com/2011/12/05/1323092947/</link>
      <pubDate>Mon, 05 Dec 2011 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2011/12/05/1323092947/</guid>
      <description>[Ruby][備忘録][Redmine]RedmineでプラグインインストールしたらTemplateErrorが出た あらすじ Redmineにプラグインをインストールした後で動かそうとしたらエラーが。
調査 下記の例はredmine_importerというCSVでチケット一括登録するプラグイン。
ActionView::TemplateError (No plugin called &amp;#39;redmine_importer&amp;#39; - please use the full name of a loaded plugin.) on line #2 of vendor/plugins/idlysphere-redmine_importer-7a19e8d/app/views/importer/match.html.erb: 1: &amp;lt;% content_for :header_tags do %&amp;gt; 2: &amp;lt;%= stylesheet_link_tag &amp;#39;importer&amp;#39;, :plugin =&amp;gt; &amp;#39;redmine_importer&amp;#39; %&amp;gt; 3: &amp;lt;% end %&amp;gt; 4: 5: &amp;lt;h2&amp;gt;&amp;lt;%= l(:label_match_columns) %&amp;gt;&amp;lt;/h2&amp;gt; vendor/plugins/idlysphere-redmine_importer-7a19e8d/app/views/importer/match.html.erb:2 app/helpers/application_helper.rb:764:in `content_for&amp;#39; vendor/plugins/idlysphere-redmine_importer-7a19e8d/app/views/importer/match.html.erb:1 /usr/local/lib/ruby/1.8/webrick/httpserver.rb:104:in `service&amp;#39; /usr/local/lib/ruby/1.8/webrick/httpserver.rb:65:in `run&amp;#39; /usr/local/lib/ruby/1.8/webrick/server.rb:173:in `start_thread&amp;#39; /usr/local/lib/ruby/1.8/webrick/server.rb:162:in `start&amp;#39; /usr/local/lib/ruby/1.8/webrick/server.rb:162:in `start_thread&amp;#39; /usr/local/lib/ruby/1.8/webrick/server.rb:95:in `start&amp;#39; /usr/local/lib/ruby/1.8/webrick/server.rb:92:in `each&amp;#39; /usr/local/lib/ruby/1.8/webrick/server.rb:92:in `start&amp;#39; /usr/local/lib/ruby/1.8/webrick/server.rb:23:in `start&amp;#39; /usr/local/lib/ruby/1.</description>
    </item>
    
    <item>
      <title>複数のRuby環境の管理・切替ができるrvmをインストールした</title>
      <link>https://note.gosyujin.com/2011/12/04/1323009249/</link>
      <pubDate>Sun, 04 Dec 2011 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2011/12/04/1323009249/</guid>
      <description>[Ruby][備忘録][Mac][Unix]複数のRuby環境の管理・切替ができるrvmをインストールした あらすじ 先にWindowsにてRubyのバージョン管理ができるpikをインストールしていたので、今度はWindows以外にrvmをインストールする。
参考サイト  https://rvm.beginrescueend.com/rvm/install http://www.machu.jp/diary/20110521.html#p01:title http://d.hatena.ne.jp/mirakui/20100502/1272849327:title  まとめ とりあえず以下のコマンドを覚える。
 rvm list known  インストールできるRubyの一覧  rvm list  インストールしているRubyの一覧  rvm install x.x.x  インストール  rvm use x.x.x  Rubyの切り替え   事前準備  既にインストールされていたRubyは全部消した。  手順 インストールのため下記コマンドをうつ。
$ bash &amp;lt; &amp;lt;(curl -s https://raw.github.com/wayneeseguin/rvm/master/binscripts/rvm-installer ) ホームディレクトリに.rvmが生成される。list knownでインストールできるRuby一覧が表示される。
(2012/04/07追記)command not foundが出る場合はPATHが通ってない。
 Installing RVM to /Users/kk_Ataka/.rvm/
Adding rvm PATH line to /Users/kk\_Ataka/.bashrc /Users/kk\_Ataka/.zshrc. RVM sourcing line found in /Users/kk\_Ataka/.</description>
    </item>
    
    <item>
      <title>rvm環境でRuby実行時にReadlineエラーが起きた時の対処法</title>
      <link>https://note.gosyujin.com/2011/11/30/1322662743/</link>
      <pubDate>Wed, 30 Nov 2011 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2011/11/30/1322662743/</guid>
      <description>[Ruby][備忘録][Heroku]rvm環境でRuby実行時にReadlineエラーが起きた時の対処法 タイトル通り。さくらVPS(CentOS)にrvmでRubyをインストールし、Heroku環境を構築しようとしたらReadlineエラーが起きた。
$ rvm install 1.9.2 (略) $ rvm use 1.9.2 $ gem install heroku (略) $ heroku /home/kk_Ataka/.rvm/rubies/ruby-1.9.2-p290/lib/ruby/site_ruby/1.9.1/rubygems/custom_require.rb:36:in `require&amp;#39;: no such file to load -- readline (LoadError) from /home/kk_Ataka/.rvm/rubies/ruby-1.9.2-p290/lib/ruby/site_ruby/1.9.1/rubygems/custom_require.rb:36:in `require&amp;#39; from /home/kk_Ataka/.rvm/gems/ruby-1.9.2-p290/gems/heroku-2.14.0/lib/heroku/command/run.rb:1:in `&amp;lt;top (required)&amp;gt;&amp;#39; from /home/kk_Ataka/.rvm/rubies/ruby-1.9.2-p290/lib/ruby/site_ruby/1.9.1/rubygems/custom_require.rb:36:in `require&amp;#39; from /home/kk_Ataka/.rvm/rubies/ruby-1.9.2-p290/lib/ruby/site_ruby/1.9.1/rubygems/custom_require.rb:36:in `require&amp;#39; from /home/kk_Ataka/.rvm/gems/ruby-1.9.2-p290/gems/heroku-2.14.0/lib/heroku/command.rb:17:in `block in load&amp;#39; from /home/kk_Ataka/.rvm/gems/ruby-1.9.2-p290/gems/heroku-2.14.0/lib/heroku/command.rb:16:in `each&amp;#39; from /home/kk_Ataka/.rvm/gems/ruby-1.9.2-p290/gems/heroku-2.14.0/lib/heroku/command.rb:16:in `load&amp;#39; from /home/kk_Ataka/.rvm/gems/ruby-1.9.2-p290/gems/heroku-2.14.0/bin/heroku:13:in `&amp;lt;top (required)&amp;gt;&amp;#39; from /home/kk_Ataka/.rvm/gems/ruby-1.9.2-p290/bin/heroku:19:in `load&amp;#39; from /home/kk_Ataka/.rvm/gems/ruby-1.9.2-p290/bin/heroku:19:in `&amp;lt;main&amp;gt;&amp;#39; readlineが入っていなかったのだろうか？
$ sudo yum install readline-devel $ cd $rvm_path/src/RUBYVERSION/ext/readline $ ruby extconf.</description>
    </item>
    
    <item>
      <title>pikでインストールしたRubyでbundle exec rubyしたらエラーになった 解決編</title>
      <link>https://note.gosyujin.com/2011/11/29/1322569582/</link>
      <pubDate>Tue, 29 Nov 2011 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2011/11/29/1322569582/</guid>
      <description>[Ruby][備忘録]pikでインストールしたRubyでbundle exec rubyしたらエラーになった 解決編 前回までのあらすじ [http://d.hatena.ne.jp/kk_Ataka/20111128/1322482230:title]で出たRubyオプションのエラー。
$ bundle exec ruby app.rb ruby: invalid switch in RUBYOPT: -a (RuntimeError) この-aオプションはどこから出てきたのかというと、&amp;rdquo;Documents and Settings&amp;rdquo;のaだという事がわかった。
結論  Rubyのインストールパスにスペースを含めない pikでRubyをインストールする前にpik config install_dir=XXXでパス指定する  先に結論を書くと、やっぱりこうだった。以下、調査ログ。
調査 試しに以下のディレクトリに設置したRubyを使用しようとしたところ、下記のエラーが。(whichとか使えてるのはnyaosを使っているからです)
 C:\rubies\Ru by
  $ which ruby C:\rubies\Ru by\bin\ruby.exe $ bundle exec ruby myapp.rb ruby: illegal switch in RUBYOPT: -b (RuntimeError)  C:\rubies\R uby
  $ which ruby C:\rubies\R uby\bin\ruby.exe $ bundle exec ruby myapp.rb ruby: illegal switch in RUBYOPT: -u (RuntimeError) あぁやっぱりかー。</description>
    </item>
    
    <item>
      <title>pikでインストールしたRubyでbundle exec rubyしたらエラーになった</title>
      <link>https://note.gosyujin.com/2011/11/28/1322482230/</link>
      <pubDate>Mon, 28 Nov 2011 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2011/11/28/1322482230/</guid>
      <description>[Ruby][備忘録]pikでインストールしたRubyでbundle exec rubyしたらエラーになった 解決編 - http://d.hatena.ne.jp/kk_Ataka/20111129/1322569582:title
あらすじ  デフォルトのRubyからpikでインストールしたRubyに切り替えた後bundle exec rubyをしたら下記のようなエラーが出た  $ bundle exec ruby app.rb ruby: invalid switch in RUBYOPT: -a (RuntimeError) ン？　なんだこれ。
調査  pikでインストールしたRubyはバージョン等関係なしにことごとくこけた  1.8.7 patch352 1.9.3  デフォルトでインストールしたRubyでは無事起動した / 下記ログ  1.8.7 patch330   $ bundle exec ruby app.rb [2011-11-28 19:31:55] INFO WEBrick 1.3.1 [2011-11-28 19:31:55] INFO ruby 1.8.7 (2010-12-23) [i386-mswin32] == Sinatra/1.3.1 has taken the stage on 4567 for development with backup from WEBrick [2011-11-28 19:31:55] INFO WEBrick::HTTPServer#start: pid=964 port=4567 1.</description>
    </item>
    
    <item>
      <title>LokkaをインストールしてHerokuにデプロイした</title>
      <link>https://note.gosyujin.com/2011/11/27/1322329546/</link>
      <pubDate>Sun, 27 Nov 2011 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2011/11/27/1322329546/</guid>
      <description>[Ruby][備忘録][Heroku][Lokka]LokkaをインストールしてHerokuにデプロイした あらすじ Herokuを使い出したのでLokkaを触ってみる。
参考サイト  http://lokka.org/getting-started:title  公式ページの手順だけでなんとかなりそう。
手順 Lokka入手、インストール LokkaをGitHubからCloneして、Bundle install。&amp;ndash;withoutオプションでmysql, postgresql, sqliteから使わないDBを指定できる。
$ git clone git://github.com/komagata/lokka.git$ cd lokka $ bundle install ./vendor/bundle --without development mysql sqlite ん、何かエラッた。
Gem::Installer::ExtensionBuildError: ERROR: Failed to build gem native extension. (略) Gem files will remain installed in /home/kk_Ataka/github/lokka/vendor/bundle/ruby/1.9.1/bundler/gems/do-d7cb262d89a1/do_postgres for inspection. Results logged to /home/kk_Ataka/github/lokka/vendor/bundle/ruby/1.9.1/bundler/gems/do-d7cb262d89a1/do_postgres/ext/do_postgres/gem_make.out An error occured while installing do_postgres (0.10.6), and Bundler cannot continue. Make sure that `gem install do_postgres -v &amp;#39;0.</description>
    </item>
    
    <item>
      <title>HerokuにWebアプリ(Sinatra)をデプロイする手順をまとめた</title>
      <link>https://note.gosyujin.com/2011/11/26/1322240459/</link>
      <pubDate>Sat, 26 Nov 2011 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2011/11/26/1322240459/</guid>
      <description>[Ruby][備忘録][Sinatra][Heroku]HerokuにWebアプリ(Sinatra)をデプロイする手順をまとめた あらすじ いよいよHerokuをはじめる。
参考サイト  http://d.hatena.ne.jp/ruedap/20110209/ruby_heroku_twitter_bot:title http://studyheroku.wiki.fc2.com/wiki/Heroku%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89:title http://kuranuki.sonicgarden.jp/2009/05/rubypaasherokurails.html:title  事前準備  Ruby 1.9.3 Git 1.7.3 rvm 1.9.2 gem 1.8.10  gem管理にbundlerを使いたい   プロジェクト作成 Bundler準備 プロジェクトフォルダ(heroku_sample)を作成し、その中にGemfileファイルを作成する。gem &amp;lsquo;heroku&amp;rsquo;は後ほどHerokuに対してプロジェクトを作ったりするのに使用する。
$ mkdir heroku_sample $ cd heroku_sample $ vi Gemfile source :rubygems source &amp;#39;http://rubygems.org&amp;#39; gem &amp;#39;sinatra&amp;#39; gem &amp;#39;heroku&amp;#39; bundleでインストール。場所は任意で。今回はカレントのvendor/bundleにインストール。
$ bundle install ./vendor/bundle Sinatra準備 SinatraでHello World!!できるようにサンプルファイルapp.rbを作成。
$ vi app.rb require &amp;#39;rubygems&amp;#39; require &amp;#39;sinatra&amp;#39; get &amp;#39;/&amp;#39; do &amp;#34;Hello World!&amp;#34; end Rackアプリケーションとして起動するためconfig.ruファイルを作成する。
require &amp;#39;./app.rb&amp;#39; run Sinatra::Application ※ちょっと先の話になるけど、始めは1行目をrequire &amp;lsquo;app.</description>
    </item>
    
    <item>
      <title>複数のRuby環境の管理・切替ができるpikを実行できた nyaos編</title>
      <link>https://note.gosyujin.com/2011/11/24/1322138944/</link>
      <pubDate>Thu, 24 Nov 2011 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2011/11/24/1322138944/</guid>
      <description>[Ruby][備忘録]複数のRuby環境の管理・切替ができるpikを実行できた nyaos編 前回までのあらすじ  http://d.hatena.ne.jp/kk_Ataka/20111004/1317660186:title  まず、環境変数がおかしいとpikが正常に動きませんよというのが一つ。もう一つの原因がコマンドプロンプトではなくnyaosを使っていたという事。
参考サイト  http://d.hatena.ne.jp/miyamuko/20100905/nyaos_with_pik:title  修正方法 そのままだと、nyaosでPATH追加シェルを起動しても親シェルであるnyaosには反映されませんよってんで、動かすには_nyaファイルに以下のコードを追加する。
pik{ pik_runner.exe pik.bat %* if exist &amp;#34;%USERPROFILE%\.pik\pik.bat&amp;#34; then source &amp;#34;%USERPROFILE%\.pik\pik.bat&amp;#34; 2&amp;gt; nul endif } msysgitを使ってる時も同じ感じで追加すればいいのかな。</description>
    </item>
    
    <item>
      <title>複数のRuby環境の管理・切替ができるpikを実行できた</title>
      <link>https://note.gosyujin.com/2011/10/04/1317660186/</link>
      <pubDate>Tue, 04 Oct 2011 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2011/10/04/1317660186/</guid>
      <description>[Ruby][備忘録]複数のRuby環境の管理・切替ができるpikを実行できた あらすじ  [http://d.hatena.ne.jp/kk_Ataka/20111003/1317642705:title]にてBundlerでのgem管理に失敗した 別の方法はないかと調べているとRubyをバージョンごとに管理できるrvmとpikを見つけた  とりあえず別出ししておいて安定させたい環境と色々試行錯誤したい環境に分けられる？  Windows環境なのでpikを使ってみようとインストールしてみた  インストール手順(gem) ※gemでは実際にRubyをinstallする段階の所で失敗したので、実際は次のmsiを使ってインストールした。
 gemでOK  gem install pik  pikをインストールするにはpik_installコマンドを実行する必要があるが、フォルダを作成し、PATHに追加してから実行してくれと言われる  $ pik_install Usage: pik_install path\to\install You should install to a directory that is in your system path, or add the directory to your system path. Do not install to your ruby&amp;#39;s bin directory because pik will remove it from the path when switching versions. Example: C:\&amp;gt;path PATH=C:\tools;C:\ruby\Ruby-186-p383\bin;C:\WINDOWS\system32;... C:\&amp;gt;pik_install C:\tools  C:\pikフォルダ作成しPATHに追加し再度  $ pik_install C:\pik Thank you for using pik.</description>
    </item>
    
    <item>
      <title>Rubyのgemバージョン管理ができるBundlerを実行できなかった</title>
      <link>https://note.gosyujin.com/2011/10/03/1317642705/</link>
      <pubDate>Mon, 03 Oct 2011 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2011/10/03/1317642705/</guid>
      <description>[Ruby][備忘録]Rubyのgemバージョン管理ができるBundlerを実行できなかった あらすじ  gemでライブラリを入れまくり、updateしまくりでバージョンの不整合が起こり復旧不可能になった 同じ過ちは繰り返したくない…ので今度はうまく管理したい Bundlerを使えばgemのバージョン管理ができるみたい  設定さえあればどの環境も同じにする事が出来る？   Bundlerを入れてみます。
環境  Windows XP Ruby 1.8.7  RubyのパスはC:\ruby  必要なDLLなど  zlib.dll readline.dll iconv.dll iconv.lib iconv_a.lib ssleay32.dll libeay32.dll   手順 Rubygemsインストール  [http://rubyforge.org/frs/?group_id=126:title]よりRubygemsをDL。バージョンは1.7.2  gemは入っていないとするので、zipファイルからインストールする。   $ ruby setup.rb RubyGems 1.7.2 installed ・ｿ=== 1.7.2 / 2011-04-05 * 1 Bug Fix: * Warn on loading bad spec array values (ntlm-http gem has nil in its cert chain) ------------------------------------------------------------------------------ RubyGems installed the following executables: C:/ruby/bin/gem  バージョン、環境を確認  $ gem -v 1.</description>
    </item>
    
    <item>
      <title>.msgファイルをパースして中から添付ファイルを抜き出す</title>
      <link>https://note.gosyujin.com/2011/09/30/1317312438/</link>
      <pubDate>Fri, 30 Sep 2011 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2011/09/30/1317312438/</guid>
      <description>[Java][Windows][Ruby][備忘録].msgファイルをパースして中から添付ファイルを抜き出す 正確にはRubyというには微妙なんですが…。
前回までのあらすじ  選んだメール(本文と添付ファイル)をまとめてDLしてくるだけの簡単なお仕事はできるようになった  http://d.hatena.ne.jp/kk_Ataka/20110517/1305560776:title http://d.hatena.ne.jp/kk_Ataka/20110709/1310140318:title http://d.hatena.ne.jp/kk_Ataka/20110823/1314103220:title   しかし、社内セキュリティGWの設定？　のためかzipとかexeとか怪しい拡張子が付いている添付ファイルは一旦msgファイルに固められるという仕様のためそのままでは添付ファイルが見れない。
こういうメールが
メール ┗添付ファイル.zip 届いた時にはこうなっている
メール ┗ラップ.msg(＼あやしいファイルだから注意してDLしてね／) ┗本来の添付ファイル.zip なんとかRubyからmsgファイル内を解析して添付ファイルを引っこ抜いて保存ができまいか…というのが今回の問題。
結論 以下のライブラリを駆使して実現しました。
 msgparser(Auxiliiという所のJava用msgファイルパースライブラリ) jrb(Java Ruby Bridge: RubyからJavaVMを操作できるライブラリ)  一応Rubyでmsgファイルを解析するライブラリも探してみたのですが、あまりないのかな？　http://en.sourceforge.jp/projects/sfnet_ssfiledll/downloads/SSFileDLL%20%28MAPI%29/1.0/SSFileDLL-MAPI-1.0-Source.zip/:title こういうdllは見つけたのですが、MAPIがよくわからん上に説明を見る限りHasAttach(添付ファイルを持ってるか持ってないか？)くらいしかわからない？　ようなのであきらめました。
あと、msgparserはJavaライブラリなので当初はJRubyで書けば何とかなるかなと思ってました。簡単なサンプルは http://www.rgagnon.com/javadetails/java-0613.html:title このページのような感じ。が、今まで書いたコードをJRubyで実行すると失敗してしまったので方向転換；；　RubyからJavaVMを操作できるrjbというライブラリを使う事に。
ダウンロード・インストール  msgparser  http://auxilii.com/msgparser/Page.php?id=16000:title よりmsgparserをDL  [http://poi.apache.org/poifs/:title]や[http://www.freeutils.net/source/jtnef/:title]とかが必要になるのですが、上記のmsgparse.zipの中に全部入ってます[1]  distよりmasparser-X.XX.jarを、libよりpoi-X.X-YYYYMMDD.jarとtnef-X.X.X.jarを取得し、同じプロジェクト内にコピー。とりあえずlibフォルダを作ってそこに入れました  rjb  gemで。ただし、当然というかJavaが入っていないと失敗する模様。環境変数JAVA_HOMEも設定している必要があるみたい   gem install rjb ソース ソース全体は [https://github.com/gosyujin/outlook_for_ruby:title] 。msgParse.rbが本体、ライブラリがlibに入っています。
使い方としてはMsgParseをnewしてinputMsgで.msgファイルのパス指定、saveFileで添付ファイルぶっこぬいて出力先に保存としたい。こんな感じで。
msg = MsgParse.new msg.inputMsg(MSGFILE) msg.saveFile(SAVEDIR) という事でMsgParser[2]クラスを作成。ソースは [https://github.com/gosyujin/outlook_for_ruby/blob/master/msgParse.rb:title] 。まずは初期化から。</description>
    </item>
    
    <item>
      <title>Redmineのプラグイン作成のための備忘録と、時々SQLite3</title>
      <link>https://note.gosyujin.com/2011/09/07/1315401886/</link>
      <pubDate>Wed, 07 Sep 2011 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2011/09/07/1315401886/</guid>
      <description>[Ruby][Redmine][SQLite3][Windows][備忘録]Redmineのプラグイン作成のための備忘録と、時々SQLite3 あらすじ 今あると幸せになれるもの
チケットのCSVエクスポート機能。ただし、履歴つきで。これがあるといわゆるバグとかPJ課題の管理がRedmineで一元化できExcelの呪縛から解き放てられる……
既に履歴つきCSVエクスポートプラグインは存在しているようです。http://d.hatena.ne.jp/suer/20101003/1286120294:title　ただ、履歴の出方が1履歴毎に列を更新なんですよね。。
No, ... ,履歴 1, ... ,#1の履歴,#2の履歴,#3の履歴 2, ... ,#1の履歴,#2の履歴 今自分が抱えている縛り的にはこう出てほしい。
No, ... ,履歴 1, ... ,&amp;#34;#1の履歴 #2の履歴, #3の履歴&amp;#34; 2, ... ,&amp;#34;#1の履歴, #2の履歴&amp;#34; 吐き出したときにチケット1つの履歴を1セルの中に収めたい。CSVに改行はどうなんだとか1セルに改行しまくるのはどうなんだとか色々ありますがそこは縛りなので。。。
だもんで、これを機会にRedmineのプラグインはどう作るのかを調べてみました。
参考サイト  http://www.r-labs.org/projects/r-labs/wiki/%E3%83%97%E3%83%A9%E3%82%B0%E3%82%A4%E3%83%B3%E9%96%8B%E7%99%BA%E3%82%AC%E3%82%A4%E3%83%89:title http://gihyo.jp/dev/serial/01/ruby/0038:title  環境  WindowsXP Redmine 1.0.0[1]  Ruby 1.8.7 Rails 2.3.5 Rack 1.0.1  SQLite3 バージョン失念  プラグインのスケルトン作成 まずはプラグインのスケルトンというものを作成する。テンプレートみたいなもの？　以下のコマンドで自動生成してくれます。[2]
&amp;gt;ruby script\generate redmine_plugin extendCsv するといきなりエラー。
!!! The bundled mysql.rb driver has been removed from Rails 2.</description>
    </item>
    
    <item>
      <title>MicrosoftOutlookで消せなくなったフォルダをwin32ole経由でRubyから消してみる</title>
      <link>https://note.gosyujin.com/2011/08/23/1314103220/</link>
      <pubDate>Tue, 23 Aug 2011 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2011/08/23/1314103220/</guid>
      <description>[Ruby][Windows]MicrosoftOutlookで消せなくなったフォルダをwin32ole経由でRubyから消してみる ※この操作をすると新しくフォルダを追加してもOutlookの画面から見れなくなるようです？win32ole経由だと見えるのになんで…。→Windows再起動したらなおりました。
あらすじ OutlookのRSSフィード内にどうやっても消えないフォルダが出来てしまい途方に暮れていた。
何がどうなってこうなのかは定かではないんですが、誤って「RSSフィードフォルダ」内にある「RSSフィード記事」に対して「RSSフィードフォルダ」自体をD&amp;amp;Dしてしまった時に生まれたフォルダだと思いまする。。
フィードをまるごと削除しようとしても「権限を見直してからまた挑戦してねてへぺろ(・ω＜)」[1]とか言って絶対消えてくれないのでOutlookフォルダとかレジストリとかいじらないと消滅させられないのかなーと悩んでいました。
……が、正直どこをどういじればいいかわからないので、最後にダメ元でwin32oleにお願いしてみた。
解法そして解放 これで消えた……。
require &amp;#39;win32ole&amp;#39; ol = WIN32OLE::connect(&amp;#34;Outlook.Application&amp;#34;) nameSpace = ol.getNameSpace(&amp;#34;MAPI&amp;#34;) # RSSFEEDは「RSS フィード」フォルダのEntryId nameSpace.getFolderFromID(RSSFEED).Folders.Remove(1) # puts nameSpace.getFolderFromID(RSSFEED).Name =&amp;gt; # RSS フィード Removeメソッドはインデックスを指定するとの事。
 |*メソッド・プロパティ|説明|
|*Add|指定した名前の Outlook フォルダを追加します。|
|*GetFirst|最初の Outlookフォルダを取得します。|
|*GetNext|次の Outlook フォルダを取得します。|
|*Item|あるインデックスの Outlook フォルダを取得します。|
|*Remove|あるインデックスの Outlook フォルダを削除します。|
http://jp.rubyist.net/magazine/?0007-Win32OLE:title
 また、インデックスは1から始まりフォルダビューの親フォルダ直下にあるフォルダを1とし2, 3&amp;hellip;と並んでいる様子。上記のソースでは「RSS フィード」フォルダ直下の(1番目の)フォルダを削除できた！
EntryIdを見つけるにはFoldersオブジェクトを回してEntryIdを調べる。これを繰り返せば深い階層までいける。
folders = nameSpace.Folders folders.each do |f| puts f.Name puts f.EntryId end ありがとうwin32ole…。
おまけ Windowsのirbにショートカットでペーストする方法をはじめて知ったのでメモ。[2]
 Shift + insert !</description>
    </item>
    
    <item>
      <title>MicrosoftOutlookのメールをRuby(win32ole)で操作する！ その2</title>
      <link>https://note.gosyujin.com/2011/07/09/1310140318/</link>
      <pubDate>Sat, 09 Jul 2011 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2011/07/09/1310140318/</guid>
      <description>[Windows][Ruby]MicrosoftOutlookのメールをRuby(win32ole)で操作する！ その2 前回までのあらすじ http://d.hatena.ne.jp/kk_Ataka/20110517/1305560776:title
あれから色々変えたので追記。前回のTODOは…
 フォルダ名先頭にYYYYMMDD フォルダ名に使用できない文字を全角に置換 フォルダ存在時の対処 デスクトップに保存したい  全部消化。とりあえずOutlook開いて添付ファイル付きのメールファイルをデスクトップに保存するだけの簡単なお仕事はできるようになりました！やった！
GitHub [https://github.com/gosyujin/outlook_for_ruby:title]
なにやってるかの流れ  まず初期化。  # MicrosoftOutlookに接続後初期化処理を行う。 # MicrosoftOutlookが起動していないと終了する。 def initialize begin ol = WIN32OLE::connect(&amp;#34;Outlook.Application&amp;#34;) rescue WIN32OLERuntimeError putsError(&amp;#34;MicrosoftOutlookが起動していません。&amp;#34;) exit else desktopJa = Kconv.tosjis(&amp;#34;デスクトップ&amp;#34;) # NameSpace取得(getNameSpaceの引数は&amp;#34;MAPI&amp;#34;のみ) @nameSpace = ol.getNameSpace(&amp;#34;MAPI&amp;#34;) # 保存パス指定 @saveRootPath = &amp;#34;#{ENV[&amp;#34;USERPROFILE&amp;#34;]}\\&amp;#34; + desktopJa + &amp;#34;\\&amp;#34; # 保存パスに作成するディレクトリ作成 @saveDir = &amp;#34;&amp;#34; # フォルダ選択番号、ハッシュ @folderNum = -1 @folder = Hash.new # メール選択番号、ハッシュ @mailNum = -1 @mail = Hash.</description>
    </item>
    
    <item>
      <title>MicrosoftOutlookのメールをRubyで操作する！</title>
      <link>https://note.gosyujin.com/2011/05/17/1305560776/</link>
      <pubDate>Tue, 17 May 2011 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2011/05/17/1305560776/</guid>
      <description>[Ruby][Windows]MicrosoftOutlookのメールをRubyで操作する！ あらすじ  職場のメールはMicrosoftOutlook…添付ファイルとかメール本文を手動で保存するだけの簡単なお仕事がめんどいのでマクロを作った ある日、なんか共通マクロを適用してくださいねとか通達がきたので適用した(今まで使っていた自分のマクロは退避した) 新マクロにはご丁寧にパスワードがかけられていた…編集不可／(^o^)＼ Outlookからマクロを実行するのは諦めて外部からメールを操作しよう…[1] Rubyでできないかな？　…win32oleというものがあるらしい！←今ここ  参考サイト  http://jp.rubyist.net/magazine/?0007-Win32OLE:title  ドンピシャでした。
やりたい事  メール本文を保存したい(ファイル名は件名.txt) 添付ファイルを保存したい(ファイル名は添付ファイル名のまま) 上記のファイルをYYYYMMDD_添付ファイル名(拡張子なし)フォルダの中へ格納 保存場所はマイドキュメントかデスクトップ  こんな感じ
[メール] 件名:subsubject 添付ファイル:tmptmpfile.zip ↓ダウンロード [マイドキュメント] └[YYYYMMDD_tmptmpfile] ├tmptmpfile.zip └subsubject.txt 手順 まずソースはこんな感じ。GitHubは [https://github.com/gosyujin/outlook_for_ruby:title]
# -*- encoding: UTF-8 -*- require &amp;#34;win32ole&amp;#34; # 保存ディレクトリ基準。一応マイドキュメントへ SaveRootPath = &amp;#34;#{ENV[&amp;#34;USERPROFILE&amp;#34;]}\\My Documents&amp;#34; class Outlook def initialize # Outlookに接続 ol = WIN32OLE::connect(&amp;#34;Outlook.Application&amp;#34;) # NameSpace取得(getNameSpaceの引数は&amp;#34;MAPI&amp;#34;のみ) @nameSpace = ol.getNameSpace(&amp;#34;MAPI&amp;#34;) end # EntryIDを元にメールを取得  def mail(entryId) item = @nameSpace.</description>
    </item>
    
    <item>
      <title>Redmineインストール備忘録(Windows)</title>
      <link>https://note.gosyujin.com/2011/05/01/1304204171/</link>
      <pubDate>Sun, 01 May 2011 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2011/05/01/1304204171/</guid>
      <description>[Ruby][Redmine][Windows][備忘録]Redmineインストール備忘録(Windows) 参考サイト  http://redmine.jp/tech_note/install/  OSとRubyとか  OSはWindows XP Ruby, RubyGemsインストール済み DBはSQLite3にする  必要なものをDL, インストール  GemでRailsをインストール  &amp;gt;gem install rails  同じくsqlite3をインストール  最新のsqlite3-ruby(1.2.4)ではなく、1.2.3を指定[1]   &amp;gt;gem install sqlite3-ruby --version &amp;#39;= 1.2.3&amp;#39;  http://www.sqlite.org/download.html:title でSQLite3のdllをDLしC:\WINDOWS\system32(パスが通ってるところ)にコピー  コマンドラインから動かす予定はないのでexeは落とさない    http://rubyforge.org/frs/?group_id=1850:title でRedmineをDLし解凍  各種設定  Redmineフォルダ内のconfig/database.ymlを作成し[2]、最低限下記のように編集  production: adapter: sqlite3 # SQLite3を指定 database: db/redmine.db # DB名は任意 timeout: 5000 # タイムアウト時間  config/initializers/session_store.rb作成  &amp;gt;rake generate_session_store  DBの初期化  &amp;gt;rake db:migrate RAILS_ENV=production &amp;gt;rake redmine:load_default_data RAILS_ENV=production  …が、ここでエラー  rackバージョンが1.</description>
    </item>
    
    <item>
      <title>RubyではてなのWSSE認証をしてはてブにブクマをポストする</title>
      <link>https://note.gosyujin.com/2011/03/08/1299588433/</link>
      <pubDate>Tue, 08 Mar 2011 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2011/03/08/1299588433/</guid>
      <description>[Ruby][API]RubyではてなのWSSE認証をしてはてブにブクマをポストする ReadItLaterの続きをやろうと思ったのですが、GitHubにはてブスクリプトをコミットしたので先にまとめる。
結構前に作ったので、OAuthではなくWSSE認証を使っています。
手順  X-WSSEヘッダを作成する ブックマークするUrl・コメントを記述したxmlデータと、X-WSSEヘッダを含めたリクエストをhttp://b.hatena.ne.jp/atom/postへPOSTする  手順はこれだけ。次に詳細を…。
ヘッダを作成する 以下のデータを用意します
|*Username|はてなID|
|*Nonce|HTTPリクエスト毎に生成したセキュリティ・トークンをBASE64エンコードしたもの[1]|
|*Created|Nonce作成時のタイムスタンプをISO-8601表記で記述したもの|
|*PasswordDigest|「Nonce+Created+はてなのパスワード」をSHA1でダイジェスト化しBASE64エンコードしたもの|
これらのデータをX-WSSEヘッダに以下の形式で格納します。
UsernameToken Username=&amp;#34;USERNAME&amp;#34;, PasswordDigest=&amp;#34;PASSWORDDIGEST&amp;#34;, Nonce=&amp;#34;NONCE&amp;#34;, Created=&amp;#34;CREATED&amp;#34; POSTする ヘッダは完成したので、次にブックマークする情報を用意します。形式はxmlで以下のようなフォーマットで作成します。[2]
&amp;lt;entry xmlns=&amp;#34;http://purl.org/atom/ns#&amp;#34;&amp;gt; &amp;lt;title&amp;gt;dummy&amp;lt;/title&amp;gt; &amp;lt;link rel=&amp;#34;related&amp;#34; type=&amp;#34;text/html&amp;#34; href=&amp;#34;ブックマークするURL&amp;#34; /&amp;gt; &amp;lt;summary type=&amp;#34;text/plain&amp;#34;&amp;gt;ブックマークコメント&amp;lt;/summary&amp;gt; &amp;lt;/entry&amp;gt; 作成されたヘッダとデータはこんな感じになります。
[f:id:kk_Ataka:20110308213639j:image]
最後に作成したヘッダとブックマークデータをhttp://b.hatena.ne.jp/atom/postへポストすると。
[f:id:kk_Ataka:20110308213640j:image]
おお。
正常に作成された場合は、ステータスコードは201が返ってくるようです。
ソース Gistは直接貼れるけどGitHubは貼れないのね…。ここにあります。[https://github.com/gosyujin/hatena:title]
require &amp;#39;rubygems&amp;#39; require &amp;#39;pit&amp;#39; require &amp;#39;time&amp;#39; require &amp;#39;digest/sha1&amp;#39; require &amp;#39;net/http&amp;#39; require &amp;#39;uri&amp;#39; require &amp;#39;nkf&amp;#39; # wsse認証を行う def wsse(hatena_id, password) # 一意な値(仮実装) nonce = [Time.now.to_i.to_s].pack(&amp;#39;m&amp;#39;).gsub(/\n/, &amp;#39;&amp;#39;) # nonce作成時のタイムスタンプをISO-8601表記で記述したもの now = Time.</description>
    </item>
    
    <item>
      <title>Read it LaterをRubyで取得する</title>
      <link>https://note.gosyujin.com/2011/03/02/1299062938/</link>
      <pubDate>Wed, 02 Mar 2011 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2011/03/02/1299062938/</guid>
      <description>[Ruby][API]Read it LaterをRubyで取得する ブラウザからログインせずともRILを見たい！　追加したい！　ということで。
前準備  はじめにapikeyを取得するためにhttp://readitlaterlist.com/api/signup/にアクセスします。[1] 必須項目(AppNameとContact Email)を記入し、Generate API Keyします。 取得したapikeyを取っておきます。  [f:id:kk_Ataka:20110302190610p:image]
 APIの概要はhttp://readitlaterlist.com/api/docs/に載っているので、基本的にはこれを見ながらできる…はず。  記事をGetする 以下のパラメータを生成し、URLのおしりに?AAA=BBB&amp;amp;CCC=DDD&amp;hellip;形式でくっつけてhttps://readitlaterlist.com/v2/getに送ります。[2]パラメータは他にもあるけど、とりあえずこれだけあれば取得はできます。
|*apikey(必須)|今生成したapikey|
|*username(必須)|Read It Laterのアカウント|
|*password(必須)|パスワード|
|*format|レスポンスのフォーマット。jsonかxmlが選択できる。デフォルトはjson|
パスワードが丸見えなのでショルダーハックとかされるとアレですが…。
ソースコード ここまでをRubyで書いてみました。jsonの解析はTwitterから取得したツイートを解析したときと同じようにsimplejsonparserを使用させていただきました。
require &amp;#39;uri&amp;#39; require &amp;#39;net/http&amp;#39; # http://rubyforge.org/snippet/detail.php?type=snippet&amp;amp;id=148 require &amp;#39;simplejsonparser&amp;#39; require &amp;#39;pp&amp;#39; # RIL取得用のURL url = &amp;#34;https://readitlaterlist.com/v2/get&amp;#34; # アカウント名とパスワード username = &amp;#34;kk_Ataka&amp;#34; password = PASSWORD # apikey apikey = APIKEY # format json or xml format = &amp;#34;json&amp;#34; # パラメータ作成 param = &amp;#34;username=#{username}&amp;amp;password=#{password}&amp;amp;apikey=#{apikey}&amp;amp;format=#{format}&amp;#34; # GETする uri = URI.</description>
    </item>
    
    <item>
      <title>RubyでFizzBuzzみじかいのに挑戦した</title>
      <link>https://note.gosyujin.com/2011/01/25/1295956879/</link>
      <pubDate>Tue, 25 Jan 2011 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2011/01/25/1295956879/</guid>
      <description>[Ruby]RubyでFizzBuzzみじかいのに挑戦した  参考: http://togetter.com/li/92612:title  FizzBuzz自体は組んだことあるけど、短いのは考えたことがなかったのでこれを機会に挑戦。
一つ目 101.times{|i|p(i%15==0?&amp;#39;FizzBuzz&amp;#39;:i%3==0?&amp;#39;Fizz&amp;#39;:i%5==0?&amp;#39;Buzz&amp;#39;:i)}101.times{ |i| p ( i % 15  == 0 ? &amp;#39;FizzBuzz&amp;#39; : i % 3  == 0 ? &amp;#39;Fizz&amp;#39; : i % 5  == 0 ? &amp;#39;Buzz&amp;#39; : i ) }  do～endが文字数消費するので{}を使った if～elseが文字数消費するので三項演算子を使った アウトプットをpにして文字数を稼いだ  三項演算子の入れ子なんて初めて使ったからどうインデントしたら綺麗に見えるのかもわからん！　しかもこれで66byte…某Y!社に入れないなぁ。
また、どうもFizzBuzzって1から100でやるらしく、上記のソースだと0から100まで実行してしまうので他の部分も含めてちょっと考え直し……。
二つ目 (1..100).each{|i|p(i%15&amp;gt;0?i%5&amp;gt;0?i%3&amp;gt;0?i:&amp;#39;Fizz&amp;#39;:&amp;#39;Buzz&amp;#39;:&amp;#39;FizzBuzz&amp;#39;)}(1..100).each{ |i| p ( i % 15  &amp;gt; 0 ? i % 5  &amp;gt; 0 ? i % 3  &amp;gt; 0 ?</description>
    </item>
    
    <item>
      <title>RubyでTwitterにツイートをキメてみる</title>
      <link>https://note.gosyujin.com/2011/01/23/1295789180/</link>
      <pubDate>Sun, 23 Jan 2011 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2011/01/23/1295789180/</guid>
      <description>[Ruby][Twitter][API]RubyでTwitterにツイートをキメてみる 前回までのあらすじ  http://d.hatena.ne.jp/kk_Ataka/20101121/1290271210:title http://d.hatena.ne.jp/kk_Ataka/20101130/1291125511:title http://d.hatena.ne.jp/kk_Ataka/20101207/1291733295:title  ターミナルからOAuth認証をキメて、タイムラインを見られるようになりました。最後にターミナルからツイートが出来れば一応Twitterの見る・書くがライブラリ無しでできたことになります。
ツイートする方法  signatureを作成する。必要な値は以下のとおり。  oauth_consumer_key oauth_nonce oauth_signature oauth_signature_method oauth_timestamp oauth_token oauth_version status New!   statusっていうのがツイートの本文ですね。signature作成するのにエスケープします。作成後のheaderはこんな感じ。[1]statusには「確認確認」って入ってます。
{ &amp;#34;oauth_nonce&amp;#34;=&amp;gt;&amp;#34;3c8293f9c5a0295148d428a26edb9f46&amp;#34;, &amp;#34;oauth_timestamp&amp;#34;=&amp;gt;&amp;#34;1295784908&amp;#34;, &amp;#34;oauth_signature_method&amp;#34;=&amp;gt;&amp;#34;HMAC-SHA1&amp;#34;, &amp;#34;oauth_consumer_key&amp;#34;=&amp;gt;&amp;#34;XXXXXXXXXXXXXXXXXXXXXX&amp;#34;, &amp;#34;oauth_token&amp;#34;=&amp;gt;&amp;#34;99999999-YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY&amp;#34;, &amp;#34;oauth_signature&amp;#34;=&amp;gt;&amp;#34;UKt1BmJ+UWNWrSmBuAyJ40iiCNY=&amp;#34;, &amp;#34;status&amp;#34;=&amp;gt;&amp;#34;%E7%A2%BA%E8%AA%8D%E7%A2%BA%E8%AA%8D&amp;#34;, &amp;#34;oauth_version&amp;#34;=&amp;gt;&amp;#34;1.0&amp;#34; } signature作成後  signatureを作成したら、headerからstatusを消します 残ったheaderをアルファベット順に並べ、xxx=yyy,vvv=zzz……の形で連結します。連結後はこんな感じ  oauth_consumer_key=XXXXXXXXXXXXXXXXXXXXXX,oauth_nonce=341d852d61cdc3c22e3e847b0ab69d20,oauth_signature=MR5WEJ1qHuE49ozgRYduNJ%2BBiCs%3D,oauth_signature_method=HMAC-SHA1,oauth_timestamp=1295785315,oauth_token=99999999-YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY,oauth_version=1.0  連結した上記の値をAuthorizationヘッダに入れる。入れた後はこんな感じ。  &amp;#34;Authorization&amp;#34;=&amp;gt;&amp;#34;OAuth oauth_consumer_key=XXXXXXXXXXXXXXXXXXXXXX,oauth_nonce=341d852d61cdc3c22e3e847b0ab69d20,oauth_signature=MR5WEJ1qHuE49ozgRYduNJ%2BBiCs%3D,oauth_signature_method=HMAC-SHA1,oauth_timestamp=1295785315,oauth_token=99999999-YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY,oauth_version=1.0&amp;#34;  Authorizationヘッダを作成したらhttp://api.twitter.com/1/statuses/home_timeline.jsonへPOST。また、ツイート本文を「status=本文」の形でくっつける  結果 以上で、Twitterにツイートが完了しました！　おっぱいきたーー
[f:id:kk_Ataka:20110123215838j:image]
ソース ソースはこんな感じです。
# -*- encoding: UTF-8 -*- require &amp;#39;openssl&amp;#39; require &amp;#39;uri&amp;#39; require &amp;#39;net/http&amp;#39; require &amp;#39;nkf&amp;#39; require &amp;#39;time&amp;#39; # 署名 def sigunature(method, consumer_secret, oauth_token_secret, url, oauth_header=nil) # sigunature_keyの作成 # リクエストトークン時は&amp;#34;CONSUMER_SECRET&amp;amp;&amp;#34;(アンドが入っている) # アクセストークン時は&amp;#34;CONSUMER_SECRET&amp;amp;OAUTH_TOKEN_SECRET&amp;#34;として使用 sigunature_key = consumer_secret + &amp;#34;&amp;amp;&amp;#34; if !</description>
    </item>
    
    <item>
      <title>RubyでTwitterのタイムラインを取得してみる</title>
      <link>https://note.gosyujin.com/2010/12/07/1291733295/</link>
      <pubDate>Tue, 07 Dec 2010 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2010/12/07/1291733295/</guid>
      <description>[Ruby][Twitter][API]RubyでTwitterのタイムラインを取得してみる 前回までのあらすじ  http://d.hatena.ne.jp/kk_Ataka/20101121/1290271210:title http://d.hatena.ne.jp/kk_Ataka/20101130/1291125511:title  前回までで、なんとかOAuth認証を突破する事ができました。目標は達成できたっちゃあできたんですが……せっかくなので、取得したアクセストークンを使ってTwitterからタイムラインを取得してみます！
タイムラインの取得方法  signatureを作成する 以下のパラメータをアルファベット順にxxx=yyy&amp;amp;vvv=zzz……の形で連結した値を[http://api.twitter.com/1/statuses/home_timeline.json]のおしりにくっつけてGET or POST  oauth_consumer_key oauth_nonce oauth_signature oauth_signature_method oauth_timestamp oauth_token oauth_version   取得はこれで完了。
signatureの作成方法は今までと同じで、
 認証用の値を生成する(以下の3つの値を&amp;amp;で連結する)  &amp;ldquo;GET&amp;rdquo; &amp;ldquo;http://api.twitter.com/1/statuses/home_timeline.json&amp;ldquo;をエスケープしたもの oauth_signature以外のパラメータ[1]をアルファベット順に並べてxxx=yyy&amp;amp;vvv=zzz……の形で連結した値をエスケープしたもの  署名キーを生成する  &amp;ldquo;consumer_secret&amp;amp;oauth_token_secret&amp;rdquo;  キーを元に値をHMAC-SHA1方式で暗号化した値をbase64形式でエンコードする  です。OAuth認証して獲得したアクセストークン、oauth_tokenとoauth_token_secretを随所で使います。そして作成したsignatureと他のパラメータを[http://api.twitter.com/1/statuses/home_timeline.json]のおしりにくっつけて(今回は)GETリクエスト。
戻ってきたタイムライン タイムラインらしきものはjsonという形式のデータで戻って来ます。home_timeline.jsonのjson部分をxmlとかrssに変えるとxml形式のタイムライン、rss形式のタイムラインが返ってくるようですが今回はこのjsonを何とかしてみます。
jsonの詳細は後にググるとして、一人当たりの情報はこんな感じ。[2]
.......},{ \&amp;#34;coordinates\&amp;#34;:null, \&amp;#34;created_at\&amp;#34;:\&amp;#34;Tue Dec 07 13:50:49 +0000 2010\&amp;#34;, . (略) . \&amp;#34;in_reply_to_screen_name\&amp;#34;:null, \&amp;#34;in_reply_to_status_id_str\&amp;#34;:null, \&amp;#34;id_str\&amp;#34;:\&amp;#34;99999999999999999\&amp;#34;, \&amp;#34;contributors\&amp;#34;:null, \&amp;#34;retweet_count\&amp;#34;:null, \&amp;#34;in_reply_to_user_id\&amp;#34;:null, \&amp;#34;in_reply_to_user_id_str\&amp;#34;:null, \&amp;#34;user\&amp;#34;:{ . (略) . \&amp;#34;screen_name\&amp;#34;:\&amp;#34;kk_Ataka\&amp;#34;, \&amp;#34;profile_sidebar_border_color\&amp;#34;:\&amp;#34;C0DEED\&amp;#34;, \&amp;#34;follow_request_sent\&amp;#34;:false, \&amp;#34;location\&amp;#34;:\&amp;#34;Kawasaki, Kanagawa, Japan\&amp;#34;, .</description>
    </item>
    
    <item>
      <title>RubyでTwitterのOAuth認証をしてみる その2</title>
      <link>https://note.gosyujin.com/2010/11/30/1291125511/</link>
      <pubDate>Tue, 30 Nov 2010 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2010/11/30/1291125511/</guid>
      <description>[Ruby][Twitter][API]RubyでTwitterのOAuth認証をしてみる その2 前回のエントリ では、リクエストトークンまで発行してもらえました。だもんで今回は前回に続いてアクセストークンを発行してもらいます。アクセストークン発行の流れとしては、
 今もらったリクエストトークンを付加して http://twitter.com/oauth/authorize へアクセスする 画面に表示されるPINコード(oauth_verifier)を控える リクエストトークンとPINコードをを付加して http://twitter.com/oauth/access_token へアクセスする  行きます。
PINコードを発行してもらう リクエストトークンを発行してもらうと、
oauth_token=XXXXXXXXXX&amp;amp;oauth_token_secret=YYYYYYYYYYYYYYYYYYYYYYYYYYYY&amp;amp;oauth_callback_confirmed=true という文字列がbodyに埋まってきたはず。[1]
この中から oauth_tokenを抜き出し、 http://twitter.com/oauth/authorize にパラメータとしてくっつけます。こんな感じ。
http://twitter.com/oauth/authorize?oauth_token=XXXXXXXXXX
アドレスが正しければ、以下のような画面が出るはず。[2]アプリケーションからのアクセスを許可しますか？　と尋ねられるので許可するを選択。
[f:id:kk_Ataka:20101130220734j:image]
許可すると、PINコードが画面に表示されるのでこれを控えておく。
[f:id:kk_Ataka:20101130220731j:image]
再度signatureを作成する このPINコードを&amp;rdquo;oauth_verify&amp;rdquo;として。先ほどURLに貼っつけたoauth_tokenを&amp;rdquo;oauth_token&amp;rdquo;としてパラメータとして持たせます。
そして、ここでもう一度signatureを作成を作成します。注意点としては、
 今まで使っていたoauth_signatureは一旦消して、以下のパラメータで新たにつくり直す  oauth_consumer_key oauth_nonce oauth_signature_method oauth_timestamp oauth_version oauth_token New! oauth_verifier New!  URLは&amp;rdquo;http://twitter.com/oauth/access_token&amp;rdquo;をエスケープしたもの 暗号化用のキーは&amp;rdquo;consumer_secret&amp;amp;oauth_token_secret&amp;rdquo;[3]  この3点でしょうか。
signatureが作成できたら、前回と同様にアルファベット順に並べて連結し、URLのおしりにくっつけます。URLはこんな感じになります。
[f:id:kk_Ataka:20101130223243j:image]
成功したら、oauth_token, oauth_token_secret, user_id, screen_nameが返ってきます。これ俺や！！
[f:id:kk_Ataka:20101130220728j:image]
ここで返してもらったoauth_tokenとoauth_token_secretは本物なので大切にとっておく！　というわけで、次は自分のTimelineを取得します！
ソースはこんな感じ。
require &amp;#39;openssl&amp;#39; require &amp;#39;uri&amp;#39; require &amp;#39;net/http&amp;#39; # signature作成 def signature(method, consumer_secret, oauth_token_secret, url, oauth_header) # signature_keyの作成 # リクエストトークン時は&amp;#34;CONSUMER_SECRET&amp;amp;&amp;#34;(アンドが入っている) # アクセストークン時は&amp;#34;CONSUMER_SECRET&amp;amp;OAUTH_TOKEN_SECRET&amp;#34;として使用 signature_key = consumer_secret + &amp;#34;&amp;amp;&amp;#34; if !</description>
    </item>
    
    <item>
      <title>RubyでTwitterのOAuth認証をしてみる</title>
      <link>https://note.gosyujin.com/2010/11/21/1290271210/</link>
      <pubDate>Sun, 21 Nov 2010 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2010/11/21/1290271210/</guid>
      <description>[Ruby][Twitter][API]RubyでTwitterのOAuth認証をしてみる 随分前にTwitterがベーシック認証からOAuth認証に切り替えたという事で。Java+Wicket+AppEngineでベーシック認証を駆使して作っていたTwitterサイトが見れなくなったもんで切り替えました。(http://gihyo.jp/dev/feature/01/wicket:title を見つつ)
一応出来たんですが、結局のところOAuthがどうなってるのかよくわからなかった……ので、ちょっと一から書いてみようと。
id:Yoshiori さんのhttp://d.hatena.ne.jp/Yoshiori/20100929/1285727199:title と、 id:yuroyoro さんの[http://d.hatena.ne.jp/yuroyoro/20100506/1273137673:title]がとっても詳しかったので、参考にしました。
大きな流れとしては、
 consumer_keyとconsumer_secretを発行してもらう リクエストトークンを発行してもらう アクセストークンを発行してもらう  の3項目。今回はリクエストトークンを発行してもらうところまでやります。
準備 Twitterにアプリを登録し、consumer_keyとconsumer_secretを発行してもらう  Twitterにログイン &amp;gt; 設定 &amp;gt; 連携アプリ を選択  [f:id:kk_Ataka:20101120225746p:image]
 開発者の方へ &amp;gt; こちら を選択  [f:id:kk_Ataka:20101120230042p:image]
 ページ下部の新しいアプリケーションを追加 を選択  [f:id:kk_Ataka:20101120230314p:image]
後で編集もできるのでとりあえず入力しておく。下記の2項目はとりあえず
 - アプリケーションの種類: クライアントアプリケーション  標準のアクセスタイプ: Read &amp;amp; Write   にしておく。
 登録したら、consumer_keyとconsumer_secretをもらえるので控えておく  [f:id:kk_Ataka:20101120232314p:image]
フォローをリクエストしました。のURL、Access token URL、Authorize URLは認証時に使うのでこれも控えておく。
リクエストトークンを発行してもらう こっからRuby。以下のパラメータを生成してhttp://twitter.com/oauth/request_tokenに送ります。POSTでもGETでもよいみたいなので、今回はGETを使ってURLのおしりにくっつけて送ります。
|*oauth_consumer_key|Twitterからもらったconsumer_key|
|*oauth_nonce|一意な値(にする必要があるが、とりあえず適当でもよいみたい)|
|*oauth_signature|認証するための暗号|
|*oauth_signature_method|認証方式(色々あるようだが、Twitterでは&amp;rdquo;HMAC-SHA1&amp;rdquo;固定)|
|*oauth_timestamp|今のタイムスタンプ(ミリ秒)|
|*oauth_version|バージョン(必須ではないが、付ける場合は&amp;rdquo;1.0&amp;rdquo;)|
consumer_key, nonce, signature_method, timestamp, versionの生成は難しくないのですが、問題はsignature。signature生成は大きく3つの流れを踏む事になります。</description>
    </item>
    
  </channel>
</rss>