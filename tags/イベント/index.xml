<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>イベント on kk_Atakaの日記</title>
    <link>https://note.gosyujin.com/tags/%E3%82%A4%E3%83%99%E3%83%B3%E3%83%88/</link>
    <description>Recent content in イベント on kk_Atakaの日記</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>jp</language>
    <lastBuildDate>Wed, 30 Nov 2016 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://note.gosyujin.com/tags/%E3%82%A4%E3%83%99%E3%83%B3%E3%83%88/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>PyConJP 2016 in TokyoでSphinxハンズオンのTAをしてきた #pyconjp</title>
      <link>https://note.gosyujin.com/2016/11/30/pyconjp-sphinx-handson-kpt/</link>
      <pubDate>Wed, 30 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2016/11/30/pyconjp-sphinx-handson-kpt/</guid>
      <description>あらすじ さる9/20のPyConJP 2016 Tutorial day(1日目)にて行われたSphinxハンズオンにTAとして参加しました。
 Sphinx ハンズオン ｜ PyCon JP 2016 in TOKYO  講師: @usaturnさん TA: @takuan_oshoさん、自分   振り返り  参加者は6名  OSはWindows 3人Mac 3人  参加動機など  仕事でドキュメントが残ってない、まとめるにあたってツール選定していたらSphinxを知った 重いWordファイルを操作するのが困難、別のフォーマットで簡単に扱いたい Pythonでデータ解析をするにあたって使用しているツールのドキュメントがほぼSphinx製だったので、Sphinxとは何なのか知っておきたい   簡単にメモ。</description>
    </item>
    
    <item>
      <title>PyLadiesTokyo #8でSphinxハンズオンのTAをしてきた #sphinxjp</title>
      <link>https://note.gosyujin.com/2016/01/19/pyladiestokyo-08-sphinx-handson-kpt/</link>
      <pubDate>Tue, 19 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2016/01/19/pyladiestokyo-08-sphinx-handson-kpt/</guid>
      <description>あらすじ さる1/16に開催されたPyLadies TokyoにてSphinxのハンズオンが開催されたのでTAしてきました。
 PyLadies Tokyo Meetup #8 - connpass  Sphinx hands-on in PyLadies Tokyo Meetup#8 !! #sphinxjp #PyLadiesTokyo pic.twitter.com/hfwwMZb6hA
&amp;mdash; sphinx-users.jp (@sphinxjp) 2016, 1月 16 
振り返りKPT Keep  PyLadies Tokyo – Official Site は、現在別のCMSで構築されているがこれを機会にSphinxに乗り換える案が出ているようです！ナイスですね  Problem  特に大きな問題もなく、もしもの時のために小さい電源タップを持参すると助かる時があるかも？  Try  ハンズオン質問あるあるみたいなものがまとめられるといいかも  ハンズオン資料( sphinxjp / handson — Bitbucket )とかSphinx-Users.jpのサイトを見てくと書いてあったりするけど   ハンズオンあるある エディタ編  半角スペース、全角スペース、タブを可視化できるエディタだとエラーに気づきやすい…かも！？  不意に混同するとハマっちゃう   アウトプット編(html)  テーマ、適用されてない？  (1.3以降の)デフォルトテーマである alabaster はそういう見た目なのだ ブラウザの横幅を変えるとメニューバーが目に見えて変化するのでわかりやすい  default があるのになんでデフォルトがこれじゃないの？(定番になりつつある質問)  Sphinx 1.</description>
    </item>
    
    <item>
      <title>SphinxCon JP 2015 で雑用してきた #sphinxjp</title>
      <link>https://note.gosyujin.com/2015/12/01/sphinxconjp-2015-kpt/</link>
      <pubDate>Tue, 01 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2015/12/01/sphinxconjp-2015-kpt/</guid>
      <description>あらすじ さる11/24にSphinxCon JP 2015が開催されました。
今年はそっこうで枠が埋まったので、発表枠ではなくなんかあった時にフォローに回れるよう雑用枠で参加。(去年は発表枠もらってた SphinxCon JP 2014 で発表してきました #sphinxjp - kk_Atakaの日記)
connpassに資料、Toggeterに当日の様子がまとまっています。
 SphinxCon JP 2015 - connpass SphinxCon JP 2015 #sphinxjp - Togetterまとめ  個人的には、鹿野さんの基調講演でまとめられていたドキュメントの歴史がSphinxに限らずものすごく貴重だと思った。
昔に遡れば遡るほど知らない名前の技術が使われており、またそれが少なからず後世のツールに影響があるというのを知っておくと色々楽しい。
振り返りKPT 雑用枠的な振り返り。
Keep  1枠あると安心、雑用枠  スタッフ/発表者は当日諸々の作業に追われる事態も想定して、1人暇な人が待機してるとリカバリ効いていい感じ   Problem  オープニングにちょっと手間取った  会場が開場する前に到着している人が結構多くて入り口でワチャワチャしてて肩身が狭かった… 開場が遅れそうな場合は「開場するまで近場で時間つぶしてて」ってアナウンスするとよかったかも 主催/発表者/お手伝いの人は何時までに、参加者は開場アナウンス出てから入れるとスムーズだけどうまくいくかな？  会場の飲食、電源、WiFi情報の周知  Try  デリバリー業とスイーパー業をもくもくとやってた  ゴミの分別とかは予め極めておく  クロージングと平行して、忘れ物チェックとゴミはゴミ集め場に  今回忘れ物はなかったみたい  SphinxCon 2016開催決定！？  #sphinxjp SphinxCon 2016開催の暗示だ！ pic.twitter.com/h3KVQR7oWv
&amp;mdash; ごしゅじん (@kk_Ataka) 2015, 11月 24</description>
    </item>
    
    <item>
      <title>Sphinxワークショップ@関西で事例紹介とハンズオンTAをしてきた #sphinxjp</title>
      <link>https://note.gosyujin.com/2015/11/01/sphinx-workshop-kansai-kpt/</link>
      <pubDate>Sun, 01 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2015/11/01/sphinx-workshop-kansai-kpt/</guid>
      <description>あらすじ さる10/31に開催された Sphinxワークショップ@関西 にて事例紹介とハンズオンTAをしてきた。
ので振り返りメモ。PyConJPのkptは活かされたのか。
スライド   JUS関西 Sphinxワークショップ@関西 Sphinx事例紹介  from kk_Ataka 
#sphinxjp ワークショップ@関西で、 @kk_Ataka の事例紹介中 pic.twitter.com/LWPFjZLKyf
&amp;mdash; Takayuki Shimizukawa (@shimizukawa) 2015, 10月 31 
振り返りKPT Keep  会場には遅刻せず余裕を持って到着できた 質問への対応、割とスムーズだった(と思う/アツい自画自賛)  PyConJPの経験が活きたな！  Sphinx Tシャツ持っていった  Problem  MacのDisplayPort忘れた  持ち物チェックリストに追加しよう  移動時間をちゃんと見積もるべし  帰り際のドタバタ。危うく帰れなくなる所だった(一応、みんな無事に帰れた)   やばい新幹線ぎりぎりかも
&amp;mdash; ごしゅじん (@kk_Ataka) 2015, 10月 31  新大阪着いた瞬間セブンセンシズに目覚めないとまずい
&amp;mdash; ごしゅじん (@kk_Ataka) 2015, 10月 31  @kk_Ataka 新幹線逃した！
&amp;mdash; Takayuki Shimizukawa (@shimizukawa) 2015, 10月 31</description>
    </item>
    
    <item>
      <title>PyConJP 2015 in TokyoでSphinxハンズオンのTAをしてきた #pyconjp</title>
      <link>https://note.gosyujin.com/2015/10/13/pyconjp-sphinx-handson-kpt/</link>
      <pubDate>Tue, 13 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2015/10/13/pyconjp-sphinx-handson-kpt/</guid>
      <description>あらすじ さる10/9のPyConJP 2015 Tutorial day(1日目)にて行われたSphinxハンズオンにTAとして参加しました。
ので振り返りメモ。
 プレゼンテーション：Sphinxハンズオン ｜ PyCon JP 2015 in TOKYO  講師: 清水川さん TA: 渋川さん、自分   Sphinx hands-on!! at #PyConJP by #sphinxjp (@ プラザ平成 in 江東区, 東京都 w/ @takanory) https://t.co/0xK38ataBA pic.twitter.com/zkC4ZJJ5zf
&amp;mdash; Takayuki Shimizukawa (@shimizukawa) 2015, 10月 9 
振り返りKPT Keep  会場には遅刻せず余裕を持って到着できた  会場が開場する前に着いちゃって途方に暮れてるところ、@takanoryさんに拾ってもらった。ありがとうございました りんかい線？が遅れてたみたい  教室設営も余裕を持ってできた  …が、1点確認漏れあり、詳しくはpで   Problem  教室設営の時間でPCとプロジェクタの接続確認までやっておけばよかった  ハンズオン開始後にプロジェクタに接続したらまったく映らず スタッフの方が早急に代替機を用意してくれたので無事オンタイムで進められた  質問にパッと答えるのが難しかった  質問は過去に自分がググった記憶があるものも多かった そのため、解決するためのググるワードおよびサイト(sphinx-users.jpの逆引きページに書いてあったな、とか)はおぼろげにわかる しかし、すぐ出てこない あせる  Sphinx Tシャツ持っていくの忘れた  去年のSphinxCon JPで買ったTシャツ、ここで着なくていつ着るんだ！清水川さんが着替えてるのを見て後悔   Try  準備はプロジェクタつなげるまで  まあありがち  もっとSphinxを使おう PyConJPの別日も参加してみたい  その他の感想  ハンズオン参加者の方は大きく分けて「プロダクトガンガン作っているがドキュメントがない=書ける(良い)環境を作りたい」「Officeつらいので代替ツールの導入を考えたい」という2派が多かった  1GBのWordというすさまじいドキュメントの修正をしているという話も…  こんな機能もあるよ Sphinxウェブサポート — Sphinx 1.</description>
    </item>
    
    <item>
      <title>Ansible Meetup in Tokyo 2015.09でLTしてきました #ansiblejp</title>
      <link>https://note.gosyujin.com/2015/09/24/ansible-meetup-201509/</link>
      <pubDate>Thu, 24 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2015/09/24/ansible-meetup-201509/</guid>
      <description>あらすじ MacBookに豚汁こぼしたらWi-Fi認識しなくなった…
&amp;mdash; ごしゅじん (@kk_Ataka) 2015, 9月 10 
スライド完成直前に、Macbookへ豚汁こぼしたkk_Atakaです。
Ansible Meetup in Tokyo 2015.09 - connpassでLT発表をしてきたので、まとめておきます。
当日の内容はきちんとまとめられているようなのでそちらも。
 Ansible Meetup in Tokyo 2015.09 - Togetterまとめ Ansible Meetup in Tokyo 2015.09レビュー 〜Ansible 2.0の機能紹介、Ansible 2.0で組むKubernetesクラスタなど - 無印吉澤  覚えて帰りたい事  Ansible 2.0は後方互換100%を目指す！(目指そうとしている) Ansible = アンスィボー 特定のAnsibleモジュール(shellなど)に関しては、サーバ側にPython(2.4〜)すら不要  ただしゴリゴリ書けるという点に限る。冪等性とか意識しだすとちょっとつらい   スライド   SIerでもAnsibleを導入したい！  from kk_Ataka 
FAQ  発表時と資料が違うよ？  上記の通り、本番前にMacbookに豚汁をこぼしてしまい、Deckset(Macアプリ)が使えなくなった…… なので、あわててreveal.jsを使って本番に臨みました。そのためデザインだけちょっと違う  内容自体はMarkdownで書いてGitHubに上げてて助かった…  reveal.js版は gosyujin/slideshare · GitHubにあります   反応 豚汁に関して 豚汁…… #ansiblejp</description>
    </item>
    
    <item>
      <title>SphinxCon JP 2014 で発表してきました #sphinxjp</title>
      <link>https://note.gosyujin.com/2014/10/27/sphinxconjp-2014/</link>
      <pubDate>Mon, 27 Oct 2014 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2014/10/27/sphinxconjp-2014/</guid>
      <description> あらすじ ここしばらくいろいろSphinx関連であがいていた成果をSphinxCon JP 2014で発表してきましたよ。
自分視点からの感想。
概要 SphinxCon JP 2014 - connpass
資料のところから発表者の人の資料も全部確認できるよ。
発表内容は以下の通り。見よこのメンバー。ガチだよ！
 Welcome to Sphinx-1.3 (清水川) SIerでもSphinxを使いたい！総括 (kk_Ataka) SphinxとLaTeXで作る英文マニュアル (力武 健次) Markdownもはじめよう (高橋征義) Sphinx拡張 探訪 2014 (小宮 健 (@tk0miya)) 検索エンジンOktavia (渋川よしき) Sphinx HTML Theme Hacks (shkumagai)  (connpassより抜粋 / 敬称略)
自分のスライド   SIerでもSphinxを使いたい！総括  from kk_Ataka 
感想  さすがに40人近くいる会場だと大緊張 あんまり定量的な評価ではないので、そのあたりを期待されていたらごめんなさい 一応、SIer(元を含む)でSphinx導入に挑戦した方からは「あるあるですねー」という感想をいただけた 気になることがあったら適当にリプライとかください  懇親会、ビアバッシュ  渋川さんに会えた  Jekyllドキュメントの翻訳ってどーすればいいのかなーと困っている時に、 Shibu&amp;rsquo;s Diary: エンジニアは翻訳をやるとお得 に出会って自分の中にあるもやを解消してくれたすごい人  版管理+自動組版 - connpass @tk0miya さんより SphinxCon(Python)でJekyll(Ruby)のLTの練習した(TokyuRubyKaigi08用) VOYAGE GROUPさんありがとうございました  </description>
    </item>
    
    <item>
      <title>kawasaki.rb #015 でSphinx導入事例の発表をしてきました #kwskrb #sphinxjp</title>
      <link>https://note.gosyujin.com/2014/08/28/kawasakirb-015/</link>
      <pubDate>Thu, 28 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2014/08/28/kawasakirb-015/</guid>
      <description>あらすじ kawasaki.rb #015 で発表してきたので、まとめ。
 Kawasaki.rb #015  あわせて読みたい
 kawasaki.rb #013 でSphinx導入事例の発表をしてきました と #011 #012 参加記録 #kwskrb #sphinxjp - kk_Atakaの日記  本当は14回で発表したかったのだけど、病欠してしまった…。
発表内容 以下のスライドを元に発表しました。
  SIerでもSphinxを使いたい！ 後編  from kk_Ataka 
結論 結論としては、
 やはり納品物にするには(歴史的経緯などから)厳しい  社内ドキュメントにする分には問題なし SphinxからOutputを出すのはいいけど、顧客に巻き取られた後変更に耐えうる形式じゃないとつらい  チームで適用するには一人ではつらい(個人的なパワー不足)  最低でも一人賛同者がほしい   こんな感じ。もっとパワフルな人ならうまくやれるかもしれないが、自分では厳しかった。
以下かいつまんで。
導入にあたり  実際にSphinxを導入するための壁  自分とプロジェクトのメンバー reST記法覚えに注力してもらうために、雑用(お膳立て)は全部やる プロジェクトと顧客 Officeで書かないよという宣言をする必要があると思う   納品にあたり 納品後、顧客に巻き取られる場合のいい案がない。
 どうやって納品するの？  rstのまま(rst -&amp;gt; make) 保守も自分たちでできるならそれでもいいかも 顧客にmakeしてもらうの敷居高すぎ Outputを提出 html, pdf 見た目はきれい、だけど修正が発生した場合どうすれば word きれいに出すの難しい(個人的に) / あまり需要がない？   つまるところ「よし、いこう！いこうぜ、みんな！」状態を作るのがかなり難しい。</description>
    </item>
    
    <item>
      <title>kawasaki.rb #013 でSphinx導入事例の発表をしてきました と #011 #012 参加記録 #kwskrb #sphinxjp</title>
      <link>https://note.gosyujin.com/2014/07/13/kawasakirb-011-012-013/</link>
      <pubDate>Sun, 13 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2014/07/13/kawasakirb-011-012-013/</guid>
      <description>あらすじ kawasaki.rb に参加したものの記録を取っていなかったのでまとめて。
13回目ではSphinxを話をしたのでその備忘録。Ruby系の勉強会だけどRuby以外の発表でも大丈夫。
 Kawasaki.rb #011  kawasaki.rb #011 を開催しました #kwskrb  Kawasaki.rb #012  kawasaki.rb #012を開催しました #kwskrb  Kawasaki.rb #013  kawasaki.rb #013を開催しました #kwskrb   発表内容 以下のスライドを元にLTしました。
  SIerでもSphinxを使いたい！ 前編  from kk_Ataka 
Sphinxを使用したドキュメント作成をする機会を探っていて、ようやくドンピシャで導入できるプロジェクトをこの手で手繰り寄せたのでそこで得た知見をまとめました。
大体の内容はこの辺から参照してます。
 「Sphinxをはじめよう」を読んで導入したいと思ったので色々考えてみた - kk_Atakaの日記 「Sphinxをはじめよう」を読んで導入したいと思ったので色々考えてみた2 - kk_Atakaの日記  ねらい  「なんとか設計書_日付_リビジョン(だれそれ更新分)(最新版).xls」 とかいう差分取りづらい伝説のファイルが共有サーバ上に量産されるの辛い… 共有サーバに上記のようなファイルがちらかるのでどこに何があるかわかりにくい ミリ単位のレイアウト調整に苦心するのやだ  という事で
 プレーンテキストで文書を作成できる 文書を体系立てて管理できる デザインなどはアウトプット時におまかせ  できるSphinxを導入しようというもの。
なぜSphinxがいいのかというところを競合するツールと比較してみたところまでを発表しました。
次の発表で「導入する際、導入した後に気をつけた事」とか発表する予定です。
おまけ 11回目、12回目で起こったこと  ロゴができた kawasaki.rbのGitHub Pagesができた(Powered by Jekyllだ！) kawasaki.</description>
    </item>
    
    <item>
      <title>kawasaki.rb #010 で発表してきました #kwskrb</title>
      <link>https://note.gosyujin.com/2014/04/01/kawasakirb-010/</link>
      <pubDate>Tue, 01 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2014/04/01/kawasakirb-010/</guid>
      <description>あらすじ 詳細は主催者の @chezou さんのまとめから。
 Kawasaki.rb #010 - Kawasaki.rb ｜ Doorkeeper kawawaki.rb #010 を開催しました #kwskrb ｜ once upon a time,  kawasaka.rb というコミュニティを知り、参加。
はじめて LT した！
流れ  今回予定されていた LT の 1 本が @chezou さんの「はじめて翻訳記事を書いたら300ブクマ超えた話」  ブログ記事とソフトウェアのドキュメントの違いこそあれ、方向は大分近いかも  流れで 次枠の LT に入れてもらった  スライドなど用意していなかったため、 自分のエントリ をもとにやったことと、困っていることを発表した   初めての LT だったので緊張したが、得るものがたくさんあった。
以下あまりまとまってない内容 当該記事の中で、自分が困っていると思った項目のうち、「原文はどうしよう？」というところに焦点を当てた。
困っている項目はこんな感じ。
 意訳 or 直訳？ 原文はどうしよう？ 誰が、どこで、どう管理するか？  ※ 「誰が、どこで、どう管理するか？」に関しては、プロジェクトの方針を決める人たちが「こうしたい」と決めたら、それを尊重するのが一番よいかと。 Jekyll ( jekyllrb.com )の場合は「 本家では他言語のドキュメントは管理したくない 」という方針のため、日本語用リポジトリ jekyllrb.</description>
    </item>
    
    <item>
      <title>BPStudy#68に参加しました #bpstudy</title>
      <link>https://note.gosyujin.com/2013/04/27/bpstudy68/</link>
      <pubDate>Sat, 27 Apr 2013 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2013/04/27/bpstudy68/</guid>
      <description>詳細  BPStudy#68 - connpass  テーマはChef。
入門からChefの実運用例まで。
所感  入門Chef Solo - Infrastructure as Code を読みながらChef Soloで遊べるようになるまで で入門していたので復習も兼ねて  Chef Server / Chef Clientはまだ試していない  レシピのテストってうまい事できないのかな？  文法チェック以上、Serverspec未満の事は今のところ直接実行して確認してる vagrantでvm作る、実行、壊すを繰り返し  iptablesとか、SELinuxあたりの設定は会社によって or 案件によって固定で、かつそんなに変更がないと思うので、ここだけでも速やかにChefで管理したいな  第1部 明日からはじめる Chef 入門  tk0miyaさん    明日から始める Chef 入門 #bpstudy  from Takeshi Komiya 
サーバ、どうやって構築している？ 手順書？Wikiを見て？職人がやってる？
よくある話  手順書通りにやってもうごかない サーバごとに設定がちがう 手順を飛ばしちゃって事故る  手作業で複数だいは辛い クロスチェック欄など…   自動化しよう！ どうやってやる？
 シェルスクリプト PXE + kickstart sed/awk  PHP  オレオレパッケージ  環境構築について、継続的デリバリーにはこう書かれている。</description>
    </item>
    
    <item>
      <title>TDD Boot Camp 大阪 1.0( #tddbc ) に参加しました</title>
      <link>https://note.gosyujin.com/2012/06/03/1338724924/</link>
      <pubDate>Sun, 03 Jun 2012 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2012/06/03/1338724924/</guid>
      <description>[TDD][RSpec][Ruby][イベント]TDD Boot Camp 大阪 1.0( #tddbc ) に参加しました 概要  http://atnd.org/events/28762:title なかなかスケジュールの都合がつかず、近場で開催されても参加できないことが多かったので、「次こそは！」と思った矢先の大阪開催だったので参加しました  まとめ  楽天カフェテリア＠大阪、非常に素晴らしい会場でした。素晴らしい会場でした！  カフェテリアは木製の椅子のため、半日近いイベントの場合腰が悪い人は座布団を持って行ったほうがいいですね  TDDとペアプロに関しての経験をつむことができた  よしおかさん、関さん、和田さんを独占していたRubyのテーブル…  その中でも恐れ多くも関さんと和田さんを独占してしまった。会場撮影されていた様子^^; http://via.me/-1nhb1te:title  成果物はStep3のはじめまで[https://github.com/gosyujin/tddbc:title=GitHub]にあげました  他の言語でどう書くか、書き方などを見て、自分のメイン言語のテスティングフレームワークでも出来るかな？　と調べる事が大事 ねんがんのグリーンバンドを手に入れたぞ！ TDDは一人でも出来るので、どんどん書いて量を質に転化させていく！ 主催の@[https://twitter.com//bufferings:title] さん、TAの皆さん、スピーカーである@[https://twitter.com/t_wada:title] さん、@[https://twitter.com//hyoshiok:title] さん、@[https://twitter.com//m_seki:title] さん、Ruby島の皆さんお疲れ様でした！  以下、時系列にそったまとめ
TDDのこころ @[https://twitter.com//t_wada:title] さん BootCampとは  新兵に教官が優しく教える しかしスライドの画像[1]は2012年現在もはや厳しい…  今日やること  ペアプログラミングを体験してみる コードレビュー大会  同じコードを同僚と解くという機会はほぼない 同じお題を他の人はどう考えるのか、他の言語ではどうなるのか   ふりかえり  KPT形式でフィードバック  ソフトウェア開発の三本柱  バージョン管理、テスティング、自動化  RPGのノーセーブクリア＝バージョン管理なしの開発 今コードが動いているのか動いていないのか＝テスティング 人間が手作業でやっているものをシェル化、Jenkinsで回したりで機械に任せる＝自働化、自動化  機械がうまくいってない時だけ教えてくれる    「テスト」とは  誰が、なんのためにテストをするのかで簡単に分類  Developer Testing  開発者が開発促進のため  Customer Testing  顧客が進捗管理のため(受入テストとか)  QA Testing  品質保証担当者が品質保証のため    「TDD」とは  テスト駆動開発入門 ケント・ベック 動く、きれいなコードへ  そこに至るための道へは？  きれいな設計をして、それを実装して、それが動作する…きれいな設計とは？   動かすことで初めてわかることがソフトウェア開発にはとても多い  なら早く超えよう(ただしここで止まると技術的負債になる)   TDDのサイクル  テストを書き テストを実行して失敗させ(Red) 目的のコードを書き テストを成功させ(Green) そのテスト通るまま中を綺麗にしていく(Refactor) これを繰り返す  TDDのやり方  大きな問題は切り分けて1つずつ たくさんの問題も1つずつ 何をテストすればよいのか  開発を進めにくくする要因→何かわからないもの、不安   TDDをすることにより  即座にフィードバックを得る 書いたコードへの自信持つ これから書くコードに自信を持つ  TDDの真の目的  不安の克服 健康  コードの健康=仕様変更に対応できる チームの健康=仕様変更に備える事ができる   ペアプロ デモ(FizzBuzz)  ゴールから書く！  Fizzの場合  何がゴール？ Fizzが返る どうなった時Fizz？ …としていく   テストコードのテストってどうするの？  テストコードと実装コードを互いにテストしあう！  そのタイミングは実装する前にやってしまう、仮実装してしまう   実際にペアプロのデモを第三者視点で見て、以下のようなことを思った  文化の違いをどう解決していくか  エディタ、キーバインド、などなど  細かなTipsが共有されていく  「xxはyyっていうショートカットで出せますよ」「知らんかった…」  ナビゲータって一人で仕事をしているときはやる事がないので結構難しそう…   ペアプロ  Ruby島は4人でした  @[https://twitter.</description>
    </item>
    
    <item>
      <title>Jenkins,Redmine使いこなし勉強会に参加しました と、ちょっとプラグイン作ってみた #jen_red</title>
      <link>https://note.gosyujin.com/2012/05/28/1338209339/</link>
      <pubDate>Mon, 28 May 2012 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2012/05/28/1338209339/</guid>
      <description>[Ruby][イベント][Jenkins][Redmine]Jenkins,Redmine使いこなし勉強会に参加しました と、ちょっとプラグイン作ってみた #jen_red 概要  http://connpass.com/event/500/:title  前半は発表のメモ。後半は実際にプラグイン作ったりインストールしたりのメモ。
Redmineプラグイン活用入門 - @[http://twitter.com/Kokawa_Takashi:title]さん 注意:Redmine開発環境が安定していないので、すぐ陳腐化してしまう事がある！
Redmineにおける問題  Redmineの設定で解決 運用で解決 ツール自体を拡張して解決  プラグインの探し方・おすすめ REST APIを使って外部から プラグインを作る   プラグインの探し方・おすすめ  http://www.r-labs.org/projects/r-labs/wiki/Redmine%E3%83%97%E3%83%A9%E3%82%B0%E3%82%A4%E3%83%B3%E9%9B%86:title http://www.redmine.org/plugins:title 一つだけおすすめを… Wiki Extensions Plugin  オートプレビュー 任意のページをメニューに 任意のページを埋め込み 等々…  他のおすすめ  CodeRevirew Backlogs TimeTracker   REST API  自動でチケットを作ったりできる チケット一覧を取得できたり この一連の流れができたらJenkinsに任せる事ができる  期日が間近のチケットのメール通知などもできる   プラグインを作る  Redmine1.4 or 2.0が対象(Ruby1.9,Bundler対応している/これ以前はしていない) プラグイン開発環境構築がつらいので  Ruby環境  WindowsならRubyInstaller + DevKit MacならRVM  自分でも少しまとめている http://d.</description>
    </item>
    
    <item>
      <title>BPStudy#57に参加しました #bpstudy</title>
      <link>https://note.gosyujin.com/2012/04/28/1335575351/</link>
      <pubDate>Sat, 28 Apr 2012 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2012/04/28/1335575351/</guid>
      <description>[Jenkins][Sphinx][イベント]BPStudy#57に参加しました #bpstudy 詳細: http://connpass.com/event/365/:title  例の特許庁最適化計画プロジェクトを通してITビジネスの仕方を変えよう  というなかなかに興味深い内容だったので参加。
第一部 新たな価値観へのITビジネス視点での転換 萩本順三さん  政治的な話は無し 私が技術顧問として最適化計画を見た時、「古いな～」と思った  問題があるプロジェクトに入り込んで、どうするかというのが仕事  火を吹いた時に入り込んでいく =&amp;gt; はじめにオフィスへ入り込んで資料を見た時「これやめないんですか？」と聞いたほど   かなりはじめの段階からダメと周りの人にも言っていたが……  何が問題か？  技術を特許庁の業務にどう活かすかの具体性がない  xml使ったからどうなんの？  業務モデルを1000名で書いてどうすんの？ むしろ主役は特許庁なのでは？ =&amp;gt; 放り投げ主義 業務モデルは発注者の理解と覚悟の元作成するはずなのに！  根底の問題は？  IT業界の負のビジネス慣習  ユーザ、開発両者のスキル不足  お客さんに教えながらモデル化をしていくものなのに   コスト配分が開発者寄りになり、たとえいいものを作ったとしてもユーザさんが使いこなせない うまく要件を引き出せないと、正しくないシステムができてしまう 是正しなければ  意識改革 コタツモデル  ユーザから話を聞いてシステム開発に入るが、ユーザは必ず正しいのか 以下の3つから&amp;rdquo;将来&amp;rdquo;の価値を取りに行く視点を持つ  戦略的視点(偉い人) 業務問題解決の視点(業務担当の偉い人) IT活用の視点(開発の出来る人)  しかし、偉い人は現在の価値を取りに行きがちだし、業務担当の偉い人は業務問題解決の視点しか持っていないことが多い 戦略的視点から業務解決、IT活用をしていくと、偉い人も「あ、俺業務知らなかったな」と感じで同じコタツに入ってくれる =&amp;gt; 要求が収束する Howの手探り  ビジネス戦略から  Howの突き上げ  テクノロジーを使うともしかしたら業務がいらなくなるかもしれない =&amp;gt; 戦略に結びつける  最適化  切ってつなげて並行でスピーディに走らせる  常に価値で問う  設計ドキュメントなどは誰に対して価値があるのかを問う。説明できなければいらないじゃない？(ただし、技術的に説明できない場合もある)  自分が持っている知識をお客さんに魅力的に見えるものとする 自分のやりたいこと(How)を実現していこう(What)  自動車メーカ、ファッション業界ではできているのになぜソフトウェア業界でできない システム要求の牢屋に閉じ込められていたらできっこない   5年後のIT業界  巨大システムの開発(一枚岩)からアクセサリ化に  コーディネート化する必要がある 開発者が一番強い。なぜならHowを握っているから  ピラミッド型組織から分散自立型組織に  優秀な人は残して優秀じゃない人は返す、返された人は価値に敏感になれるように  学び、勇気を持って行動してください  第二部 執筆プロジェクトの継続的ビルド [https://twitter.</description>
    </item>
    
    <item>
      <title> Git道場#1に参加しました と、pullとpull --rebase備忘録 #gitdojo</title>
      <link>https://note.gosyujin.com/2012/04/22/1335108555/</link>
      <pubDate>Sun, 22 Apr 2012 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2012/04/22/1335108555/</guid>
      <description>[Git][イベント] Git道場#1に参加しました と、pullとpull &amp;ndash;rebase備忘録 #gitdojo 概要  http://git-dojo.doorkeeper.jp/events/979-git%E9%81%93%E5%A0%B4:title  対象者が
 merge / rebaseにちょっと自信がない
conflictが怖い
 まさにそんな状況だったので、打破するために参加しました。
心「Git総論、心構え」  @[https://twitter.com/#!/iwamatsu:title=iwamatsu]さんの講義  Gitにはリモートリポジトリ、ローカルリポジトリがある  集中型のリポジトリにはリモートリポジトリとローカルリポジトリの区別がない  皆のリポジトリなので履歴参照などはすべてリポジトリを見にいかなければならない  分散型では、主な作業はローカルで行い、データを管理できる ローカルリポジトリからリモートリポジトリに反映(プッシュ)する事で他人と共有 ローカルリポジトリは俺のもの、リモートリポジトリは皆のもの  Gitは頑健である Gitは時間的な変遷を管理する  昨日のこの時間何してたかな？ testブランチを消してもコミットは残っている 作業履歴が残っているのでreflogで参照できる  reflogで救済できる期間は90日以内、またはgit gc が実行されるまで   他(質疑応答の回答など)  ブランチを削除してもコミットは残っている。git branch -D GitHub重い……  イントラにbareリポジトリ用意して毎朝GitHubから持ってくるなど   技「本日の課題、テクニックの解説」  @[https://twitter.com/#!/conceal_rs:title=conceal_rs]さんの講義  課題  今日はチームで一つのファイルを編集 pull, rebaseを怖がらずに  コンフリクトが起こった時の対処法を学ぶ  pullとの違いを理解する  ≒mergeとrebaseの違いでいいのかな？   ルール  1-10までのNumbersファイルの後ろに記号を追加削除していく コミットメッセージだけで語る チーム間ではコミットメッセージのみを介して会話する 「好きにやっていいので、ぐちゃぐちゃを楽しんでください」 今回は@[https://twitter.</description>
    </item>
    
    <item>
      <title>BPStudy#55に参加しました</title>
      <link>https://note.gosyujin.com/2012/04/01/1333220954/</link>
      <pubDate>Sun, 01 Apr 2012 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2012/04/01/1333220954/</guid>
      <description>[Heroku][Agile][イベント]BPStudy#55に参加しました 詳細: http://connpass.com/event/354/:title  Heroku大好き  ということで参加しました。
第1部 Heroku @[http://twitter.com/herokujp:title]さん(相澤歩さん、Heroku Herokuとは  元々Rubyアプリケーションをデプロイするサービスだった。 今はJavaとかScalaとか  最近はFacebookアプリの影響でPHPが多い！   Heroku=Rubyと思っていたので、(実際それで使っていたのもある)最近はjsやJava使えたというのが個人的に驚き。さらに最近はPHPも多いという事らしい。ただしBPStudyの会場で聞いたところ。
\#bpstudy Herokuを何で使ってますか→Python、Rubyそこそこ、Java、Scalaもある程度、PHPなどがほぼいない
&amp;mdash; ごしゅじんさん (@kk\_Ataka) 3月 30, 2012 懇親会での話によると「あの空気では手を挙げられない」ということだったらしい。
Herokuって何？　改めて再定義  単なるホスティングサービス？  いいえ、PaaSです ホスティングサービスと何が違うの？ 開発者がサーバの管理とかスケーラビリティを意識せずに製品を作れるように   生産性の低いプログラマを底上げするものではない  できるプログラマをさらに引き上げてくれるサービス Rubyの思想と似ているかも(＝ある程度できる人向けのもの)  今後Herokuを使う人へ  Herokuで色々やってTwitter, GitHubなどで情報発信してみてください Add onを作ってマーケットプレイスに登録もできるよ、売れるよ！  第2部 SonicGardenでのherokuの実践活用 Sonic Garden 松村さん(@[http://twitter.com/mat_aki:title]さん) Sonic Gardenとは  受託一括納品についての問題点を解決する  &amp;ldquo;納品しない&amp;rdquo;受託開発  「Heroku」でググると4番目に出る  Sonic Gardenのソフトウェア開発について Sonic Gardenでは6~7人で人数以上のプロジェクトを走らせている=一人が複数のプロジェクトを掛け持ちしている。以下のようなツールを使っている。
 http://www.</description>
    </item>
    
    <item>
      <title>java-ja忘年会に参加しました2011</title>
      <link>https://note.gosyujin.com/2011/12/11/1323617084/</link>
      <pubDate>Sun, 11 Dec 2011 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2011/12/11/1323617084/</guid>
      <description>[イベント][java-ja]java-ja忘年会に参加しました2011 今年は秋葉原 の北海道。今年は日曜日だったので余裕を持って3年連続3度目の出場を決められた。自分の正面には@drillbitsさんとも初対面だった。が、もしかしたらBPStudyなどでお会いしていたかもしれない。
いろんな話題とサンタ的ななにか 「PHPは育てるとかわいくなる」とか「ゲームはPC、XBOX、PS3で出すにはどのくらい大変なんだろう？　AndroidとiOSで同じアプリ同時にリリースしろって言われたら困る」とか「ドキュメントはこっちで自由に作ってPDFで送付します、ただし微妙にレイアウトが違うのを指摘される」とか「ブログ持ってTwitterやってGitHubに作ったサービス登録して自分をアピールできる時代」いう話題が繰り広げられる中、違う島ではD社の就職説明会が開催されたり、サンタのようなものが会場を練り歩いたりしていました。
サンタのようなものはどこかにアップされてそうなのでそちらを参照してください。(java-ja サンタ とかでググる？)
個人的な  [http://twitter.com/#!/Jxck_:title=@Jxck_]さんに以前Sphinxを教えてもらって以来使ってます！　弊社内一人で！　報告ができてよかった [http://twitter.com/#!/fd0:title=いけむら]さんと日々の作業の効率化について少しお話させて頂き、作業を効率化して浮いた時間を有効に使い…という正のループにハマれるようにちょっと気持ちを引き締めて明日からまた生きようと思いました  最後に 幹事の[http://twitter.com/#!/yamashiro:title=@yamashiro]さんいつもお疲れ様です！　いつか冬場のリップクリームの件についてお話させてください＞＜</description>
    </item>
    
    <item>
      <title>BPStudy#47に参加しました</title>
      <link>https://note.gosyujin.com/2011/08/01/1312213654/</link>
      <pubDate>Mon, 01 Aug 2011 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2011/08/01/1312213654/</guid>
      <description>[Agile][イベント]BPStudy#47に参加しました 詳細: http://atnd.org/events/17717:title  サーバの調達が毎回めんどい上に自由に使えるマシンがないので、仮想で立てられるXenServer見てみたい アジャイルには縁のない、ウォーターフォール一直線の日々なのでことはじめ的な話を聞いてみたい  というわけで久しぶしにBPStudy参加。
XenServerによるお手軽開発用サーバ運用 @[http://twitter.com/tokibito:title=tokibito]さん Webシステムを作るに当たって  本番に近い環境、お客さんに見てもらう環境を作りたい Wikiや課題管理をしたい  という事で、開発用のサーバを立てたくなる時がよくあると。ただし…
 費用がかかりすぎては本末転倒なのでコストはかけない あれもこれも盛り込みすぎてもダメなので、今必要のないものはいらない  この2点を念頭に置いて立てる。
実際にサーバを立てる 色々な方法があるが…
 レンタル？(共用サーバ、専用サーバ、VPSなど) 自前？  プロジェクト毎に別の環境(OSなども)を作りたいので共用サーバでは設定的に難しい。1～3ヶ月が1プロジェクトの平均サイクルなので、データセンターなども難しい。じゃあ自前でやろう。
自前サーバに導入できるXenServerを選んだ。なぜXenServerなの？  対抗はVPS メモリ増やしたりとかはVPSより自前の方が融通がきく XenServerが無料になったので！  Xen  オープンソースのフリーウェア サーバの仮想化 ハードウェアの上で直接動作するOS Amazon EC2 とかでも使ってる  のっけ方 VM Xen ゲストOS VM OS OS OS ホストOS XenServer HW HW  Linux、Windowsを動かせる  インストール方法  iso落とす XenCenterを管理用端末にインストールする(XenCenterは残念ながらWindows専用) ライセンスファイルを取得し、XenCenter経由でライセンスファイルをインストールする  XenCenter特徴  GUI 複数管理も楽 スナップショットとって壊しても戻せる VM単位でバックアップが取れる まったく同じ構成の環境も簡単に作れる リソース割り当てもXenCenterから簡単に 別のホストにVMをまるごと移動できる  めんどい事  ネットワークの設定…IPを固定したりホスト名変えたり なのでスクリプト組んだ https://gist.</description>
    </item>
    
    <item>
      <title>BPStudy#41に参加しました</title>
      <link>https://note.gosyujin.com/2011/01/30/1296401919/</link>
      <pubDate>Sun, 30 Jan 2011 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2011/01/30/1296401919/</guid>
      <description>[JavaScript][Git][イベント]BPStudy#41に参加しました  詳細: http://atnd.org/events/11755:title  ATNDなどでBPStudyの存在は知っていたのですが、今回初参加。
分散SCMを勉強しようと思って最近Gitを使いはじめたのですが、リアル周りに使っている人がいないので知識共有ができず……。他の人はどうやって使っているのかなーと思っているところに神速さんがGitの発表をすると聞いたので、自重せずに参加しました。
以下メモ。前半戦のjsも、聞けばわかるかなーとか思っていたら甘かった……jsは勉強不足でした。もう少し使えないと話にもついていけない……。
JavaScript @[http://twitter.com/monjudoh:title=monjudoh]さん  http://d.hatena.ne.jp/monjudoh/20110128/1296205331:title  RequireJS実践編  RequireJSって何？  jsの依存性解決をしてくれるライブラリ モジュール内で他のモジュールを再帰的に読み込みを行いたい場合…define関数を使用して読み込んでいく require関数を使うと逆に読み込んでいく    RequireJS読み込みの前にrequireなんたらという名前が付いているグローバル変数がある場合、設定ファイルとして使ってくれる   モジュールjsのあるディレクトリが深い場合呼び出しがめんどい  baseUrlを指定してjsがあるパスを基底のパスにすると楽になる    パスの上書きもできる  スタブモジュールと置き換える事もできる    キャッシュされた古いJavaScriptを読みこまないようにもできる  クエリパラメータにデプロイ日時を入れる   jQuery custom event 応用編  custom eventって何？  ブラウザがサポートしてないイベント[1]を定義する独自のイベント    普通のプログラムのような事もcustom eventでできる  関数呼び出し 引数付き呼び出し インスタンス変数へのアクセス クラス作成のような事 mixin callback mixout 同名のn(≧0)個の関数呼び出し   疎結合なUIコンポーネントの作成について  複数画面で使えるAjaxformダイアログのコンポーネントを作りたい  例えば、Googleカレンダーのように日付セルをクリックしたらスケジュール登録ダイアログが出るように    仕様変更  セルをクリックしたらアクティブ、アクティブをクリックしたらスケジュール登録ダイアログが出るように ダイアログを開く→custom eventにして「開く」と「ユーザアクションの検知」を別に    仕様変更  スケジュール一覧画面を作る、画面に新規追加ボタンもあり、カレンダーのセルをクリックしたときと同じダイアログをだす ユーザアクション検知のモジュールをカレンダー画面とスケジュール表示画面に分ける callback処理も分ける    本体の再利用性も高いし、挿し込むパーツも機能が明確なので再利用性が高くなる  マスタリング非同期読み込み @[http://twitter.</description>
    </item>
    
    <item>
      <title>MacBook Air 11インチ欲しい！</title>
      <link>https://note.gosyujin.com/2011/01/23/1295789120/</link>
      <pubDate>Sun, 23 Jan 2011 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2011/01/23/1295789120/</guid>
      <description>[イベント]MacBook Air 11インチ欲しい！ [[MacBook Air 11インチ欲しい！]]
[1] 実際はインデントとかなし。</description>
    </item>
    
    <item>
      <title>Wicket勉強会に参加しました</title>
      <link>https://note.gosyujin.com/2011/01/12/1294833920/</link>
      <pubDate>Wed, 12 Jan 2011 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2011/01/12/1294833920/</guid>
      <description>[Java][Wicket][イベント]Wicket勉強会に参加しました  詳細: http://atnd.org/events/11066:title  TwitterのTL取得ページを自分用に作った程度ですが、二年連続二回目の出席をキメました。バージョン1.3メインで使っていた(いる？)人なので、もう1.5が出るのかーっといったところです。
1.5になると矢野さんのWicket本の1/3が意味なくなるらしい…。
Wicket1.5の新機能 @[http://twitter.com/t_yano:title=t_yano]さん  WebRequestCycleが消えた steps(), step()も消えた  RequestTargetという概念が消えた→IRequestHandlerで代替  UrlCodingStrategy→IRequestMappterで代替 リクエストのサイクル  IRequestHandler ↑　↓ -------------------- IRequestMapper -------------------- ↑　↓ Request Url  RequestHandlerを使えればWicketの世界に入っていける RequestHandlerStack: リクエスト処理の中心でRequestHandlerをスタックとして扱う  Urlマウント  mountBookmarkablePageが消え、代わりにmountPageになった。 ${}で変数をUrlに埋め込めるようになった  /mountpath/${year}/ StringValue year = parameter.get(&amp;#34;year&amp;#34;)  - 現状はページのみ。リソースの場合はインデックスで取れる  /user/t_yano/image/ parameter.get(0) //user parameter.get(1) //t_yano コンポーネントの初期化と設定  コンストラクタ？onBeforeRender？  onInitialize()が追加された  自身がページにadd済みである事を保証。ただし一度しか呼ばれない isVisibleがfalseだったりすると呼ばれない  onConfigure()  レンダリング前にかならず呼ばれる事を保証 全コンポーネントが揃っている事が保証できるタイミング isVisibleがfalseでも呼ばれる   ButtonとかLinkとかPanelに書くもので、Pageに書くものではない  コンポーネントの独立性  密結合  ボタンを押すとあるコンポーネントが消えるという場合…  ボタンと消すコンポーネントを連携させないといけなかった     IEventSink: イベントを受け取るオブジェクト IEventSource: イベントを送信できるオブジェクト  あらゆるコンポーネントはIEventSinkかつIEventSource    Page#sendで送れる範囲  BREADTH: 子に広げる WIDTH: 子から自分まで上がる BUBBLE: 自分から親に上がる  BREADTHしか使わないんじゃないか？    ◯　◯　◯　◯ ↓イベント　↑　↑　↑ フ　レ　ー　ム　ワ　ー　ク  他のコンポーネントを意識しなくてもよくなった！ 今後はページからではなくコンポーネントから考えよう   ajaxコンポーネントを更新するaddComponent()メソッドはadd()になった  最終的な表示処理は誰のもの？ @[http://twitter.</description>
    </item>
    
    <item>
      <title>pixiv Tech Meetingに行ってきました</title>
      <link>https://note.gosyujin.com/2010/12/21/1292940870/</link>
      <pubDate>Tue, 21 Dec 2010 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2010/12/21/1292940870/</guid>
      <description>[イベント]pixiv Tech Meetingに行ってきました  詳細: http://atnd.org/events/10866:title  日頃からプレミアム会員として利用させていただいているシステムの裏側が見れる！　という事で、ATND見てから参加余裕でした。今回はなんとか時間通りに辿りつけました。一瞬GoogleMap先生が変な場所指すので迷子になったけど。
内容としては、次々にアップされる画像ファイルの捌き方や一番いいインフラの運用法、画面はjsを使用しているって事で、普段自分が触った事のない分野の話が大半。リファクタリング話やiPhoneSafariでのjsゲーム作成など、自分が普段使っている分野から近い話は頭に入ってきやすかったのですが、インフラの話などはわからない用語が出たら適宜ググってました；
以下メモ。
VPとSPIDERを使ったMySQL運用 @kamipoさん - http://www.slideshare.net/kamipo/vpspidermysql:title  VP+SPIDERでホスト間テーブル移動をやる  VPはカラムごとにテーブルを垂直分割 SPIDERはテーブルを複数ホストに水平分割   VP  vp_copy_tables()でaにあるテーブルの値をbにコピー出来る vp_copy_tables()はPRIMARY_KEYがないと使えない  注意  COMMENTは60文字までしか書けない -&amp;gt; MySQL5.5なら大丈夫！ MySQL5.0だと色々なクエリでエラーが起こるので、できるだけ最新版を使おう  質問  エクストラバックアップの方が早くね？  用途が違う。これは止めずに移動できるのがいい   pixiv.js -4年目のサービスをきれいにしよう @[http://twitter.com/#!/yksk:title=yksk]さん  15億PV/月達成！　ソースを綺麗に  現在は、Prototype.js + jQueryで走っている  最終的にはjQueryに統一したい！ $.noConflict(jQuery)を使えば、衝突することなくjQueryで行ける！   この関数を実行すると、$関数の動作が先に定義されている動作に戻る。
$関数はprototype.jsなどをはじめ、多くのライブラリがそれぞれ拡張している関数である。
jQueryでも、核となるjQueryオブジェクトのショートカットして極めて頻繁に利用される。
このコマンドは、そのような$関数を定義する複数のライブラリを用いた際に衝突することを防ぐものである。
http://semooh.jp/jquery/api/core/jQuery.noConflict/_/
 名前空間をひとつに統一する  windows.pixiv.*に統一すればかぶる可能性は無くなる  html5を使う  記述がちょっと減る scriptタグとか簡略化できる プレースホルダーなどのUIの新機能が使える data-*属性は要素に好きな名前をつけられるようになった  1ページ1ファイル、ページごとに読むjsを変更するのが大変  URLディスパッチャーで振り分ける  LABjs  非同期でスクリプトを読み込める、順番を指定できる 他のファイルの読み込みをブロックしない Twitterでも使われている 実は、Loadの仕組みは標準化されていないので、ブラウザが新しくなるたびチェックする必要がある  将来的にはscript async/deferに移行するかも   QUnit  ブラウザを開けばテストできる、簡単！  まとめ  コアライブラリが2つあるのはまずいので1つに URLディスパッチャーとLABjsで高速化、ソースも綺麗 QUnitでテスト！  エログロOK!</description>
    </item>
    
    <item>
      <title>java-ja忘年会に参加しました2010</title>
      <link>https://note.gosyujin.com/2010/12/11/1292077752/</link>
      <pubDate>Sat, 11 Dec 2010 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2010/12/11/1292077752/</guid>
      <description>[java-ja][イベント]java-ja忘年会に参加しました2010 今年は渋谷。 定時までに終わるかなーと思っていたミーティングがまさかの2時間オーバー。そして人身事故によるりんかい線のダイヤ乱れ。北海道に着いたのは20:45くらいでした……。Tweetviteでは出席になっていたのに、会費は集計して足りなかったらでいいよ！　と言ってくれた名幹事やましろさん++　いつも取りまとめありがとうございます。
二次会は部隊編成 そして場所を変えて二次会。ハンター組とハンターじゃない組に別れて二次会が開催されました。僕はハンターじゃない組。二次会では主に食べてました。　＠[http://twitter.com/Ewigkeit:title=Ewigkeit]さんにいっぱいサービスしてもらった＞＜
飯以外では、＠Ewigkeitさん、@[http://twitter.com/leather_sole:title=leather_sole]さん、@[http://twitter.com/kamekoopa:title=kamekoopa]さんとPHPの話、タバコの話[1]、staticおじさんや相互フォロー推進委員会suspendされた話で盛り上がりました。社内でstaticおじさんとか相互フォロー推進委員会なんて単語出した事ないなー[2]とか思いつつ……やっぱjava-jaいいわー。
イベントに出ると、会った人の顔とTwitter idとTwitterアイコンを一致させるのが難しいですよねーという話も。「あれ？　この人会ったことある……idなんだっけ？」「idはタイムラインで見たことあるなぁ……」等々……。難しいですよね……。
終わりに 何とか滑り込みで2年連続2回目の出場をキメる事ができました…。来年も参加するぞ！　いや、その前に時間通りにイベントに参加できるようにだな…。
一次会幹事の@[http://twitter.com/yamashiro:title=yamashiro]さん、ハンターじゃない方の二次会を取りまとめてくださった@[http://twitter.com/meso:title=meso]さん、java-jaの皆様お疲れさまでした！
[1] 途中でタバコの試供品を配るお姉ちゃんがきてたからだと思う……。
[2] おれは会社でなんの話をしているんだろう？</description>
    </item>
    
    <item>
      <title>Hudson勉強会に行ってきました</title>
      <link>https://note.gosyujin.com/2010/11/13/1289639385/</link>
      <pubDate>Sat, 13 Nov 2010 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2010/11/13/1289639385/</guid>
      <description>[イベント]Hudson勉強会に行ってきました Hudson勉強会に行ってきました。名前は聞いたことがありますが、今まで使ってなかったのできっかけになればと思って。
参考:http://wiki.hudson-ci.org/pages/viewpage.action?pageId=46336352:title
Hudson初心者向けデモ @[http://twitter.com/cactusman:title=cactusman]さん
Hudsonって何ができるの  スケジューリング SCMからチェックアウト ビルドスクリプトの実行、結果のまとめ、通知  などできる！
起動・操作  起動は超簡単 「java -jar hudson.war」で一発 &amp;gt; 導入する敷居がグッとさげられる！？　ほぼGUIから操作できるのも便利！ Javaのパスなどを入力し、ビルドを実行するだけ スケジューリングはcronと同じように設定できる &amp;gt; 毎分実行されるなど  Hudsonプロジェクトの現状と将来 @[http://twitter.com/kohsukekawa:title=kohsukekawa]さん
 rpm/debもあるよ インストール後の設定はGUI &amp;gt; 便利！  Hudsonをおすすめできる理由  拡張性の高さ！ = Eclipse使われているのと同じ理由 Java以外の多言語でも利用されてる &amp;gt; Python, Rubyも 他の競合ツールに比べて利用者が増加し続けている  日本Hudsonユーザ会発足！  http://build-shokunin.org メーリスもあるよ 定期的に勉強会するよ  今後の展望  面白い拡張ポイントの実装 &amp;gt; プラグインの作者が面白いように プラグインも拡張ポイントを実装すべき！ &amp;gt; 現状メッセンジャープラグインがたくさん &amp;gt; しかし、プラグインごとに実装はバラバラ… &amp;gt; メッセンジャー共通部分を作るとか！ 分散ユニットテストなど計算機資源を豪勢に使う ビルド環境を柔軟に JRuby, Jythonなどでプラグイン開発ができるように  などなど……</description>
    </item>
    
    <item>
      <title>JVM勉強会に行ってきました</title>
      <link>https://note.gosyujin.com/2010/08/11/1281453866/</link>
      <pubDate>Wed, 11 Aug 2010 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2010/08/11/1281453866/</guid>
      <description>[Java][イベント]JVM勉強会に行ってきました ふむ、jojo勉強会以来…？　あれ、java-ja温泉の事って書いてなかったっけか。書いてなかったのか……。
というわけで行ってまいりましたJVM勉強会。
VMの中の人まで意識した設計をしたことがなく、ClassLoaderをサンプルでちょこちょこって動かした程度のレベルですが。
参考資料 とりあえず、会場で持ってる人が割といた、もしくは発表内で話題にあがった本など。
 Java仮想マシン仕様 ガベージコレクションのアルゴリズムと実装 デコンパイリングJava  この辺りを読んでくると、より内容を楽しめた模様。
本編  @ashigeruさん クラスローダについて  クラスローダはfindClass()をオーバライドする loadClass()を実行すると委譲先クラスを探しにいく。親から見ていって、なかったら自分でロード  親から見ていくので、親が古いライブラリを持っているとそれをロードしてしまう！  某アプリケーションサーバは親を最後に検索する = PARENT_LAST  その名のとおり自分のクラスローダを最初に検索するので、親のライブラリの影響を受けにくい  同じ名前のクラスでも定義ローダーが違えば別のもの。Class.getClassLoader()でどこから呼ばれたか確認できる。 PARENT_LASTの問題点としてドッペルゲンガーという現象。などなど……    @skrbさん Stack on JavaVM  JVMとスタックについて スタックを使用した逆ポーランド法のアニメーション（わかりやすい！） JVMはスタック スタックはThreadひとつにつきひとつ  中にはプログラムカウンタがひとつ フレームの中にはローカル変数とオペランドスタック  JVMの中ではBooleanはIntとして扱われている インスタンスはヒープにアロケーションされる スタックは二段構え（JavaStackとオペランドスタック）    @kmizuさん わかる！Javaバイトコード－30分でわからない？Javaバイトコード入門  Hello Worldの逆アセンブル byte,short,char,boolean -&amp;gt; すべてintとして扱われる ロード/ストア命令…定数をオペランドスタックにロードする命令 ロード/ストア命令2…ローカル変数の値をオペランドスタックにロードする命令 型変換命令…キャストなどint -&amp;gt;longなど 配列関係の命令 オブジェクトの生成・操作命令 モニタ命令 クラスファイルベリファイア  classファイルのフォーマットがJava仮想マシン仕様に従っているかどうかを該当クラスの初期化より前にチェックする。未初期化ローカル変数へのアクセス、型エラー、jasmin……この辺よくわかりませんした＞＜     @cactusmanさん GCについて  GC  ルートを起点として参照できるオブジェクトは生きている ルートに到達できないものがGCされる  GCを学ぶ意義としてメモリ領域の効率的な使い方を意識できる マーク＆スイープ  ルートオブジェクトからたどれるオブジェクトをマークしていく マークのないオブジェクトを回収 メリット：実装は簡単 デメリット：フラグメンテーション、アロケーション速度、停止時間が長い→マークしている期間  参照カウント  自信のオブジェクトが参照されているオブジェクトをカウント 0になった時点でGC メリット：参照が停止されたタイミングで開放、停止時間が短い、参照をたどる必要がない デメリット：循環参照を回収できない、カウンターの値の増減処理が重い、実装が難しい  コピー  メリット：スループットがいい、メモリ回収と同時にコンパクションを行える(フラグメンテーションが起きない) デメリット：ヒープ領域を余分に取る  GCの種類 ScavengeGC - コピーGC    @nekopさん クラスローダリークパターン なにそれおいしいの？  ThreadLocalで設定した値はThreadから強参照される java.</description>
    </item>
    
    <item>
      <title>java-ja勉強会に参加しました</title>
      <link>https://note.gosyujin.com/2010/01/23/1264179525/</link>
      <pubDate>Sat, 23 Jan 2010 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2010/01/23/1264179525/</guid>
      <description>[java-ja][イベント]java-ja勉強会に参加しました 　今回のテーマはJOJO！　参考URL→http://www.google.co.jp/search?q=java+jojo&amp;amp;lr=lang_ja&amp;amp;ie=utf-8&amp;amp;oe=utf-8&amp;amp;aq=t&amp;amp;rls=org.mozilla:ja-JP-mac:official&amp;amp;client=firefox-a:title
僕のJOJO予備知識  なんかジョジョっぽいアスキーアートは見た事がある 人名とか用語とか断片的に知ってる FF6のやりこみ用語にバイツァ・ダストとキング・クリムゾンがある エシディシは悟空の太陽拳で一撃[1]  　初心者少なすぎです＞＜
　昔から読むきっかけが欲しくて……これでもう明日から読めます。むしろ読みたくてたまらない＞＜　とりあえず実家からジョジョ全巻持ってきている剛の者を少なくとも二人知っているので手配しようっと。
三行でおさらいする今日の勉強会  人間讃歌 未来への遺産 才能と技術と成長の緊張関係  [1] ファミコンジャンプ的な意味で</description>
    </item>
    
    <item>
      <title>java-ja忘年会に参加しました</title>
      <link>https://note.gosyujin.com/2009/12/17/1260981278/</link>
      <pubDate>Thu, 17 Dec 2009 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2009/12/17/1260981278/</guid>
      <description>[java-ja][イベント]java-ja忘年会に参加しました java-ja忘年会だ！ 　絶対迷うとわかっていたので、かなり早めに新宿へ向かいました。到着後、iPhone片手に新宿アイランドタワーを探すも新宿の複雑さに若干オロオロ。田舎者に東京は難しすぎる……。それでもなんとか20時に着くことができました;;
　暇を持て余してたらTwitterのTL上で着いたと投げていたid:Ewigkeitさんを発見。すかさず合流してもいいですかと投げたら快諾してくれました。いい人＞＜　そしていい時代になったものだ＞＜
　Ewigkeitさんの後ろを着いていき会場入り。結構早い方だった。
　会場入りする人が増えてくると会話も増えて、会話の端々にTwitterIdのような単語が飛び出すと「あ～、あのアイコンの人じゃん！」と一人で盛り上がったり。[1]
　忘年会が始まると、うちの区画はいきなり名刺交換な流れになっていたので乗り遅れないように交換。id:t-wadaさんも同じ区画だった！　ちょっと遠かったけど。
　今回初参加だったので、皆さん何されてるんですか？　くらいの話しか出来なかったのが悔やまれる;;
　しかし、嬉しかった事もあります。前回のwicket勉強会でお話した人が僕を記憶に残しててくれたこと。これは嬉しかった……。id:t_yanoさんも僕のこと覚えててくださったのが驚き！　今年始めのwicket勉強会で非常に良い経験をさせて頂いたため、お礼も兼ねてどうしても挨拶だけしたくて、終わりがけに恐る恐る訪ねたら……！　少ししか話せませんでしたが機会があったらまたお話したい＞＜　wicketも触りたい＞＜
　まだTwitter上でしかあったことがない人もいるので、次回会えたらと思います。
　主催のid:Yamashiro0217さんお疲れさまです。ありがとうございました！　他の皆さんもお疲れさまでした！
　これで僕もjava-jaですっ。
P.S. 　t-wadaさんがブログラマーたるものジョジョを知らねばならん！　と、ジョジョ勉強会を開催するという噂を耳にしたのですが……。最初Java勉強会の空耳かと思った。
[1] 僕はjava-ja初参加だったので、知ってる人は第二回wicket勉強会で発表していた人とか、その後の懇親会で一緒だった人くらいしかいなかったのです;;</description>
    </item>
    
  </channel>
</rss>