<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sphinx on kk_Atakaの日記</title>
    <link>/tags/sphinx/</link>
    <description>Recent content in Sphinx on kk_Atakaの日記</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>jp</language>
    <lastBuildDate>Fri, 02 Dec 2011 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/sphinx/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>PyConJP 2016 in TokyoでSphinxハンズオンのTAをしてきた #pyconjp</title>
      <link>/2016/11/30/pyconjp-sphinx-handson-kpt/</link>
      <pubDate>Wed, 30 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>/2016/11/30/pyconjp-sphinx-handson-kpt/</guid>
      <description>あらすじ さる9/20のPyConJP 2016 Tutorial day(1日目)にて行われたSphinxハンズオンにTAとして参加しました。
 Sphinx ハンズオン ｜ PyCon JP 2016 in TOKYO  講師: @usaturnさん TA: @takuan_oshoさん、自分   振り返り  参加者は6名  OSはWindows 3人Mac 3人  参加動機など  仕事でドキュメントが残ってない、まとめるにあたってツール選定していたらSphinxを知った 重いWordファイルを操作するのが困難、別のフォーマットで簡単に扱いたい Pythonでデータ解析をするにあたって使用しているツールのドキュメントがほぼSphinx製だったので、Sphinxとは何なのか知っておきたい   簡単にメモ。</description>
    </item>
    
    <item>
      <title>Software Design 2016年11月号にSphinxの記事を執筆しました #sphinxjp</title>
      <link>/2016/10/31/software-design-2016-11/</link>
      <pubDate>Mon, 31 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>/2016/10/31/software-design-2016-11/</guid>
      <description>あらすじ Software Designで連載している「Sphinxで始めるドキュメント作成術」の記事をかかせていただきました。
 Software Design 2016年11月号｜技術評論社  内容 Sphinxで文章を作成するにあたって知っておくと便利なツールなどの紹介をしています。</description>
    </item>
    
    <item>
      <title>PyLadiesTokyo #8でSphinxハンズオンのTAをしてきた #sphinxjp</title>
      <link>/2016/01/19/pyladiestokyo-08-sphinx-handson-kpt/</link>
      <pubDate>Tue, 19 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>/2016/01/19/pyladiestokyo-08-sphinx-handson-kpt/</guid>
      <description>あらすじ さる1/16に開催されたPyLadies TokyoにてSphinxのハンズオンが開催されたのでTAしてきました。
 PyLadies Tokyo Meetup #8 - connpass  Sphinx hands-on in PyLadies Tokyo Meetup#8 !! #sphinxjp #PyLadiesTokyo pic.twitter.com/hfwwMZb6hA
&amp;mdash; sphinx-users.jp (@sphinxjp) 2016, 1月 16 
振り返りKPT Keep  PyLadies Tokyo – Official Site は、現在別のCMSで構築されているがこれを機会にSphinxに乗り換える案が出ているようです！ナイスですね  Problem  特に大きな問題もなく、もしもの時のために小さい電源タップを持参すると助かる時があるかも？  Try  ハンズオン質問あるあるみたいなものがまとめられるといいかも  ハンズオン資料( sphinxjp / handson — Bitbucket )とかSphinx-Users.jpのサイトを見てくと書いてあったりするけど   ハンズオンあるある エディタ編  半角スペース、全角スペース、タブを可視化できるエディタだとエラーに気づきやすい…かも！？  不意に混同するとハマっちゃう   アウトプット編(html)  テーマ、適用されてない？  (1.3以降の)デフォルトテーマである alabaster はそういう見た目なのだ ブラウザの横幅を変えるとメニューバーが目に見えて変化するのでわかりやすい  default があるのになんでデフォルトがこれじゃないの？(定番になりつつある質問)  Sphinx 1.</description>
    </item>
    
    <item>
      <title>SphinxCon JP 2015 で雑用してきた #sphinxjp</title>
      <link>/2015/12/01/sphinxconjp-2015-kpt/</link>
      <pubDate>Tue, 01 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>/2015/12/01/sphinxconjp-2015-kpt/</guid>
      <description>あらすじ さる11/24にSphinxCon JP 2015が開催されました。
今年はそっこうで枠が埋まったので、発表枠ではなくなんかあった時にフォローに回れるよう雑用枠で参加。(去年は発表枠もらってた SphinxCon JP 2014 で発表してきました #sphinxjp - kk_Atakaの日記)
connpassに資料、Toggeterに当日の様子がまとまっています。
 SphinxCon JP 2015 - connpass SphinxCon JP 2015 #sphinxjp - Togetterまとめ  個人的には、鹿野さんの基調講演でまとめられていたドキュメントの歴史がSphinxに限らずものすごく貴重だと思った。
昔に遡れば遡るほど知らない名前の技術が使われており、またそれが少なからず後世のツールに影響があるというのを知っておくと色々楽しい。
振り返りKPT 雑用枠的な振り返り。
Keep  1枠あると安心、雑用枠  スタッフ/発表者は当日諸々の作業に追われる事態も想定して、1人暇な人が待機してるとリカバリ効いていい感じ   Problem  オープニングにちょっと手間取った  会場が開場する前に到着している人が結構多くて入り口でワチャワチャしてて肩身が狭かった… 開場が遅れそうな場合は「開場するまで近場で時間つぶしてて」ってアナウンスするとよかったかも 主催/発表者/お手伝いの人は何時までに、参加者は開場アナウンス出てから入れるとスムーズだけどうまくいくかな？  会場の飲食、電源、WiFi情報の周知  Try  デリバリー業とスイーパー業をもくもくとやってた  ゴミの分別とかは予め極めておく  クロージングと平行して、忘れ物チェックとゴミはゴミ集め場に  今回忘れ物はなかったみたい  SphinxCon 2016開催決定！？  #sphinxjp SphinxCon 2016開催の暗示だ！ pic.twitter.com/h3KVQR7oWv
&amp;mdash; ごしゅじん (@kk_Ataka) 2015, 11月 24</description>
    </item>
    
    <item>
      <title>Sphinxワークショップ@関西で事例紹介とハンズオンTAをしてきた #sphinxjp</title>
      <link>/2015/11/01/sphinx-workshop-kansai-kpt/</link>
      <pubDate>Sun, 01 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>/2015/11/01/sphinx-workshop-kansai-kpt/</guid>
      <description>あらすじ さる10/31に開催された Sphinxワークショップ@関西 にて事例紹介とハンズオンTAをしてきた。
ので振り返りメモ。PyConJPのkptは活かされたのか。
スライド   JUS関西 Sphinxワークショップ@関西 Sphinx事例紹介  from kk_Ataka 
#sphinxjp ワークショップ@関西で、 @kk_Ataka の事例紹介中 pic.twitter.com/LWPFjZLKyf
&amp;mdash; Takayuki Shimizukawa (@shimizukawa) 2015, 10月 31 
振り返りKPT Keep  会場には遅刻せず余裕を持って到着できた 質問への対応、割とスムーズだった(と思う/アツい自画自賛)  PyConJPの経験が活きたな！  Sphinx Tシャツ持っていった  Problem  MacのDisplayPort忘れた  持ち物チェックリストに追加しよう  移動時間をちゃんと見積もるべし  帰り際のドタバタ。危うく帰れなくなる所だった(一応、みんな無事に帰れた)   やばい新幹線ぎりぎりかも
&amp;mdash; ごしゅじん (@kk_Ataka) 2015, 10月 31  新大阪着いた瞬間セブンセンシズに目覚めないとまずい
&amp;mdash; ごしゅじん (@kk_Ataka) 2015, 10月 31  @kk_Ataka 新幹線逃した！
&amp;mdash; Takayuki Shimizukawa (@shimizukawa) 2015, 10月 31</description>
    </item>
    
    <item>
      <title>PyConJP 2015 in TokyoでSphinxハンズオンのTAをしてきた #pyconjp</title>
      <link>/2015/10/13/pyconjp-sphinx-handson-kpt/</link>
      <pubDate>Tue, 13 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>/2015/10/13/pyconjp-sphinx-handson-kpt/</guid>
      <description>あらすじ さる10/9のPyConJP 2015 Tutorial day(1日目)にて行われたSphinxハンズオンにTAとして参加しました。
ので振り返りメモ。
 プレゼンテーション：Sphinxハンズオン ｜ PyCon JP 2015 in TOKYO  講師: 清水川さん TA: 渋川さん、自分   Sphinx hands-on!! at #PyConJP by #sphinxjp (@ プラザ平成 in 江東区, 東京都 w/ @takanory) https://t.co/0xK38ataBA pic.twitter.com/zkC4ZJJ5zf
&amp;mdash; Takayuki Shimizukawa (@shimizukawa) 2015, 10月 9 
振り返りKPT Keep  会場には遅刻せず余裕を持って到着できた  会場が開場する前に着いちゃって途方に暮れてるところ、@takanoryさんに拾ってもらった。ありがとうございました りんかい線？が遅れてたみたい  教室設営も余裕を持ってできた  …が、1点確認漏れあり、詳しくはpで   Problem  教室設営の時間でPCとプロジェクタの接続確認までやっておけばよかった  ハンズオン開始後にプロジェクタに接続したらまったく映らず スタッフの方が早急に代替機を用意してくれたので無事オンタイムで進められた  質問にパッと答えるのが難しかった  質問は過去に自分がググった記憶があるものも多かった そのため、解決するためのググるワードおよびサイト(sphinx-users.jpの逆引きページに書いてあったな、とか)はおぼろげにわかる しかし、すぐ出てこない あせる  Sphinx Tシャツ持っていくの忘れた  去年のSphinxCon JPで買ったTシャツ、ここで着なくていつ着るんだ！清水川さんが着替えてるのを見て後悔   Try  準備はプロジェクタつなげるまで  まあありがち  もっとSphinxを使おう PyConJPの別日も参加してみたい  その他の感想  ハンズオン参加者の方は大きく分けて「プロダクトガンガン作っているがドキュメントがない=書ける(良い)環境を作りたい」「Officeつらいので代替ツールの導入を考えたい」という2派が多かった  1GBのWordというすさまじいドキュメントの修正をしているという話も…  こんな機能もあるよ Sphinxウェブサポート — Sphinx 1.</description>
    </item>
    
    <item>
      <title>SphinxCon JP 2014 で発表してきました #sphinxjp</title>
      <link>/2014/10/27/sphinxconjp-2014/</link>
      <pubDate>Mon, 27 Oct 2014 00:00:00 +0000</pubDate>
      
      <guid>/2014/10/27/sphinxconjp-2014/</guid>
      <description> あらすじ ここしばらくいろいろSphinx関連であがいていた成果をSphinxCon JP 2014で発表してきましたよ。
自分視点からの感想。
概要 SphinxCon JP 2014 - connpass
資料のところから発表者の人の資料も全部確認できるよ。
発表内容は以下の通り。見よこのメンバー。ガチだよ！
 Welcome to Sphinx-1.3 (清水川) SIerでもSphinxを使いたい！総括 (kk_Ataka) SphinxとLaTeXで作る英文マニュアル (力武 健次) Markdownもはじめよう (高橋征義) Sphinx拡張 探訪 2014 (小宮 健 (@tk0miya)) 検索エンジンOktavia (渋川よしき) Sphinx HTML Theme Hacks (shkumagai)  (connpassより抜粋 / 敬称略)
自分のスライド   SIerでもSphinxを使いたい！総括  from kk_Ataka 
感想  さすがに40人近くいる会場だと大緊張 あんまり定量的な評価ではないので、そのあたりを期待されていたらごめんなさい 一応、SIer(元を含む)でSphinx導入に挑戦した方からは「あるあるですねー」という感想をいただけた 気になることがあったら適当にリプライとかください  懇親会、ビアバッシュ  渋川さんに会えた  Jekyllドキュメントの翻訳ってどーすればいいのかなーと困っている時に、 Shibu&amp;rsquo;s Diary: エンジニアは翻訳をやるとお得 に出会って自分の中にあるもやを解消してくれたすごい人  版管理+自動組版 - connpass @tk0miya さんより SphinxCon(Python)でJekyll(Ruby)のLTの練習した(TokyuRubyKaigi08用) VOYAGE GROUPさんありがとうございました  </description>
    </item>
    
    <item>
      <title>kawasaki.rb #015 でSphinx導入事例の発表をしてきました #kwskrb #sphinxjp</title>
      <link>/2014/08/28/kawasakirb-015/</link>
      <pubDate>Thu, 28 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>/2014/08/28/kawasakirb-015/</guid>
      <description>あらすじ kawasaki.rb #015 で発表してきたので、まとめ。
 Kawasaki.rb #015  あわせて読みたい
 kawasaki.rb #013 でSphinx導入事例の発表をしてきました と #011 #012 参加記録 #kwskrb #sphinxjp - kk_Atakaの日記  本当は14回で発表したかったのだけど、病欠してしまった…。
発表内容 以下のスライドを元に発表しました。
  SIerでもSphinxを使いたい！ 後編  from kk_Ataka 
結論 結論としては、
 やはり納品物にするには(歴史的経緯などから)厳しい  社内ドキュメントにする分には問題なし SphinxからOutputを出すのはいいけど、顧客に巻き取られた後変更に耐えうる形式じゃないとつらい  チームで適用するには一人ではつらい(個人的なパワー不足)  最低でも一人賛同者がほしい   こんな感じ。もっとパワフルな人ならうまくやれるかもしれないが、自分では厳しかった。
以下かいつまんで。
導入にあたり  実際にSphinxを導入するための壁  自分とプロジェクトのメンバー reST記法覚えに注力してもらうために、雑用(お膳立て)は全部やる プロジェクトと顧客 Officeで書かないよという宣言をする必要があると思う   納品にあたり 納品後、顧客に巻き取られる場合のいい案がない。
 どうやって納品するの？  rstのまま(rst -&amp;gt; make) 保守も自分たちでできるならそれでもいいかも 顧客にmakeしてもらうの敷居高すぎ Outputを提出 html, pdf 見た目はきれい、だけど修正が発生した場合どうすれば word きれいに出すの難しい(個人的に) / あまり需要がない？   つまるところ「よし、いこう！いこうぜ、みんな！」状態を作るのがかなり難しい。</description>
    </item>
    
    <item>
      <title>kawasaki.rb #013 でSphinx導入事例の発表をしてきました と #011 #012 参加記録 #kwskrb #sphinxjp</title>
      <link>/2014/07/13/kawasakirb-011-012-013/</link>
      <pubDate>Sun, 13 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>/2014/07/13/kawasakirb-011-012-013/</guid>
      <description>あらすじ kawasaki.rb に参加したものの記録を取っていなかったのでまとめて。
13回目ではSphinxを話をしたのでその備忘録。Ruby系の勉強会だけどRuby以外の発表でも大丈夫。
 Kawasaki.rb #011  kawasaki.rb #011 を開催しました #kwskrb  Kawasaki.rb #012  kawasaki.rb #012を開催しました #kwskrb  Kawasaki.rb #013  kawasaki.rb #013を開催しました #kwskrb   発表内容 以下のスライドを元にLTしました。
  SIerでもSphinxを使いたい！ 前編  from kk_Ataka 
Sphinxを使用したドキュメント作成をする機会を探っていて、ようやくドンピシャで導入できるプロジェクトをこの手で手繰り寄せたのでそこで得た知見をまとめました。
大体の内容はこの辺から参照してます。
 「Sphinxをはじめよう」を読んで導入したいと思ったので色々考えてみた - kk_Atakaの日記 「Sphinxをはじめよう」を読んで導入したいと思ったので色々考えてみた2 - kk_Atakaの日記  ねらい  「なんとか設計書_日付_リビジョン(だれそれ更新分)(最新版).xls」 とかいう差分取りづらい伝説のファイルが共有サーバ上に量産されるの辛い… 共有サーバに上記のようなファイルがちらかるのでどこに何があるかわかりにくい ミリ単位のレイアウト調整に苦心するのやだ  という事で
 プレーンテキストで文書を作成できる 文書を体系立てて管理できる デザインなどはアウトプット時におまかせ  できるSphinxを導入しようというもの。
なぜSphinxがいいのかというところを競合するツールと比較してみたところまでを発表しました。
次の発表で「導入する際、導入した後に気をつけた事」とか発表する予定です。
おまけ 11回目、12回目で起こったこと  ロゴができた kawasaki.rbのGitHub Pagesができた(Powered by Jekyllだ！) kawasaki.</description>
    </item>
    
    <item>
      <title>WindowsにSphinxのlatexpdfjaができる環境を整えるのに苦戦した話</title>
      <link>/2014/05/28/sphinx-latexpdfja-for-windows/</link>
      <pubDate>Wed, 28 May 2014 00:00:00 +0000</pubDate>
      
      <guid>/2014/05/28/sphinx-latexpdfja-for-windows/</guid>
      <description>あらすじ Windows に Sphinx から pdf を出力する環境を作成したが、 make latexpdfja コマンドを打つと途中で失敗する。
 for f in *.pdf *.png *.gif *.jpg *.jpeg; do extractbb $f; done
f の使い方が誤っています。
make: *** [all-pdf-ja] Error 255
 環境  Windows 7 Python 2.7.6 Sphinx 1.2.2 e-pTeX 3.1415926-p3.4-110825-2.6 (sjis) (TeX Live 2013/W32TeX)  kpathsea version 6.1.1 ptexenc version 1.3.1   結論  PYTHON_HOME\Lib\site-packages\SPHINX_HOME\sphinx\texinputs の下に make.bat がなく、 Makefile しかない場合エラーが出るかもしれない [Sphinx-Users 276] Re: LaTeX経由でのPDF作成手順をアップデートしました にある make.bat をコピーする 上記の texinputs 下に配置して再度 make latexpdfja を実行する  これでうまくいくかもしれない。</description>
    </item>
    
    <item>
      <title>「Sphinxをはじめよう」を読んで導入したいと思ったので色々考えてみた2</title>
      <link>/2014/05/19/sphinx-recommend2/</link>
      <pubDate>Mon, 19 May 2014 00:00:00 +0000</pubDate>
      
      <guid>/2014/05/19/sphinx-recommend2/</guid>
      <description>前回のあらすじ  「Sphinxをはじめよう」を読んで導入したいと思ったので色々考えてみた - kk_Atakaの日記  かなり期間があいてしまったが、次に考えるは、実際にどうやって「導入」して「運用」するか。
「納品」するに当たってどんな問題があるか。
このあたり、良い前例があったら知りたいところ。
課題 課題はとりあえず2段階あると思っている。
第1段階: 対開発工程の課題  プロジェクトに対しての導入・運用方法  どうやって運用していくか。
ルール決め大事。
第2段階: 対納品工程の課題  納品形式 納品後修正が発生した場合どうするか  顧客(※)に対してどうやって納品するか、またそれをなおすのは誰？
(※) 顧客とは、納品したドキュメントを読む、使う、なおす人。社内の人かもしれないし、社外の人かもしれない。
一つずつ考えていく。
対開発工程 登場人物 以下、架空の登場人物とする。
 リーダー : Sphinx を導入したい側  Sphinx 導入に燃えている人  メンバー : 導入した Sphinx を使う側  Sphinx および reST は知らない   プロジェクト内での運用方法  reST は覚えてもらう  マスト。これがないと書けないから 一応「 reST 記法書き方」的なページは リーダー が事前に作って教えてあげることが前提 実はマストではなかった Markdownとかがよければ、 Pandoc を経由して Markdown -&amp;gt; reST -&amp;gt; OUTPUT というのもありかも ドキュメンテーションツール「Sphinx」をチーム運用するまでの道のり - Librabuch  とりあえず メンバー にはドキュメント作成に注力してもらい、ファイル生成などは リーダー が整備する 運用はできるだけ git push または svn commit してもらうだけにしたい  ただし、いきなりファイルを push してもらうのはちょっと嫌で、 Sintax error くらいは メンバー のローカルでも確認してもらいたいんだけど そうすると Python インストール必須だよなぁ… ローカルで reST プレビューとかできるのかなぁ… GitHub とか使えばプレビューできるんだけど… バージョン管理ツールの使い方は割愛 アウトライン(雛形？ / タイトルとか目次とか)はあらかじめ定めておき、空ファイル(ひな形)は リーダー が事前に用意しておく  コミット後は、コミットをフックして make (Jenkins などで)して Apache の下とかに展開する  http://xx.</description>
    </item>
    
    <item>
      <title>「Sphinxをはじめよう」を読んで導入したいと思ったので色々考えてみた</title>
      <link>/2013/10/25/sphinx-recommend/</link>
      <pubDate>Fri, 25 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>/2013/10/25/sphinx-recommend/</guid>
      <description>あらすじ 今までちびちび触ってきたが「Sphinx をはじめよう」を読んで、改めて Sphinx を導入したいと考えた。
そこで、今の環境でどうやったら導入できるのか色々考えてみたが、相談できる人もいないのでここにアップしてみる。
本当は説得材料をつらつらと上げて「だから試してみよう」ってところに持って行きたかったんだけど、そこまでは行けていない。ダラダラ書いている。
テーマ  適材適所  決して Office ディスではなく。色々なツールが適材適所で LET US CLING TOGETHER できる道を考えたい。
結論  ドキュメント  Sphinx  複雑な表や表計算が必要な資料  Excel で別添資料扱い？  その他こまい文書  Redmine とかの Wiki に書き換え   って分けられると、幸せになれると考えている。。
Word は…思いっきり Sphinx と競合する気が…。
現在の己の認識 Office スタイル 今の主流。
長所  超スタンダード(といわれている) 誰の PC にも入っている(といわれている) 誰でも簡単に使える(といわれている) きめ細かいデザインが可能 画像やフローの挿入も簡単  (「きめ細かい」とか「簡単」とかの定義がすごいめんどくさいんで、ここはふわっとした感じで)
これに加えて、下記のようなメンドクサイ作業をなんとな〜く作成可能なのは Office が一番有名なので他のツールへの移行がしづらいんではないかと個人的に思っている。
 複雑な箇条書き  1.1.章を作ってかなり間が空いてから 1.2.章(直前のリストの続き)とかを挿入したい  エグい表 / テーブル  結合、分割超使う。ヘタに行など追加すると死んでしまう  値の計算  Excel の独壇場。上のエグい表に「A列とB列を足した値をC列に追加」とか   短所  ちょっとしたメモから何まで Word, Excel で作成され共有フォルダに量産される  これは人にもよるか  どのドキュメントに何が書いてあるか探せない  みんなどうやって探し当てるの？  設計書の修正前と後で diff がとりづらい、把握しづらい  変更点を「変更履歴シートに書くことで履歴管理」するのが難しい。確実に忘れる。差分の確認むずい。運用で回避無理…  誰かが誤ってレイアウトをいじるといろいろグチャグチャになる  リストの高さとかすぐいじっちゃう フォーマットは壊さないというチームの結束がないと、あっという間にレイアウトにバラつきが出ると思うんだけどどうなんだろう  だいたい開くのに重い  Excel は メモや設計書ではなく 表計算部門などで活躍できるのはわかるが…。</description>
    </item>
    
    <item>
      <title>Sphinxのプラグインの作り方を学ぶ</title>
      <link>/2013/10/02/sphinx-plugin/</link>
      <pubDate>Wed, 02 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>/2013/10/02/sphinx-plugin/</guid>
      <description>あらすじ Sphinx のタグを拡張してみたい。具体的には打ち消し記法がほしい。
という事で Sphinx 拡張に手を出す。
ただし、 Python は Hello World くらい…。
参考サイト  Sphinx拡張 Sphinx v1.0.6 documentation Sphinx拡張 Sphinx 1.2b1 documentation  打ち消し線は既に実例があったので、これを写経する方針で。
 Sphinxで打ち消し線を使う - TIM Labs  環境  Windows XP Python 2.7.3 Sphinx 1.1.3  と、
 Windows 7 Python 2.7.4 Sphinx 1.2b.1  Sphinxの拡張の仕方 Sphinx 1.1.3 時に調べていた感じでは、拡張には大きく3通りある模様。
 新出力形式対応やパース時のアクションサポート(ビルダー追加で実現) reSTのマークアップ拡張 いろいろなフックポイントで諸処理を記述  今回はreSTのマークアップ拡張が該当するかな。
拡張は基本的にPythonで記述する。(setup関数を呼び出す)
作成した拡張機能は conf.py の中で読み込むように設定を変更する。
以下、打ち消し線を導入しつつ何してるのか写経してみる。
作成 conf.py(修正) sys.path.append(os.path.abspath(&amp;#39;exts&amp;#39;)) extensions += [&amp;#39;sphinxcontrib_roles&amp;#39;] # configuration case.</description>
    </item>
    
    <item>
      <title>Sphinxをインストールしようとしたら全然関係ないproxy周りでハマった話 続き</title>
      <link>/2013/08/23/sphinx-install-python-proxy2/</link>
      <pubDate>Fri, 23 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>/2013/08/23/sphinx-install-python-proxy2/</guid>
      <description>前回までのあらすじ  Sphinxをインストールしようとしたら全然関係ないproxy周りでハマった話  easy_install で見に行く proxy の順番はこんな感じだった。
 引数に明示的に指定した場合は引数を使う ↑を満たさず、環境変数 xxxx_proxy が設定されている場合はそこから読み込む ↑を満たさない場合、 Windows ではレジストリ( IE の proxy 設定)を見にいく  で、なぜか環境変数 HTTP_PROXY を読み込んだ場合は失敗して、 HTTP_PROXY をクリアしてレジストリの proxy 設定を使ったら DL が成功しちゃったという話。
なんでか気になったので調べた。
結論 http 以外 の proxy 設定をしていなかったから。というマヌケなオチ。
次から気をつけよう。
レジストリ( IE の設定)から IE の 設定では、 ツール &amp;gt; インターネットオプション &amp;gt; 接続 &amp;gt; LAN の設定 &amp;gt; 詳細設定 の Secure にも proxy の設定が入れていた。
すべてのプロトコルに同じプロキシサーバーを使用する にチェックを入れていたので。
レジストリから読み込んだ場合、 Python 実行中に取得した変数 proxies (使用する proxy をしまっておく変数)の値はこんな感じだった。
[(&amp;#39;http&amp;#39;, &amp;#39;http://PROXY:PORT/&amp;#39;), (&amp;#39;https&amp;#39;, &amp;#39;https://PROXY:PORT/&amp;#39;), (&amp;#39;ftp&amp;#39;, &amp;#39;ftp://PROXY:PORT&amp;#39;)] 環境変数から 一方、環境変数には HTTP_PROXY しか指定していなかった。 proxies を出力するとこう。</description>
    </item>
    
    <item>
      <title>Sphinxをインストールしようとしたら全然関係ないproxy周りでハマった話</title>
      <link>/2013/08/21/sphinx-install-python-proxy/</link>
      <pubDate>Wed, 21 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>/2013/08/21/sphinx-install-python-proxy/</guid>
      <description>あらすじ Sphinx を導入しようとして Python周りの環境を整えていたら easy_install がやたら失敗したりして困った。
環境  Windows 7 Python 2.7  Python インストール …は、以前入れるだけ入れていた 2.7 があったので割愛。
Sphinx-Users.jp のインストール手順では 2.6 が使われていたので、 2.7 でも大丈夫そう。
環境変数 PATH に以下のパスを追加。
 C:\Python27  Pythonのコマンドが含まれるフォルダ  C:\Python27\Scripts  次に説明するeasy_installコマンドや、Sphinxのコマンドが格納されるフォルダ   easy_install インストール(distribute_setup.py) Ruby でいうところの Bundler のようなもの？
 setuptools - 清水川Web  setuptoolsの互換パッケージを導入。
 python-distribute.org から distribute_setup.py をDLし実行。  $ python distribute_setup.py Downloading http://pypi.python.org/packages/source/d/distribute/distribute-0.6.49.tar.gz Extracting in c:\users\USER\appdata\local\temp\tmp00_lbf Now working in c:\users\USER\appdata\local\temp\tmp00_lbf\distribute-0.6.49 Installing Distribute Before install bootstrap.</description>
    </item>
    
    <item>
      <title>Sphinxの見出しについて学びなおし</title>
      <link>/2012/08/16/1345124098/</link>
      <pubDate>Thu, 16 Aug 2012 00:00:00 +0000</pubDate>
      
      <guid>/2012/08/16/1345124098/</guid>
      <description>[備忘録][reST][Sphinx]Sphinxの見出しについて学びなおし 前回までのあらすじ  [http://d.hatena.ne.jp/kk_Ataka/20111202/1322839748:title]で見出しの理解が間違っている事をSphinx 初心者 さんに教えてもらった もう一度ドキュメントを見なおしてみる事に  参考サイト  http://sphinx.shibu.jp/rest.html#id9:title http://docutils.sourceforge.net/docs/user/rst/quickstart.html#sections:title  見出し周辺を読み直し  セクションのヘッダは、セクションのタイトルを句読点などの記号の文字でアンダーラインを引くことで設定します。必要に応じてでオーバーラインも併用することができます。
使用していない種類のアンダーラインが出てくると、見出しのレベルが一段変わる、というルールになっています。
. These are a single line of text (one or more words) with adornment: an underline alone, or an underline and an overline together, in dashes &amp;ldquo;&amp;mdash;&amp;ndash;&amp;rdquo;, equals &amp;ldquo;======&amp;rdquo;, tildes &amp;ldquo;~~~~~~&amp;rdquo; or any of the non-alphanumeric characters = - ` : &amp;lsquo; &amp;ldquo; ~ ^ _ * + # &amp;lt; &amp;gt; that you feel comfortable with.</description>
    </item>
    
    <item>
      <title>BPStudy#57に参加しました #bpstudy</title>
      <link>/2012/04/28/1335575351/</link>
      <pubDate>Sat, 28 Apr 2012 00:00:00 +0000</pubDate>
      
      <guid>/2012/04/28/1335575351/</guid>
      <description>[Jenkins][Sphinx][イベント]BPStudy#57に参加しました #bpstudy 詳細: http://connpass.com/event/365/:title  例の特許庁最適化計画プロジェクトを通してITビジネスの仕方を変えよう  というなかなかに興味深い内容だったので参加。
第一部 新たな価値観へのITビジネス視点での転換 萩本順三さん  政治的な話は無し 私が技術顧問として最適化計画を見た時、「古いな～」と思った  問題があるプロジェクトに入り込んで、どうするかというのが仕事  火を吹いた時に入り込んでいく =&amp;gt; はじめにオフィスへ入り込んで資料を見た時「これやめないんですか？」と聞いたほど   かなりはじめの段階からダメと周りの人にも言っていたが……  何が問題か？  技術を特許庁の業務にどう活かすかの具体性がない  xml使ったからどうなんの？  業務モデルを1000名で書いてどうすんの？ むしろ主役は特許庁なのでは？ =&amp;gt; 放り投げ主義 業務モデルは発注者の理解と覚悟の元作成するはずなのに！  根底の問題は？  IT業界の負のビジネス慣習  ユーザ、開発両者のスキル不足  お客さんに教えながらモデル化をしていくものなのに   コスト配分が開発者寄りになり、たとえいいものを作ったとしてもユーザさんが使いこなせない うまく要件を引き出せないと、正しくないシステムができてしまう 是正しなければ  意識改革 コタツモデル  ユーザから話を聞いてシステム開発に入るが、ユーザは必ず正しいのか 以下の3つから&amp;rdquo;将来&amp;rdquo;の価値を取りに行く視点を持つ  戦略的視点(偉い人) 業務問題解決の視点(業務担当の偉い人) IT活用の視点(開発の出来る人)  しかし、偉い人は現在の価値を取りに行きがちだし、業務担当の偉い人は業務問題解決の視点しか持っていないことが多い 戦略的視点から業務解決、IT活用をしていくと、偉い人も「あ、俺業務知らなかったな」と感じで同じコタツに入ってくれる =&amp;gt; 要求が収束する Howの手探り  ビジネス戦略から  Howの突き上げ  テクノロジーを使うともしかしたら業務がいらなくなるかもしれない =&amp;gt; 戦略に結びつける  最適化  切ってつなげて並行でスピーディに走らせる  常に価値で問う  設計ドキュメントなどは誰に対して価値があるのかを問う。説明できなければいらないじゃない？(ただし、技術的に説明できない場合もある)  自分が持っている知識をお客さんに魅力的に見えるものとする 自分のやりたいこと(How)を実現していこう(What)  自動車メーカ、ファッション業界ではできているのになぜソフトウェア業界でできない システム要求の牢屋に閉じ込められていたらできっこない   5年後のIT業界  巨大システムの開発(一枚岩)からアクセサリ化に  コーディネート化する必要がある 開発者が一番強い。なぜならHowを握っているから  ピラミッド型組織から分散自立型組織に  優秀な人は残して優秀じゃない人は返す、返された人は価値に敏感になれるように  学び、勇気を持って行動してください  第二部 執筆プロジェクトの継続的ビルド [https://twitter.</description>
    </item>
    
    <item>
      <title>Sphinxでドキュメントを書くためreST記法に入門した</title>
      <link>/2011/12/02/1322839748/</link>
      <pubDate>Fri, 02 Dec 2011 00:00:00 +0000</pubDate>
      
      <guid>/2011/12/02/1322839748/</guid>
      <description>[Sphinx][reST][備忘録]Sphinxでドキュメントを書くためreST記法に入門した あらすじ Sphinxを導入した時にまとめたreST(reStructuredText)記法をアウトプットしよう。まだリファレンス読み込んでおらず、感覚で使っているところもあるので間違った認識もあるかも…そこは学んだら追記しよう。
参考  http://sphinx.shibu.jp/:title http://docutils.sourceforge.net/rst.html:title  基本的にSphinxのサイトに書いてあることを写経してます。
注意 見出しの文字数より少なくならないように上下囲む、とかテーブルは列・行を合わせるとか結構シビアな書き方が求められるのですが……pre記法にしても揃ってない…！
見出し系 間違って覚えていたので、見出し系については[http://d.hatena.ne.jp/kk_Ataka/20120816/1345124098:title]を参照。
 h1見出し  半角イコールで上下を揃えて囲むとh1と同等。
========================= rst(reStructuredText)解説 ========================= [f:id:kk_Ataka:20111203000832j:image]
見出しより長くしても問題ないが、見出しより短いと警告される。(Title underline too short.):
=========================== 怒られない =========================== == 怒られる == 以下の見出しも同様。
 h2見出し  下だけ半角イコールでh2と同等。
&amp;lt;h2&amp;gt;になる ========== [f:id:kk_Ataka:20111203000826j:image]
 h3見出し  ハイフンで上下囲むとh3と同等。
---------- &amp;lt;h3&amp;gt;になる ---------- [f:id:kk_Ataka:20111203000827j:image]
 h4見出し  下だけハイフンでh4と同等。
&amp;lt;h4&amp;gt;になる ---------- [f:id:kk_Ataka:20111203000828j:image]
リスト系  箇条書きリスト  箇条書きリストの項目。ハイフンで定義。
- りんご - きのこ - パワーアップ用 - 1UP用 - みかん [f:id:kk_Ataka:20111202231941j:image]</description>
    </item>
    
  </channel>
</rss>