<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Translate on note.gosyujin.com - kk_Atakaの日記</title>
    <link>https://note.gosyujin.com/tags/translate/</link>
    <description>Recent content in Translate on note.gosyujin.com - kk_Atakaの日記</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>jp</language>
    <lastBuildDate>Sat, 26 Jul 2014 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://note.gosyujin.com/tags/translate/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>jekyllrb-ja キックオフを実施しました</title>
      <link>https://note.gosyujin.com/2014/07/26/jekyllrb-ja-meetupmd/</link>
      <pubDate>Sat, 26 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2014/07/26/jekyllrb-ja-meetupmd/</guid>
      <description>あらすじ Jekyllドキュメントの初版翻訳が終わりまして。
初版はえいや！でやれば進むもので、大変なのはそれを継続させていく事。
今後の進め方とかどこかで一回詰めたいな〜と思っていたら@yandodさんに集まる場所を提供していただきました！(がJekyllなのだ)
Engine Yardさんありがとうございます！
詳細は以下。
日時  7/18 19:30-21:00  場所  株式会社 Engine Yard  参加者(名前順)  @chezou @gosyujin @harupong @melborne @tmkoikee @yandod  自己紹介をしたら業務でJekyllを使いこんでいる人、ガチで翻訳している人などなど経歴がハンパなかった…。
やったこと  v2.0の進め方  ブランチ戦略 本家への追従の仕方 翻訳ワークフロー   v2.0の進め方 ブランチ戦略  ドキュメントなので特に分ける必要はないのではないか  progitでもテストがこけなければメンテナが即マージ、表示崩れなどを発見したら適宜直す方針  とりあえずmasterブランチ一本で masterブランチに対してhttps://teatro.io/ 使ってみよう  masterで適用してみてダメそうだったらdevelopブランチきってみよう  writerの権限わける プルリクをマージする基準を決めたい  LGTMされてx時間たって何もなかったらマージするなど このあたりの操作は最終的にはbot(hubot)に任せたい   本家への追従の仕方  Engine Yardではオリジナルをpullしてきてmergeしている @melborne さんのgh-diffのデモが大好評  差分からIssueをたてる機能もあり、cron等で定期的に実行すれば「Issue=翻訳残」とわかりやすい  rakeタスク化して誰でも実行できるようにしたい   gh-diffを使用した運用フロー案  Contributerの誰かがdiffをとって .</description>
    </item>
    
    <item>
      <title>Jekyllドキュメントを翻訳してなんとなくわかってきたもの</title>
      <link>https://note.gosyujin.com/2014/06/22/translated-jekyllrb/</link>
      <pubDate>Sun, 22 Jun 2014 00:00:00 +0000</pubDate>
      
      <guid>https://note.gosyujin.com/2014/06/22/translated-jekyllrb/</guid>
      <description>あらすじ Jekyllドキュメントの翻訳リポジトリを作成して約3ヶ月くらいたちまして。
 Jekyllドキュメントの日本語翻訳リポジトリ「jekyllrb.com.jp」を作成しました - kk_Atakaの日記 kawasaki.rb #010 で発表してきました #kwskrb - kk_Atakaの日記  現状報告と、今までの知見のまとめを。
とりあえず自分の中でたまっているものを整理したいのでとりとめもなく書き出していくメソッド。
現状 Jekyll &amp;bull; シンプルで、ブログのような、静的サイト
 翻訳当時のリビジョンの Documentation 全翻訳が完了しました！(historyなど一部を除く)  翻訳期間中、本家の更新に追従できていないのでこれから猛追モードに入ります  プロジェクトを Organization に昇格させました  jekyllrb-ja/jekyllrb-ja.github.io もともとは.br版の翻訳をしている人のリポジトリをお手本にしていたので個人リポジトリで細々とやっていた が、協力していただける方が増えたのもあり Org 化   知見とか 翻訳開始時に悩んでいた事は以下の3点。
それに対しての答えは、現時点で少しずつ見えてきた気がする。
少なくとも、今の自分の中で納得できる答えは見つけられた。
意訳 or 直訳？  色々な人の意見をもとに「日本人が読みやすいように意訳していく」のが良いではという結論に至った 結局のところ翻訳した文書は誰が読むかを考えると、自分(日本人)だろう、という話が一番腑に落ちたので…以下、感銘を受けた記事など  Python界隈の翻訳プロジェクト エンジニアは翻訳をやるとお得 - 渋日記@shibu.jp 翻訳のススメ - Elliptium ドキュメントの翻訳にSphinxを使う (i18n非利用) - Sphinx-Users.jp  なんという Python 率。「ドキュメント 翻訳 なんとか」でググると Python 界隈の方の活動がすごい引っかかるのはそれだけ盛んであるということなんだろうか(Ruby 方面へのアンテナの感度が低いだけとも思う) 直訳でもフツーに間違うから固い文より、読みやすい文の方がよいのではないか(誤訳しない努力はする)  原文はどうしよう？  これについては「更新の追従」で書く Jekyllrb-jaでは「原文(英語)はコメントアウトで残す」方式を採用した  誰が、どこで、どう管理するか？  これに関しては、結局プロジェクトによりけりとしかいえないかな プロジェクトの舵を取る人が「入れよう！」といったら入れればいいし、「分けよう！」といったら分ければよいと思う  「分けよう！」はこのプロジェクト(jekyll)だし、「入れよう！」は progit とか sinatra かな   こんな感じなことが多いのかな〜。まあ、こんな綺麗に二分割はできないけどだいたいの方向性として。</description>
    </item>
    
  </channel>
</rss>